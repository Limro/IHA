
Custom_Rom.elf:     file format elf32-littlenios2
Custom_Rom.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000801b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x00013d60 memsz 0x00013d60 flags r-x
    LOAD off    0x00014d80 vaddr 0x00093d80 paddr 0x0009592c align 2**12
         filesz 0x00001bac memsz 0x00001bac flags rw-
    LOAD off    0x000174d8 vaddr 0x000974d8 paddr 0x000974d8 align 2**12
         filesz 0x00000000 memsz 0x000003f4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013514  000801b4  000801b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006b8  000936c8  000936c8  000146c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bac  00093d80  0009592c  00014d80  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003f4  000974d8  000974d8  000174d8  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  0001692c  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 000010f8  00000000  00000000  00016950  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000019a2  00000000  00000000  00017a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00031709  00000000  00000000  000193ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000abdd  00000000  00000000  0004aaf3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001b8d8  00000000  00000000  000556d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000021e0  00000000  00000000  00070fa8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002c96  00000000  00000000  00073188  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00011fc3  00000000  00000000  00075e1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000040  00000000  00000000  00087de4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba0  00000000  00000000  00087e28  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0008c4dc  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  0008c4df  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  0008c4e4  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  0008c4e5  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  0008c4e9  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  0008c4ed  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000b  00000000  00000000  0008c4f1  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000b  00000000  00000000  0008c4fc  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000b  00000000  00000000  0008c507  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 0000000a  00000000  00000000  0008c512  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 0000002c  00000000  00000000  0008c51c  2**0
                  CONTENTS, READONLY
 28 .jdi          0000423d  00000000  00000000  0008c548  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00046c0f  00000000  00000000  00090785  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
000801b4 l    d  .text	00000000 .text
000936c8 l    d  .rodata	00000000 .rodata
00093d80 l    d  .rwdata	00000000 .rwdata
000974d8 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000801ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00080958 l     F .text	00000058 __sprint_r
000937a2 l     O .rodata	00000010 blanks.3452
00093792 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
000937ba l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
000938dd l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
0008415c l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00085b84 l     F .text	00000058 std
00085c90 l     F .text	00000008 __fp_lock
00085c98 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00093d80 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
000958f4 l     O .rwdata	00000004 charset
00093a84 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00093bcc l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
00089310 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strtod.c
000896f4 l     F .text	00000048 match
000945a8 l     O .rwdata	00000014 fpi.1950
00093be8 l     O .rodata	00000028 tinytens
00094594 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0008c050 l     F .text	00000024 htinit
0008c0dc l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0008c988 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0008dd78 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0008efa0 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0008fa7c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0008fadc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0008fbe0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0008fd04 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0008fde4 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0008ff44 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00090174 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00095918 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0009042c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00094764 l     O .rwdata	00001060 jtag_uart_0
000957c4 l     O .rwdata	00000120 lcd_0
0009055c l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0009079c l     F .text	00000228 altera_avalon_jtag_uart_irq
000909c4 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207.c
0009591c l     O .rwdata	00000004 colstart
00091040 l     F .text	000000b8 lcd_write_command
000910f8 l     F .text	000000d4 lcd_write_data
000911cc l     F .text	000000d8 lcd_clear_screen
000912a4 l     F .text	00000214 lcd_repaint_screen
000914b8 l     F .text	000000e0 lcd_scroll_up
00091598 l     F .text	000002e4 lcd_handle_escape
00091db8 l     F .text	000000cc alt_lcd_16207_timeout
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00092018 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000924a4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000928b4 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00092a04 l     F .text	000000f8 alt_file_locked
00092c88 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 altera_nios2_irq.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
000934b0 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
00093664 l     F .text	00000040 alt_sim_halt
000806d4 g     F .text	0000001c putchar
00087cec g     F .text	00000094 _mprec_log10
00087dd8 g     F .text	00000088 __any_on
0008cc1c g     F .text	00000070 _isatty_r
00093ba4 g     O .rodata	00000028 __mprec_tinytens
0008ffa4 g     F .text	0000006c alt_main
000806f8 g     F .text	000000a0 _puts_r
0009763c g     O .bss	00000100 alt_irq
0008cc8c g     F .text	00000078 _lseek_r
0009592c g       *ABS*	00000000 __flash_rwdata_start
0008e898 g     F .text	00000088 __eqdf2
000978cc g       *ABS*	00000000 __alt_heap_start
0008065c g     F .text	00000044 printf
000895b0 g     F .text	00000068 __sseek
00085bec g     F .text	000000a4 __sinit
0008bbbc g     F .text	00000130 __swbuf_r
00086b70 g     F .text	00000084 _setlocale_r
00085cec g     F .text	0000009c __sfmoreglue
0008bba0 g     F .text	0000001c ungetc
00090030 g     F .text	00000020 __malloc_unlock
0008973c g     F .text	000015cc _strtod_r
00097504 g     O .bss	00000004 altera_avalon_timer_ts_freq
00087768 g     F .text	000000e0 memmove
00085cdc g     F .text	00000010 _cleanup
00087e60 g     F .text	000000bc _Balloc
0008e9a8 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00080000 g     F .entry	0000000c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
0008bfdc g     F .text	00000074 _fstat_r
000974f0 g     O .bss	00000004 errno
00083f20 g     F .text	00000024 __svfscanf
0008f2dc g     F .text	0000002c __make_fp
000974f8 g     O .bss	00000004 alt_argv
0009d8e4 g       *ABS*	00000000 _gp
00092e8c g     F .text	00000030 usleep
000945e4 g     O .rwdata	00000180 alt_fd_list
000806f0 g     F .text	00000008 _putchar_r
00093038 g     F .text	00000094 alt_find_dev
000876c8 g     F .text	000000a0 memcpy
0008c9d4 g     F .text	00000248 __hexnan
00085cd0 g     F .text	0000000c _cleanup_r
0008ebc8 g     F .text	000000f8 __floatsidf
0009298c g     F .text	00000078 alt_io_redirect
0008eab8 g     F .text	00000088 __ltdf2
000936c8 g       *ABS*	00000000 __DTOR_END__
00080798 g     F .text	00000014 puts
00087564 g     F .text	00000040 mbrtowc
00092ebc g     F .text	00000020 altera_nios2_irq_init
00083f44 g     F .text	00000068 _vfscanf_r
00087c3c g     F .text	000000b0 __ratio
00090bdc g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
000806a0 g     F .text	00000034 _printf_r
0008f0dc g     F .text	00000008 __udivsi3
0008fc40 g     F .text	000000c4 isatty
00086b20 g     F .text	0000002c iswspace
00093ab4 g     O .rodata	000000c8 __mprec_tens
00086b4c g     F .text	00000008 __locale_charset
0008cea0 g     F .text	000000a4 __fixunsdfsi
000974e4 g     O .bss	00000004 __malloc_top_pad
0008b614 g     F .text	00000024 strtoul
000958f0 g     O .rwdata	00000004 __mb_cur_max
00086b54 g     F .text	0000000c _localeconv_r
0008b638 g     F .text	000002f0 _strtoull_r
000885c4 g     F .text	0000003c __i2b
00086504 g     F .text	0000049c __sfvwrite_r
0008939c g     F .text	00000070 _sbrk_r
0008cd04 g     F .text	00000078 _read_r
00094180 g     O .rwdata	0000000c __lc_ctype
00095910 g     O .rwdata	00000004 alt_max_fd
0008f61c g     F .text	00000138 __unpack_d
0008beb8 g     F .text	00000110 _fclose_r
00085b50 g     F .text	00000034 fflush
000974e8 g     O .bss	00000004 __malloc_max_sbrked_mem
0008e208 g     F .text	00000074 __adddf3
0008dc10 g     F .text	00000078 __nesf2
00087b1c g     F .text	00000120 __b2d
0008d5b0 g     F .text	00000660 __umoddi3
0008fe50 g     F .text	000000f4 lseek
000958ec g     O .rwdata	00000004 _global_impure_ptr
00088b58 g     F .text	000005f4 _realloc_r
000978cc g       *ABS*	00000000 __bss_end
000927bc g     F .text	000000f8 alt_iic_isr_register
00092d80 g     F .text	0000010c alt_tick
0009753c g     O .bss	00000100 __hexdig
0008cf44 g     F .text	0000066c __udivdi3
00093b7c g     O .rodata	00000028 __mprec_bigtens
0008884c g     F .text	00000120 __s2b
0008ee0c g     F .text	00000194 __floatunsidf
00087a3c g     F .text	00000060 __mcmp
000958e4 g     O .rwdata	00000004 __ctype_ptr
00085cb8 g     F .text	00000018 __fp_lock_all
00092774 g     F .text	00000048 alt_ic_irq_enabled
00092ce8 g     F .text	00000098 alt_alarm_stop
0008b098 g     F .text	00000024 strtol
00097508 g     O .bss	00000004 alt_irq_active
000800ec g     F .exceptions	000000c8 alt_irq_handler
000945bc g     O .rwdata	00000028 alt_dev_null
0008f16c g     F .text	000000c8 __unpack_f
000923d4 g     F .text	0000001c alt_dcache_flush_all
00087908 g     F .text	00000070 __hi0bits
0008ecc0 g     F .text	000000d8 __fixdfsi
0008ae2c g     F .text	0000001c strtod
0009592c g       *ABS*	00000000 __ram_rwdata_end
00095908 g     O .rwdata	00000008 alt_dev_list
00090308 g     F .text	00000124 write
00088a70 g     F .text	000000e8 _putc_r
00092258 g     F .text	00000028 alt_timestamp_freq
0008dc88 g     F .text	00000078 __gtsf2
00093d80 g       *ABS*	00000000 __ram_rodata_end
0008fb08 g     F .text	000000d8 fstat
0008eb40 g     F .text	00000088 __ledf2
0008872c g     F .text	00000120 __pow5mult
000974d8 g     O .bss	00000004 __nlocale_changed
0008f0e4 g     F .text	00000008 __umodsi3
000807ac g     F .text	00000034 _scanf_r
000978cc g       *ABS*	00000000 end
0008f81c g     F .text	00000160 __pack_f
0009187c g     F .text	0000053c altera_avalon_lcd_16207_write
000906dc g     F .text	000000c0 altera_avalon_jtag_uart_init
000936c4 g       *ABS*	00000000 __CTOR_LIST__
00100000 g       *ABS*	00000000 __alt_stack_pointer
00092088 g     F .text	00000090 alt_avalon_timer_sc_init
0008f0ec g     F .text	00000080 __clzsi2
00090e00 g     F .text	00000240 altera_avalon_jtag_uart_write
00085bdc g     F .text	00000004 __sfp_lock_acquire
000875e4 g     F .text	000000e4 memchr
000809b0 g     F .text	00001ec4 ___vfprintf_internal_r
00089548 g     F .text	00000060 _sprintf_r
000861f0 g     F .text	00000314 _free_r
000934b4 g     F .text	000001b0 __call_exitprocs
000974dc g     O .bss	00000004 __mlocale_changed
000958fc g     O .rwdata	00000004 __malloc_sbrk_base
000801b4 g     F .text	0000003c _start
0009750c g     O .bss	00000004 _alt_tick_rate
0008b0bc g     F .text	00000318 _strtoll_r
00088224 g     F .text	0000014c __lshift
00097510 g     O .bss	00000004 _alt_nticks
00090050 g     F .text	00000124 read
000904c0 g     F .text	0000009c alt_sys_init
0009337c g     F .text	00000134 __register_exitproc
00088370 g     F .text	00000254 __multiply
00090a74 g     F .text	00000074 altera_avalon_jtag_uart_close
00080624 g     F .text	00000038 __mulsi3
00093d80 g       *ABS*	00000000 __ram_rwdata_start
000936c8 g       *ABS*	00000000 __ram_rodata_start
00097514 g     O .bss	00000028 __malloc_current_mallinfo
00087f1c g     F .text	0000017c __d2b
00090594 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0008b3d4 g     F .text	00000240 _strtoul_r
000931ec g     F .text	000000d0 alt_get_fd
00092edc g     F .text	0000015c alt_busy_sleep
0008f754 g     F .text	000000c8 __fpcmp_parts_d
0008be48 g     F .text	00000070 _close_r
00093308 g     F .text	00000074 memcmp
00090644 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
000978cc g       *ABS*	00000000 __alt_stack_base
0009068c g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00084020 g     F .text	0000013c __swsetup_r
0008e640 g     F .text	00000258 __divdf3
00085d88 g     F .text	000000f0 __sfp
00087d80 g     F .text	00000058 __copybits
0009418c g     O .rwdata	00000408 __malloc_av_
00085be8 g     F .text	00000004 __sinit_lock_release
0008e27c g     F .text	000003c4 __muldf3
00089694 g     F .text	00000060 __sread
00086084 g     F .text	00000040 fread
000930cc g     F .text	00000120 alt_find_file
000923f0 g     F .text	000000b4 alt_dev_llist_insert
00090010 g     F .text	00000020 __malloc_lock
0009024c g     F .text	000000bc sbrk
00085954 g     F .text	000001fc _fflush_r
0008bd80 g     F .text	000000c8 _calloc_r
000974d8 g       *ABS*	00000000 __bss_start
00087848 g     F .text	00000098 memset
000801f0 g     F .text	000001f8 main
000974fc g     O .bss	00000004 alt_envp
000974ec g     O .bss	00000004 __malloc_max_total_mem
000905ec g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0008bcec g     F .text	0000001c __swbuf
0008dd00 g     F .text	00000078 __ltsf2
00085e78 g     F .text	0000020c _fread_r
00091e84 g     F .text	0000013c altera_avalon_lcd_16207_init
000895a8 g     F .text	00000008 __sclose
00100000 g       *ABS*	00000000 __alt_heap_limit
0008bfc8 g     F .text	00000014 fclose
0008ae48 g     F .text	00000250 _strtol_r
0008ed98 g     F .text	00000074 __truncdfsf2
00092118 g     F .text	000000a4 alt_timestamp_start
0009773c g     O .bss	00000190 _atexit0
000843a0 g     F .text	000015b4 _dtoa_r
00086da4 g     F .text	00000740 _malloc_r
00095914 g     O .rwdata	00000004 alt_errno
0008b928 g     F .text	000000dc __submore
00086a68 g     F .text	000000b8 _fwalk
000875a4 g     F .text	00000040 _mbtowc_r
0008896c g     F .text	00000104 putc
0008f01c g     F .text	00000060 __divsi3
00093c2c g     O .rodata	00000014 __thenan_df
000860c4 g     F .text	0000012c _malloc_trim_r
000936c8 g       *ABS*	00000000 __CTOR_END__
00080828 g     F .text	000000bc strcmp
000936c8 g       *ABS*	00000000 __flash_rodata_start
000936c8 g       *ABS*	00000000 __DTOR_LIST__
0008e920 g     F .text	00000088 __nedf2
00080000 g       *ABS*	00000000 __alt_mem_sram_0
0009048c g     F .text	00000034 alt_irq_init
000901d4 g     F .text	00000078 alt_release_fd
000894d4 g     F .text	00000074 sprintf
00093c40 g     O .rodata	00000100 __clz_tab
000974e0 g     O .bss	00000004 _PathLocale
0008ad08 g     F .text	00000124 strtof
000932bc g     F .text	00000014 atexit
0008bd08 g     F .text	00000078 _write_r
00086bf4 g     F .text	0000001c setlocale
000807e0 g     F .text	00000048 scanf
000894cc g     F .text	00000008 nanf
000958e8 g     O .rwdata	00000004 _impure_ptr
000974f4 g     O .bss	00000004 alt_argc
000874e4 g     F .text	00000080 _mbrtowc_r
00097500 g     O .bss	00000004 altera_avalon_timer_ts_base
00092568 g     F .text	00000064 _do_dtors
0008914c g     F .text	000001c4 __srefill_r
00080020 g       .exceptions	00000000 alt_irq_entry
00087a9c g     F .text	00000080 __ulp
0008932c g     F .text	00000040 __isinfd
00085ca0 g     F .text	00000018 __fp_unlock_all
00091fc0 g     F .text	00000058 altera_avalon_lcd_16207_write_fd
00095900 g     O .rwdata	00000008 alt_fs_list
00080020 g       *ABS*	00000000 __ram_exceptions_start
00086b60 g     F .text	00000010 localeconv
000921bc g     F .text	0000009c alt_timestamp
000925e8 g     F .text	00000050 alt_ic_isr_register
0008c074 g     F .text	00000068 __hexdig_init
0009592c g       *ABS*	00000000 _edata
000978cc g       *ABS*	00000000 _end
000801b4 g       *ABS*	00000000 __ram_exceptions_end
00083fac g     F .text	00000074 vfscanf
00090ae8 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
000926d4 g     F .text	000000a0 alt_ic_irq_disable
00089618 g     F .text	0000007c __swrite
000958f8 g     O .rwdata	00000004 __malloc_trim_threshold
000932d0 g     F .text	00000038 exit
000869a0 g     F .text	000000c8 _fwalk_reent
00088098 g     F .text	0000018c __mdiff
0008f07c g     F .text	00000060 __modsi3
00100000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
000803e8 g     F .text	000000d0 displayMatrix
00085be0 g     F .text	00000004 __sfp_lock_release
0008940c g     F .text	000000c0 __sccl
000937dc g     O .rodata	00000101 _ctype_
0008f234 g     F .text	000000a8 __fpcmp_parts_f
000936a4 g     F .text	00000020 _exit
0008936c g     F .text	00000030 __isnand
00092280 g     F .text	00000154 alt_alarm_start
0008cd7c g     F .text	00000124 __muldi3
00086c10 g     F .text	00000194 __smakebuf_r
000808e4 g     F .text	00000074 strlen
00092afc g     F .text	0000018c open
0008ea30 g     F .text	00000088 __gedf2
0008c18c g     F .text	000007fc __gethex
000925cc g     F .text	0000001c alt_icache_flush_all
00095920 g     O .rwdata	00000004 alt_priority_mask
00092638 g     F .text	0000009c alt_ic_irq_enable
00082874 g     F .text	00000024 __vfprintf_internal
0008e188 g     F .text	00000080 __subdf3
00087978 g     F .text	000000c4 __lo0bits
00082898 g     F .text	00001688 __svfscanf_r
00095924 g     O .rwdata	00000008 alt_alarm_list
000804b8 g     F .text	0000016c multiMatrixSoft
0008ba04 g     F .text	0000019c _ungetc_r
00092504 g     F .text	00000064 _do_ctors
0008f97c g     F .text	00000100 close
0008fd64 g     F .text	00000080 alt_load
0008f308 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00085be4 g     F .text	00000004 __sinit_lock_acquire
00088600 g     F .text	0000012c __multadd
000878e0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80000:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80004:	08406d14 	ori	at,at,436
    jmp r1
   80008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00080020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
   80044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800ec0 	call	800ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000306 	br	80098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   8008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   80094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   80098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   8009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
   800c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
   800e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800e8:	ef80083a 	eret

000800ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800ec:	defff904 	addi	sp,sp,-28
   800f0:	dfc00615 	stw	ra,24(sp)
   800f4:	df000515 	stw	fp,20(sp)
   800f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   800fc:	0005313a 	rdctl	r2,ipending
   80100:	e0bffc15 	stw	r2,-16(fp)

  return active;
   80104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   80108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   8010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80110:	00800044 	movi	r2,1
   80114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   80118:	e0ffff17 	ldw	r3,-4(fp)
   8011c:	e0bffe17 	ldw	r2,-8(fp)
   80120:	1884703a 	and	r2,r3,r2
   80124:	1005003a 	cmpeq	r2,r2,zero
   80128:	1000161e 	bne	r2,zero,80184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8012c:	e0bffd17 	ldw	r2,-12(fp)
   80130:	00c00274 	movhi	r3,9
   80134:	18dd8f04 	addi	r3,r3,30268
   80138:	100490fa 	slli	r2,r2,3
   8013c:	10c5883a 	add	r2,r2,r3
   80140:	11400017 	ldw	r5,0(r2)
   80144:	e0bffd17 	ldw	r2,-12(fp)
   80148:	00c00274 	movhi	r3,9
   8014c:	18dd8f04 	addi	r3,r3,30268
   80150:	100490fa 	slli	r2,r2,3
   80154:	10c5883a 	add	r2,r2,r3
   80158:	10800104 	addi	r2,r2,4
   8015c:	11000017 	ldw	r4,0(r2)
   80160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80164:	0005313a 	rdctl	r2,ipending
   80168:	e0bffb15 	stw	r2,-20(fp)

  return active;
   8016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   80170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   80174:	e0bfff17 	ldw	r2,-4(fp)
   80178:	1004c03a 	cmpne	r2,r2,zero
   8017c:	103fe31e 	bne	r2,zero,8010c <alt_irq_handler+0x20>
   80180:	00000706 	br	801a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   80184:	e0bffe17 	ldw	r2,-8(fp)
   80188:	1085883a 	add	r2,r2,r2
   8018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   80190:	e0bffd17 	ldw	r2,-12(fp)
   80194:	10800044 	addi	r2,r2,1
   80198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   8019c:	003fde06 	br	80118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   801a0:	e037883a 	mov	sp,fp
   801a4:	dfc00117 	ldw	ra,4(sp)
   801a8:	df000017 	ldw	fp,0(sp)
   801ac:	dec00204 	addi	sp,sp,8
   801b0:	f800283a 	ret

Disassembly of section .text:

000801b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   801b4:	06c00434 	movhi	sp,16
    ori sp, sp, %lo(__alt_stack_pointer)
   801b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
   801bc:	06800274 	movhi	gp,9
    ori gp, gp, %lo(_gp)
   801c0:	d6b63914 	ori	gp,gp,55524
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   801c4:	00800274 	movhi	r2,9
    ori r2, r2, %lo(__bss_start)
   801c8:	109d3614 	ori	r2,r2,29912

    movhi r3, %hi(__bss_end)
   801cc:	00c00274 	movhi	r3,9
    ori r3, r3, %lo(__bss_end)
   801d0:	18de3314 	ori	r3,r3,30924

    beq r2, r3, 1f
   801d4:	10c00326 	beq	r2,r3,801e4 <_start+0x30>

0:
    stw zero, (r2)
   801d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   801dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   801e0:	10fffd36 	bltu	r2,r3,801d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   801e4:	008fd640 	call	8fd64 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   801e8:	008ffa40 	call	8ffa4 <alt_main>

000801ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   801ec:	003fff06 	br	801ec <alt_after_alt_main>

000801f0 <main>:
void displayMatrix(VectorArray input);
void multiMatrixSoft(VectorArray A,VectorArray B, VectorArray P);
void multiMatrixHard(VectorArray A,VectorArray B, VectorArray P);

int main()
{
   801f0:	deffb004 	addi	sp,sp,-320
   801f4:	dfc04f15 	stw	ra,316(sp)
   801f8:	df004e15 	stw	fp,312(sp)
   801fc:	df004e04 	addi	fp,sp,312

	VectorArray A =
	{		{ 1,  2,  3,  4},
			{ 5,  6,  7,  8},
			{ 9, 10, 11, 12},
			{13, 14, 15, 16} };
   80200:	00800044 	movi	r2,1
   80204:	e0bfb405 	stb	r2,-304(fp)
   80208:	00800084 	movi	r2,2
   8020c:	e0bfb445 	stb	r2,-303(fp)
   80210:	008000c4 	movi	r2,3
   80214:	e0bfb485 	stb	r2,-302(fp)
   80218:	00800104 	movi	r2,4
   8021c:	e0bfb4c5 	stb	r2,-301(fp)
   80220:	00800144 	movi	r2,5
   80224:	e0bfb505 	stb	r2,-300(fp)
   80228:	00800184 	movi	r2,6
   8022c:	e0bfb545 	stb	r2,-299(fp)
   80230:	008001c4 	movi	r2,7
   80234:	e0bfb585 	stb	r2,-298(fp)
   80238:	00800204 	movi	r2,8
   8023c:	e0bfb5c5 	stb	r2,-297(fp)
   80240:	00800244 	movi	r2,9
   80244:	e0bfb605 	stb	r2,-296(fp)
   80248:	00800284 	movi	r2,10
   8024c:	e0bfb645 	stb	r2,-295(fp)
   80250:	008002c4 	movi	r2,11
   80254:	e0bfb685 	stb	r2,-294(fp)
   80258:	00800304 	movi	r2,12
   8025c:	e0bfb6c5 	stb	r2,-293(fp)
   80260:	00800344 	movi	r2,13
   80264:	e0bfb705 	stb	r2,-292(fp)
   80268:	00800384 	movi	r2,14
   8026c:	e0bfb745 	stb	r2,-291(fp)
   80270:	008003c4 	movi	r2,15
   80274:	e0bfb785 	stb	r2,-290(fp)
   80278:	00800404 	movi	r2,16
   8027c:	e0bfb7c5 	stb	r2,-289(fp)

	VectorArray B = {
			{1, 1, 1, 1},
			{2, 2, 2, 2},
			{3, 3, 3, 3},
			{4, 4, 4, 4} };
   80280:	00800044 	movi	r2,1
   80284:	e0bfb805 	stb	r2,-288(fp)
   80288:	00800044 	movi	r2,1
   8028c:	e0bfb845 	stb	r2,-287(fp)
   80290:	00800044 	movi	r2,1
   80294:	e0bfb885 	stb	r2,-286(fp)
   80298:	00800044 	movi	r2,1
   8029c:	e0bfb8c5 	stb	r2,-285(fp)
   802a0:	00800084 	movi	r2,2
   802a4:	e0bfb905 	stb	r2,-284(fp)
   802a8:	00800084 	movi	r2,2
   802ac:	e0bfb945 	stb	r2,-283(fp)
   802b0:	00800084 	movi	r2,2
   802b4:	e0bfb985 	stb	r2,-282(fp)
   802b8:	00800084 	movi	r2,2
   802bc:	e0bfb9c5 	stb	r2,-281(fp)
   802c0:	008000c4 	movi	r2,3
   802c4:	e0bfba05 	stb	r2,-280(fp)
   802c8:	008000c4 	movi	r2,3
   802cc:	e0bfba45 	stb	r2,-279(fp)
   802d0:	008000c4 	movi	r2,3
   802d4:	e0bfba85 	stb	r2,-278(fp)
   802d8:	008000c4 	movi	r2,3
   802dc:	e0bfbac5 	stb	r2,-277(fp)
   802e0:	00800104 	movi	r2,4
   802e4:	e0bfbb05 	stb	r2,-276(fp)
   802e8:	00800104 	movi	r2,4
   802ec:	e0bfbb45 	stb	r2,-275(fp)
   802f0:	00800104 	movi	r2,4
   802f4:	e0bfbb85 	stb	r2,-274(fp)
   802f8:	00800104 	movi	r2,4
   802fc:	e0bfbbc5 	stb	r2,-273(fp)
	char buffer1[80];
	char buffer2[80];
	char buffer3[80];
	alt_u32 start, stop;

	if (alt_timestamp_start() < 0)
   80300:	00921180 	call	92118 <alt_timestamp_start>
   80304:	1004403a 	cmpge	r2,r2,zero
   80308:	1000031e 	bne	r2,zero,80318 <main+0x128>
	{
		printf ("No timestamp device available\n");
   8030c:	01000274 	movhi	r4,9
   80310:	210db204 	addi	r4,r4,14024
   80314:	00807980 	call	80798 <puts>
	}

	scanf("%s%s%s", buffer1, buffer2, buffer3);
   80318:	e17fc404 	addi	r5,fp,-240
   8031c:	e1bfd804 	addi	r6,fp,-160
   80320:	e1ffec04 	addi	r7,fp,-80
   80324:	01000274 	movhi	r4,9
   80328:	210dba04 	addi	r4,r4,14056
   8032c:	00807e00 	call	807e0 <scanf>

	if (!strcmp(buffer1, "mult") && !strcmp(buffer2, "soft"))
   80330:	e13fc404 	addi	r4,fp,-240
   80334:	01400274 	movhi	r5,9
   80338:	294dbc04 	addi	r5,r5,14064
   8033c:	00808280 	call	80828 <strcmp>
   80340:	1004c03a 	cmpne	r2,r2,zero
   80344:	1000221e 	bne	r2,zero,803d0 <main+0x1e0>
   80348:	e13fd804 	addi	r4,fp,-160
   8034c:	01400274 	movhi	r5,9
   80350:	294dbe04 	addi	r5,r5,14072
   80354:	00808280 	call	80828 <strcmp>
   80358:	1004c03a 	cmpne	r2,r2,zero
   8035c:	10001c1e 	bne	r2,zero,803d0 <main+0x1e0>
	{
		//Multiply two VectorArrays
		displayMatrix(A);
   80360:	e13fb404 	addi	r4,fp,-304
   80364:	00803e80 	call	803e8 <displayMatrix>
		printf("\n\n      X\n");
   80368:	01000274 	movhi	r4,9
   8036c:	210dc004 	addi	r4,r4,14080
   80370:	00807980 	call	80798 <puts>
		displayMatrix(B);
   80374:	e13fb804 	addi	r4,fp,-288
   80378:	00803e80 	call	803e8 <displayMatrix>
		printf("\n\n      =\n");
   8037c:	01000274 	movhi	r4,9
   80380:	210dc304 	addi	r4,r4,14092
   80384:	00807980 	call	80798 <puts>

		alt_timestamp_start();
   80388:	00921180 	call	92118 <alt_timestamp_start>

		start = alt_timestamp();
   8038c:	00921bc0 	call	921bc <alt_timestamp>
   80390:	e0bfb315 	stw	r2,-308(fp)
		multiMatrixSoft(A, B, C);
   80394:	e13fb404 	addi	r4,fp,-304
   80398:	e17fb804 	addi	r5,fp,-288
   8039c:	e1bfbc04 	addi	r6,fp,-272
   803a0:	00804b80 	call	804b8 <multiMatrixSoft>
		stop = alt_timestamp;
   803a4:	00800274 	movhi	r2,9
   803a8:	10886f04 	addi	r2,r2,8636
   803ac:	e0bfb215 	stw	r2,-312(fp)

		displayMatrix(C);
   803b0:	e13fbc04 	addi	r4,fp,-272
   803b4:	00803e80 	call	803e8 <displayMatrix>
		printf("Used time: %u", stop - start);
   803b8:	e0ffb217 	ldw	r3,-312(fp)
   803bc:	e0bfb317 	ldw	r2,-308(fp)
   803c0:	188bc83a 	sub	r5,r3,r2
   803c4:	01000274 	movhi	r4,9
   803c8:	210dc604 	addi	r4,r4,14104
   803cc:	008065c0 	call	8065c <printf>
	printf("\n\n      =\n");
	multiMatrixSoft(A, B, C);
	displayMatrix(C);
	*/

	return 0;
   803d0:	0005883a 	mov	r2,zero
}
   803d4:	e037883a 	mov	sp,fp
   803d8:	dfc00117 	ldw	ra,4(sp)
   803dc:	df000017 	ldw	fp,0(sp)
   803e0:	dec00204 	addi	sp,sp,8
   803e4:	f800283a 	ret

000803e8 <displayMatrix>:

void displayMatrix(VectorArray array)
{
   803e8:	defffa04 	addi	sp,sp,-24
   803ec:	dfc00515 	stw	ra,20(sp)
   803f0:	df000415 	stw	fp,16(sp)
   803f4:	df000404 	addi	fp,sp,16
   803f8:	e13fff15 	stw	r4,-4(fp)
	int i, j;
	for(i = 0 ; i < 4 ; i++ )
   803fc:	e03ffe15 	stw	zero,-8(fp)
   80400:	00002506 	br	80498 <displayMatrix+0xb0>
	{
		printf("\n%c", '|');
   80404:	01000274 	movhi	r4,9
   80408:	210dca04 	addi	r4,r4,14120
   8040c:	01401f04 	movi	r5,124
   80410:	008065c0 	call	8065c <printf>

		for(j = 0 ; j < 4 ; j++)
   80414:	e03ffd15 	stw	zero,-12(fp)
   80418:	00001906 	br	80480 <displayMatrix+0x98>
		{
			signed int output = array[i].comp[j];
   8041c:	e0bffe17 	ldw	r2,-8(fp)
   80420:	1085883a 	add	r2,r2,r2
   80424:	1085883a 	add	r2,r2,r2
   80428:	1007883a 	mov	r3,r2
   8042c:	e0bfff17 	ldw	r2,-4(fp)
   80430:	1887883a 	add	r3,r3,r2
   80434:	e0bffd17 	ldw	r2,-12(fp)
   80438:	1885883a 	add	r2,r3,r2
   8043c:	10800003 	ldbu	r2,0(r2)
   80440:	10803fcc 	andi	r2,r2,255
   80444:	e0bffc15 	stw	r2,-16(fp)
			if(output / 10 < 1)
   80448:	e0bffc17 	ldw	r2,-16(fp)
   8044c:	10800288 	cmpgei	r2,r2,10
   80450:	1000021e 	bne	r2,zero,8045c <displayMatrix+0x74>
				printf(" ");
   80454:	01000804 	movi	r4,32
   80458:	00806d40 	call	806d4 <putchar>
			printf("%i", output);
   8045c:	01000274 	movhi	r4,9
   80460:	210dcb04 	addi	r4,r4,14124
   80464:	e17ffc17 	ldw	r5,-16(fp)
   80468:	008065c0 	call	8065c <printf>
			printf("%c", '|');
   8046c:	01001f04 	movi	r4,124
   80470:	00806d40 	call	806d4 <putchar>
	int i, j;
	for(i = 0 ; i < 4 ; i++ )
	{
		printf("\n%c", '|');

		for(j = 0 ; j < 4 ; j++)
   80474:	e0bffd17 	ldw	r2,-12(fp)
   80478:	10800044 	addi	r2,r2,1
   8047c:	e0bffd15 	stw	r2,-12(fp)
   80480:	e0bffd17 	ldw	r2,-12(fp)
   80484:	10800110 	cmplti	r2,r2,4
   80488:	103fe41e 	bne	r2,zero,8041c <displayMatrix+0x34>
}

void displayMatrix(VectorArray array)
{
	int i, j;
	for(i = 0 ; i < 4 ; i++ )
   8048c:	e0bffe17 	ldw	r2,-8(fp)
   80490:	10800044 	addi	r2,r2,1
   80494:	e0bffe15 	stw	r2,-8(fp)
   80498:	e0bffe17 	ldw	r2,-8(fp)
   8049c:	10800110 	cmplti	r2,r2,4
   804a0:	103fd81e 	bne	r2,zero,80404 <displayMatrix+0x1c>
				printf(" ");
			printf("%i", output);
			printf("%c", '|');
		}
	}
}
   804a4:	e037883a 	mov	sp,fp
   804a8:	dfc00117 	ldw	ra,4(sp)
   804ac:	df000017 	ldw	fp,0(sp)
   804b0:	dec00204 	addi	sp,sp,8
   804b4:	f800283a 	ret

000804b8 <multiMatrixSoft>:

void multiMatrixSoft(VectorArray A,VectorArray B, VectorArray P)
{
   804b8:	defff504 	addi	sp,sp,-44
   804bc:	dfc00a15 	stw	ra,40(sp)
   804c0:	df000915 	stw	fp,36(sp)
   804c4:	dc800815 	stw	r18,32(sp)
   804c8:	dc400715 	stw	r17,28(sp)
   804cc:	dc000615 	stw	r16,24(sp)
   804d0:	df000604 	addi	fp,sp,24
   804d4:	e13ffd15 	stw	r4,-12(fp)
   804d8:	e17ffe15 	stw	r5,-8(fp)
   804dc:	e1bfff15 	stw	r6,-4(fp)
	int a, b, pj;

	for(a = 0; a < 4; a++)
   804e0:	e03ffc15 	stw	zero,-16(fp)
   804e4:	00004406 	br	805f8 <multiMatrixSoft+0x140>
	{
		for(pj = 0 ; pj < 4 ; pj++)
   804e8:	e03ffa15 	stw	zero,-24(fp)
   804ec:	00003c06 	br	805e0 <multiMatrixSoft+0x128>
		{
			P[a].comp[pj] = 0;
   804f0:	e0bffc17 	ldw	r2,-16(fp)
   804f4:	1085883a 	add	r2,r2,r2
   804f8:	1085883a 	add	r2,r2,r2
   804fc:	1007883a 	mov	r3,r2
   80500:	e0bfff17 	ldw	r2,-4(fp)
   80504:	1887883a 	add	r3,r3,r2
   80508:	e0bffa17 	ldw	r2,-24(fp)
   8050c:	1885883a 	add	r2,r3,r2
   80510:	10000005 	stb	zero,0(r2)

			for(b = 0 ; b < 4 ; b++)
   80514:	e03ffb15 	stw	zero,-20(fp)
   80518:	00002b06 	br	805c8 <multiMatrixSoft+0x110>
			{
				P[a].comp[pj] += (A[a].comp[b]) * (B[pj].comp[b]);
   8051c:	e0bffc17 	ldw	r2,-16(fp)
   80520:	1085883a 	add	r2,r2,r2
   80524:	1085883a 	add	r2,r2,r2
   80528:	1007883a 	mov	r3,r2
   8052c:	e0bfff17 	ldw	r2,-4(fp)
   80530:	18a1883a 	add	r16,r3,r2
   80534:	e47ffa17 	ldw	r17,-24(fp)
   80538:	e0bffc17 	ldw	r2,-16(fp)
   8053c:	1085883a 	add	r2,r2,r2
   80540:	1085883a 	add	r2,r2,r2
   80544:	1007883a 	mov	r3,r2
   80548:	e0bfff17 	ldw	r2,-4(fp)
   8054c:	1887883a 	add	r3,r3,r2
   80550:	e0bffa17 	ldw	r2,-24(fp)
   80554:	1885883a 	add	r2,r3,r2
   80558:	14800003 	ldbu	r18,0(r2)
   8055c:	e0bffc17 	ldw	r2,-16(fp)
   80560:	1085883a 	add	r2,r2,r2
   80564:	1085883a 	add	r2,r2,r2
   80568:	1007883a 	mov	r3,r2
   8056c:	e0bffd17 	ldw	r2,-12(fp)
   80570:	1887883a 	add	r3,r3,r2
   80574:	e0bffb17 	ldw	r2,-20(fp)
   80578:	1885883a 	add	r2,r3,r2
   8057c:	11000003 	ldbu	r4,0(r2)
   80580:	e0bffa17 	ldw	r2,-24(fp)
   80584:	1085883a 	add	r2,r2,r2
   80588:	1085883a 	add	r2,r2,r2
   8058c:	1007883a 	mov	r3,r2
   80590:	e0bffe17 	ldw	r2,-8(fp)
   80594:	1887883a 	add	r3,r3,r2
   80598:	e0bffb17 	ldw	r2,-20(fp)
   8059c:	1885883a 	add	r2,r3,r2
   805a0:	10800003 	ldbu	r2,0(r2)
   805a4:	100b883a 	mov	r5,r2
   805a8:	00806240 	call	80624 <__mulsi3>
   805ac:	9085883a 	add	r2,r18,r2
   805b0:	1007883a 	mov	r3,r2
   805b4:	8445883a 	add	r2,r16,r17
   805b8:	10c00005 	stb	r3,0(r2)
	{
		for(pj = 0 ; pj < 4 ; pj++)
		{
			P[a].comp[pj] = 0;

			for(b = 0 ; b < 4 ; b++)
   805bc:	e0bffb17 	ldw	r2,-20(fp)
   805c0:	10800044 	addi	r2,r2,1
   805c4:	e0bffb15 	stw	r2,-20(fp)
   805c8:	e0bffb17 	ldw	r2,-20(fp)
   805cc:	10800110 	cmplti	r2,r2,4
   805d0:	103fd21e 	bne	r2,zero,8051c <multiMatrixSoft+0x64>
{
	int a, b, pj;

	for(a = 0; a < 4; a++)
	{
		for(pj = 0 ; pj < 4 ; pj++)
   805d4:	e0bffa17 	ldw	r2,-24(fp)
   805d8:	10800044 	addi	r2,r2,1
   805dc:	e0bffa15 	stw	r2,-24(fp)
   805e0:	e0bffa17 	ldw	r2,-24(fp)
   805e4:	10800110 	cmplti	r2,r2,4
   805e8:	103fc11e 	bne	r2,zero,804f0 <multiMatrixSoft+0x38>

void multiMatrixSoft(VectorArray A,VectorArray B, VectorArray P)
{
	int a, b, pj;

	for(a = 0; a < 4; a++)
   805ec:	e0bffc17 	ldw	r2,-16(fp)
   805f0:	10800044 	addi	r2,r2,1
   805f4:	e0bffc15 	stw	r2,-16(fp)
   805f8:	e0bffc17 	ldw	r2,-16(fp)
   805fc:	10800110 	cmplti	r2,r2,4
   80600:	103fb91e 	bne	r2,zero,804e8 <multiMatrixSoft+0x30>
			{
				P[a].comp[pj] += (A[a].comp[b]) * (B[pj].comp[b]);
			}
		}
	}
}
   80604:	e037883a 	mov	sp,fp
   80608:	dfc00417 	ldw	ra,16(sp)
   8060c:	df000317 	ldw	fp,12(sp)
   80610:	dc800217 	ldw	r18,8(sp)
   80614:	dc400117 	ldw	r17,4(sp)
   80618:	dc000017 	ldw	r16,0(sp)
   8061c:	dec00504 	addi	sp,sp,20
   80620:	f800283a 	ret

00080624 <__mulsi3>:
   80624:	20000a26 	beq	r4,zero,80650 <__mulsi3+0x2c>
   80628:	0007883a 	mov	r3,zero
   8062c:	2080004c 	andi	r2,r4,1
   80630:	1005003a 	cmpeq	r2,r2,zero
   80634:	2008d07a 	srli	r4,r4,1
   80638:	1000011e 	bne	r2,zero,80640 <__mulsi3+0x1c>
   8063c:	1947883a 	add	r3,r3,r5
   80640:	294b883a 	add	r5,r5,r5
   80644:	203ff91e 	bne	r4,zero,8062c <__mulsi3+0x8>
   80648:	1805883a 	mov	r2,r3
   8064c:	f800283a 	ret
   80650:	0007883a 	mov	r3,zero
   80654:	1805883a 	mov	r2,r3
   80658:	f800283a 	ret

0008065c <printf>:
   8065c:	defffb04 	addi	sp,sp,-20
   80660:	dfc00115 	stw	ra,4(sp)
   80664:	d9400215 	stw	r5,8(sp)
   80668:	d9800315 	stw	r6,12(sp)
   8066c:	d9c00415 	stw	r7,16(sp)
   80670:	00800274 	movhi	r2,9
   80674:	10963a04 	addi	r2,r2,22760
   80678:	10c00017 	ldw	r3,0(r2)
   8067c:	200b883a 	mov	r5,r4
   80680:	d8800204 	addi	r2,sp,8
   80684:	19000217 	ldw	r4,8(r3)
   80688:	100d883a 	mov	r6,r2
   8068c:	d8800015 	stw	r2,0(sp)
   80690:	00828740 	call	82874 <__vfprintf_internal>
   80694:	dfc00117 	ldw	ra,4(sp)
   80698:	dec00504 	addi	sp,sp,20
   8069c:	f800283a 	ret

000806a0 <_printf_r>:
   806a0:	defffc04 	addi	sp,sp,-16
   806a4:	dfc00115 	stw	ra,4(sp)
   806a8:	d9800215 	stw	r6,8(sp)
   806ac:	d9c00315 	stw	r7,12(sp)
   806b0:	280d883a 	mov	r6,r5
   806b4:	21400217 	ldw	r5,8(r4)
   806b8:	d8c00204 	addi	r3,sp,8
   806bc:	180f883a 	mov	r7,r3
   806c0:	d8c00015 	stw	r3,0(sp)
   806c4:	00809b00 	call	809b0 <___vfprintf_internal_r>
   806c8:	dfc00117 	ldw	ra,4(sp)
   806cc:	dec00404 	addi	sp,sp,16
   806d0:	f800283a 	ret

000806d4 <putchar>:
   806d4:	00800274 	movhi	r2,9
   806d8:	10963a04 	addi	r2,r2,22760
   806dc:	11800017 	ldw	r6,0(r2)
   806e0:	200b883a 	mov	r5,r4
   806e4:	3009883a 	mov	r4,r6
   806e8:	31800217 	ldw	r6,8(r6)
   806ec:	0088a701 	jmpi	88a70 <_putc_r>

000806f0 <_putchar_r>:
   806f0:	21800217 	ldw	r6,8(r4)
   806f4:	0088a701 	jmpi	88a70 <_putc_r>

000806f8 <_puts_r>:
   806f8:	defff604 	addi	sp,sp,-40
   806fc:	dc400715 	stw	r17,28(sp)
   80700:	2023883a 	mov	r17,r4
   80704:	2809883a 	mov	r4,r5
   80708:	dfc00915 	stw	ra,36(sp)
   8070c:	dcc00815 	stw	r19,32(sp)
   80710:	2827883a 	mov	r19,r5
   80714:	00808e40 	call	808e4 <strlen>
   80718:	89400217 	ldw	r5,8(r17)
   8071c:	00c00274 	movhi	r3,9
   80720:	18cdcc04 	addi	r3,r3,14128
   80724:	01c00044 	movi	r7,1
   80728:	12000044 	addi	r8,r2,1
   8072c:	d8c00515 	stw	r3,20(sp)
   80730:	d9c00615 	stw	r7,24(sp)
   80734:	d8c00304 	addi	r3,sp,12
   80738:	01c00084 	movi	r7,2
   8073c:	8809883a 	mov	r4,r17
   80740:	d80d883a 	mov	r6,sp
   80744:	d8c00015 	stw	r3,0(sp)
   80748:	dcc00315 	stw	r19,12(sp)
   8074c:	da000215 	stw	r8,8(sp)
   80750:	d9c00115 	stw	r7,4(sp)
   80754:	d8800415 	stw	r2,16(sp)
   80758:	00865040 	call	86504 <__sfvwrite_r>
   8075c:	00ffffc4 	movi	r3,-1
   80760:	10000626 	beq	r2,zero,8077c <_puts_r+0x84>
   80764:	1805883a 	mov	r2,r3
   80768:	dfc00917 	ldw	ra,36(sp)
   8076c:	dcc00817 	ldw	r19,32(sp)
   80770:	dc400717 	ldw	r17,28(sp)
   80774:	dec00a04 	addi	sp,sp,40
   80778:	f800283a 	ret
   8077c:	00c00284 	movi	r3,10
   80780:	1805883a 	mov	r2,r3
   80784:	dfc00917 	ldw	ra,36(sp)
   80788:	dcc00817 	ldw	r19,32(sp)
   8078c:	dc400717 	ldw	r17,28(sp)
   80790:	dec00a04 	addi	sp,sp,40
   80794:	f800283a 	ret

00080798 <puts>:
   80798:	00800274 	movhi	r2,9
   8079c:	10963a04 	addi	r2,r2,22760
   807a0:	200b883a 	mov	r5,r4
   807a4:	11000017 	ldw	r4,0(r2)
   807a8:	00806f81 	jmpi	806f8 <_puts_r>

000807ac <_scanf_r>:
   807ac:	defffc04 	addi	sp,sp,-16
   807b0:	dfc00115 	stw	ra,4(sp)
   807b4:	d9800215 	stw	r6,8(sp)
   807b8:	d9c00315 	stw	r7,12(sp)
   807bc:	280d883a 	mov	r6,r5
   807c0:	21400117 	ldw	r5,4(r4)
   807c4:	d8c00204 	addi	r3,sp,8
   807c8:	180f883a 	mov	r7,r3
   807cc:	d8c00015 	stw	r3,0(sp)
   807d0:	00828980 	call	82898 <__svfscanf_r>
   807d4:	dfc00117 	ldw	ra,4(sp)
   807d8:	dec00404 	addi	sp,sp,16
   807dc:	f800283a 	ret

000807e0 <scanf>:
   807e0:	defffb04 	addi	sp,sp,-20
   807e4:	dfc00115 	stw	ra,4(sp)
   807e8:	d9400215 	stw	r5,8(sp)
   807ec:	d9800315 	stw	r6,12(sp)
   807f0:	d9c00415 	stw	r7,16(sp)
   807f4:	00800274 	movhi	r2,9
   807f8:	10963a04 	addi	r2,r2,22760
   807fc:	11400017 	ldw	r5,0(r2)
   80800:	200d883a 	mov	r6,r4
   80804:	d8800204 	addi	r2,sp,8
   80808:	2809883a 	mov	r4,r5
   8080c:	29400117 	ldw	r5,4(r5)
   80810:	100f883a 	mov	r7,r2
   80814:	d8800015 	stw	r2,0(sp)
   80818:	00828980 	call	82898 <__svfscanf_r>
   8081c:	dfc00117 	ldw	ra,4(sp)
   80820:	dec00504 	addi	sp,sp,20
   80824:	f800283a 	ret

00080828 <strcmp>:
   80828:	2144b03a 	or	r2,r4,r5
   8082c:	108000cc 	andi	r2,r2,3
   80830:	10001d1e 	bne	r2,zero,808a8 <strcmp+0x80>
   80834:	200f883a 	mov	r7,r4
   80838:	28800017 	ldw	r2,0(r5)
   8083c:	21000017 	ldw	r4,0(r4)
   80840:	280d883a 	mov	r6,r5
   80844:	2080161e 	bne	r4,r2,808a0 <strcmp+0x78>
   80848:	023fbff4 	movhi	r8,65279
   8084c:	423fbfc4 	addi	r8,r8,-257
   80850:	2207883a 	add	r3,r4,r8
   80854:	01602074 	movhi	r5,32897
   80858:	29602004 	addi	r5,r5,-32640
   8085c:	1946703a 	and	r3,r3,r5
   80860:	0104303a 	nor	r2,zero,r4
   80864:	10c4703a 	and	r2,r2,r3
   80868:	10001c1e 	bne	r2,zero,808dc <strcmp+0xb4>
   8086c:	4013883a 	mov	r9,r8
   80870:	2811883a 	mov	r8,r5
   80874:	00000106 	br	8087c <strcmp+0x54>
   80878:	1800181e 	bne	r3,zero,808dc <strcmp+0xb4>
   8087c:	39c00104 	addi	r7,r7,4
   80880:	39000017 	ldw	r4,0(r7)
   80884:	31800104 	addi	r6,r6,4
   80888:	31400017 	ldw	r5,0(r6)
   8088c:	2245883a 	add	r2,r4,r9
   80890:	1204703a 	and	r2,r2,r8
   80894:	0106303a 	nor	r3,zero,r4
   80898:	1886703a 	and	r3,r3,r2
   8089c:	217ff626 	beq	r4,r5,80878 <strcmp+0x50>
   808a0:	3809883a 	mov	r4,r7
   808a4:	300b883a 	mov	r5,r6
   808a8:	20c00007 	ldb	r3,0(r4)
   808ac:	1800051e 	bne	r3,zero,808c4 <strcmp+0x9c>
   808b0:	00000606 	br	808cc <strcmp+0xa4>
   808b4:	21000044 	addi	r4,r4,1
   808b8:	20c00007 	ldb	r3,0(r4)
   808bc:	29400044 	addi	r5,r5,1
   808c0:	18000226 	beq	r3,zero,808cc <strcmp+0xa4>
   808c4:	28800007 	ldb	r2,0(r5)
   808c8:	18bffa26 	beq	r3,r2,808b4 <strcmp+0x8c>
   808cc:	20c00003 	ldbu	r3,0(r4)
   808d0:	28800003 	ldbu	r2,0(r5)
   808d4:	1885c83a 	sub	r2,r3,r2
   808d8:	f800283a 	ret
   808dc:	0005883a 	mov	r2,zero
   808e0:	f800283a 	ret

000808e4 <strlen>:
   808e4:	208000cc 	andi	r2,r4,3
   808e8:	2011883a 	mov	r8,r4
   808ec:	1000161e 	bne	r2,zero,80948 <strlen+0x64>
   808f0:	20c00017 	ldw	r3,0(r4)
   808f4:	017fbff4 	movhi	r5,65279
   808f8:	297fbfc4 	addi	r5,r5,-257
   808fc:	01e02074 	movhi	r7,32897
   80900:	39e02004 	addi	r7,r7,-32640
   80904:	1945883a 	add	r2,r3,r5
   80908:	11c4703a 	and	r2,r2,r7
   8090c:	00c6303a 	nor	r3,zero,r3
   80910:	1886703a 	and	r3,r3,r2
   80914:	18000c1e 	bne	r3,zero,80948 <strlen+0x64>
   80918:	280d883a 	mov	r6,r5
   8091c:	380b883a 	mov	r5,r7
   80920:	21000104 	addi	r4,r4,4
   80924:	20800017 	ldw	r2,0(r4)
   80928:	1187883a 	add	r3,r2,r6
   8092c:	1946703a 	and	r3,r3,r5
   80930:	0084303a 	nor	r2,zero,r2
   80934:	10c4703a 	and	r2,r2,r3
   80938:	103ff926 	beq	r2,zero,80920 <strlen+0x3c>
   8093c:	20800007 	ldb	r2,0(r4)
   80940:	10000326 	beq	r2,zero,80950 <strlen+0x6c>
   80944:	21000044 	addi	r4,r4,1
   80948:	20800007 	ldb	r2,0(r4)
   8094c:	103ffd1e 	bne	r2,zero,80944 <strlen+0x60>
   80950:	2205c83a 	sub	r2,r4,r8
   80954:	f800283a 	ret

00080958 <__sprint_r>:
   80958:	30800217 	ldw	r2,8(r6)
   8095c:	defffe04 	addi	sp,sp,-8
   80960:	dc000015 	stw	r16,0(sp)
   80964:	dfc00115 	stw	ra,4(sp)
   80968:	3021883a 	mov	r16,r6
   8096c:	0007883a 	mov	r3,zero
   80970:	1000061e 	bne	r2,zero,8098c <__sprint_r+0x34>
   80974:	1805883a 	mov	r2,r3
   80978:	30000115 	stw	zero,4(r6)
   8097c:	dfc00117 	ldw	ra,4(sp)
   80980:	dc000017 	ldw	r16,0(sp)
   80984:	dec00204 	addi	sp,sp,8
   80988:	f800283a 	ret
   8098c:	00865040 	call	86504 <__sfvwrite_r>
   80990:	1007883a 	mov	r3,r2
   80994:	1805883a 	mov	r2,r3
   80998:	80000115 	stw	zero,4(r16)
   8099c:	80000215 	stw	zero,8(r16)
   809a0:	dfc00117 	ldw	ra,4(sp)
   809a4:	dc000017 	ldw	r16,0(sp)
   809a8:	dec00204 	addi	sp,sp,8
   809ac:	f800283a 	ret

000809b0 <___vfprintf_internal_r>:
   809b0:	defea404 	addi	sp,sp,-1392
   809b4:	dd815815 	stw	r22,1376(sp)
   809b8:	dc015215 	stw	r16,1352(sp)
   809bc:	d9c15115 	stw	r7,1348(sp)
   809c0:	dfc15b15 	stw	ra,1388(sp)
   809c4:	df015a15 	stw	fp,1384(sp)
   809c8:	ddc15915 	stw	r23,1380(sp)
   809cc:	dd415715 	stw	r21,1372(sp)
   809d0:	dd015615 	stw	r20,1368(sp)
   809d4:	dcc15515 	stw	r19,1364(sp)
   809d8:	dc815415 	stw	r18,1360(sp)
   809dc:	dc415315 	stw	r17,1356(sp)
   809e0:	282d883a 	mov	r22,r5
   809e4:	3021883a 	mov	r16,r6
   809e8:	d9014f15 	stw	r4,1340(sp)
   809ec:	0086b540 	call	86b54 <_localeconv_r>
   809f0:	10800017 	ldw	r2,0(r2)
   809f4:	d9c15117 	ldw	r7,1348(sp)
   809f8:	d8814915 	stw	r2,1316(sp)
   809fc:	d8814f17 	ldw	r2,1340(sp)
   80a00:	10000226 	beq	r2,zero,80a0c <___vfprintf_internal_r+0x5c>
   80a04:	10800e17 	ldw	r2,56(r2)
   80a08:	10020d26 	beq	r2,zero,81240 <___vfprintf_internal_r+0x890>
   80a0c:	b080030b 	ldhu	r2,12(r22)
   80a10:	1080020c 	andi	r2,r2,8
   80a14:	10020e26 	beq	r2,zero,81250 <___vfprintf_internal_r+0x8a0>
   80a18:	b0800417 	ldw	r2,16(r22)
   80a1c:	10020c26 	beq	r2,zero,81250 <___vfprintf_internal_r+0x8a0>
   80a20:	b200030b 	ldhu	r8,12(r22)
   80a24:	00800284 	movi	r2,10
   80a28:	40c0068c 	andi	r3,r8,26
   80a2c:	18802f1e 	bne	r3,r2,80aec <___vfprintf_internal_r+0x13c>
   80a30:	b080038f 	ldh	r2,14(r22)
   80a34:	10002d16 	blt	r2,zero,80aec <___vfprintf_internal_r+0x13c>
   80a38:	b240038b 	ldhu	r9,14(r22)
   80a3c:	b2800717 	ldw	r10,28(r22)
   80a40:	b2c00917 	ldw	r11,36(r22)
   80a44:	d9014f17 	ldw	r4,1340(sp)
   80a48:	dc402904 	addi	r17,sp,164
   80a4c:	d8804004 	addi	r2,sp,256
   80a50:	00c10004 	movi	r3,1024
   80a54:	423fff4c 	andi	r8,r8,65533
   80a58:	800d883a 	mov	r6,r16
   80a5c:	880b883a 	mov	r5,r17
   80a60:	da002c0d 	sth	r8,176(sp)
   80a64:	da402c8d 	sth	r9,178(sp)
   80a68:	da803015 	stw	r10,192(sp)
   80a6c:	dac03215 	stw	r11,200(sp)
   80a70:	d8802d15 	stw	r2,180(sp)
   80a74:	d8c02e15 	stw	r3,184(sp)
   80a78:	d8802915 	stw	r2,164(sp)
   80a7c:	d8c02b15 	stw	r3,172(sp)
   80a80:	d8002f15 	stw	zero,188(sp)
   80a84:	00809b00 	call	809b0 <___vfprintf_internal_r>
   80a88:	d8814b15 	stw	r2,1324(sp)
   80a8c:	10000416 	blt	r2,zero,80aa0 <___vfprintf_internal_r+0xf0>
   80a90:	d9014f17 	ldw	r4,1340(sp)
   80a94:	880b883a 	mov	r5,r17
   80a98:	00859540 	call	85954 <_fflush_r>
   80a9c:	1002321e 	bne	r2,zero,81368 <___vfprintf_internal_r+0x9b8>
   80aa0:	d8802c0b 	ldhu	r2,176(sp)
   80aa4:	1080100c 	andi	r2,r2,64
   80aa8:	10000326 	beq	r2,zero,80ab8 <___vfprintf_internal_r+0x108>
   80aac:	b080030b 	ldhu	r2,12(r22)
   80ab0:	10801014 	ori	r2,r2,64
   80ab4:	b080030d 	sth	r2,12(r22)
   80ab8:	d8814b17 	ldw	r2,1324(sp)
   80abc:	dfc15b17 	ldw	ra,1388(sp)
   80ac0:	df015a17 	ldw	fp,1384(sp)
   80ac4:	ddc15917 	ldw	r23,1380(sp)
   80ac8:	dd815817 	ldw	r22,1376(sp)
   80acc:	dd415717 	ldw	r21,1372(sp)
   80ad0:	dd015617 	ldw	r20,1368(sp)
   80ad4:	dcc15517 	ldw	r19,1364(sp)
   80ad8:	dc815417 	ldw	r18,1360(sp)
   80adc:	dc415317 	ldw	r17,1356(sp)
   80ae0:	dc015217 	ldw	r16,1352(sp)
   80ae4:	dec15c04 	addi	sp,sp,1392
   80ae8:	f800283a 	ret
   80aec:	0005883a 	mov	r2,zero
   80af0:	0007883a 	mov	r3,zero
   80af4:	dd401904 	addi	r21,sp,100
   80af8:	d8814215 	stw	r2,1288(sp)
   80afc:	802f883a 	mov	r23,r16
   80b00:	d8c14315 	stw	r3,1292(sp)
   80b04:	d8014b15 	stw	zero,1324(sp)
   80b08:	d8014815 	stw	zero,1312(sp)
   80b0c:	d8014415 	stw	zero,1296(sp)
   80b10:	d8014715 	stw	zero,1308(sp)
   80b14:	dd400c15 	stw	r21,48(sp)
   80b18:	d8000e15 	stw	zero,56(sp)
   80b1c:	d8000d15 	stw	zero,52(sp)
   80b20:	b8800007 	ldb	r2,0(r23)
   80b24:	10001926 	beq	r2,zero,80b8c <___vfprintf_internal_r+0x1dc>
   80b28:	00c00944 	movi	r3,37
   80b2c:	10c01726 	beq	r2,r3,80b8c <___vfprintf_internal_r+0x1dc>
   80b30:	b821883a 	mov	r16,r23
   80b34:	00000106 	br	80b3c <___vfprintf_internal_r+0x18c>
   80b38:	10c00326 	beq	r2,r3,80b48 <___vfprintf_internal_r+0x198>
   80b3c:	84000044 	addi	r16,r16,1
   80b40:	80800007 	ldb	r2,0(r16)
   80b44:	103ffc1e 	bne	r2,zero,80b38 <___vfprintf_internal_r+0x188>
   80b48:	85e7c83a 	sub	r19,r16,r23
   80b4c:	98000e26 	beq	r19,zero,80b88 <___vfprintf_internal_r+0x1d8>
   80b50:	dc800e17 	ldw	r18,56(sp)
   80b54:	dc400d17 	ldw	r17,52(sp)
   80b58:	008001c4 	movi	r2,7
   80b5c:	94e5883a 	add	r18,r18,r19
   80b60:	8c400044 	addi	r17,r17,1
   80b64:	adc00015 	stw	r23,0(r21)
   80b68:	dc800e15 	stw	r18,56(sp)
   80b6c:	acc00115 	stw	r19,4(r21)
   80b70:	dc400d15 	stw	r17,52(sp)
   80b74:	14428b16 	blt	r2,r17,815a4 <___vfprintf_internal_r+0xbf4>
   80b78:	ad400204 	addi	r21,r21,8
   80b7c:	d9014b17 	ldw	r4,1324(sp)
   80b80:	24c9883a 	add	r4,r4,r19
   80b84:	d9014b15 	stw	r4,1324(sp)
   80b88:	802f883a 	mov	r23,r16
   80b8c:	b8800007 	ldb	r2,0(r23)
   80b90:	10013c26 	beq	r2,zero,81084 <___vfprintf_internal_r+0x6d4>
   80b94:	bdc00044 	addi	r23,r23,1
   80b98:	d8000405 	stb	zero,16(sp)
   80b9c:	b8c00007 	ldb	r3,0(r23)
   80ba0:	04ffffc4 	movi	r19,-1
   80ba4:	d8014c15 	stw	zero,1328(sp)
   80ba8:	d8014a15 	stw	zero,1320(sp)
   80bac:	d8c14d15 	stw	r3,1332(sp)
   80bb0:	bdc00044 	addi	r23,r23,1
   80bb4:	d9414d17 	ldw	r5,1332(sp)
   80bb8:	00801604 	movi	r2,88
   80bbc:	28fff804 	addi	r3,r5,-32
   80bc0:	10c06036 	bltu	r2,r3,80d44 <___vfprintf_internal_r+0x394>
   80bc4:	18c5883a 	add	r2,r3,r3
   80bc8:	1085883a 	add	r2,r2,r2
   80bcc:	00c00234 	movhi	r3,8
   80bd0:	18c2f804 	addi	r3,r3,3040
   80bd4:	10c5883a 	add	r2,r2,r3
   80bd8:	11000017 	ldw	r4,0(r2)
   80bdc:	2000683a 	jmp	r4
   80be0:	00081b54 	movui	zero,8301
   80be4:	00080d44 	movi	zero,8245
   80be8:	00080d44 	movi	zero,8245
   80bec:	00081b40 	call	81b4 <__alt_mem_sram_0-0x77e4c>
   80bf0:	00080d44 	movi	zero,8245
   80bf4:	00080d44 	movi	zero,8245
   80bf8:	00080d44 	movi	zero,8245
   80bfc:	00080d44 	movi	zero,8245
   80c00:	00080d44 	movi	zero,8245
   80c04:	00080d44 	movi	zero,8245
   80c08:	00081920 	cmpeqi	zero,zero,8292
   80c0c:	00081b30 	cmpltui	zero,zero,8300
   80c10:	00080d44 	movi	zero,8245
   80c14:	00081938 	rdprs	zero,zero,8292
   80c18:	00081bd8 	cmpnei	zero,zero,8303
   80c1c:	00080d44 	movi	zero,8245
   80c20:	00081bc4 	movi	zero,8303
   80c24:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c28:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c2c:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c30:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c34:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c38:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c3c:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c40:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c44:	00081b80 	call	81b8 <__alt_mem_sram_0-0x77e48>
   80c48:	00080d44 	movi	zero,8245
   80c4c:	00080d44 	movi	zero,8245
   80c50:	00080d44 	movi	zero,8245
   80c54:	00080d44 	movi	zero,8245
   80c58:	00080d44 	movi	zero,8245
   80c5c:	00080d44 	movi	zero,8245
   80c60:	00080d44 	movi	zero,8245
   80c64:	00080d44 	movi	zero,8245
   80c68:	00080d44 	movi	zero,8245
   80c6c:	00080d44 	movi	zero,8245
   80c70:	0008139c 	xori	zero,zero,8270
   80c74:	00081a08 	cmpgei	zero,zero,8296
   80c78:	00080d44 	movi	zero,8245
   80c7c:	00081a08 	cmpgei	zero,zero,8296
   80c80:	00080d44 	movi	zero,8245
   80c84:	00080d44 	movi	zero,8245
   80c88:	00080d44 	movi	zero,8245
   80c8c:	00080d44 	movi	zero,8245
   80c90:	00081b6c 	andhi	zero,zero,8301
   80c94:	00080d44 	movi	zero,8245
   80c98:	00080d44 	movi	zero,8245
   80c9c:	00081450 	cmplti	zero,zero,8273
   80ca0:	00080d44 	movi	zero,8245
   80ca4:	00080d44 	movi	zero,8245
   80ca8:	00080d44 	movi	zero,8245
   80cac:	00080d44 	movi	zero,8245
   80cb0:	00080d44 	movi	zero,8245
   80cb4:	0008149c 	xori	zero,zero,8274
   80cb8:	00080d44 	movi	zero,8245
   80cbc:	00080d44 	movi	zero,8245
   80cc0:	00081abc 	xorhi	zero,zero,8298
   80cc4:	00080d44 	movi	zero,8245
   80cc8:	00080d44 	movi	zero,8245
   80ccc:	00080d44 	movi	zero,8245
   80cd0:	00080d44 	movi	zero,8245
   80cd4:	00080d44 	movi	zero,8245
   80cd8:	00080d44 	movi	zero,8245
   80cdc:	00080d44 	movi	zero,8245
   80ce0:	00080d44 	movi	zero,8245
   80ce4:	00080d44 	movi	zero,8245
   80ce8:	00080d44 	movi	zero,8245
   80cec:	00081a90 	cmplti	zero,zero,8298
   80cf0:	000813a8 	cmpgeui	zero,zero,8270
   80cf4:	00081a08 	cmpgei	zero,zero,8296
   80cf8:	00081a08 	cmpgei	zero,zero,8296
   80cfc:	00081a08 	cmpgei	zero,zero,8296
   80d00:	000819f4 	movhi	zero,8295
   80d04:	000813a8 	cmpgeui	zero,zero,8270
   80d08:	00080d44 	movi	zero,8245
   80d0c:	00080d44 	movi	zero,8245
   80d10:	0008197c 	xorhi	zero,zero,8293
   80d14:	00080d44 	movi	zero,8245
   80d18:	0008194c 	andi	zero,zero,8293
   80d1c:	0008145c 	xori	zero,zero,8273
   80d20:	000819ac 	andhi	zero,zero,8294
   80d24:	00081998 	cmpnei	zero,zero,8294
   80d28:	00080d44 	movi	zero,8245
   80d2c:	00081c40 	call	81c4 <__alt_mem_sram_0-0x77e3c>
   80d30:	00080d44 	movi	zero,8245
   80d34:	000814a8 	cmpgeui	zero,zero,8274
   80d38:	00080d44 	movi	zero,8245
   80d3c:	00080d44 	movi	zero,8245
   80d40:	00081b20 	cmpeqi	zero,zero,8300
   80d44:	d9014d17 	ldw	r4,1332(sp)
   80d48:	2000ce26 	beq	r4,zero,81084 <___vfprintf_internal_r+0x6d4>
   80d4c:	01400044 	movi	r5,1
   80d50:	d9800f04 	addi	r6,sp,60
   80d54:	d9c14015 	stw	r7,1280(sp)
   80d58:	d9414515 	stw	r5,1300(sp)
   80d5c:	d9814115 	stw	r6,1284(sp)
   80d60:	280f883a 	mov	r7,r5
   80d64:	d9000f05 	stb	r4,60(sp)
   80d68:	d8000405 	stb	zero,16(sp)
   80d6c:	d8014615 	stw	zero,1304(sp)
   80d70:	d8c14c17 	ldw	r3,1328(sp)
   80d74:	1880008c 	andi	r2,r3,2
   80d78:	1005003a 	cmpeq	r2,r2,zero
   80d7c:	d8815015 	stw	r2,1344(sp)
   80d80:	1000031e 	bne	r2,zero,80d90 <___vfprintf_internal_r+0x3e0>
   80d84:	d9014517 	ldw	r4,1300(sp)
   80d88:	21000084 	addi	r4,r4,2
   80d8c:	d9014515 	stw	r4,1300(sp)
   80d90:	d9414c17 	ldw	r5,1328(sp)
   80d94:	2940210c 	andi	r5,r5,132
   80d98:	d9414e15 	stw	r5,1336(sp)
   80d9c:	28002d1e 	bne	r5,zero,80e54 <___vfprintf_internal_r+0x4a4>
   80da0:	d9814a17 	ldw	r6,1320(sp)
   80da4:	d8814517 	ldw	r2,1300(sp)
   80da8:	30a1c83a 	sub	r16,r6,r2
   80dac:	0400290e 	bge	zero,r16,80e54 <___vfprintf_internal_r+0x4a4>
   80db0:	00800404 	movi	r2,16
   80db4:	14045e0e 	bge	r2,r16,81f30 <___vfprintf_internal_r+0x1580>
   80db8:	dc800e17 	ldw	r18,56(sp)
   80dbc:	dc400d17 	ldw	r17,52(sp)
   80dc0:	1027883a 	mov	r19,r2
   80dc4:	07000274 	movhi	fp,9
   80dc8:	e70de884 	addi	fp,fp,14242
   80dcc:	050001c4 	movi	r20,7
   80dd0:	00000306 	br	80de0 <___vfprintf_internal_r+0x430>
   80dd4:	843ffc04 	addi	r16,r16,-16
   80dd8:	ad400204 	addi	r21,r21,8
   80ddc:	9c00130e 	bge	r19,r16,80e2c <___vfprintf_internal_r+0x47c>
   80de0:	94800404 	addi	r18,r18,16
   80de4:	8c400044 	addi	r17,r17,1
   80de8:	af000015 	stw	fp,0(r21)
   80dec:	acc00115 	stw	r19,4(r21)
   80df0:	dc800e15 	stw	r18,56(sp)
   80df4:	dc400d15 	stw	r17,52(sp)
   80df8:	a47ff60e 	bge	r20,r17,80dd4 <___vfprintf_internal_r+0x424>
   80dfc:	d9014f17 	ldw	r4,1340(sp)
   80e00:	b00b883a 	mov	r5,r22
   80e04:	d9800c04 	addi	r6,sp,48
   80e08:	d9c15115 	stw	r7,1348(sp)
   80e0c:	00809580 	call	80958 <__sprint_r>
   80e10:	d9c15117 	ldw	r7,1348(sp)
   80e14:	10009e1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   80e18:	843ffc04 	addi	r16,r16,-16
   80e1c:	dc800e17 	ldw	r18,56(sp)
   80e20:	dc400d17 	ldw	r17,52(sp)
   80e24:	dd401904 	addi	r21,sp,100
   80e28:	9c3fed16 	blt	r19,r16,80de0 <___vfprintf_internal_r+0x430>
   80e2c:	9425883a 	add	r18,r18,r16
   80e30:	8c400044 	addi	r17,r17,1
   80e34:	008001c4 	movi	r2,7
   80e38:	af000015 	stw	fp,0(r21)
   80e3c:	ac000115 	stw	r16,4(r21)
   80e40:	dc800e15 	stw	r18,56(sp)
   80e44:	dc400d15 	stw	r17,52(sp)
   80e48:	1441f516 	blt	r2,r17,81620 <___vfprintf_internal_r+0xc70>
   80e4c:	ad400204 	addi	r21,r21,8
   80e50:	00000206 	br	80e5c <___vfprintf_internal_r+0x4ac>
   80e54:	dc800e17 	ldw	r18,56(sp)
   80e58:	dc400d17 	ldw	r17,52(sp)
   80e5c:	d8800407 	ldb	r2,16(sp)
   80e60:	10000b26 	beq	r2,zero,80e90 <___vfprintf_internal_r+0x4e0>
   80e64:	00800044 	movi	r2,1
   80e68:	94800044 	addi	r18,r18,1
   80e6c:	8c400044 	addi	r17,r17,1
   80e70:	a8800115 	stw	r2,4(r21)
   80e74:	d8c00404 	addi	r3,sp,16
   80e78:	008001c4 	movi	r2,7
   80e7c:	a8c00015 	stw	r3,0(r21)
   80e80:	dc800e15 	stw	r18,56(sp)
   80e84:	dc400d15 	stw	r17,52(sp)
   80e88:	1441da16 	blt	r2,r17,815f4 <___vfprintf_internal_r+0xc44>
   80e8c:	ad400204 	addi	r21,r21,8
   80e90:	d9015017 	ldw	r4,1344(sp)
   80e94:	20000b1e 	bne	r4,zero,80ec4 <___vfprintf_internal_r+0x514>
   80e98:	d8800444 	addi	r2,sp,17
   80e9c:	94800084 	addi	r18,r18,2
   80ea0:	8c400044 	addi	r17,r17,1
   80ea4:	a8800015 	stw	r2,0(r21)
   80ea8:	00c00084 	movi	r3,2
   80eac:	008001c4 	movi	r2,7
   80eb0:	a8c00115 	stw	r3,4(r21)
   80eb4:	dc800e15 	stw	r18,56(sp)
   80eb8:	dc400d15 	stw	r17,52(sp)
   80ebc:	1441c216 	blt	r2,r17,815c8 <___vfprintf_internal_r+0xc18>
   80ec0:	ad400204 	addi	r21,r21,8
   80ec4:	d9414e17 	ldw	r5,1336(sp)
   80ec8:	00802004 	movi	r2,128
   80ecc:	2880b126 	beq	r5,r2,81194 <___vfprintf_internal_r+0x7e4>
   80ed0:	d8c14617 	ldw	r3,1304(sp)
   80ed4:	19e1c83a 	sub	r16,r3,r7
   80ed8:	0400260e 	bge	zero,r16,80f74 <___vfprintf_internal_r+0x5c4>
   80edc:	00800404 	movi	r2,16
   80ee0:	1403cf0e 	bge	r2,r16,81e20 <___vfprintf_internal_r+0x1470>
   80ee4:	1027883a 	mov	r19,r2
   80ee8:	07000274 	movhi	fp,9
   80eec:	e70de484 	addi	fp,fp,14226
   80ef0:	050001c4 	movi	r20,7
   80ef4:	00000306 	br	80f04 <___vfprintf_internal_r+0x554>
   80ef8:	843ffc04 	addi	r16,r16,-16
   80efc:	ad400204 	addi	r21,r21,8
   80f00:	9c00130e 	bge	r19,r16,80f50 <___vfprintf_internal_r+0x5a0>
   80f04:	94800404 	addi	r18,r18,16
   80f08:	8c400044 	addi	r17,r17,1
   80f0c:	af000015 	stw	fp,0(r21)
   80f10:	acc00115 	stw	r19,4(r21)
   80f14:	dc800e15 	stw	r18,56(sp)
   80f18:	dc400d15 	stw	r17,52(sp)
   80f1c:	a47ff60e 	bge	r20,r17,80ef8 <___vfprintf_internal_r+0x548>
   80f20:	d9014f17 	ldw	r4,1340(sp)
   80f24:	b00b883a 	mov	r5,r22
   80f28:	d9800c04 	addi	r6,sp,48
   80f2c:	d9c15115 	stw	r7,1348(sp)
   80f30:	00809580 	call	80958 <__sprint_r>
   80f34:	d9c15117 	ldw	r7,1348(sp)
   80f38:	1000551e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   80f3c:	843ffc04 	addi	r16,r16,-16
   80f40:	dc800e17 	ldw	r18,56(sp)
   80f44:	dc400d17 	ldw	r17,52(sp)
   80f48:	dd401904 	addi	r21,sp,100
   80f4c:	9c3fed16 	blt	r19,r16,80f04 <___vfprintf_internal_r+0x554>
   80f50:	9425883a 	add	r18,r18,r16
   80f54:	8c400044 	addi	r17,r17,1
   80f58:	008001c4 	movi	r2,7
   80f5c:	af000015 	stw	fp,0(r21)
   80f60:	ac000115 	stw	r16,4(r21)
   80f64:	dc800e15 	stw	r18,56(sp)
   80f68:	dc400d15 	stw	r17,52(sp)
   80f6c:	14418216 	blt	r2,r17,81578 <___vfprintf_internal_r+0xbc8>
   80f70:	ad400204 	addi	r21,r21,8
   80f74:	d9014c17 	ldw	r4,1328(sp)
   80f78:	2080400c 	andi	r2,r4,256
   80f7c:	10004a1e 	bne	r2,zero,810a8 <___vfprintf_internal_r+0x6f8>
   80f80:	d9414117 	ldw	r5,1284(sp)
   80f84:	91e5883a 	add	r18,r18,r7
   80f88:	8c400044 	addi	r17,r17,1
   80f8c:	008001c4 	movi	r2,7
   80f90:	a9400015 	stw	r5,0(r21)
   80f94:	a9c00115 	stw	r7,4(r21)
   80f98:	dc800e15 	stw	r18,56(sp)
   80f9c:	dc400d15 	stw	r17,52(sp)
   80fa0:	14416716 	blt	r2,r17,81540 <___vfprintf_internal_r+0xb90>
   80fa4:	a8c00204 	addi	r3,r21,8
   80fa8:	d9814c17 	ldw	r6,1328(sp)
   80fac:	3080010c 	andi	r2,r6,4
   80fb0:	10002826 	beq	r2,zero,81054 <___vfprintf_internal_r+0x6a4>
   80fb4:	d8814a17 	ldw	r2,1320(sp)
   80fb8:	d9014517 	ldw	r4,1300(sp)
   80fbc:	1121c83a 	sub	r16,r2,r4
   80fc0:	0400240e 	bge	zero,r16,81054 <___vfprintf_internal_r+0x6a4>
   80fc4:	00800404 	movi	r2,16
   80fc8:	1404550e 	bge	r2,r16,82120 <___vfprintf_internal_r+0x1770>
   80fcc:	dc400d17 	ldw	r17,52(sp)
   80fd0:	1027883a 	mov	r19,r2
   80fd4:	07000274 	movhi	fp,9
   80fd8:	e70de884 	addi	fp,fp,14242
   80fdc:	050001c4 	movi	r20,7
   80fe0:	00000306 	br	80ff0 <___vfprintf_internal_r+0x640>
   80fe4:	843ffc04 	addi	r16,r16,-16
   80fe8:	18c00204 	addi	r3,r3,8
   80fec:	9c00110e 	bge	r19,r16,81034 <___vfprintf_internal_r+0x684>
   80ff0:	94800404 	addi	r18,r18,16
   80ff4:	8c400044 	addi	r17,r17,1
   80ff8:	1f000015 	stw	fp,0(r3)
   80ffc:	1cc00115 	stw	r19,4(r3)
   81000:	dc800e15 	stw	r18,56(sp)
   81004:	dc400d15 	stw	r17,52(sp)
   81008:	a47ff60e 	bge	r20,r17,80fe4 <___vfprintf_internal_r+0x634>
   8100c:	d9014f17 	ldw	r4,1340(sp)
   81010:	b00b883a 	mov	r5,r22
   81014:	d9800c04 	addi	r6,sp,48
   81018:	00809580 	call	80958 <__sprint_r>
   8101c:	10001c1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81020:	843ffc04 	addi	r16,r16,-16
   81024:	dc800e17 	ldw	r18,56(sp)
   81028:	dc400d17 	ldw	r17,52(sp)
   8102c:	d8c01904 	addi	r3,sp,100
   81030:	9c3fef16 	blt	r19,r16,80ff0 <___vfprintf_internal_r+0x640>
   81034:	9425883a 	add	r18,r18,r16
   81038:	8c400044 	addi	r17,r17,1
   8103c:	008001c4 	movi	r2,7
   81040:	1f000015 	stw	fp,0(r3)
   81044:	1c000115 	stw	r16,4(r3)
   81048:	dc800e15 	stw	r18,56(sp)
   8104c:	dc400d15 	stw	r17,52(sp)
   81050:	1440cb16 	blt	r2,r17,81380 <___vfprintf_internal_r+0x9d0>
   81054:	d8814a17 	ldw	r2,1320(sp)
   81058:	d9414517 	ldw	r5,1300(sp)
   8105c:	1140010e 	bge	r2,r5,81064 <___vfprintf_internal_r+0x6b4>
   81060:	2805883a 	mov	r2,r5
   81064:	d9814b17 	ldw	r6,1324(sp)
   81068:	308d883a 	add	r6,r6,r2
   8106c:	d9814b15 	stw	r6,1324(sp)
   81070:	90013b1e 	bne	r18,zero,81560 <___vfprintf_internal_r+0xbb0>
   81074:	d9c14017 	ldw	r7,1280(sp)
   81078:	dd401904 	addi	r21,sp,100
   8107c:	d8000d15 	stw	zero,52(sp)
   81080:	003ea706 	br	80b20 <___vfprintf_internal_r+0x170>
   81084:	d8800e17 	ldw	r2,56(sp)
   81088:	1005451e 	bne	r2,zero,825a0 <___vfprintf_internal_r+0x1bf0>
   8108c:	d8000d15 	stw	zero,52(sp)
   81090:	b080030b 	ldhu	r2,12(r22)
   81094:	1080100c 	andi	r2,r2,64
   81098:	103e8726 	beq	r2,zero,80ab8 <___vfprintf_internal_r+0x108>
   8109c:	00bfffc4 	movi	r2,-1
   810a0:	d8814b15 	stw	r2,1324(sp)
   810a4:	003e8406 	br	80ab8 <___vfprintf_internal_r+0x108>
   810a8:	d9814d17 	ldw	r6,1332(sp)
   810ac:	00801944 	movi	r2,101
   810b0:	11806e16 	blt	r2,r6,8126c <___vfprintf_internal_r+0x8bc>
   810b4:	d9414717 	ldw	r5,1308(sp)
   810b8:	00c00044 	movi	r3,1
   810bc:	1943490e 	bge	r3,r5,81de4 <___vfprintf_internal_r+0x1434>
   810c0:	d8814117 	ldw	r2,1284(sp)
   810c4:	94800044 	addi	r18,r18,1
   810c8:	8c400044 	addi	r17,r17,1
   810cc:	a8800015 	stw	r2,0(r21)
   810d0:	008001c4 	movi	r2,7
   810d4:	a8c00115 	stw	r3,4(r21)
   810d8:	dc800e15 	stw	r18,56(sp)
   810dc:	dc400d15 	stw	r17,52(sp)
   810e0:	1441ca16 	blt	r2,r17,8180c <___vfprintf_internal_r+0xe5c>
   810e4:	a8c00204 	addi	r3,r21,8
   810e8:	d9014917 	ldw	r4,1316(sp)
   810ec:	00800044 	movi	r2,1
   810f0:	94800044 	addi	r18,r18,1
   810f4:	8c400044 	addi	r17,r17,1
   810f8:	18800115 	stw	r2,4(r3)
   810fc:	008001c4 	movi	r2,7
   81100:	19000015 	stw	r4,0(r3)
   81104:	dc800e15 	stw	r18,56(sp)
   81108:	dc400d15 	stw	r17,52(sp)
   8110c:	1441b616 	blt	r2,r17,817e8 <___vfprintf_internal_r+0xe38>
   81110:	1cc00204 	addi	r19,r3,8
   81114:	d9014217 	ldw	r4,1288(sp)
   81118:	d9414317 	ldw	r5,1292(sp)
   8111c:	000d883a 	mov	r6,zero
   81120:	000f883a 	mov	r7,zero
   81124:	008e9200 	call	8e920 <__nedf2>
   81128:	10017426 	beq	r2,zero,816fc <___vfprintf_internal_r+0xd4c>
   8112c:	d9414717 	ldw	r5,1308(sp)
   81130:	d9814117 	ldw	r6,1284(sp)
   81134:	8c400044 	addi	r17,r17,1
   81138:	2c85883a 	add	r2,r5,r18
   8113c:	14bfffc4 	addi	r18,r2,-1
   81140:	28bfffc4 	addi	r2,r5,-1
   81144:	30c00044 	addi	r3,r6,1
   81148:	98800115 	stw	r2,4(r19)
   8114c:	008001c4 	movi	r2,7
   81150:	98c00015 	stw	r3,0(r19)
   81154:	dc800e15 	stw	r18,56(sp)
   81158:	dc400d15 	stw	r17,52(sp)
   8115c:	14418e16 	blt	r2,r17,81798 <___vfprintf_internal_r+0xde8>
   81160:	9cc00204 	addi	r19,r19,8
   81164:	d9414817 	ldw	r5,1312(sp)
   81168:	d8800804 	addi	r2,sp,32
   8116c:	8c400044 	addi	r17,r17,1
   81170:	9165883a 	add	r18,r18,r5
   81174:	98800015 	stw	r2,0(r19)
   81178:	008001c4 	movi	r2,7
   8117c:	99400115 	stw	r5,4(r19)
   81180:	dc800e15 	stw	r18,56(sp)
   81184:	dc400d15 	stw	r17,52(sp)
   81188:	1440ed16 	blt	r2,r17,81540 <___vfprintf_internal_r+0xb90>
   8118c:	98c00204 	addi	r3,r19,8
   81190:	003f8506 	br	80fa8 <___vfprintf_internal_r+0x5f8>
   81194:	d9814a17 	ldw	r6,1320(sp)
   81198:	d8814517 	ldw	r2,1300(sp)
   8119c:	30a1c83a 	sub	r16,r6,r2
   811a0:	043f4b0e 	bge	zero,r16,80ed0 <___vfprintf_internal_r+0x520>
   811a4:	00800404 	movi	r2,16
   811a8:	14043a0e 	bge	r2,r16,82294 <___vfprintf_internal_r+0x18e4>
   811ac:	1027883a 	mov	r19,r2
   811b0:	07000274 	movhi	fp,9
   811b4:	e70de484 	addi	fp,fp,14226
   811b8:	050001c4 	movi	r20,7
   811bc:	00000306 	br	811cc <___vfprintf_internal_r+0x81c>
   811c0:	843ffc04 	addi	r16,r16,-16
   811c4:	ad400204 	addi	r21,r21,8
   811c8:	9c00130e 	bge	r19,r16,81218 <___vfprintf_internal_r+0x868>
   811cc:	94800404 	addi	r18,r18,16
   811d0:	8c400044 	addi	r17,r17,1
   811d4:	af000015 	stw	fp,0(r21)
   811d8:	acc00115 	stw	r19,4(r21)
   811dc:	dc800e15 	stw	r18,56(sp)
   811e0:	dc400d15 	stw	r17,52(sp)
   811e4:	a47ff60e 	bge	r20,r17,811c0 <___vfprintf_internal_r+0x810>
   811e8:	d9014f17 	ldw	r4,1340(sp)
   811ec:	b00b883a 	mov	r5,r22
   811f0:	d9800c04 	addi	r6,sp,48
   811f4:	d9c15115 	stw	r7,1348(sp)
   811f8:	00809580 	call	80958 <__sprint_r>
   811fc:	d9c15117 	ldw	r7,1348(sp)
   81200:	103fa31e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81204:	843ffc04 	addi	r16,r16,-16
   81208:	dc800e17 	ldw	r18,56(sp)
   8120c:	dc400d17 	ldw	r17,52(sp)
   81210:	dd401904 	addi	r21,sp,100
   81214:	9c3fed16 	blt	r19,r16,811cc <___vfprintf_internal_r+0x81c>
   81218:	9425883a 	add	r18,r18,r16
   8121c:	8c400044 	addi	r17,r17,1
   81220:	008001c4 	movi	r2,7
   81224:	af000015 	stw	fp,0(r21)
   81228:	ac000115 	stw	r16,4(r21)
   8122c:	dc800e15 	stw	r18,56(sp)
   81230:	dc400d15 	stw	r17,52(sp)
   81234:	14416116 	blt	r2,r17,817bc <___vfprintf_internal_r+0xe0c>
   81238:	ad400204 	addi	r21,r21,8
   8123c:	003f2406 	br	80ed0 <___vfprintf_internal_r+0x520>
   81240:	d9014f17 	ldw	r4,1340(sp)
   81244:	0085bec0 	call	85bec <__sinit>
   81248:	d9c15117 	ldw	r7,1348(sp)
   8124c:	003def06 	br	80a0c <___vfprintf_internal_r+0x5c>
   81250:	d9014f17 	ldw	r4,1340(sp)
   81254:	b00b883a 	mov	r5,r22
   81258:	d9c15115 	stw	r7,1348(sp)
   8125c:	00840200 	call	84020 <__swsetup_r>
   81260:	d9c15117 	ldw	r7,1348(sp)
   81264:	103dee26 	beq	r2,zero,80a20 <___vfprintf_internal_r+0x70>
   81268:	003f8c06 	br	8109c <___vfprintf_internal_r+0x6ec>
   8126c:	d9014217 	ldw	r4,1288(sp)
   81270:	d9414317 	ldw	r5,1292(sp)
   81274:	000d883a 	mov	r6,zero
   81278:	000f883a 	mov	r7,zero
   8127c:	008e8980 	call	8e898 <__eqdf2>
   81280:	1000f21e 	bne	r2,zero,8164c <___vfprintf_internal_r+0xc9c>
   81284:	00800274 	movhi	r2,9
   81288:	108de404 	addi	r2,r2,14224
   8128c:	94800044 	addi	r18,r18,1
   81290:	8c400044 	addi	r17,r17,1
   81294:	a8800015 	stw	r2,0(r21)
   81298:	00c00044 	movi	r3,1
   8129c:	008001c4 	movi	r2,7
   812a0:	a8c00115 	stw	r3,4(r21)
   812a4:	dc800e15 	stw	r18,56(sp)
   812a8:	dc400d15 	stw	r17,52(sp)
   812ac:	14430016 	blt	r2,r17,81eb0 <___vfprintf_internal_r+0x1500>
   812b0:	a8c00204 	addi	r3,r21,8
   812b4:	d8800517 	ldw	r2,20(sp)
   812b8:	d9014717 	ldw	r4,1308(sp)
   812bc:	11015c0e 	bge	r2,r4,81830 <___vfprintf_internal_r+0xe80>
   812c0:	dc400d17 	ldw	r17,52(sp)
   812c4:	d9814917 	ldw	r6,1316(sp)
   812c8:	00800044 	movi	r2,1
   812cc:	94800044 	addi	r18,r18,1
   812d0:	8c400044 	addi	r17,r17,1
   812d4:	18800115 	stw	r2,4(r3)
   812d8:	008001c4 	movi	r2,7
   812dc:	19800015 	stw	r6,0(r3)
   812e0:	dc800e15 	stw	r18,56(sp)
   812e4:	dc400d15 	stw	r17,52(sp)
   812e8:	14431616 	blt	r2,r17,81f44 <___vfprintf_internal_r+0x1594>
   812ec:	18c00204 	addi	r3,r3,8
   812f0:	d8814717 	ldw	r2,1308(sp)
   812f4:	143fffc4 	addi	r16,r2,-1
   812f8:	043f2b0e 	bge	zero,r16,80fa8 <___vfprintf_internal_r+0x5f8>
   812fc:	00800404 	movi	r2,16
   81300:	1402a80e 	bge	r2,r16,81da4 <___vfprintf_internal_r+0x13f4>
   81304:	dc400d17 	ldw	r17,52(sp)
   81308:	1027883a 	mov	r19,r2
   8130c:	07000274 	movhi	fp,9
   81310:	e70de484 	addi	fp,fp,14226
   81314:	050001c4 	movi	r20,7
   81318:	00000306 	br	81328 <___vfprintf_internal_r+0x978>
   8131c:	18c00204 	addi	r3,r3,8
   81320:	843ffc04 	addi	r16,r16,-16
   81324:	9c02a20e 	bge	r19,r16,81db0 <___vfprintf_internal_r+0x1400>
   81328:	94800404 	addi	r18,r18,16
   8132c:	8c400044 	addi	r17,r17,1
   81330:	1f000015 	stw	fp,0(r3)
   81334:	1cc00115 	stw	r19,4(r3)
   81338:	dc800e15 	stw	r18,56(sp)
   8133c:	dc400d15 	stw	r17,52(sp)
   81340:	a47ff60e 	bge	r20,r17,8131c <___vfprintf_internal_r+0x96c>
   81344:	d9014f17 	ldw	r4,1340(sp)
   81348:	b00b883a 	mov	r5,r22
   8134c:	d9800c04 	addi	r6,sp,48
   81350:	00809580 	call	80958 <__sprint_r>
   81354:	103f4e1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81358:	dc800e17 	ldw	r18,56(sp)
   8135c:	dc400d17 	ldw	r17,52(sp)
   81360:	d8c01904 	addi	r3,sp,100
   81364:	003fee06 	br	81320 <___vfprintf_internal_r+0x970>
   81368:	d8802c0b 	ldhu	r2,176(sp)
   8136c:	00ffffc4 	movi	r3,-1
   81370:	d8c14b15 	stw	r3,1324(sp)
   81374:	1080100c 	andi	r2,r2,64
   81378:	103dcc1e 	bne	r2,zero,80aac <___vfprintf_internal_r+0xfc>
   8137c:	003dce06 	br	80ab8 <___vfprintf_internal_r+0x108>
   81380:	d9014f17 	ldw	r4,1340(sp)
   81384:	b00b883a 	mov	r5,r22
   81388:	d9800c04 	addi	r6,sp,48
   8138c:	00809580 	call	80958 <__sprint_r>
   81390:	103f3f1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81394:	dc800e17 	ldw	r18,56(sp)
   81398:	003f2e06 	br	81054 <___vfprintf_internal_r+0x6a4>
   8139c:	d9414c17 	ldw	r5,1328(sp)
   813a0:	29400414 	ori	r5,r5,16
   813a4:	d9414c15 	stw	r5,1328(sp)
   813a8:	d9814c17 	ldw	r6,1328(sp)
   813ac:	3080080c 	andi	r2,r6,32
   813b0:	10014f1e 	bne	r2,zero,818f0 <___vfprintf_internal_r+0xf40>
   813b4:	d8c14c17 	ldw	r3,1328(sp)
   813b8:	1880040c 	andi	r2,r3,16
   813bc:	1002f01e 	bne	r2,zero,81f80 <___vfprintf_internal_r+0x15d0>
   813c0:	d9014c17 	ldw	r4,1328(sp)
   813c4:	2080100c 	andi	r2,r4,64
   813c8:	1002ed26 	beq	r2,zero,81f80 <___vfprintf_internal_r+0x15d0>
   813cc:	3880000f 	ldh	r2,0(r7)
   813d0:	39c00104 	addi	r7,r7,4
   813d4:	d9c14015 	stw	r7,1280(sp)
   813d8:	1023d7fa 	srai	r17,r2,31
   813dc:	1021883a 	mov	r16,r2
   813e0:	88037816 	blt	r17,zero,821c4 <___vfprintf_internal_r+0x1814>
   813e4:	01000044 	movi	r4,1
   813e8:	98000416 	blt	r19,zero,813fc <___vfprintf_internal_r+0xa4c>
   813ec:	d8c14c17 	ldw	r3,1328(sp)
   813f0:	00bfdfc4 	movi	r2,-129
   813f4:	1886703a 	and	r3,r3,r2
   813f8:	d8c14c15 	stw	r3,1328(sp)
   813fc:	8444b03a 	or	r2,r16,r17
   81400:	10022c1e 	bne	r2,zero,81cb4 <___vfprintf_internal_r+0x1304>
   81404:	98022b1e 	bne	r19,zero,81cb4 <___vfprintf_internal_r+0x1304>
   81408:	20803fcc 	andi	r2,r4,255
   8140c:	1002a126 	beq	r2,zero,81e94 <___vfprintf_internal_r+0x14e4>
   81410:	d8c01904 	addi	r3,sp,100
   81414:	dd000f04 	addi	r20,sp,60
   81418:	d8c14115 	stw	r3,1284(sp)
   8141c:	d8c14117 	ldw	r3,1284(sp)
   81420:	dcc14515 	stw	r19,1300(sp)
   81424:	a0c5c83a 	sub	r2,r20,r3
   81428:	11c00a04 	addi	r7,r2,40
   8142c:	99c0010e 	bge	r19,r7,81434 <___vfprintf_internal_r+0xa84>
   81430:	d9c14515 	stw	r7,1300(sp)
   81434:	dcc14615 	stw	r19,1304(sp)
   81438:	d8800407 	ldb	r2,16(sp)
   8143c:	103e4c26 	beq	r2,zero,80d70 <___vfprintf_internal_r+0x3c0>
   81440:	d8814517 	ldw	r2,1300(sp)
   81444:	10800044 	addi	r2,r2,1
   81448:	d8814515 	stw	r2,1300(sp)
   8144c:	003e4806 	br	80d70 <___vfprintf_internal_r+0x3c0>
   81450:	d9814c17 	ldw	r6,1328(sp)
   81454:	31800414 	ori	r6,r6,16
   81458:	d9814c15 	stw	r6,1328(sp)
   8145c:	d8c14c17 	ldw	r3,1328(sp)
   81460:	1880080c 	andi	r2,r3,32
   81464:	1001271e 	bne	r2,zero,81904 <___vfprintf_internal_r+0xf54>
   81468:	d9414c17 	ldw	r5,1328(sp)
   8146c:	2880040c 	andi	r2,r5,16
   81470:	1002bc1e 	bne	r2,zero,81f64 <___vfprintf_internal_r+0x15b4>
   81474:	d9814c17 	ldw	r6,1328(sp)
   81478:	3080100c 	andi	r2,r6,64
   8147c:	1002b926 	beq	r2,zero,81f64 <___vfprintf_internal_r+0x15b4>
   81480:	3c00000b 	ldhu	r16,0(r7)
   81484:	0009883a 	mov	r4,zero
   81488:	39c00104 	addi	r7,r7,4
   8148c:	0023883a 	mov	r17,zero
   81490:	d9c14015 	stw	r7,1280(sp)
   81494:	d8000405 	stb	zero,16(sp)
   81498:	003fd306 	br	813e8 <___vfprintf_internal_r+0xa38>
   8149c:	d9014c17 	ldw	r4,1328(sp)
   814a0:	21000414 	ori	r4,r4,16
   814a4:	d9014c15 	stw	r4,1328(sp)
   814a8:	d9414c17 	ldw	r5,1328(sp)
   814ac:	2880080c 	andi	r2,r5,32
   814b0:	1001081e 	bne	r2,zero,818d4 <___vfprintf_internal_r+0xf24>
   814b4:	d8c14c17 	ldw	r3,1328(sp)
   814b8:	1880040c 	andi	r2,r3,16
   814bc:	1002b61e 	bne	r2,zero,81f98 <___vfprintf_internal_r+0x15e8>
   814c0:	d9014c17 	ldw	r4,1328(sp)
   814c4:	2080100c 	andi	r2,r4,64
   814c8:	1002b326 	beq	r2,zero,81f98 <___vfprintf_internal_r+0x15e8>
   814cc:	3c00000b 	ldhu	r16,0(r7)
   814d0:	01000044 	movi	r4,1
   814d4:	39c00104 	addi	r7,r7,4
   814d8:	0023883a 	mov	r17,zero
   814dc:	d9c14015 	stw	r7,1280(sp)
   814e0:	d8000405 	stb	zero,16(sp)
   814e4:	003fc006 	br	813e8 <___vfprintf_internal_r+0xa38>
   814e8:	d9014f17 	ldw	r4,1340(sp)
   814ec:	b00b883a 	mov	r5,r22
   814f0:	d9800c04 	addi	r6,sp,48
   814f4:	00809580 	call	80958 <__sprint_r>
   814f8:	103ee51e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   814fc:	dc800e17 	ldw	r18,56(sp)
   81500:	d8c01904 	addi	r3,sp,100
   81504:	d9814c17 	ldw	r6,1328(sp)
   81508:	3080004c 	andi	r2,r6,1
   8150c:	1005003a 	cmpeq	r2,r2,zero
   81510:	103ea51e 	bne	r2,zero,80fa8 <___vfprintf_internal_r+0x5f8>
   81514:	00800044 	movi	r2,1
   81518:	dc400d17 	ldw	r17,52(sp)
   8151c:	18800115 	stw	r2,4(r3)
   81520:	d8814917 	ldw	r2,1316(sp)
   81524:	94800044 	addi	r18,r18,1
   81528:	8c400044 	addi	r17,r17,1
   8152c:	18800015 	stw	r2,0(r3)
   81530:	008001c4 	movi	r2,7
   81534:	dc800e15 	stw	r18,56(sp)
   81538:	dc400d15 	stw	r17,52(sp)
   8153c:	1442240e 	bge	r2,r17,81dd0 <___vfprintf_internal_r+0x1420>
   81540:	d9014f17 	ldw	r4,1340(sp)
   81544:	b00b883a 	mov	r5,r22
   81548:	d9800c04 	addi	r6,sp,48
   8154c:	00809580 	call	80958 <__sprint_r>
   81550:	103ecf1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81554:	dc800e17 	ldw	r18,56(sp)
   81558:	d8c01904 	addi	r3,sp,100
   8155c:	003e9206 	br	80fa8 <___vfprintf_internal_r+0x5f8>
   81560:	d9014f17 	ldw	r4,1340(sp)
   81564:	b00b883a 	mov	r5,r22
   81568:	d9800c04 	addi	r6,sp,48
   8156c:	00809580 	call	80958 <__sprint_r>
   81570:	103ec026 	beq	r2,zero,81074 <___vfprintf_internal_r+0x6c4>
   81574:	003ec606 	br	81090 <___vfprintf_internal_r+0x6e0>
   81578:	d9014f17 	ldw	r4,1340(sp)
   8157c:	b00b883a 	mov	r5,r22
   81580:	d9800c04 	addi	r6,sp,48
   81584:	d9c15115 	stw	r7,1348(sp)
   81588:	00809580 	call	80958 <__sprint_r>
   8158c:	d9c15117 	ldw	r7,1348(sp)
   81590:	103ebf1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81594:	dc800e17 	ldw	r18,56(sp)
   81598:	dc400d17 	ldw	r17,52(sp)
   8159c:	dd401904 	addi	r21,sp,100
   815a0:	003e7406 	br	80f74 <___vfprintf_internal_r+0x5c4>
   815a4:	d9014f17 	ldw	r4,1340(sp)
   815a8:	b00b883a 	mov	r5,r22
   815ac:	d9800c04 	addi	r6,sp,48
   815b0:	d9c15115 	stw	r7,1348(sp)
   815b4:	00809580 	call	80958 <__sprint_r>
   815b8:	d9c15117 	ldw	r7,1348(sp)
   815bc:	103eb41e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   815c0:	dd401904 	addi	r21,sp,100
   815c4:	003d6d06 	br	80b7c <___vfprintf_internal_r+0x1cc>
   815c8:	d9014f17 	ldw	r4,1340(sp)
   815cc:	b00b883a 	mov	r5,r22
   815d0:	d9800c04 	addi	r6,sp,48
   815d4:	d9c15115 	stw	r7,1348(sp)
   815d8:	00809580 	call	80958 <__sprint_r>
   815dc:	d9c15117 	ldw	r7,1348(sp)
   815e0:	103eab1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   815e4:	dc800e17 	ldw	r18,56(sp)
   815e8:	dc400d17 	ldw	r17,52(sp)
   815ec:	dd401904 	addi	r21,sp,100
   815f0:	003e3406 	br	80ec4 <___vfprintf_internal_r+0x514>
   815f4:	d9014f17 	ldw	r4,1340(sp)
   815f8:	b00b883a 	mov	r5,r22
   815fc:	d9800c04 	addi	r6,sp,48
   81600:	d9c15115 	stw	r7,1348(sp)
   81604:	00809580 	call	80958 <__sprint_r>
   81608:	d9c15117 	ldw	r7,1348(sp)
   8160c:	103ea01e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81610:	dc800e17 	ldw	r18,56(sp)
   81614:	dc400d17 	ldw	r17,52(sp)
   81618:	dd401904 	addi	r21,sp,100
   8161c:	003e1c06 	br	80e90 <___vfprintf_internal_r+0x4e0>
   81620:	d9014f17 	ldw	r4,1340(sp)
   81624:	b00b883a 	mov	r5,r22
   81628:	d9800c04 	addi	r6,sp,48
   8162c:	d9c15115 	stw	r7,1348(sp)
   81630:	00809580 	call	80958 <__sprint_r>
   81634:	d9c15117 	ldw	r7,1348(sp)
   81638:	103e951e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   8163c:	dc800e17 	ldw	r18,56(sp)
   81640:	dc400d17 	ldw	r17,52(sp)
   81644:	dd401904 	addi	r21,sp,100
   81648:	003e0406 	br	80e5c <___vfprintf_internal_r+0x4ac>
   8164c:	d9000517 	ldw	r4,20(sp)
   81650:	0102580e 	bge	zero,r4,81fb4 <___vfprintf_internal_r+0x1604>
   81654:	d9814717 	ldw	r6,1308(sp)
   81658:	21807a16 	blt	r4,r6,81844 <___vfprintf_internal_r+0xe94>
   8165c:	d8814117 	ldw	r2,1284(sp)
   81660:	91a5883a 	add	r18,r18,r6
   81664:	8c400044 	addi	r17,r17,1
   81668:	a8800015 	stw	r2,0(r21)
   8166c:	008001c4 	movi	r2,7
   81670:	a9800115 	stw	r6,4(r21)
   81674:	dc800e15 	stw	r18,56(sp)
   81678:	dc400d15 	stw	r17,52(sp)
   8167c:	1442fc16 	blt	r2,r17,82270 <___vfprintf_internal_r+0x18c0>
   81680:	a8c00204 	addi	r3,r21,8
   81684:	d9414717 	ldw	r5,1308(sp)
   81688:	2161c83a 	sub	r16,r4,r5
   8168c:	043f9d0e 	bge	zero,r16,81504 <___vfprintf_internal_r+0xb54>
   81690:	00800404 	movi	r2,16
   81694:	1402190e 	bge	r2,r16,81efc <___vfprintf_internal_r+0x154c>
   81698:	dc400d17 	ldw	r17,52(sp)
   8169c:	1027883a 	mov	r19,r2
   816a0:	07000274 	movhi	fp,9
   816a4:	e70de484 	addi	fp,fp,14226
   816a8:	050001c4 	movi	r20,7
   816ac:	00000306 	br	816bc <___vfprintf_internal_r+0xd0c>
   816b0:	18c00204 	addi	r3,r3,8
   816b4:	843ffc04 	addi	r16,r16,-16
   816b8:	9c02130e 	bge	r19,r16,81f08 <___vfprintf_internal_r+0x1558>
   816bc:	94800404 	addi	r18,r18,16
   816c0:	8c400044 	addi	r17,r17,1
   816c4:	1f000015 	stw	fp,0(r3)
   816c8:	1cc00115 	stw	r19,4(r3)
   816cc:	dc800e15 	stw	r18,56(sp)
   816d0:	dc400d15 	stw	r17,52(sp)
   816d4:	a47ff60e 	bge	r20,r17,816b0 <___vfprintf_internal_r+0xd00>
   816d8:	d9014f17 	ldw	r4,1340(sp)
   816dc:	b00b883a 	mov	r5,r22
   816e0:	d9800c04 	addi	r6,sp,48
   816e4:	00809580 	call	80958 <__sprint_r>
   816e8:	103e691e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   816ec:	dc800e17 	ldw	r18,56(sp)
   816f0:	dc400d17 	ldw	r17,52(sp)
   816f4:	d8c01904 	addi	r3,sp,100
   816f8:	003fee06 	br	816b4 <___vfprintf_internal_r+0xd04>
   816fc:	d8814717 	ldw	r2,1308(sp)
   81700:	143fffc4 	addi	r16,r2,-1
   81704:	043e970e 	bge	zero,r16,81164 <___vfprintf_internal_r+0x7b4>
   81708:	00800404 	movi	r2,16
   8170c:	1400180e 	bge	r2,r16,81770 <___vfprintf_internal_r+0xdc0>
   81710:	1029883a 	mov	r20,r2
   81714:	07000274 	movhi	fp,9
   81718:	e70de484 	addi	fp,fp,14226
   8171c:	054001c4 	movi	r21,7
   81720:	00000306 	br	81730 <___vfprintf_internal_r+0xd80>
   81724:	9cc00204 	addi	r19,r19,8
   81728:	843ffc04 	addi	r16,r16,-16
   8172c:	a400120e 	bge	r20,r16,81778 <___vfprintf_internal_r+0xdc8>
   81730:	94800404 	addi	r18,r18,16
   81734:	8c400044 	addi	r17,r17,1
   81738:	9f000015 	stw	fp,0(r19)
   8173c:	9d000115 	stw	r20,4(r19)
   81740:	dc800e15 	stw	r18,56(sp)
   81744:	dc400d15 	stw	r17,52(sp)
   81748:	ac7ff60e 	bge	r21,r17,81724 <___vfprintf_internal_r+0xd74>
   8174c:	d9014f17 	ldw	r4,1340(sp)
   81750:	b00b883a 	mov	r5,r22
   81754:	d9800c04 	addi	r6,sp,48
   81758:	00809580 	call	80958 <__sprint_r>
   8175c:	103e4c1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81760:	dc800e17 	ldw	r18,56(sp)
   81764:	dc400d17 	ldw	r17,52(sp)
   81768:	dcc01904 	addi	r19,sp,100
   8176c:	003fee06 	br	81728 <___vfprintf_internal_r+0xd78>
   81770:	07000274 	movhi	fp,9
   81774:	e70de484 	addi	fp,fp,14226
   81778:	9425883a 	add	r18,r18,r16
   8177c:	8c400044 	addi	r17,r17,1
   81780:	008001c4 	movi	r2,7
   81784:	9f000015 	stw	fp,0(r19)
   81788:	9c000115 	stw	r16,4(r19)
   8178c:	dc800e15 	stw	r18,56(sp)
   81790:	dc400d15 	stw	r17,52(sp)
   81794:	147e720e 	bge	r2,r17,81160 <___vfprintf_internal_r+0x7b0>
   81798:	d9014f17 	ldw	r4,1340(sp)
   8179c:	b00b883a 	mov	r5,r22
   817a0:	d9800c04 	addi	r6,sp,48
   817a4:	00809580 	call	80958 <__sprint_r>
   817a8:	103e391e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   817ac:	dc800e17 	ldw	r18,56(sp)
   817b0:	dc400d17 	ldw	r17,52(sp)
   817b4:	dcc01904 	addi	r19,sp,100
   817b8:	003e6a06 	br	81164 <___vfprintf_internal_r+0x7b4>
   817bc:	d9014f17 	ldw	r4,1340(sp)
   817c0:	b00b883a 	mov	r5,r22
   817c4:	d9800c04 	addi	r6,sp,48
   817c8:	d9c15115 	stw	r7,1348(sp)
   817cc:	00809580 	call	80958 <__sprint_r>
   817d0:	d9c15117 	ldw	r7,1348(sp)
   817d4:	103e2e1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   817d8:	dc800e17 	ldw	r18,56(sp)
   817dc:	dc400d17 	ldw	r17,52(sp)
   817e0:	dd401904 	addi	r21,sp,100
   817e4:	003dba06 	br	80ed0 <___vfprintf_internal_r+0x520>
   817e8:	d9014f17 	ldw	r4,1340(sp)
   817ec:	b00b883a 	mov	r5,r22
   817f0:	d9800c04 	addi	r6,sp,48
   817f4:	00809580 	call	80958 <__sprint_r>
   817f8:	103e251e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   817fc:	dc800e17 	ldw	r18,56(sp)
   81800:	dc400d17 	ldw	r17,52(sp)
   81804:	dcc01904 	addi	r19,sp,100
   81808:	003e4206 	br	81114 <___vfprintf_internal_r+0x764>
   8180c:	d9014f17 	ldw	r4,1340(sp)
   81810:	b00b883a 	mov	r5,r22
   81814:	d9800c04 	addi	r6,sp,48
   81818:	00809580 	call	80958 <__sprint_r>
   8181c:	103e1c1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81820:	dc800e17 	ldw	r18,56(sp)
   81824:	dc400d17 	ldw	r17,52(sp)
   81828:	d8c01904 	addi	r3,sp,100
   8182c:	003e2e06 	br	810e8 <___vfprintf_internal_r+0x738>
   81830:	d9414c17 	ldw	r5,1328(sp)
   81834:	2880004c 	andi	r2,r5,1
   81838:	1005003a 	cmpeq	r2,r2,zero
   8183c:	103dda1e 	bne	r2,zero,80fa8 <___vfprintf_internal_r+0x5f8>
   81840:	003e9f06 	br	812c0 <___vfprintf_internal_r+0x910>
   81844:	d8c14117 	ldw	r3,1284(sp)
   81848:	9125883a 	add	r18,r18,r4
   8184c:	8c400044 	addi	r17,r17,1
   81850:	008001c4 	movi	r2,7
   81854:	a8c00015 	stw	r3,0(r21)
   81858:	a9000115 	stw	r4,4(r21)
   8185c:	dc800e15 	stw	r18,56(sp)
   81860:	dc400d15 	stw	r17,52(sp)
   81864:	14426c16 	blt	r2,r17,82218 <___vfprintf_internal_r+0x1868>
   81868:	a8c00204 	addi	r3,r21,8
   8186c:	d9414917 	ldw	r5,1316(sp)
   81870:	00800044 	movi	r2,1
   81874:	94800044 	addi	r18,r18,1
   81878:	8c400044 	addi	r17,r17,1
   8187c:	18800115 	stw	r2,4(r3)
   81880:	008001c4 	movi	r2,7
   81884:	19400015 	stw	r5,0(r3)
   81888:	dc800e15 	stw	r18,56(sp)
   8188c:	dc400d15 	stw	r17,52(sp)
   81890:	2021883a 	mov	r16,r4
   81894:	14425616 	blt	r2,r17,821f0 <___vfprintf_internal_r+0x1840>
   81898:	19400204 	addi	r5,r3,8
   8189c:	d9814717 	ldw	r6,1308(sp)
   818a0:	8c400044 	addi	r17,r17,1
   818a4:	dc400d15 	stw	r17,52(sp)
   818a8:	3107c83a 	sub	r3,r6,r4
   818ac:	d9014117 	ldw	r4,1284(sp)
   818b0:	90e5883a 	add	r18,r18,r3
   818b4:	28c00115 	stw	r3,4(r5)
   818b8:	8105883a 	add	r2,r16,r4
   818bc:	28800015 	stw	r2,0(r5)
   818c0:	008001c4 	movi	r2,7
   818c4:	dc800e15 	stw	r18,56(sp)
   818c8:	147f1d16 	blt	r2,r17,81540 <___vfprintf_internal_r+0xb90>
   818cc:	28c00204 	addi	r3,r5,8
   818d0:	003db506 	br	80fa8 <___vfprintf_internal_r+0x5f8>
   818d4:	3c000017 	ldw	r16,0(r7)
   818d8:	3c400117 	ldw	r17,4(r7)
   818dc:	39800204 	addi	r6,r7,8
   818e0:	01000044 	movi	r4,1
   818e4:	d9814015 	stw	r6,1280(sp)
   818e8:	d8000405 	stb	zero,16(sp)
   818ec:	003ebe06 	br	813e8 <___vfprintf_internal_r+0xa38>
   818f0:	3c000017 	ldw	r16,0(r7)
   818f4:	3c400117 	ldw	r17,4(r7)
   818f8:	38800204 	addi	r2,r7,8
   818fc:	d8814015 	stw	r2,1280(sp)
   81900:	003eb706 	br	813e0 <___vfprintf_internal_r+0xa30>
   81904:	3c000017 	ldw	r16,0(r7)
   81908:	3c400117 	ldw	r17,4(r7)
   8190c:	39000204 	addi	r4,r7,8
   81910:	d9014015 	stw	r4,1280(sp)
   81914:	0009883a 	mov	r4,zero
   81918:	d8000405 	stb	zero,16(sp)
   8191c:	003eb206 	br	813e8 <___vfprintf_internal_r+0xa38>
   81920:	38c00017 	ldw	r3,0(r7)
   81924:	39c00104 	addi	r7,r7,4
   81928:	d8c14a15 	stw	r3,1320(sp)
   8192c:	1800d70e 	bge	r3,zero,81c8c <___vfprintf_internal_r+0x12dc>
   81930:	00c7c83a 	sub	r3,zero,r3
   81934:	d8c14a15 	stw	r3,1320(sp)
   81938:	d9014c17 	ldw	r4,1328(sp)
   8193c:	b8c00007 	ldb	r3,0(r23)
   81940:	21000114 	ori	r4,r4,4
   81944:	d9014c15 	stw	r4,1328(sp)
   81948:	003c9806 	br	80bac <___vfprintf_internal_r+0x1fc>
   8194c:	d9814c17 	ldw	r6,1328(sp)
   81950:	3080080c 	andi	r2,r6,32
   81954:	1001f626 	beq	r2,zero,82130 <___vfprintf_internal_r+0x1780>
   81958:	d9014b17 	ldw	r4,1324(sp)
   8195c:	38800017 	ldw	r2,0(r7)
   81960:	39c00104 	addi	r7,r7,4
   81964:	d9c14015 	stw	r7,1280(sp)
   81968:	2007d7fa 	srai	r3,r4,31
   8196c:	d9c14017 	ldw	r7,1280(sp)
   81970:	11000015 	stw	r4,0(r2)
   81974:	10c00115 	stw	r3,4(r2)
   81978:	003c6906 	br	80b20 <___vfprintf_internal_r+0x170>
   8197c:	b8c00007 	ldb	r3,0(r23)
   81980:	00801b04 	movi	r2,108
   81984:	18825526 	beq	r3,r2,822dc <___vfprintf_internal_r+0x192c>
   81988:	d9414c17 	ldw	r5,1328(sp)
   8198c:	29400414 	ori	r5,r5,16
   81990:	d9414c15 	stw	r5,1328(sp)
   81994:	003c8506 	br	80bac <___vfprintf_internal_r+0x1fc>
   81998:	d9814c17 	ldw	r6,1328(sp)
   8199c:	b8c00007 	ldb	r3,0(r23)
   819a0:	31800814 	ori	r6,r6,32
   819a4:	d9814c15 	stw	r6,1328(sp)
   819a8:	003c8006 	br	80bac <___vfprintf_internal_r+0x1fc>
   819ac:	d8814c17 	ldw	r2,1328(sp)
   819b0:	3c000017 	ldw	r16,0(r7)
   819b4:	00c01e04 	movi	r3,120
   819b8:	10800094 	ori	r2,r2,2
   819bc:	d8814c15 	stw	r2,1328(sp)
   819c0:	39c00104 	addi	r7,r7,4
   819c4:	01400274 	movhi	r5,9
   819c8:	294dcd04 	addi	r5,r5,14132
   819cc:	00800c04 	movi	r2,48
   819d0:	0023883a 	mov	r17,zero
   819d4:	01000084 	movi	r4,2
   819d8:	d9c14015 	stw	r7,1280(sp)
   819dc:	d8c14d15 	stw	r3,1332(sp)
   819e0:	d9414415 	stw	r5,1296(sp)
   819e4:	d8800445 	stb	r2,17(sp)
   819e8:	d8c00485 	stb	r3,18(sp)
   819ec:	d8000405 	stb	zero,16(sp)
   819f0:	003e7d06 	br	813e8 <___vfprintf_internal_r+0xa38>
   819f4:	d8814c17 	ldw	r2,1328(sp)
   819f8:	b8c00007 	ldb	r3,0(r23)
   819fc:	10801014 	ori	r2,r2,64
   81a00:	d8814c15 	stw	r2,1328(sp)
   81a04:	003c6906 	br	80bac <___vfprintf_internal_r+0x1fc>
   81a08:	d9414c17 	ldw	r5,1328(sp)
   81a0c:	2880020c 	andi	r2,r5,8
   81a10:	1001e526 	beq	r2,zero,821a8 <___vfprintf_internal_r+0x17f8>
   81a14:	39800017 	ldw	r6,0(r7)
   81a18:	38800204 	addi	r2,r7,8
   81a1c:	d8814015 	stw	r2,1280(sp)
   81a20:	d9814215 	stw	r6,1288(sp)
   81a24:	39c00117 	ldw	r7,4(r7)
   81a28:	d9c14315 	stw	r7,1292(sp)
   81a2c:	d9014217 	ldw	r4,1288(sp)
   81a30:	d9414317 	ldw	r5,1292(sp)
   81a34:	008932c0 	call	8932c <__isinfd>
   81a38:	10021d26 	beq	r2,zero,822b0 <___vfprintf_internal_r+0x1900>
   81a3c:	d9014217 	ldw	r4,1288(sp)
   81a40:	d9414317 	ldw	r5,1292(sp)
   81a44:	000d883a 	mov	r6,zero
   81a48:	000f883a 	mov	r7,zero
   81a4c:	008eab80 	call	8eab8 <__ltdf2>
   81a50:	1002d016 	blt	r2,zero,82594 <___vfprintf_internal_r+0x1be4>
   81a54:	d9414d17 	ldw	r5,1332(sp)
   81a58:	008011c4 	movi	r2,71
   81a5c:	11421016 	blt	r2,r5,822a0 <___vfprintf_internal_r+0x18f0>
   81a60:	01800274 	movhi	r6,9
   81a64:	318dd204 	addi	r6,r6,14152
   81a68:	d9814115 	stw	r6,1284(sp)
   81a6c:	d9014c17 	ldw	r4,1328(sp)
   81a70:	00c000c4 	movi	r3,3
   81a74:	00bfdfc4 	movi	r2,-129
   81a78:	2088703a 	and	r4,r4,r2
   81a7c:	180f883a 	mov	r7,r3
   81a80:	d8c14515 	stw	r3,1300(sp)
   81a84:	d9014c15 	stw	r4,1328(sp)
   81a88:	d8014615 	stw	zero,1304(sp)
   81a8c:	003e6a06 	br	81438 <___vfprintf_internal_r+0xa88>
   81a90:	38800017 	ldw	r2,0(r7)
   81a94:	00c00044 	movi	r3,1
   81a98:	39c00104 	addi	r7,r7,4
   81a9c:	d9c14015 	stw	r7,1280(sp)
   81aa0:	d9000f04 	addi	r4,sp,60
   81aa4:	180f883a 	mov	r7,r3
   81aa8:	d8c14515 	stw	r3,1300(sp)
   81aac:	d9014115 	stw	r4,1284(sp)
   81ab0:	d8800f05 	stb	r2,60(sp)
   81ab4:	d8000405 	stb	zero,16(sp)
   81ab8:	003cac06 	br	80d6c <___vfprintf_internal_r+0x3bc>
   81abc:	01400274 	movhi	r5,9
   81ac0:	294dd804 	addi	r5,r5,14176
   81ac4:	d9414415 	stw	r5,1296(sp)
   81ac8:	d9814c17 	ldw	r6,1328(sp)
   81acc:	3080080c 	andi	r2,r6,32
   81ad0:	1000ff26 	beq	r2,zero,81ed0 <___vfprintf_internal_r+0x1520>
   81ad4:	3c000017 	ldw	r16,0(r7)
   81ad8:	3c400117 	ldw	r17,4(r7)
   81adc:	38800204 	addi	r2,r7,8
   81ae0:	d8814015 	stw	r2,1280(sp)
   81ae4:	d9414c17 	ldw	r5,1328(sp)
   81ae8:	2880004c 	andi	r2,r5,1
   81aec:	1005003a 	cmpeq	r2,r2,zero
   81af0:	1000b91e 	bne	r2,zero,81dd8 <___vfprintf_internal_r+0x1428>
   81af4:	8444b03a 	or	r2,r16,r17
   81af8:	1000b726 	beq	r2,zero,81dd8 <___vfprintf_internal_r+0x1428>
   81afc:	d9814d17 	ldw	r6,1332(sp)
   81b00:	29400094 	ori	r5,r5,2
   81b04:	00800c04 	movi	r2,48
   81b08:	01000084 	movi	r4,2
   81b0c:	d9414c15 	stw	r5,1328(sp)
   81b10:	d8800445 	stb	r2,17(sp)
   81b14:	d9800485 	stb	r6,18(sp)
   81b18:	d8000405 	stb	zero,16(sp)
   81b1c:	003e3206 	br	813e8 <___vfprintf_internal_r+0xa38>
   81b20:	01800274 	movhi	r6,9
   81b24:	318dcd04 	addi	r6,r6,14132
   81b28:	d9814415 	stw	r6,1296(sp)
   81b2c:	003fe606 	br	81ac8 <___vfprintf_internal_r+0x1118>
   81b30:	00800ac4 	movi	r2,43
   81b34:	d8800405 	stb	r2,16(sp)
   81b38:	b8c00007 	ldb	r3,0(r23)
   81b3c:	003c1b06 	br	80bac <___vfprintf_internal_r+0x1fc>
   81b40:	d8814c17 	ldw	r2,1328(sp)
   81b44:	b8c00007 	ldb	r3,0(r23)
   81b48:	10800054 	ori	r2,r2,1
   81b4c:	d8814c15 	stw	r2,1328(sp)
   81b50:	003c1606 	br	80bac <___vfprintf_internal_r+0x1fc>
   81b54:	d8800407 	ldb	r2,16(sp)
   81b58:	10004c1e 	bne	r2,zero,81c8c <___vfprintf_internal_r+0x12dc>
   81b5c:	00800804 	movi	r2,32
   81b60:	d8800405 	stb	r2,16(sp)
   81b64:	b8c00007 	ldb	r3,0(r23)
   81b68:	003c1006 	br	80bac <___vfprintf_internal_r+0x1fc>
   81b6c:	d9814c17 	ldw	r6,1328(sp)
   81b70:	b8c00007 	ldb	r3,0(r23)
   81b74:	31800214 	ori	r6,r6,8
   81b78:	d9814c15 	stw	r6,1328(sp)
   81b7c:	003c0b06 	br	80bac <___vfprintf_internal_r+0x1fc>
   81b80:	0009883a 	mov	r4,zero
   81b84:	04000244 	movi	r16,9
   81b88:	01400284 	movi	r5,10
   81b8c:	d9c15115 	stw	r7,1348(sp)
   81b90:	00806240 	call	80624 <__mulsi3>
   81b94:	b9000007 	ldb	r4,0(r23)
   81b98:	d8c14d17 	ldw	r3,1332(sp)
   81b9c:	bdc00044 	addi	r23,r23,1
   81ba0:	d9014d15 	stw	r4,1332(sp)
   81ba4:	d9414d17 	ldw	r5,1332(sp)
   81ba8:	1885883a 	add	r2,r3,r2
   81bac:	113ff404 	addi	r4,r2,-48
   81bb0:	28bff404 	addi	r2,r5,-48
   81bb4:	d9c15117 	ldw	r7,1348(sp)
   81bb8:	80bff32e 	bgeu	r16,r2,81b88 <___vfprintf_internal_r+0x11d8>
   81bbc:	d9014a15 	stw	r4,1320(sp)
   81bc0:	003bfc06 	br	80bb4 <___vfprintf_internal_r+0x204>
   81bc4:	d8814c17 	ldw	r2,1328(sp)
   81bc8:	b8c00007 	ldb	r3,0(r23)
   81bcc:	10802014 	ori	r2,r2,128
   81bd0:	d8814c15 	stw	r2,1328(sp)
   81bd4:	003bf506 	br	80bac <___vfprintf_internal_r+0x1fc>
   81bd8:	b8c00007 	ldb	r3,0(r23)
   81bdc:	00800a84 	movi	r2,42
   81be0:	bdc00044 	addi	r23,r23,1
   81be4:	18831826 	beq	r3,r2,82848 <___vfprintf_internal_r+0x1e98>
   81be8:	d8c14d15 	stw	r3,1332(sp)
   81bec:	18bff404 	addi	r2,r3,-48
   81bf0:	00c00244 	movi	r3,9
   81bf4:	18827b36 	bltu	r3,r2,825e4 <___vfprintf_internal_r+0x1c34>
   81bf8:	1821883a 	mov	r16,r3
   81bfc:	0009883a 	mov	r4,zero
   81c00:	01400284 	movi	r5,10
   81c04:	d9c15115 	stw	r7,1348(sp)
   81c08:	00806240 	call	80624 <__mulsi3>
   81c0c:	d9414d17 	ldw	r5,1332(sp)
   81c10:	b9800007 	ldb	r6,0(r23)
   81c14:	d9c15117 	ldw	r7,1348(sp)
   81c18:	1145883a 	add	r2,r2,r5
   81c1c:	113ff404 	addi	r4,r2,-48
   81c20:	30bff404 	addi	r2,r6,-48
   81c24:	d9814d15 	stw	r6,1332(sp)
   81c28:	bdc00044 	addi	r23,r23,1
   81c2c:	80bff42e 	bgeu	r16,r2,81c00 <___vfprintf_internal_r+0x1250>
   81c30:	2027883a 	mov	r19,r4
   81c34:	203bdf0e 	bge	r4,zero,80bb4 <___vfprintf_internal_r+0x204>
   81c38:	04ffffc4 	movi	r19,-1
   81c3c:	003bdd06 	br	80bb4 <___vfprintf_internal_r+0x204>
   81c40:	d8000405 	stb	zero,16(sp)
   81c44:	39800017 	ldw	r6,0(r7)
   81c48:	39c00104 	addi	r7,r7,4
   81c4c:	d9c14015 	stw	r7,1280(sp)
   81c50:	d9814115 	stw	r6,1284(sp)
   81c54:	3001c926 	beq	r6,zero,8237c <___vfprintf_internal_r+0x19cc>
   81c58:	98000e16 	blt	r19,zero,81c94 <___vfprintf_internal_r+0x12e4>
   81c5c:	d9014117 	ldw	r4,1284(sp)
   81c60:	000b883a 	mov	r5,zero
   81c64:	980d883a 	mov	r6,r19
   81c68:	00875e40 	call	875e4 <memchr>
   81c6c:	10025926 	beq	r2,zero,825d4 <___vfprintf_internal_r+0x1c24>
   81c70:	d8c14117 	ldw	r3,1284(sp)
   81c74:	10cfc83a 	sub	r7,r2,r3
   81c78:	99c19e16 	blt	r19,r7,822f4 <___vfprintf_internal_r+0x1944>
   81c7c:	d9c14515 	stw	r7,1300(sp)
   81c80:	38000916 	blt	r7,zero,81ca8 <___vfprintf_internal_r+0x12f8>
   81c84:	d8014615 	stw	zero,1304(sp)
   81c88:	003deb06 	br	81438 <___vfprintf_internal_r+0xa88>
   81c8c:	b8c00007 	ldb	r3,0(r23)
   81c90:	003bc606 	br	80bac <___vfprintf_internal_r+0x1fc>
   81c94:	d9014117 	ldw	r4,1284(sp)
   81c98:	00808e40 	call	808e4 <strlen>
   81c9c:	d8814515 	stw	r2,1300(sp)
   81ca0:	100f883a 	mov	r7,r2
   81ca4:	103ff70e 	bge	r2,zero,81c84 <___vfprintf_internal_r+0x12d4>
   81ca8:	d8014515 	stw	zero,1300(sp)
   81cac:	d8014615 	stw	zero,1304(sp)
   81cb0:	003de106 	br	81438 <___vfprintf_internal_r+0xa88>
   81cb4:	20c03fcc 	andi	r3,r4,255
   81cb8:	00800044 	movi	r2,1
   81cbc:	18802d26 	beq	r3,r2,81d74 <___vfprintf_internal_r+0x13c4>
   81cc0:	18800e36 	bltu	r3,r2,81cfc <___vfprintf_internal_r+0x134c>
   81cc4:	00800084 	movi	r2,2
   81cc8:	1880fa26 	beq	r3,r2,820b4 <___vfprintf_internal_r+0x1704>
   81ccc:	01000274 	movhi	r4,9
   81cd0:	210ddd04 	addi	r4,r4,14196
   81cd4:	00808e40 	call	808e4 <strlen>
   81cd8:	100f883a 	mov	r7,r2
   81cdc:	dcc14515 	stw	r19,1300(sp)
   81ce0:	9880010e 	bge	r19,r2,81ce8 <___vfprintf_internal_r+0x1338>
   81ce4:	d8814515 	stw	r2,1300(sp)
   81ce8:	00800274 	movhi	r2,9
   81cec:	108ddd04 	addi	r2,r2,14196
   81cf0:	dcc14615 	stw	r19,1304(sp)
   81cf4:	d8814115 	stw	r2,1284(sp)
   81cf8:	003dcf06 	br	81438 <___vfprintf_internal_r+0xa88>
   81cfc:	d9401904 	addi	r5,sp,100
   81d00:	dd000f04 	addi	r20,sp,60
   81d04:	d9414115 	stw	r5,1284(sp)
   81d08:	880a977a 	slli	r5,r17,29
   81d0c:	d9814117 	ldw	r6,1284(sp)
   81d10:	8004d0fa 	srli	r2,r16,3
   81d14:	8806d0fa 	srli	r3,r17,3
   81d18:	810001cc 	andi	r4,r16,7
   81d1c:	2884b03a 	or	r2,r5,r2
   81d20:	31bfffc4 	addi	r6,r6,-1
   81d24:	21000c04 	addi	r4,r4,48
   81d28:	d9814115 	stw	r6,1284(sp)
   81d2c:	10cab03a 	or	r5,r2,r3
   81d30:	31000005 	stb	r4,0(r6)
   81d34:	1021883a 	mov	r16,r2
   81d38:	1823883a 	mov	r17,r3
   81d3c:	283ff21e 	bne	r5,zero,81d08 <___vfprintf_internal_r+0x1358>
   81d40:	d8c14c17 	ldw	r3,1328(sp)
   81d44:	1880004c 	andi	r2,r3,1
   81d48:	1005003a 	cmpeq	r2,r2,zero
   81d4c:	103db31e 	bne	r2,zero,8141c <___vfprintf_internal_r+0xa6c>
   81d50:	20803fcc 	andi	r2,r4,255
   81d54:	1080201c 	xori	r2,r2,128
   81d58:	10bfe004 	addi	r2,r2,-128
   81d5c:	00c00c04 	movi	r3,48
   81d60:	10fdae26 	beq	r2,r3,8141c <___vfprintf_internal_r+0xa6c>
   81d64:	31bfffc4 	addi	r6,r6,-1
   81d68:	d9814115 	stw	r6,1284(sp)
   81d6c:	30c00005 	stb	r3,0(r6)
   81d70:	003daa06 	br	8141c <___vfprintf_internal_r+0xa6c>
   81d74:	88800068 	cmpgeui	r2,r17,1
   81d78:	10002c1e 	bne	r2,zero,81e2c <___vfprintf_internal_r+0x147c>
   81d7c:	8800021e 	bne	r17,zero,81d88 <___vfprintf_internal_r+0x13d8>
   81d80:	00800244 	movi	r2,9
   81d84:	14002936 	bltu	r2,r16,81e2c <___vfprintf_internal_r+0x147c>
   81d88:	d90018c4 	addi	r4,sp,99
   81d8c:	dd000f04 	addi	r20,sp,60
   81d90:	d9014115 	stw	r4,1284(sp)
   81d94:	d9014117 	ldw	r4,1284(sp)
   81d98:	80800c04 	addi	r2,r16,48
   81d9c:	20800005 	stb	r2,0(r4)
   81da0:	003d9e06 	br	8141c <___vfprintf_internal_r+0xa6c>
   81da4:	dc400d17 	ldw	r17,52(sp)
   81da8:	07000274 	movhi	fp,9
   81dac:	e70de484 	addi	fp,fp,14226
   81db0:	9425883a 	add	r18,r18,r16
   81db4:	8c400044 	addi	r17,r17,1
   81db8:	008001c4 	movi	r2,7
   81dbc:	1f000015 	stw	fp,0(r3)
   81dc0:	1c000115 	stw	r16,4(r3)
   81dc4:	dc800e15 	stw	r18,56(sp)
   81dc8:	dc400d15 	stw	r17,52(sp)
   81dcc:	147ddc16 	blt	r2,r17,81540 <___vfprintf_internal_r+0xb90>
   81dd0:	18c00204 	addi	r3,r3,8
   81dd4:	003c7406 	br	80fa8 <___vfprintf_internal_r+0x5f8>
   81dd8:	01000084 	movi	r4,2
   81ddc:	d8000405 	stb	zero,16(sp)
   81de0:	003d8106 	br	813e8 <___vfprintf_internal_r+0xa38>
   81de4:	d9814c17 	ldw	r6,1328(sp)
   81de8:	30c4703a 	and	r2,r6,r3
   81dec:	1005003a 	cmpeq	r2,r2,zero
   81df0:	103cb326 	beq	r2,zero,810c0 <___vfprintf_internal_r+0x710>
   81df4:	d9014117 	ldw	r4,1284(sp)
   81df8:	94800044 	addi	r18,r18,1
   81dfc:	8c400044 	addi	r17,r17,1
   81e00:	008001c4 	movi	r2,7
   81e04:	a9000015 	stw	r4,0(r21)
   81e08:	a8c00115 	stw	r3,4(r21)
   81e0c:	dc800e15 	stw	r18,56(sp)
   81e10:	dc400d15 	stw	r17,52(sp)
   81e14:	147e6016 	blt	r2,r17,81798 <___vfprintf_internal_r+0xde8>
   81e18:	acc00204 	addi	r19,r21,8
   81e1c:	003cd106 	br	81164 <___vfprintf_internal_r+0x7b4>
   81e20:	07000274 	movhi	fp,9
   81e24:	e70de484 	addi	fp,fp,14226
   81e28:	003c4906 	br	80f50 <___vfprintf_internal_r+0x5a0>
   81e2c:	dd000f04 	addi	r20,sp,60
   81e30:	dc801904 	addi	r18,sp,100
   81e34:	8009883a 	mov	r4,r16
   81e38:	880b883a 	mov	r5,r17
   81e3c:	01800284 	movi	r6,10
   81e40:	000f883a 	mov	r7,zero
   81e44:	008d5b00 	call	8d5b0 <__umoddi3>
   81e48:	12000c04 	addi	r8,r2,48
   81e4c:	94bfffc4 	addi	r18,r18,-1
   81e50:	8009883a 	mov	r4,r16
   81e54:	880b883a 	mov	r5,r17
   81e58:	01800284 	movi	r6,10
   81e5c:	000f883a 	mov	r7,zero
   81e60:	92000005 	stb	r8,0(r18)
   81e64:	008cf440 	call	8cf44 <__udivdi3>
   81e68:	1009883a 	mov	r4,r2
   81e6c:	1021883a 	mov	r16,r2
   81e70:	18800068 	cmpgeui	r2,r3,1
   81e74:	1823883a 	mov	r17,r3
   81e78:	103fee1e 	bne	r2,zero,81e34 <___vfprintf_internal_r+0x1484>
   81e7c:	1800021e 	bne	r3,zero,81e88 <___vfprintf_internal_r+0x14d8>
   81e80:	00800244 	movi	r2,9
   81e84:	113feb36 	bltu	r2,r4,81e34 <___vfprintf_internal_r+0x1484>
   81e88:	94bfffc4 	addi	r18,r18,-1
   81e8c:	dc814115 	stw	r18,1284(sp)
   81e90:	003fc006 	br	81d94 <___vfprintf_internal_r+0x13e4>
   81e94:	d9014c17 	ldw	r4,1328(sp)
   81e98:	2080004c 	andi	r2,r4,1
   81e9c:	10009a1e 	bne	r2,zero,82108 <___vfprintf_internal_r+0x1758>
   81ea0:	d9401904 	addi	r5,sp,100
   81ea4:	dd000f04 	addi	r20,sp,60
   81ea8:	d9414115 	stw	r5,1284(sp)
   81eac:	003d5b06 	br	8141c <___vfprintf_internal_r+0xa6c>
   81eb0:	d9014f17 	ldw	r4,1340(sp)
   81eb4:	b00b883a 	mov	r5,r22
   81eb8:	d9800c04 	addi	r6,sp,48
   81ebc:	00809580 	call	80958 <__sprint_r>
   81ec0:	103c731e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81ec4:	dc800e17 	ldw	r18,56(sp)
   81ec8:	d8c01904 	addi	r3,sp,100
   81ecc:	003cf906 	br	812b4 <___vfprintf_internal_r+0x904>
   81ed0:	d8c14c17 	ldw	r3,1328(sp)
   81ed4:	1880040c 	andi	r2,r3,16
   81ed8:	1000711e 	bne	r2,zero,820a0 <___vfprintf_internal_r+0x16f0>
   81edc:	d9014c17 	ldw	r4,1328(sp)
   81ee0:	2080100c 	andi	r2,r4,64
   81ee4:	10006e26 	beq	r2,zero,820a0 <___vfprintf_internal_r+0x16f0>
   81ee8:	3c00000b 	ldhu	r16,0(r7)
   81eec:	0023883a 	mov	r17,zero
   81ef0:	39c00104 	addi	r7,r7,4
   81ef4:	d9c14015 	stw	r7,1280(sp)
   81ef8:	003efa06 	br	81ae4 <___vfprintf_internal_r+0x1134>
   81efc:	dc400d17 	ldw	r17,52(sp)
   81f00:	07000274 	movhi	fp,9
   81f04:	e70de484 	addi	fp,fp,14226
   81f08:	9425883a 	add	r18,r18,r16
   81f0c:	8c400044 	addi	r17,r17,1
   81f10:	008001c4 	movi	r2,7
   81f14:	1f000015 	stw	fp,0(r3)
   81f18:	1c000115 	stw	r16,4(r3)
   81f1c:	dc800e15 	stw	r18,56(sp)
   81f20:	dc400d15 	stw	r17,52(sp)
   81f24:	147d7016 	blt	r2,r17,814e8 <___vfprintf_internal_r+0xb38>
   81f28:	18c00204 	addi	r3,r3,8
   81f2c:	003d7506 	br	81504 <___vfprintf_internal_r+0xb54>
   81f30:	dc800e17 	ldw	r18,56(sp)
   81f34:	dc400d17 	ldw	r17,52(sp)
   81f38:	07000274 	movhi	fp,9
   81f3c:	e70de884 	addi	fp,fp,14242
   81f40:	003bba06 	br	80e2c <___vfprintf_internal_r+0x47c>
   81f44:	d9014f17 	ldw	r4,1340(sp)
   81f48:	b00b883a 	mov	r5,r22
   81f4c:	d9800c04 	addi	r6,sp,48
   81f50:	00809580 	call	80958 <__sprint_r>
   81f54:	103c4e1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   81f58:	dc800e17 	ldw	r18,56(sp)
   81f5c:	d8c01904 	addi	r3,sp,100
   81f60:	003ce306 	br	812f0 <___vfprintf_internal_r+0x940>
   81f64:	3c000017 	ldw	r16,0(r7)
   81f68:	0009883a 	mov	r4,zero
   81f6c:	39c00104 	addi	r7,r7,4
   81f70:	0023883a 	mov	r17,zero
   81f74:	d9c14015 	stw	r7,1280(sp)
   81f78:	d8000405 	stb	zero,16(sp)
   81f7c:	003d1a06 	br	813e8 <___vfprintf_internal_r+0xa38>
   81f80:	38800017 	ldw	r2,0(r7)
   81f84:	39c00104 	addi	r7,r7,4
   81f88:	d9c14015 	stw	r7,1280(sp)
   81f8c:	1023d7fa 	srai	r17,r2,31
   81f90:	1021883a 	mov	r16,r2
   81f94:	003d1206 	br	813e0 <___vfprintf_internal_r+0xa30>
   81f98:	3c000017 	ldw	r16,0(r7)
   81f9c:	01000044 	movi	r4,1
   81fa0:	39c00104 	addi	r7,r7,4
   81fa4:	0023883a 	mov	r17,zero
   81fa8:	d9c14015 	stw	r7,1280(sp)
   81fac:	d8000405 	stb	zero,16(sp)
   81fb0:	003d0d06 	br	813e8 <___vfprintf_internal_r+0xa38>
   81fb4:	00800274 	movhi	r2,9
   81fb8:	108de404 	addi	r2,r2,14224
   81fbc:	94800044 	addi	r18,r18,1
   81fc0:	8c400044 	addi	r17,r17,1
   81fc4:	a8800015 	stw	r2,0(r21)
   81fc8:	00c00044 	movi	r3,1
   81fcc:	008001c4 	movi	r2,7
   81fd0:	a8c00115 	stw	r3,4(r21)
   81fd4:	dc800e15 	stw	r18,56(sp)
   81fd8:	dc400d15 	stw	r17,52(sp)
   81fdc:	1440ca16 	blt	r2,r17,82308 <___vfprintf_internal_r+0x1958>
   81fe0:	a8c00204 	addi	r3,r21,8
   81fe4:	2000061e 	bne	r4,zero,82000 <___vfprintf_internal_r+0x1650>
   81fe8:	d9414717 	ldw	r5,1308(sp)
   81fec:	2800041e 	bne	r5,zero,82000 <___vfprintf_internal_r+0x1650>
   81ff0:	d9814c17 	ldw	r6,1328(sp)
   81ff4:	3080004c 	andi	r2,r6,1
   81ff8:	1005003a 	cmpeq	r2,r2,zero
   81ffc:	103bea1e 	bne	r2,zero,80fa8 <___vfprintf_internal_r+0x5f8>
   82000:	00800044 	movi	r2,1
   82004:	dc400d17 	ldw	r17,52(sp)
   82008:	18800115 	stw	r2,4(r3)
   8200c:	d8814917 	ldw	r2,1316(sp)
   82010:	94800044 	addi	r18,r18,1
   82014:	8c400044 	addi	r17,r17,1
   82018:	18800015 	stw	r2,0(r3)
   8201c:	008001c4 	movi	r2,7
   82020:	dc800e15 	stw	r18,56(sp)
   82024:	dc400d15 	stw	r17,52(sp)
   82028:	1440ca16 	blt	r2,r17,82354 <___vfprintf_internal_r+0x19a4>
   8202c:	18c00204 	addi	r3,r3,8
   82030:	0121c83a 	sub	r16,zero,r4
   82034:	0400500e 	bge	zero,r16,82178 <___vfprintf_internal_r+0x17c8>
   82038:	00800404 	movi	r2,16
   8203c:	1400800e 	bge	r2,r16,82240 <___vfprintf_internal_r+0x1890>
   82040:	1027883a 	mov	r19,r2
   82044:	07000274 	movhi	fp,9
   82048:	e70de484 	addi	fp,fp,14226
   8204c:	050001c4 	movi	r20,7
   82050:	00000306 	br	82060 <___vfprintf_internal_r+0x16b0>
   82054:	18c00204 	addi	r3,r3,8
   82058:	843ffc04 	addi	r16,r16,-16
   8205c:	9c007a0e 	bge	r19,r16,82248 <___vfprintf_internal_r+0x1898>
   82060:	94800404 	addi	r18,r18,16
   82064:	8c400044 	addi	r17,r17,1
   82068:	1f000015 	stw	fp,0(r3)
   8206c:	1cc00115 	stw	r19,4(r3)
   82070:	dc800e15 	stw	r18,56(sp)
   82074:	dc400d15 	stw	r17,52(sp)
   82078:	a47ff60e 	bge	r20,r17,82054 <___vfprintf_internal_r+0x16a4>
   8207c:	d9014f17 	ldw	r4,1340(sp)
   82080:	b00b883a 	mov	r5,r22
   82084:	d9800c04 	addi	r6,sp,48
   82088:	00809580 	call	80958 <__sprint_r>
   8208c:	103c001e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   82090:	dc800e17 	ldw	r18,56(sp)
   82094:	dc400d17 	ldw	r17,52(sp)
   82098:	d8c01904 	addi	r3,sp,100
   8209c:	003fee06 	br	82058 <___vfprintf_internal_r+0x16a8>
   820a0:	3c000017 	ldw	r16,0(r7)
   820a4:	0023883a 	mov	r17,zero
   820a8:	39c00104 	addi	r7,r7,4
   820ac:	d9c14015 	stw	r7,1280(sp)
   820b0:	003e8c06 	br	81ae4 <___vfprintf_internal_r+0x1134>
   820b4:	d9401904 	addi	r5,sp,100
   820b8:	dd000f04 	addi	r20,sp,60
   820bc:	d9414115 	stw	r5,1284(sp)
   820c0:	d9814417 	ldw	r6,1296(sp)
   820c4:	880a973a 	slli	r5,r17,28
   820c8:	8004d13a 	srli	r2,r16,4
   820cc:	810003cc 	andi	r4,r16,15
   820d0:	3109883a 	add	r4,r6,r4
   820d4:	2884b03a 	or	r2,r5,r2
   820d8:	21400003 	ldbu	r5,0(r4)
   820dc:	d9014117 	ldw	r4,1284(sp)
   820e0:	8806d13a 	srli	r3,r17,4
   820e4:	1021883a 	mov	r16,r2
   820e8:	213fffc4 	addi	r4,r4,-1
   820ec:	d9014115 	stw	r4,1284(sp)
   820f0:	d9814117 	ldw	r6,1284(sp)
   820f4:	10c8b03a 	or	r4,r2,r3
   820f8:	1823883a 	mov	r17,r3
   820fc:	31400005 	stb	r5,0(r6)
   82100:	203fef1e 	bne	r4,zero,820c0 <___vfprintf_internal_r+0x1710>
   82104:	003cc506 	br	8141c <___vfprintf_internal_r+0xa6c>
   82108:	00800c04 	movi	r2,48
   8210c:	d98018c4 	addi	r6,sp,99
   82110:	dd000f04 	addi	r20,sp,60
   82114:	d88018c5 	stb	r2,99(sp)
   82118:	d9814115 	stw	r6,1284(sp)
   8211c:	003cbf06 	br	8141c <___vfprintf_internal_r+0xa6c>
   82120:	dc400d17 	ldw	r17,52(sp)
   82124:	07000274 	movhi	fp,9
   82128:	e70de884 	addi	fp,fp,14242
   8212c:	003bc106 	br	81034 <___vfprintf_internal_r+0x684>
   82130:	d9414c17 	ldw	r5,1328(sp)
   82134:	2880040c 	andi	r2,r5,16
   82138:	10007c26 	beq	r2,zero,8232c <___vfprintf_internal_r+0x197c>
   8213c:	38800017 	ldw	r2,0(r7)
   82140:	39c00104 	addi	r7,r7,4
   82144:	d9c14015 	stw	r7,1280(sp)
   82148:	d9814b17 	ldw	r6,1324(sp)
   8214c:	d9c14017 	ldw	r7,1280(sp)
   82150:	11800015 	stw	r6,0(r2)
   82154:	003a7206 	br	80b20 <___vfprintf_internal_r+0x170>
   82158:	d9014f17 	ldw	r4,1340(sp)
   8215c:	b00b883a 	mov	r5,r22
   82160:	d9800c04 	addi	r6,sp,48
   82164:	00809580 	call	80958 <__sprint_r>
   82168:	103bc91e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   8216c:	dc800e17 	ldw	r18,56(sp)
   82170:	dc400d17 	ldw	r17,52(sp)
   82174:	d8c01904 	addi	r3,sp,100
   82178:	d9014717 	ldw	r4,1308(sp)
   8217c:	d9414117 	ldw	r5,1284(sp)
   82180:	8c400044 	addi	r17,r17,1
   82184:	9125883a 	add	r18,r18,r4
   82188:	008001c4 	movi	r2,7
   8218c:	19400015 	stw	r5,0(r3)
   82190:	19000115 	stw	r4,4(r3)
   82194:	dc800e15 	stw	r18,56(sp)
   82198:	dc400d15 	stw	r17,52(sp)
   8219c:	147ce816 	blt	r2,r17,81540 <___vfprintf_internal_r+0xb90>
   821a0:	18c00204 	addi	r3,r3,8
   821a4:	003b8006 	br	80fa8 <___vfprintf_internal_r+0x5f8>
   821a8:	38c00017 	ldw	r3,0(r7)
   821ac:	39000204 	addi	r4,r7,8
   821b0:	d9014015 	stw	r4,1280(sp)
   821b4:	d8c14215 	stw	r3,1288(sp)
   821b8:	39c00117 	ldw	r7,4(r7)
   821bc:	d9c14315 	stw	r7,1292(sp)
   821c0:	003e1a06 	br	81a2c <___vfprintf_internal_r+0x107c>
   821c4:	0005883a 	mov	r2,zero
   821c8:	1409c83a 	sub	r4,r2,r16
   821cc:	1105803a 	cmpltu	r2,r2,r4
   821d0:	044bc83a 	sub	r5,zero,r17
   821d4:	2885c83a 	sub	r2,r5,r2
   821d8:	2021883a 	mov	r16,r4
   821dc:	1023883a 	mov	r17,r2
   821e0:	01000044 	movi	r4,1
   821e4:	00800b44 	movi	r2,45
   821e8:	d8800405 	stb	r2,16(sp)
   821ec:	003c7e06 	br	813e8 <___vfprintf_internal_r+0xa38>
   821f0:	d9014f17 	ldw	r4,1340(sp)
   821f4:	b00b883a 	mov	r5,r22
   821f8:	d9800c04 	addi	r6,sp,48
   821fc:	00809580 	call	80958 <__sprint_r>
   82200:	103ba31e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   82204:	dc800e17 	ldw	r18,56(sp)
   82208:	dc400d17 	ldw	r17,52(sp)
   8220c:	d9000517 	ldw	r4,20(sp)
   82210:	d9401904 	addi	r5,sp,100
   82214:	003da106 	br	8189c <___vfprintf_internal_r+0xeec>
   82218:	d9014f17 	ldw	r4,1340(sp)
   8221c:	b00b883a 	mov	r5,r22
   82220:	d9800c04 	addi	r6,sp,48
   82224:	00809580 	call	80958 <__sprint_r>
   82228:	103b991e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   8222c:	dc800e17 	ldw	r18,56(sp)
   82230:	dc400d17 	ldw	r17,52(sp)
   82234:	d9000517 	ldw	r4,20(sp)
   82238:	d8c01904 	addi	r3,sp,100
   8223c:	003d8b06 	br	8186c <___vfprintf_internal_r+0xebc>
   82240:	07000274 	movhi	fp,9
   82244:	e70de484 	addi	fp,fp,14226
   82248:	9425883a 	add	r18,r18,r16
   8224c:	8c400044 	addi	r17,r17,1
   82250:	008001c4 	movi	r2,7
   82254:	1f000015 	stw	fp,0(r3)
   82258:	1c000115 	stw	r16,4(r3)
   8225c:	dc800e15 	stw	r18,56(sp)
   82260:	dc400d15 	stw	r17,52(sp)
   82264:	147fbc16 	blt	r2,r17,82158 <___vfprintf_internal_r+0x17a8>
   82268:	18c00204 	addi	r3,r3,8
   8226c:	003fc206 	br	82178 <___vfprintf_internal_r+0x17c8>
   82270:	d9014f17 	ldw	r4,1340(sp)
   82274:	b00b883a 	mov	r5,r22
   82278:	d9800c04 	addi	r6,sp,48
   8227c:	00809580 	call	80958 <__sprint_r>
   82280:	103b831e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   82284:	dc800e17 	ldw	r18,56(sp)
   82288:	d9000517 	ldw	r4,20(sp)
   8228c:	d8c01904 	addi	r3,sp,100
   82290:	003cfc06 	br	81684 <___vfprintf_internal_r+0xcd4>
   82294:	07000274 	movhi	fp,9
   82298:	e70de484 	addi	fp,fp,14226
   8229c:	003bde06 	br	81218 <___vfprintf_internal_r+0x868>
   822a0:	00800274 	movhi	r2,9
   822a4:	108dd304 	addi	r2,r2,14156
   822a8:	d8814115 	stw	r2,1284(sp)
   822ac:	003def06 	br	81a6c <___vfprintf_internal_r+0x10bc>
   822b0:	d9014217 	ldw	r4,1288(sp)
   822b4:	d9414317 	ldw	r5,1292(sp)
   822b8:	008936c0 	call	8936c <__isnand>
   822bc:	10003926 	beq	r2,zero,823a4 <___vfprintf_internal_r+0x19f4>
   822c0:	d9414d17 	ldw	r5,1332(sp)
   822c4:	008011c4 	movi	r2,71
   822c8:	1140ce16 	blt	r2,r5,82604 <___vfprintf_internal_r+0x1c54>
   822cc:	01800274 	movhi	r6,9
   822d0:	318dd404 	addi	r6,r6,14160
   822d4:	d9814115 	stw	r6,1284(sp)
   822d8:	003de406 	br	81a6c <___vfprintf_internal_r+0x10bc>
   822dc:	d9014c17 	ldw	r4,1328(sp)
   822e0:	bdc00044 	addi	r23,r23,1
   822e4:	b8c00007 	ldb	r3,0(r23)
   822e8:	21000814 	ori	r4,r4,32
   822ec:	d9014c15 	stw	r4,1328(sp)
   822f0:	003a2e06 	br	80bac <___vfprintf_internal_r+0x1fc>
   822f4:	dcc14515 	stw	r19,1300(sp)
   822f8:	98011016 	blt	r19,zero,8273c <___vfprintf_internal_r+0x1d8c>
   822fc:	980f883a 	mov	r7,r19
   82300:	d8014615 	stw	zero,1304(sp)
   82304:	003c4c06 	br	81438 <___vfprintf_internal_r+0xa88>
   82308:	d9014f17 	ldw	r4,1340(sp)
   8230c:	b00b883a 	mov	r5,r22
   82310:	d9800c04 	addi	r6,sp,48
   82314:	00809580 	call	80958 <__sprint_r>
   82318:	103b5d1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   8231c:	dc800e17 	ldw	r18,56(sp)
   82320:	d9000517 	ldw	r4,20(sp)
   82324:	d8c01904 	addi	r3,sp,100
   82328:	003f2e06 	br	81fe4 <___vfprintf_internal_r+0x1634>
   8232c:	d8c14c17 	ldw	r3,1328(sp)
   82330:	1880100c 	andi	r2,r3,64
   82334:	1000a026 	beq	r2,zero,825b8 <___vfprintf_internal_r+0x1c08>
   82338:	38800017 	ldw	r2,0(r7)
   8233c:	39c00104 	addi	r7,r7,4
   82340:	d9c14015 	stw	r7,1280(sp)
   82344:	d9014b17 	ldw	r4,1324(sp)
   82348:	d9c14017 	ldw	r7,1280(sp)
   8234c:	1100000d 	sth	r4,0(r2)
   82350:	0039f306 	br	80b20 <___vfprintf_internal_r+0x170>
   82354:	d9014f17 	ldw	r4,1340(sp)
   82358:	b00b883a 	mov	r5,r22
   8235c:	d9800c04 	addi	r6,sp,48
   82360:	00809580 	call	80958 <__sprint_r>
   82364:	103b4a1e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   82368:	dc800e17 	ldw	r18,56(sp)
   8236c:	dc400d17 	ldw	r17,52(sp)
   82370:	d9000517 	ldw	r4,20(sp)
   82374:	d8c01904 	addi	r3,sp,100
   82378:	003f2d06 	br	82030 <___vfprintf_internal_r+0x1680>
   8237c:	00800184 	movi	r2,6
   82380:	14c09a36 	bltu	r2,r19,825ec <___vfprintf_internal_r+0x1c3c>
   82384:	dcc14515 	stw	r19,1300(sp)
   82388:	9800010e 	bge	r19,zero,82390 <___vfprintf_internal_r+0x19e0>
   8238c:	d8014515 	stw	zero,1300(sp)
   82390:	00800274 	movhi	r2,9
   82394:	108dd604 	addi	r2,r2,14168
   82398:	980f883a 	mov	r7,r19
   8239c:	d8814115 	stw	r2,1284(sp)
   823a0:	003a7206 	br	80d6c <___vfprintf_internal_r+0x3bc>
   823a4:	00bfffc4 	movi	r2,-1
   823a8:	9880e226 	beq	r19,r2,82734 <___vfprintf_internal_r+0x1d84>
   823ac:	d9414d17 	ldw	r5,1332(sp)
   823b0:	008019c4 	movi	r2,103
   823b4:	2880dc26 	beq	r5,r2,82728 <___vfprintf_internal_r+0x1d78>
   823b8:	008011c4 	movi	r2,71
   823bc:	2880da26 	beq	r5,r2,82728 <___vfprintf_internal_r+0x1d78>
   823c0:	d9414c17 	ldw	r5,1328(sp)
   823c4:	d9014317 	ldw	r4,1292(sp)
   823c8:	d9814217 	ldw	r6,1288(sp)
   823cc:	29404014 	ori	r5,r5,256
   823d0:	d9414c15 	stw	r5,1328(sp)
   823d4:	2000cc16 	blt	r4,zero,82708 <___vfprintf_internal_r+0x1d58>
   823d8:	3021883a 	mov	r16,r6
   823dc:	2023883a 	mov	r17,r4
   823e0:	0039883a 	mov	fp,zero
   823e4:	d9414d17 	ldw	r5,1332(sp)
   823e8:	00801984 	movi	r2,102
   823ec:	2880b726 	beq	r5,r2,826cc <___vfprintf_internal_r+0x1d1c>
   823f0:	00801184 	movi	r2,70
   823f4:	2880b526 	beq	r5,r2,826cc <___vfprintf_internal_r+0x1d1c>
   823f8:	00801944 	movi	r2,101
   823fc:	2880c826 	beq	r5,r2,82720 <___vfprintf_internal_r+0x1d70>
   82400:	00801144 	movi	r2,69
   82404:	2880c626 	beq	r5,r2,82720 <___vfprintf_internal_r+0x1d70>
   82408:	9829883a 	mov	r20,r19
   8240c:	d9014f17 	ldw	r4,1340(sp)
   82410:	d8800504 	addi	r2,sp,20
   82414:	880d883a 	mov	r6,r17
   82418:	d8800115 	stw	r2,4(sp)
   8241c:	d8c00604 	addi	r3,sp,24
   82420:	d8800704 	addi	r2,sp,28
   82424:	800b883a 	mov	r5,r16
   82428:	01c00084 	movi	r7,2
   8242c:	d8c00215 	stw	r3,8(sp)
   82430:	d8800315 	stw	r2,12(sp)
   82434:	dd000015 	stw	r20,0(sp)
   82438:	00843a00 	call	843a0 <_dtoa_r>
   8243c:	d9814d17 	ldw	r6,1332(sp)
   82440:	d8814115 	stw	r2,1284(sp)
   82444:	008019c4 	movi	r2,103
   82448:	30809526 	beq	r6,r2,826a0 <___vfprintf_internal_r+0x1cf0>
   8244c:	d8c14d17 	ldw	r3,1332(sp)
   82450:	008011c4 	movi	r2,71
   82454:	18809226 	beq	r3,r2,826a0 <___vfprintf_internal_r+0x1cf0>
   82458:	d9414117 	ldw	r5,1284(sp)
   8245c:	d9814d17 	ldw	r6,1332(sp)
   82460:	00801984 	movi	r2,102
   82464:	2d25883a 	add	r18,r5,r20
   82468:	30808626 	beq	r6,r2,82684 <___vfprintf_internal_r+0x1cd4>
   8246c:	00801184 	movi	r2,70
   82470:	30808426 	beq	r6,r2,82684 <___vfprintf_internal_r+0x1cd4>
   82474:	000d883a 	mov	r6,zero
   82478:	000f883a 	mov	r7,zero
   8247c:	880b883a 	mov	r5,r17
   82480:	8009883a 	mov	r4,r16
   82484:	008e8980 	call	8e898 <__eqdf2>
   82488:	1000751e 	bne	r2,zero,82660 <___vfprintf_internal_r+0x1cb0>
   8248c:	9005883a 	mov	r2,r18
   82490:	dc800715 	stw	r18,28(sp)
   82494:	d9014117 	ldw	r4,1284(sp)
   82498:	d9414d17 	ldw	r5,1332(sp)
   8249c:	00c019c4 	movi	r3,103
   824a0:	1125c83a 	sub	r18,r2,r4
   824a4:	28c06826 	beq	r5,r3,82648 <___vfprintf_internal_r+0x1c98>
   824a8:	008011c4 	movi	r2,71
   824ac:	28806626 	beq	r5,r2,82648 <___vfprintf_internal_r+0x1c98>
   824b0:	d9000517 	ldw	r4,20(sp)
   824b4:	d8c14d17 	ldw	r3,1332(sp)
   824b8:	00801944 	movi	r2,101
   824bc:	10c05516 	blt	r2,r3,82614 <___vfprintf_internal_r+0x1c64>
   824c0:	213fffc4 	addi	r4,r4,-1
   824c4:	d9000515 	stw	r4,20(sp)
   824c8:	d8c00805 	stb	r3,32(sp)
   824cc:	2021883a 	mov	r16,r4
   824d0:	2000c116 	blt	r4,zero,827d8 <___vfprintf_internal_r+0x1e28>
   824d4:	00800ac4 	movi	r2,43
   824d8:	d8800845 	stb	r2,33(sp)
   824dc:	00800244 	movi	r2,9
   824e0:	1400af0e 	bge	r2,r16,827a0 <___vfprintf_internal_r+0x1df0>
   824e4:	1027883a 	mov	r19,r2
   824e8:	dc400b84 	addi	r17,sp,46
   824ec:	8009883a 	mov	r4,r16
   824f0:	01400284 	movi	r5,10
   824f4:	008f07c0 	call	8f07c <__modsi3>
   824f8:	10800c04 	addi	r2,r2,48
   824fc:	8c7fffc4 	addi	r17,r17,-1
   82500:	8009883a 	mov	r4,r16
   82504:	01400284 	movi	r5,10
   82508:	88800005 	stb	r2,0(r17)
   8250c:	008f01c0 	call	8f01c <__divsi3>
   82510:	1021883a 	mov	r16,r2
   82514:	98bff516 	blt	r19,r2,824ec <___vfprintf_internal_r+0x1b3c>
   82518:	10c00c04 	addi	r3,r2,48
   8251c:	d88009c4 	addi	r2,sp,39
   82520:	108001c4 	addi	r2,r2,7
   82524:	897fffc4 	addi	r5,r17,-1
   82528:	88ffffc5 	stb	r3,-1(r17)
   8252c:	2880a72e 	bgeu	r5,r2,827cc <___vfprintf_internal_r+0x1e1c>
   82530:	1009883a 	mov	r4,r2
   82534:	d9800804 	addi	r6,sp,32
   82538:	d8c00884 	addi	r3,sp,34
   8253c:	28800003 	ldbu	r2,0(r5)
   82540:	29400044 	addi	r5,r5,1
   82544:	18800005 	stb	r2,0(r3)
   82548:	18c00044 	addi	r3,r3,1
   8254c:	293ffb36 	bltu	r5,r4,8253c <___vfprintf_internal_r+0x1b8c>
   82550:	1987c83a 	sub	r3,r3,r6
   82554:	00800044 	movi	r2,1
   82558:	d8c14815 	stw	r3,1312(sp)
   8255c:	90cf883a 	add	r7,r18,r3
   82560:	1480960e 	bge	r2,r18,827bc <___vfprintf_internal_r+0x1e0c>
   82564:	39c00044 	addi	r7,r7,1
   82568:	d9c14515 	stw	r7,1300(sp)
   8256c:	38003416 	blt	r7,zero,82640 <___vfprintf_internal_r+0x1c90>
   82570:	e0803fcc 	andi	r2,fp,255
   82574:	1080201c 	xori	r2,r2,128
   82578:	10bfe004 	addi	r2,r2,-128
   8257c:	10004e26 	beq	r2,zero,826b8 <___vfprintf_internal_r+0x1d08>
   82580:	00800b44 	movi	r2,45
   82584:	dc814715 	stw	r18,1308(sp)
   82588:	d8014615 	stw	zero,1304(sp)
   8258c:	d8800405 	stb	r2,16(sp)
   82590:	003bab06 	br	81440 <___vfprintf_internal_r+0xa90>
   82594:	00800b44 	movi	r2,45
   82598:	d8800405 	stb	r2,16(sp)
   8259c:	003d2d06 	br	81a54 <___vfprintf_internal_r+0x10a4>
   825a0:	d9014f17 	ldw	r4,1340(sp)
   825a4:	b00b883a 	mov	r5,r22
   825a8:	d9800c04 	addi	r6,sp,48
   825ac:	00809580 	call	80958 <__sprint_r>
   825b0:	103ab71e 	bne	r2,zero,81090 <___vfprintf_internal_r+0x6e0>
   825b4:	003ab506 	br	8108c <___vfprintf_internal_r+0x6dc>
   825b8:	38800017 	ldw	r2,0(r7)
   825bc:	39c00104 	addi	r7,r7,4
   825c0:	d9c14015 	stw	r7,1280(sp)
   825c4:	d9414b17 	ldw	r5,1324(sp)
   825c8:	d9c14017 	ldw	r7,1280(sp)
   825cc:	11400015 	stw	r5,0(r2)
   825d0:	00395306 	br	80b20 <___vfprintf_internal_r+0x170>
   825d4:	980f883a 	mov	r7,r19
   825d8:	dcc14515 	stw	r19,1300(sp)
   825dc:	d8014615 	stw	zero,1304(sp)
   825e0:	003b9506 	br	81438 <___vfprintf_internal_r+0xa88>
   825e4:	0027883a 	mov	r19,zero
   825e8:	00397206 	br	80bb4 <___vfprintf_internal_r+0x204>
   825ec:	00c00274 	movhi	r3,9
   825f0:	18cdd604 	addi	r3,r3,14168
   825f4:	100f883a 	mov	r7,r2
   825f8:	d8814515 	stw	r2,1300(sp)
   825fc:	d8c14115 	stw	r3,1284(sp)
   82600:	0039da06 	br	80d6c <___vfprintf_internal_r+0x3bc>
   82604:	00800274 	movhi	r2,9
   82608:	108dd504 	addi	r2,r2,14164
   8260c:	d8814115 	stw	r2,1284(sp)
   82610:	003d1606 	br	81a6c <___vfprintf_internal_r+0x10bc>
   82614:	d9414d17 	ldw	r5,1332(sp)
   82618:	00801984 	movi	r2,102
   8261c:	28804926 	beq	r5,r2,82744 <___vfprintf_internal_r+0x1d94>
   82620:	200f883a 	mov	r7,r4
   82624:	24805716 	blt	r4,r18,82784 <___vfprintf_internal_r+0x1dd4>
   82628:	d9414c17 	ldw	r5,1328(sp)
   8262c:	2880004c 	andi	r2,r5,1
   82630:	10000126 	beq	r2,zero,82638 <___vfprintf_internal_r+0x1c88>
   82634:	21c00044 	addi	r7,r4,1
   82638:	d9c14515 	stw	r7,1300(sp)
   8263c:	383fcc0e 	bge	r7,zero,82570 <___vfprintf_internal_r+0x1bc0>
   82640:	d8014515 	stw	zero,1300(sp)
   82644:	003fca06 	br	82570 <___vfprintf_internal_r+0x1bc0>
   82648:	d9000517 	ldw	r4,20(sp)
   8264c:	00bfff04 	movi	r2,-4
   82650:	1100480e 	bge	r2,r4,82774 <___vfprintf_internal_r+0x1dc4>
   82654:	99004716 	blt	r19,r4,82774 <___vfprintf_internal_r+0x1dc4>
   82658:	d8c14d15 	stw	r3,1332(sp)
   8265c:	003ff006 	br	82620 <___vfprintf_internal_r+0x1c70>
   82660:	d8800717 	ldw	r2,28(sp)
   82664:	14bf8b2e 	bgeu	r2,r18,82494 <___vfprintf_internal_r+0x1ae4>
   82668:	9007883a 	mov	r3,r18
   8266c:	01000c04 	movi	r4,48
   82670:	11000005 	stb	r4,0(r2)
   82674:	10800044 	addi	r2,r2,1
   82678:	d8800715 	stw	r2,28(sp)
   8267c:	18bffc1e 	bne	r3,r2,82670 <___vfprintf_internal_r+0x1cc0>
   82680:	003f8406 	br	82494 <___vfprintf_internal_r+0x1ae4>
   82684:	d8814117 	ldw	r2,1284(sp)
   82688:	10c00007 	ldb	r3,0(r2)
   8268c:	00800c04 	movi	r2,48
   82690:	18805b26 	beq	r3,r2,82800 <___vfprintf_internal_r+0x1e50>
   82694:	d9000517 	ldw	r4,20(sp)
   82698:	9125883a 	add	r18,r18,r4
   8269c:	003f7506 	br	82474 <___vfprintf_internal_r+0x1ac4>
   826a0:	d9014c17 	ldw	r4,1328(sp)
   826a4:	2080004c 	andi	r2,r4,1
   826a8:	1005003a 	cmpeq	r2,r2,zero
   826ac:	103f6a26 	beq	r2,zero,82458 <___vfprintf_internal_r+0x1aa8>
   826b0:	d8800717 	ldw	r2,28(sp)
   826b4:	003f7706 	br	82494 <___vfprintf_internal_r+0x1ae4>
   826b8:	d9c14515 	stw	r7,1300(sp)
   826bc:	38004d16 	blt	r7,zero,827f4 <___vfprintf_internal_r+0x1e44>
   826c0:	dc814715 	stw	r18,1308(sp)
   826c4:	d8014615 	stw	zero,1304(sp)
   826c8:	003b5b06 	br	81438 <___vfprintf_internal_r+0xa88>
   826cc:	d9014f17 	ldw	r4,1340(sp)
   826d0:	d8800504 	addi	r2,sp,20
   826d4:	d8800115 	stw	r2,4(sp)
   826d8:	d8c00604 	addi	r3,sp,24
   826dc:	d8800704 	addi	r2,sp,28
   826e0:	800b883a 	mov	r5,r16
   826e4:	880d883a 	mov	r6,r17
   826e8:	01c000c4 	movi	r7,3
   826ec:	d8c00215 	stw	r3,8(sp)
   826f0:	d8800315 	stw	r2,12(sp)
   826f4:	dcc00015 	stw	r19,0(sp)
   826f8:	9829883a 	mov	r20,r19
   826fc:	00843a00 	call	843a0 <_dtoa_r>
   82700:	d8814115 	stw	r2,1284(sp)
   82704:	003f5106 	br	8244c <___vfprintf_internal_r+0x1a9c>
   82708:	d8c14217 	ldw	r3,1288(sp)
   8270c:	d9014317 	ldw	r4,1292(sp)
   82710:	07000b44 	movi	fp,45
   82714:	1821883a 	mov	r16,r3
   82718:	2460003c 	xorhi	r17,r4,32768
   8271c:	003f3106 	br	823e4 <___vfprintf_internal_r+0x1a34>
   82720:	9d000044 	addi	r20,r19,1
   82724:	003f3906 	br	8240c <___vfprintf_internal_r+0x1a5c>
   82728:	983f251e 	bne	r19,zero,823c0 <___vfprintf_internal_r+0x1a10>
   8272c:	04c00044 	movi	r19,1
   82730:	003f2306 	br	823c0 <___vfprintf_internal_r+0x1a10>
   82734:	04c00184 	movi	r19,6
   82738:	003f2106 	br	823c0 <___vfprintf_internal_r+0x1a10>
   8273c:	d8014515 	stw	zero,1300(sp)
   82740:	003eee06 	br	822fc <___vfprintf_internal_r+0x194c>
   82744:	200f883a 	mov	r7,r4
   82748:	0100370e 	bge	zero,r4,82828 <___vfprintf_internal_r+0x1e78>
   8274c:	9800031e 	bne	r19,zero,8275c <___vfprintf_internal_r+0x1dac>
   82750:	d9814c17 	ldw	r6,1328(sp)
   82754:	3080004c 	andi	r2,r6,1
   82758:	103fb726 	beq	r2,zero,82638 <___vfprintf_internal_r+0x1c88>
   8275c:	20800044 	addi	r2,r4,1
   82760:	98a7883a 	add	r19,r19,r2
   82764:	dcc14515 	stw	r19,1300(sp)
   82768:	980f883a 	mov	r7,r19
   8276c:	983f800e 	bge	r19,zero,82570 <___vfprintf_internal_r+0x1bc0>
   82770:	003fb306 	br	82640 <___vfprintf_internal_r+0x1c90>
   82774:	d9814d17 	ldw	r6,1332(sp)
   82778:	31bfff84 	addi	r6,r6,-2
   8277c:	d9814d15 	stw	r6,1332(sp)
   82780:	003f4c06 	br	824b4 <___vfprintf_internal_r+0x1b04>
   82784:	0100180e 	bge	zero,r4,827e8 <___vfprintf_internal_r+0x1e38>
   82788:	00800044 	movi	r2,1
   8278c:	1485883a 	add	r2,r2,r18
   82790:	d8814515 	stw	r2,1300(sp)
   82794:	100f883a 	mov	r7,r2
   82798:	103f750e 	bge	r2,zero,82570 <___vfprintf_internal_r+0x1bc0>
   8279c:	003fa806 	br	82640 <___vfprintf_internal_r+0x1c90>
   827a0:	80c00c04 	addi	r3,r16,48
   827a4:	00800c04 	movi	r2,48
   827a8:	d8c008c5 	stb	r3,35(sp)
   827ac:	d9800804 	addi	r6,sp,32
   827b0:	d8c00904 	addi	r3,sp,36
   827b4:	d8800885 	stb	r2,34(sp)
   827b8:	003f6506 	br	82550 <___vfprintf_internal_r+0x1ba0>
   827bc:	d9014c17 	ldw	r4,1328(sp)
   827c0:	2084703a 	and	r2,r4,r2
   827c4:	103f9c26 	beq	r2,zero,82638 <___vfprintf_internal_r+0x1c88>
   827c8:	003f6606 	br	82564 <___vfprintf_internal_r+0x1bb4>
   827cc:	d9800804 	addi	r6,sp,32
   827d0:	d8c00884 	addi	r3,sp,34
   827d4:	003f5e06 	br	82550 <___vfprintf_internal_r+0x1ba0>
   827d8:	00800b44 	movi	r2,45
   827dc:	0121c83a 	sub	r16,zero,r4
   827e0:	d8800845 	stb	r2,33(sp)
   827e4:	003f3d06 	br	824dc <___vfprintf_internal_r+0x1b2c>
   827e8:	00800084 	movi	r2,2
   827ec:	1105c83a 	sub	r2,r2,r4
   827f0:	003fe606 	br	8278c <___vfprintf_internal_r+0x1ddc>
   827f4:	d8014515 	stw	zero,1300(sp)
   827f8:	dc814715 	stw	r18,1308(sp)
   827fc:	003fb106 	br	826c4 <___vfprintf_internal_r+0x1d14>
   82800:	000d883a 	mov	r6,zero
   82804:	000f883a 	mov	r7,zero
   82808:	8009883a 	mov	r4,r16
   8280c:	880b883a 	mov	r5,r17
   82810:	008e9200 	call	8e920 <__nedf2>
   82814:	103f9f26 	beq	r2,zero,82694 <___vfprintf_internal_r+0x1ce4>
   82818:	00800044 	movi	r2,1
   8281c:	1509c83a 	sub	r4,r2,r20
   82820:	d9000515 	stw	r4,20(sp)
   82824:	003f9b06 	br	82694 <___vfprintf_internal_r+0x1ce4>
   82828:	98000d1e 	bne	r19,zero,82860 <___vfprintf_internal_r+0x1eb0>
   8282c:	d8c14c17 	ldw	r3,1328(sp)
   82830:	1880004c 	andi	r2,r3,1
   82834:	10000a1e 	bne	r2,zero,82860 <___vfprintf_internal_r+0x1eb0>
   82838:	01000044 	movi	r4,1
   8283c:	200f883a 	mov	r7,r4
   82840:	d9014515 	stw	r4,1300(sp)
   82844:	003f4a06 	br	82570 <___vfprintf_internal_r+0x1bc0>
   82848:	3cc00017 	ldw	r19,0(r7)
   8284c:	39c00104 	addi	r7,r7,4
   82850:	983d0e0e 	bge	r19,zero,81c8c <___vfprintf_internal_r+0x12dc>
   82854:	b8c00007 	ldb	r3,0(r23)
   82858:	04ffffc4 	movi	r19,-1
   8285c:	0038d306 	br	80bac <___vfprintf_internal_r+0x1fc>
   82860:	9cc00084 	addi	r19,r19,2
   82864:	dcc14515 	stw	r19,1300(sp)
   82868:	980f883a 	mov	r7,r19
   8286c:	983f400e 	bge	r19,zero,82570 <___vfprintf_internal_r+0x1bc0>
   82870:	003f7306 	br	82640 <___vfprintf_internal_r+0x1c90>

00082874 <__vfprintf_internal>:
   82874:	00800274 	movhi	r2,9
   82878:	10963a04 	addi	r2,r2,22760
   8287c:	2013883a 	mov	r9,r4
   82880:	11000017 	ldw	r4,0(r2)
   82884:	2805883a 	mov	r2,r5
   82888:	300f883a 	mov	r7,r6
   8288c:	480b883a 	mov	r5,r9
   82890:	100d883a 	mov	r6,r2
   82894:	00809b01 	jmpi	809b0 <___vfprintf_internal_r>

00082898 <__svfscanf_r>:
   82898:	deff4e04 	addi	sp,sp,-712
   8289c:	dd80ae15 	stw	r22,696(sp)
   828a0:	dd00ac15 	stw	r20,688(sp)
   828a4:	dc40a915 	stw	r17,676(sp)
   828a8:	dc00a815 	stw	r16,672(sp)
   828ac:	dfc0b115 	stw	ra,708(sp)
   828b0:	df00b015 	stw	fp,704(sp)
   828b4:	ddc0af15 	stw	r23,700(sp)
   828b8:	dd40ad15 	stw	r21,692(sp)
   828bc:	dcc0ab15 	stw	r19,684(sp)
   828c0:	dc80aa15 	stw	r18,680(sp)
   828c4:	202d883a 	mov	r22,r4
   828c8:	2821883a 	mov	r16,r5
   828cc:	d9c0a415 	stw	r7,656(sp)
   828d0:	3029883a 	mov	r20,r6
   828d4:	d800a215 	stw	zero,648(sp)
   828d8:	0023883a 	mov	r17,zero
   828dc:	d800a115 	stw	zero,644(sp)
   828e0:	d800a015 	stw	zero,640(sp)
   828e4:	a1000007 	ldb	r4,0(r20)
   828e8:	d9000115 	stw	r4,4(sp)
   828ec:	20001f26 	beq	r4,zero,8296c <__svfscanf_r+0xd4>
   828f0:	04c00274 	movhi	r19,9
   828f4:	9cd63904 	addi	r19,r19,22756
   828f8:	9c800017 	ldw	r18,0(r19)
   828fc:	a5000044 	addi	r20,r20,1
   82900:	9107883a 	add	r3,r18,r4
   82904:	18800003 	ldbu	r2,0(r3)
   82908:	1080020c 	andi	r2,r2,8
   8290c:	10002426 	beq	r2,zero,829a0 <__svfscanf_r+0x108>
   82910:	80c00117 	ldw	r3,4(r16)
   82914:	00c00e0e 	bge	zero,r3,82950 <__svfscanf_r+0xb8>
   82918:	81400017 	ldw	r5,0(r16)
   8291c:	98800017 	ldw	r2,0(r19)
   82920:	28c00003 	ldbu	r3,0(r5)
   82924:	1887883a 	add	r3,r3,r2
   82928:	19000003 	ldbu	r4,0(r3)
   8292c:	2100020c 	andi	r4,r4,8
   82930:	203fec26 	beq	r4,zero,828e4 <__svfscanf_r+0x4c>
   82934:	80c00117 	ldw	r3,4(r16)
   82938:	29800044 	addi	r6,r5,1
   8293c:	8c400044 	addi	r17,r17,1
   82940:	18ffffc4 	addi	r3,r3,-1
   82944:	81800015 	stw	r6,0(r16)
   82948:	80c00115 	stw	r3,4(r16)
   8294c:	00fff216 	blt	zero,r3,82918 <__svfscanf_r+0x80>
   82950:	b009883a 	mov	r4,r22
   82954:	800b883a 	mov	r5,r16
   82958:	008914c0 	call	8914c <__srefill_r>
   8295c:	103fee26 	beq	r2,zero,82918 <__svfscanf_r+0x80>
   82960:	a1000007 	ldb	r4,0(r20)
   82964:	d9000115 	stw	r4,4(sp)
   82968:	203fe11e 	bne	r4,zero,828f0 <__svfscanf_r+0x58>
   8296c:	d880a217 	ldw	r2,648(sp)
   82970:	dfc0b117 	ldw	ra,708(sp)
   82974:	df00b017 	ldw	fp,704(sp)
   82978:	ddc0af17 	ldw	r23,700(sp)
   8297c:	dd80ae17 	ldw	r22,696(sp)
   82980:	dd40ad17 	ldw	r21,692(sp)
   82984:	dd00ac17 	ldw	r20,688(sp)
   82988:	dcc0ab17 	ldw	r19,684(sp)
   8298c:	dc80aa17 	ldw	r18,680(sp)
   82990:	dc40a917 	ldw	r17,676(sp)
   82994:	dc00a817 	ldw	r16,672(sp)
   82998:	dec0b204 	addi	sp,sp,712
   8299c:	f800283a 	ret
   829a0:	00800944 	movi	r2,37
   829a4:	20801626 	beq	r4,r2,82a00 <__svfscanf_r+0x168>
   829a8:	80800117 	ldw	r2,4(r16)
   829ac:	00800b0e 	bge	zero,r2,829dc <__svfscanf_r+0x144>
   829b0:	81000017 	ldw	r4,0(r16)
   829b4:	a0ffffc7 	ldb	r3,-1(r20)
   829b8:	20800003 	ldbu	r2,0(r4)
   829bc:	10ffeb1e 	bne	r2,r3,8296c <__svfscanf_r+0xd4>
   829c0:	80c00117 	ldw	r3,4(r16)
   829c4:	21800044 	addi	r6,r4,1
   829c8:	8c400044 	addi	r17,r17,1
   829cc:	18ffffc4 	addi	r3,r3,-1
   829d0:	80c00115 	stw	r3,4(r16)
   829d4:	81800015 	stw	r6,0(r16)
   829d8:	003fc206 	br	828e4 <__svfscanf_r+0x4c>
   829dc:	b009883a 	mov	r4,r22
   829e0:	800b883a 	mov	r5,r16
   829e4:	008914c0 	call	8914c <__srefill_r>
   829e8:	103ff126 	beq	r2,zero,829b0 <__svfscanf_r+0x118>
   829ec:	d900a217 	ldw	r4,648(sp)
   829f0:	2004981e 	bne	r4,zero,83c54 <__svfscanf_r+0x13bc>
   829f4:	00bfffc4 	movi	r2,-1
   829f8:	d880a215 	stw	r2,648(sp)
   829fc:	003fdb06 	br	8296c <__svfscanf_r+0xd4>
   82a00:	d800a315 	stw	zero,652(sp)
   82a04:	002b883a 	mov	r21,zero
   82a08:	a0c00003 	ldbu	r3,0(r20)
   82a0c:	00801e04 	movi	r2,120
   82a10:	a5000044 	addi	r20,r20,1
   82a14:	1dc03fcc 	andi	r23,r3,255
   82a18:	bdc0201c 	xori	r23,r23,128
   82a1c:	bdffe004 	addi	r23,r23,-128
   82a20:	10c08036 	bltu	r2,r3,82c24 <__svfscanf_r+0x38c>
   82a24:	18c5883a 	add	r2,r3,r3
   82a28:	1085883a 	add	r2,r2,r2
   82a2c:	00c00234 	movhi	r3,8
   82a30:	18ca9004 	addi	r3,r3,10816
   82a34:	10c5883a 	add	r2,r2,r3
   82a38:	11000017 	ldw	r4,0(r2)
   82a3c:	2000683a 	jmp	r4
   82a40:	000829f4 	movhi	zero,8359
   82a44:	00082c24 	muli	zero,zero,8368
   82a48:	00082c24 	muli	zero,zero,8368
   82a4c:	00082c24 	muli	zero,zero,8368
   82a50:	00082c24 	muli	zero,zero,8368
   82a54:	00082c24 	muli	zero,zero,8368
   82a58:	00082c24 	muli	zero,zero,8368
   82a5c:	00082c24 	muli	zero,zero,8368
   82a60:	00082c24 	muli	zero,zero,8368
   82a64:	00082c24 	muli	zero,zero,8368
   82a68:	00082c24 	muli	zero,zero,8368
   82a6c:	00082c24 	muli	zero,zero,8368
   82a70:	00082c24 	muli	zero,zero,8368
   82a74:	00082c24 	muli	zero,zero,8368
   82a78:	00082c24 	muli	zero,zero,8368
   82a7c:	00082c24 	muli	zero,zero,8368
   82a80:	00082c24 	muli	zero,zero,8368
   82a84:	00082c24 	muli	zero,zero,8368
   82a88:	00082c24 	muli	zero,zero,8368
   82a8c:	00082c24 	muli	zero,zero,8368
   82a90:	00082c24 	muli	zero,zero,8368
   82a94:	00082c24 	muli	zero,zero,8368
   82a98:	00082c24 	muli	zero,zero,8368
   82a9c:	00082c24 	muli	zero,zero,8368
   82aa0:	00082c24 	muli	zero,zero,8368
   82aa4:	00082c24 	muli	zero,zero,8368
   82aa8:	00082c24 	muli	zero,zero,8368
   82aac:	00082c24 	muli	zero,zero,8368
   82ab0:	00082c24 	muli	zero,zero,8368
   82ab4:	00082c24 	muli	zero,zero,8368
   82ab8:	00082c24 	muli	zero,zero,8368
   82abc:	00082c24 	muli	zero,zero,8368
   82ac0:	00082c24 	muli	zero,zero,8368
   82ac4:	00082c24 	muli	zero,zero,8368
   82ac8:	00082c24 	muli	zero,zero,8368
   82acc:	00082c24 	muli	zero,zero,8368
   82ad0:	00082c24 	muli	zero,zero,8368
   82ad4:	000829a8 	cmpgeui	zero,zero,8358
   82ad8:	00082c24 	muli	zero,zero,8368
   82adc:	00082c24 	muli	zero,zero,8368
   82ae0:	00082c24 	muli	zero,zero,8368
   82ae4:	00082c24 	muli	zero,zero,8368
   82ae8:	00083ac4 	movi	zero,8427
   82aec:	00082c24 	muli	zero,zero,8368
   82af0:	00082c24 	muli	zero,zero,8368
   82af4:	00082c24 	muli	zero,zero,8368
   82af8:	00082c24 	muli	zero,zero,8368
   82afc:	00082c24 	muli	zero,zero,8368
   82b00:	00083aa8 	cmpgeui	zero,zero,8426
   82b04:	00083aa8 	cmpgeui	zero,zero,8426
   82b08:	00083aa8 	cmpgeui	zero,zero,8426
   82b0c:	00083aa8 	cmpgeui	zero,zero,8426
   82b10:	00083aa8 	cmpgeui	zero,zero,8426
   82b14:	00083aa8 	cmpgeui	zero,zero,8426
   82b18:	00083aa8 	cmpgeui	zero,zero,8426
   82b1c:	00083aa8 	cmpgeui	zero,zero,8426
   82b20:	00083aa8 	cmpgeui	zero,zero,8426
   82b24:	00083aa8 	cmpgeui	zero,zero,8426
   82b28:	00082c24 	muli	zero,zero,8368
   82b2c:	00082c24 	muli	zero,zero,8368
   82b30:	00082c24 	muli	zero,zero,8368
   82b34:	00082c24 	muli	zero,zero,8368
   82b38:	00082c24 	muli	zero,zero,8368
   82b3c:	00082c24 	muli	zero,zero,8368
   82b40:	00082c24 	muli	zero,zero,8368
   82b44:	00082c24 	muli	zero,zero,8368
   82b48:	00082c24 	muli	zero,zero,8368
   82b4c:	00082c24 	muli	zero,zero,8368
   82b50:	00082c38 	rdprs	zero,zero,8368
   82b54:	00083bac 	andhi	zero,zero,8430
   82b58:	00082c24 	muli	zero,zero,8368
   82b5c:	00083bac 	andhi	zero,zero,8430
   82b60:	00082c24 	muli	zero,zero,8368
   82b64:	00082c24 	muli	zero,zero,8368
   82b68:	00082c24 	muli	zero,zero,8368
   82b6c:	00082c24 	muli	zero,zero,8368
   82b70:	00083aa0 	cmpeqi	zero,zero,8426
   82b74:	00082c24 	muli	zero,zero,8368
   82b78:	00082c24 	muli	zero,zero,8368
   82b7c:	00083a80 	call	83a8 <__alt_mem_sram_0-0x77c58>
   82b80:	00082c24 	muli	zero,zero,8368
   82b84:	00082c24 	muli	zero,zero,8368
   82b88:	00082c24 	muli	zero,zero,8368
   82b8c:	00082c24 	muli	zero,zero,8368
   82b90:	00082c24 	muli	zero,zero,8368
   82b94:	00082c24 	muli	zero,zero,8368
   82b98:	00082c24 	muli	zero,zero,8368
   82b9c:	00082c24 	muli	zero,zero,8368
   82ba0:	00083acc 	andi	zero,zero,8427
   82ba4:	00082c24 	muli	zero,zero,8368
   82ba8:	00082c24 	muli	zero,zero,8368
   82bac:	00083a64 	muli	zero,zero,8425
   82bb0:	00082c24 	muli	zero,zero,8368
   82bb4:	00082c24 	muli	zero,zero,8368
   82bb8:	00082c24 	muli	zero,zero,8368
   82bbc:	00082c24 	muli	zero,zero,8368
   82bc0:	00082c24 	muli	zero,zero,8368
   82bc4:	00082c24 	muli	zero,zero,8368
   82bc8:	00082c24 	muli	zero,zero,8368
   82bcc:	00083bb4 	movhi	zero,8430
   82bd0:	00082c3c 	xorhi	zero,zero,8368
   82bd4:	00083bac 	andhi	zero,zero,8430
   82bd8:	00083bac 	andhi	zero,zero,8430
   82bdc:	00083bac 	andhi	zero,zero,8430
   82be0:	00083bc0 	call	83bc <__alt_mem_sram_0-0x77c44>
   82be4:	00083b08 	cmpgei	zero,zero,8428
   82be8:	00082c24 	muli	zero,zero,8368
   82bec:	00082c24 	muli	zero,zero,8368
   82bf0:	000831d0 	cmplti	zero,zero,8391
   82bf4:	00082c24 	muli	zero,zero,8368
   82bf8:	00083cbc 	xorhi	zero,zero,8434
   82bfc:	00083c78 	rdprs	zero,zero,8433
   82c00:	00083c9c 	xori	zero,zero,8434
   82c04:	00082c24 	muli	zero,zero,8368
   82c08:	00082c24 	muli	zero,zero,8368
   82c0c:	00083c94 	movui	zero,8434
   82c10:	00082c24 	muli	zero,zero,8368
   82c14:	00083aec 	andhi	zero,zero,8427
   82c18:	00082c24 	muli	zero,zero,8368
   82c1c:	00082c24 	muli	zero,zero,8368
   82c20:	00083acc 	andi	zero,zero,8427
   82c24:	bc87883a 	add	r3,r23,r18
   82c28:	18800003 	ldbu	r2,0(r3)
   82c2c:	1080004c 	andi	r2,r2,1
   82c30:	1005003a 	cmpeq	r2,r2,zero
   82c34:	1000011e 	bne	r2,zero,82c3c <__svfscanf_r+0x3a4>
   82c38:	ad400054 	ori	r21,r21,1
   82c3c:	01000274 	movhi	r4,9
   82c40:	212b9204 	addi	r4,r4,-20920
   82c44:	00800284 	movi	r2,10
   82c48:	d900a015 	stw	r4,640(sp)
   82c4c:	048000c4 	movi	r18,3
   82c50:	d880a115 	stw	r2,644(sp)
   82c54:	80c00117 	ldw	r3,4(r16)
   82c58:	00c13f0e 	bge	zero,r3,83158 <__svfscanf_r+0x8c0>
   82c5c:	a880100c 	andi	r2,r21,64
   82c60:	10001326 	beq	r2,zero,82cb0 <__svfscanf_r+0x418>
   82c64:	00800104 	movi	r2,4
   82c68:	14bf1e36 	bltu	r2,r18,828e4 <__svfscanf_r+0x4c>
   82c6c:	9485883a 	add	r2,r18,r18
   82c70:	1085883a 	add	r2,r2,r2
   82c74:	00c00234 	movhi	r3,8
   82c78:	18cb2204 	addi	r3,r3,11400
   82c7c:	10c5883a 	add	r2,r2,r3
   82c80:	11000017 	ldw	r4,0(r2)
   82c84:	2000683a 	jmp	r4
   82c88:	00082cec 	andhi	zero,zero,8371
   82c8c:	00082dec 	andhi	zero,zero,8375
   82c90:	00082ffc 	xorhi	zero,zero,8383
   82c94:	00082e60 	cmpeqi	zero,zero,8377
   82c98:	00083134 	movhi	zero,8388
   82c9c:	b009883a 	mov	r4,r22
   82ca0:	800b883a 	mov	r5,r16
   82ca4:	008914c0 	call	8914c <__srefill_r>
   82ca8:	103f501e 	bne	r2,zero,829ec <__svfscanf_r+0x154>
   82cac:	8c400044 	addi	r17,r17,1
   82cb0:	81400017 	ldw	r5,0(r16)
   82cb4:	98800017 	ldw	r2,0(r19)
   82cb8:	28c00003 	ldbu	r3,0(r5)
   82cbc:	1887883a 	add	r3,r3,r2
   82cc0:	19000003 	ldbu	r4,0(r3)
   82cc4:	2100020c 	andi	r4,r4,8
   82cc8:	203fe626 	beq	r4,zero,82c64 <__svfscanf_r+0x3cc>
   82ccc:	80c00117 	ldw	r3,4(r16)
   82cd0:	18ffffc4 	addi	r3,r3,-1
   82cd4:	80c00115 	stw	r3,4(r16)
   82cd8:	00fff00e 	bge	zero,r3,82c9c <__svfscanf_r+0x404>
   82cdc:	29800044 	addi	r6,r5,1
   82ce0:	8c400044 	addi	r17,r17,1
   82ce4:	81800015 	stw	r6,0(r16)
   82ce8:	003ff106 	br	82cb0 <__svfscanf_r+0x418>
   82cec:	d8c0a317 	ldw	r3,652(sp)
   82cf0:	1800021e 	bne	r3,zero,82cfc <__svfscanf_r+0x464>
   82cf4:	01000044 	movi	r4,1
   82cf8:	d900a315 	stw	r4,652(sp)
   82cfc:	a880004c 	andi	r2,r21,1
   82d00:	1005003a 	cmpeq	r2,r2,zero
   82d04:	1002811e 	bne	r2,zero,8370c <__svfscanf_r+0xe74>
   82d08:	ad40040c 	andi	r21,r21,16
   82d0c:	a805003a 	cmpeq	r2,r21,zero
   82d10:	d880a615 	stw	r2,664(sp)
   82d14:	1003d31e 	bne	r2,zero,83c64 <__svfscanf_r+0x13cc>
   82d18:	0027883a 	mov	r19,zero
   82d1c:	d900a317 	ldw	r4,652(sp)
   82d20:	2003c726 	beq	r4,zero,83c40 <__svfscanf_r+0x13a8>
   82d24:	07000274 	movhi	fp,9
   82d28:	e7163c04 	addi	fp,fp,22768
   82d2c:	e0800017 	ldw	r2,0(fp)
   82d30:	103f2e26 	beq	r2,zero,829ec <__svfscanf_r+0x154>
   82d34:	d8804404 	addi	r2,sp,272
   82d38:	0025883a 	mov	r18,zero
   82d3c:	d880a515 	stw	r2,660(sp)
   82d40:	05ffffc4 	movi	r23,-1
   82d44:	80800017 	ldw	r2,0(r16)
   82d48:	80c00117 	ldw	r3,4(r16)
   82d4c:	d900a517 	ldw	r4,660(sp)
   82d50:	12000003 	ldbu	r8,0(r2)
   82d54:	18ffffc4 	addi	r3,r3,-1
   82d58:	11800044 	addi	r6,r2,1
   82d5c:	248f883a 	add	r7,r4,r18
   82d60:	80c00115 	stw	r3,4(r16)
   82d64:	81800015 	stw	r6,0(r16)
   82d68:	3a000005 	stb	r8,0(r7)
   82d6c:	d9000204 	addi	r4,sp,8
   82d70:	000b883a 	mov	r5,zero
   82d74:	01800204 	movi	r6,8
   82d78:	00878480 	call	87848 <memset>
   82d7c:	d980a517 	ldw	r6,660(sp)
   82d80:	94800044 	addi	r18,r18,1
   82d84:	d8800204 	addi	r2,sp,8
   82d88:	b009883a 	mov	r4,r22
   82d8c:	980b883a 	mov	r5,r19
   82d90:	900f883a 	mov	r7,r18
   82d94:	d8800015 	stw	r2,0(sp)
   82d98:	00874e40 	call	874e4 <_mbrtowc_r>
   82d9c:	1007883a 	mov	r3,r2
   82da0:	15ff1226 	beq	r2,r23,829ec <__svfscanf_r+0x154>
   82da4:	10039e1e 	bne	r2,zero,83c20 <__svfscanf_r+0x1388>
   82da8:	a800011e 	bne	r21,zero,82db0 <__svfscanf_r+0x518>
   82dac:	98000015 	stw	zero,0(r19)
   82db0:	d8c0a317 	ldw	r3,652(sp)
   82db4:	d900a617 	ldw	r4,664(sp)
   82db8:	8ca3883a 	add	r17,r17,r18
   82dbc:	18ffffc4 	addi	r3,r3,-1
   82dc0:	d8c0a315 	stw	r3,652(sp)
   82dc4:	20000126 	beq	r4,zero,82dcc <__svfscanf_r+0x534>
   82dc8:	9cc00104 	addi	r19,r19,4
   82dcc:	0025883a 	mov	r18,zero
   82dd0:	80c00117 	ldw	r3,4(r16)
   82dd4:	00c3950e 	bge	zero,r3,83c2c <__svfscanf_r+0x1394>
   82dd8:	d880a317 	ldw	r2,652(sp)
   82ddc:	10039826 	beq	r2,zero,83c40 <__svfscanf_r+0x13a8>
   82de0:	e0800017 	ldw	r2,0(fp)
   82de4:	90bfd71e 	bne	r18,r2,82d44 <__svfscanf_r+0x4ac>
   82de8:	003f0006 	br	829ec <__svfscanf_r+0x154>
   82dec:	d880a317 	ldw	r2,652(sp)
   82df0:	1000021e 	bne	r2,zero,82dfc <__svfscanf_r+0x564>
   82df4:	00ffffc4 	movi	r3,-1
   82df8:	d8c0a315 	stw	r3,652(sp)
   82dfc:	a880040c 	andi	r2,r21,16
   82e00:	1003b826 	beq	r2,zero,83ce4 <__svfscanf_r+0x144c>
   82e04:	0027883a 	mov	r19,zero
   82e08:	dd400404 	addi	r21,sp,16
   82e0c:	81000017 	ldw	r4,0(r16)
   82e10:	20800003 	ldbu	r2,0(r4)
   82e14:	a885883a 	add	r2,r21,r2
   82e18:	10c00007 	ldb	r3,0(r2)
   82e1c:	18037d26 	beq	r3,zero,83c14 <__svfscanf_r+0x137c>
   82e20:	80c00117 	ldw	r3,4(r16)
   82e24:	21800044 	addi	r6,r4,1
   82e28:	d900a317 	ldw	r4,652(sp)
   82e2c:	18ffffc4 	addi	r3,r3,-1
   82e30:	9cc00044 	addi	r19,r19,1
   82e34:	81800015 	stw	r6,0(r16)
   82e38:	80c00115 	stw	r3,4(r16)
   82e3c:	24c37526 	beq	r4,r19,83c14 <__svfscanf_r+0x137c>
   82e40:	00fff216 	blt	zero,r3,82e0c <__svfscanf_r+0x574>
   82e44:	b009883a 	mov	r4,r22
   82e48:	800b883a 	mov	r5,r16
   82e4c:	008914c0 	call	8914c <__srefill_r>
   82e50:	103fee26 	beq	r2,zero,82e0c <__svfscanf_r+0x574>
   82e54:	983ee526 	beq	r19,zero,829ec <__svfscanf_r+0x154>
   82e58:	8ce3883a 	add	r17,r17,r19
   82e5c:	003ea106 	br	828e4 <__svfscanf_r+0x4c>
   82e60:	d900a317 	ldw	r4,652(sp)
   82e64:	00805704 	movi	r2,348
   82e68:	20ffffc4 	addi	r3,r4,-1
   82e6c:	10c0bf2e 	bgeu	r2,r3,8316c <__svfscanf_r+0x8d4>
   82e70:	00805744 	movi	r2,349
   82e74:	24ffa8c4 	addi	r19,r4,-349
   82e78:	ac836014 	ori	r18,r21,3456
   82e7c:	d880a315 	stw	r2,652(sp)
   82e80:	d8c04404 	addi	r3,sp,272
   82e84:	d8c0a515 	stw	r3,660(sp)
   82e88:	002f883a 	mov	r23,zero
   82e8c:	182b883a 	mov	r21,r3
   82e90:	81800017 	ldw	r6,0(r16)
   82e94:	00c01344 	movi	r3,77
   82e98:	31400003 	ldbu	r5,0(r6)
   82e9c:	28bff544 	addi	r2,r5,-43
   82ea0:	10803fcc 	andi	r2,r2,255
   82ea4:	1880b836 	bltu	r3,r2,83188 <__svfscanf_r+0x8f0>
   82ea8:	1085883a 	add	r2,r2,r2
   82eac:	1085883a 	add	r2,r2,r2
   82eb0:	00c00234 	movhi	r3,8
   82eb4:	18cbb104 	addi	r3,r3,11972
   82eb8:	10c5883a 	add	r2,r2,r3
   82ebc:	11000017 	ldw	r4,0(r2)
   82ec0:	2000683a 	jmp	r4
   82ec4:	000832d8 	cmpnei	zero,zero,8395
   82ec8:	00083188 	cmpgei	zero,zero,8390
   82ecc:	000832d8 	cmpnei	zero,zero,8395
   82ed0:	00083188 	cmpgei	zero,zero,8390
   82ed4:	00083188 	cmpgei	zero,zero,8390
   82ed8:	0008331c 	xori	zero,zero,8396
   82edc:	00083b20 	cmpeqi	zero,zero,8428
   82ee0:	00083b20 	cmpeqi	zero,zero,8428
   82ee4:	00083b20 	cmpeqi	zero,zero,8428
   82ee8:	00083b20 	cmpeqi	zero,zero,8428
   82eec:	00083b20 	cmpeqi	zero,zero,8428
   82ef0:	00083b20 	cmpeqi	zero,zero,8428
   82ef4:	00083b20 	cmpeqi	zero,zero,8428
   82ef8:	00083b48 	cmpgei	zero,zero,8429
   82efc:	00083b48 	cmpgei	zero,zero,8429
   82f00:	00083188 	cmpgei	zero,zero,8390
   82f04:	00083188 	cmpgei	zero,zero,8390
   82f08:	00083188 	cmpgei	zero,zero,8390
   82f0c:	00083188 	cmpgei	zero,zero,8390
   82f10:	00083188 	cmpgei	zero,zero,8390
   82f14:	00083188 	cmpgei	zero,zero,8390
   82f18:	00083188 	cmpgei	zero,zero,8390
   82f1c:	00083b78 	rdprs	zero,zero,8429
   82f20:	00083b78 	rdprs	zero,zero,8429
   82f24:	00083b78 	rdprs	zero,zero,8429
   82f28:	00083b78 	rdprs	zero,zero,8429
   82f2c:	00083b78 	rdprs	zero,zero,8429
   82f30:	00083b78 	rdprs	zero,zero,8429
   82f34:	00083188 	cmpgei	zero,zero,8390
   82f38:	00083188 	cmpgei	zero,zero,8390
   82f3c:	00083188 	cmpgei	zero,zero,8390
   82f40:	00083188 	cmpgei	zero,zero,8390
   82f44:	00083188 	cmpgei	zero,zero,8390
   82f48:	00083188 	cmpgei	zero,zero,8390
   82f4c:	00083188 	cmpgei	zero,zero,8390
   82f50:	00083188 	cmpgei	zero,zero,8390
   82f54:	00083188 	cmpgei	zero,zero,8390
   82f58:	00083188 	cmpgei	zero,zero,8390
   82f5c:	00083188 	cmpgei	zero,zero,8390
   82f60:	00083188 	cmpgei	zero,zero,8390
   82f64:	00083188 	cmpgei	zero,zero,8390
   82f68:	00083188 	cmpgei	zero,zero,8390
   82f6c:	00083188 	cmpgei	zero,zero,8390
   82f70:	00083188 	cmpgei	zero,zero,8390
   82f74:	00083188 	cmpgei	zero,zero,8390
   82f78:	00083b88 	cmpgei	zero,zero,8430
   82f7c:	00083188 	cmpgei	zero,zero,8390
   82f80:	00083188 	cmpgei	zero,zero,8390
   82f84:	00083188 	cmpgei	zero,zero,8390
   82f88:	00083188 	cmpgei	zero,zero,8390
   82f8c:	00083188 	cmpgei	zero,zero,8390
   82f90:	00083188 	cmpgei	zero,zero,8390
   82f94:	00083188 	cmpgei	zero,zero,8390
   82f98:	00083188 	cmpgei	zero,zero,8390
   82f9c:	00083b78 	rdprs	zero,zero,8429
   82fa0:	00083b78 	rdprs	zero,zero,8429
   82fa4:	00083b78 	rdprs	zero,zero,8429
   82fa8:	00083b78 	rdprs	zero,zero,8429
   82fac:	00083b78 	rdprs	zero,zero,8429
   82fb0:	00083b78 	rdprs	zero,zero,8429
   82fb4:	00083188 	cmpgei	zero,zero,8390
   82fb8:	00083188 	cmpgei	zero,zero,8390
   82fbc:	00083188 	cmpgei	zero,zero,8390
   82fc0:	00083188 	cmpgei	zero,zero,8390
   82fc4:	00083188 	cmpgei	zero,zero,8390
   82fc8:	00083188 	cmpgei	zero,zero,8390
   82fcc:	00083188 	cmpgei	zero,zero,8390
   82fd0:	00083188 	cmpgei	zero,zero,8390
   82fd4:	00083188 	cmpgei	zero,zero,8390
   82fd8:	00083188 	cmpgei	zero,zero,8390
   82fdc:	00083188 	cmpgei	zero,zero,8390
   82fe0:	00083188 	cmpgei	zero,zero,8390
   82fe4:	00083188 	cmpgei	zero,zero,8390
   82fe8:	00083188 	cmpgei	zero,zero,8390
   82fec:	00083188 	cmpgei	zero,zero,8390
   82ff0:	00083188 	cmpgei	zero,zero,8390
   82ff4:	00083188 	cmpgei	zero,zero,8390
   82ff8:	00083b88 	cmpgei	zero,zero,8430
   82ffc:	d900a317 	ldw	r4,652(sp)
   83000:	2000021e 	bne	r4,zero,8300c <__svfscanf_r+0x774>
   83004:	00bfffc4 	movi	r2,-1
   83008:	d880a315 	stw	r2,652(sp)
   8300c:	a880004c 	andi	r2,r21,1
   83010:	1005003a 	cmpeq	r2,r2,zero
   83014:	1003651e 	bne	r2,zero,83dac <__svfscanf_r+0x1514>
   83018:	adc0040c 	andi	r23,r21,16
   8301c:	b807003a 	cmpeq	r3,r23,zero
   83020:	d8c0a715 	stw	r3,668(sp)
   83024:	1802f61e 	bne	r3,zero,83c00 <__svfscanf_r+0x1368>
   83028:	dd400104 	addi	r21,sp,4
   8302c:	0025883a 	mov	r18,zero
   83030:	073fffc4 	movi	fp,-1
   83034:	81400017 	ldw	r5,0(r16)
   83038:	98800017 	ldw	r2,0(r19)
   8303c:	29c00003 	ldbu	r7,0(r5)
   83040:	38c03fcc 	andi	r3,r7,255
   83044:	1887883a 	add	r3,r3,r2
   83048:	19000003 	ldbu	r4,0(r3)
   8304c:	2100020c 	andi	r4,r4,8
   83050:	2000321e 	bne	r4,zero,8311c <__svfscanf_r+0x884>
   83054:	d8c0a317 	ldw	r3,652(sp)
   83058:	18003026 	beq	r3,zero,8311c <__svfscanf_r+0x884>
   8305c:	00800274 	movhi	r2,9
   83060:	10963c04 	addi	r2,r2,22768
   83064:	10c00017 	ldw	r3,0(r2)
   83068:	90fe6026 	beq	r18,r3,829ec <__svfscanf_r+0x154>
   8306c:	d8c04404 	addi	r3,sp,272
   83070:	80800117 	ldw	r2,4(r16)
   83074:	d8c0a515 	stw	r3,660(sp)
   83078:	d900a517 	ldw	r4,660(sp)
   8307c:	10ffffc4 	addi	r3,r2,-1
   83080:	29800044 	addi	r6,r5,1
   83084:	80c00115 	stw	r3,4(r16)
   83088:	2485883a 	add	r2,r4,r18
   8308c:	81800015 	stw	r6,0(r16)
   83090:	d9000204 	addi	r4,sp,8
   83094:	000b883a 	mov	r5,zero
   83098:	01800204 	movi	r6,8
   8309c:	11c00005 	stb	r7,0(r2)
   830a0:	00878480 	call	87848 <memset>
   830a4:	d980a517 	ldw	r6,660(sp)
   830a8:	94800044 	addi	r18,r18,1
   830ac:	d8800204 	addi	r2,sp,8
   830b0:	b009883a 	mov	r4,r22
   830b4:	a80b883a 	mov	r5,r21
   830b8:	900f883a 	mov	r7,r18
   830bc:	d8800015 	stw	r2,0(sp)
   830c0:	00874e40 	call	874e4 <_mbrtowc_r>
   830c4:	1007883a 	mov	r3,r2
   830c8:	173e4826 	beq	r2,fp,829ec <__svfscanf_r+0x154>
   830cc:	1002c91e 	bne	r2,zero,83bf4 <__svfscanf_r+0x135c>
   830d0:	a8000015 	stw	zero,0(r21)
   830d4:	a9000017 	ldw	r4,0(r21)
   830d8:	0086b200 	call	86b20 <iswspace>
   830dc:	1002bc1e 	bne	r2,zero,83bd0 <__svfscanf_r+0x1338>
   830e0:	d900a317 	ldw	r4,652(sp)
   830e4:	d880a717 	ldw	r2,668(sp)
   830e8:	8ca3883a 	add	r17,r17,r18
   830ec:	213fffc4 	addi	r4,r4,-1
   830f0:	d900a315 	stw	r4,652(sp)
   830f4:	10000126 	beq	r2,zero,830fc <__svfscanf_r+0x864>
   830f8:	ad400104 	addi	r21,r21,4
   830fc:	0025883a 	mov	r18,zero
   83100:	80c00117 	ldw	r3,4(r16)
   83104:	00ffcb16 	blt	zero,r3,83034 <__svfscanf_r+0x79c>
   83108:	b009883a 	mov	r4,r22
   8310c:	800b883a 	mov	r5,r16
   83110:	008914c0 	call	8914c <__srefill_r>
   83114:	103fc726 	beq	r2,zero,83034 <__svfscanf_r+0x79c>
   83118:	903e341e 	bne	r18,zero,829ec <__svfscanf_r+0x154>
   8311c:	b83df11e 	bne	r23,zero,828e4 <__svfscanf_r+0x4c>
   83120:	d900a217 	ldw	r4,648(sp)
   83124:	a8000015 	stw	zero,0(r21)
   83128:	21000044 	addi	r4,r4,1
   8312c:	d900a215 	stw	r4,648(sp)
   83130:	003dec06 	br	828e4 <__svfscanf_r+0x4c>
   83134:	d900a317 	ldw	r4,652(sp)
   83138:	00805704 	movi	r2,348
   8313c:	20ffffc4 	addi	r3,r4,-1
   83140:	10c0902e 	bgeu	r2,r3,83384 <__svfscanf_r+0xaec>
   83144:	00805744 	movi	r2,349
   83148:	24ffa8c4 	addi	r19,r4,-349
   8314c:	ad41e014 	ori	r21,r21,1920
   83150:	d880a315 	stw	r2,652(sp)
   83154:	00010806 	br	83578 <__svfscanf_r+0xce0>
   83158:	b009883a 	mov	r4,r22
   8315c:	800b883a 	mov	r5,r16
   83160:	008914c0 	call	8914c <__srefill_r>
   83164:	103ebd26 	beq	r2,zero,82c5c <__svfscanf_r+0x3c4>
   83168:	003e2006 	br	829ec <__svfscanf_r+0x154>
   8316c:	d900a317 	ldw	r4,652(sp)
   83170:	ac836014 	ori	r18,r21,3456
   83174:	2002941e 	bne	r4,zero,83bc8 <__svfscanf_r+0x1330>
   83178:	d8804404 	addi	r2,sp,272
   8317c:	d880a515 	stw	r2,660(sp)
   83180:	002f883a 	mov	r23,zero
   83184:	102b883a 	mov	r21,r2
   83188:	9080400c 	andi	r2,r18,256
   8318c:	10000926 	beq	r2,zero,831b4 <__svfscanf_r+0x91c>
   83190:	d8c0a517 	ldw	r3,660(sp)
   83194:	1d40052e 	bgeu	r3,r21,831ac <__svfscanf_r+0x914>
   83198:	ad7fffc4 	addi	r21,r21,-1
   8319c:	a9400007 	ldb	r5,0(r21)
   831a0:	b009883a 	mov	r4,r22
   831a4:	800d883a 	mov	r6,r16
   831a8:	008ba040 	call	8ba04 <_ungetc_r>
   831ac:	d900a517 	ldw	r4,660(sp)
   831b0:	257dee26 	beq	r4,r21,8296c <__svfscanf_r+0xd4>
   831b4:	9080040c 	andi	r2,r18,16
   831b8:	10000a26 	beq	r2,zero,831e4 <__svfscanf_r+0x94c>
   831bc:	d8c0a517 	ldw	r3,660(sp)
   831c0:	a8c5c83a 	sub	r2,r21,r3
   831c4:	b885883a 	add	r2,r23,r2
   831c8:	88a3883a 	add	r17,r17,r2
   831cc:	003dc506 	br	828e4 <__svfscanf_r+0x4c>
   831d0:	a0c00007 	ldb	r3,0(r20)
   831d4:	00801b04 	movi	r2,108
   831d8:	18801726 	beq	r3,r2,83238 <__svfscanf_r+0x9a0>
   831dc:	ad400054 	ori	r21,r21,1
   831e0:	003e0906 	br	82a08 <__svfscanf_r+0x170>
   831e4:	a8000005 	stb	zero,0(r21)
   831e8:	d8c0a017 	ldw	r3,640(sp)
   831ec:	d940a517 	ldw	r5,660(sp)
   831f0:	d9c0a117 	ldw	r7,644(sp)
   831f4:	b009883a 	mov	r4,r22
   831f8:	000d883a 	mov	r6,zero
   831fc:	183ee83a 	callr	r3
   83200:	1007883a 	mov	r3,r2
   83204:	9080080c 	andi	r2,r18,32
   83208:	1000251e 	bne	r2,zero,832a0 <__svfscanf_r+0xa08>
   8320c:	9080010c 	andi	r2,r18,4
   83210:	10000c26 	beq	r2,zero,83244 <__svfscanf_r+0x9ac>
   83214:	d900a417 	ldw	r4,656(sp)
   83218:	20800017 	ldw	r2,0(r4)
   8321c:	21000104 	addi	r4,r4,4
   83220:	d900a415 	stw	r4,656(sp)
   83224:	10c0000d 	sth	r3,0(r2)
   83228:	d880a217 	ldw	r2,648(sp)
   8322c:	10800044 	addi	r2,r2,1
   83230:	d880a215 	stw	r2,648(sp)
   83234:	003fe106 	br	831bc <__svfscanf_r+0x924>
   83238:	a5000044 	addi	r20,r20,1
   8323c:	ad400094 	ori	r21,r21,2
   83240:	003df106 	br	82a08 <__svfscanf_r+0x170>
   83244:	9080004c 	andi	r2,r18,1
   83248:	1005003a 	cmpeq	r2,r2,zero
   8324c:	10001426 	beq	r2,zero,832a0 <__svfscanf_r+0xa08>
   83250:	9080008c 	andi	r2,r18,2
   83254:	10001226 	beq	r2,zero,832a0 <__svfscanf_r+0xa08>
   83258:	d8c0a017 	ldw	r3,640(sp)
   8325c:	00800274 	movhi	r2,9
   83260:	10acf504 	addi	r2,r2,-19500
   83264:	18801426 	beq	r3,r2,832b8 <__svfscanf_r+0xa20>
   83268:	d9c0a117 	ldw	r7,644(sp)
   8326c:	d940a517 	ldw	r5,660(sp)
   83270:	000d883a 	mov	r6,zero
   83274:	b009883a 	mov	r4,r22
   83278:	008b0bc0 	call	8b0bc <_strtoll_r>
   8327c:	100d883a 	mov	r6,r2
   83280:	180f883a 	mov	r7,r3
   83284:	d900a417 	ldw	r4,656(sp)
   83288:	20800017 	ldw	r2,0(r4)
   8328c:	21000104 	addi	r4,r4,4
   83290:	d900a415 	stw	r4,656(sp)
   83294:	11c00115 	stw	r7,4(r2)
   83298:	11800015 	stw	r6,0(r2)
   8329c:	003fe206 	br	83228 <__svfscanf_r+0x990>
   832a0:	d900a417 	ldw	r4,656(sp)
   832a4:	20800017 	ldw	r2,0(r4)
   832a8:	21000104 	addi	r4,r4,4
   832ac:	d900a415 	stw	r4,656(sp)
   832b0:	10c00015 	stw	r3,0(r2)
   832b4:	003fdc06 	br	83228 <__svfscanf_r+0x990>
   832b8:	d9c0a117 	ldw	r7,644(sp)
   832bc:	d940a517 	ldw	r5,660(sp)
   832c0:	000d883a 	mov	r6,zero
   832c4:	b009883a 	mov	r4,r22
   832c8:	008b6380 	call	8b638 <_strtoull_r>
   832cc:	100d883a 	mov	r6,r2
   832d0:	180f883a 	mov	r7,r3
   832d4:	003feb06 	br	83284 <__svfscanf_r+0x9ec>
   832d8:	9080200c 	andi	r2,r18,128
   832dc:	103faa26 	beq	r2,zero,83188 <__svfscanf_r+0x8f0>
   832e0:	00bfdfc4 	movi	r2,-129
   832e4:	90a4703a 	and	r18,r18,r2
   832e8:	a9400005 	stb	r5,0(r21)
   832ec:	ad400044 	addi	r21,r21,1
   832f0:	80c00117 	ldw	r3,4(r16)
   832f4:	18ffffc4 	addi	r3,r3,-1
   832f8:	80c00115 	stw	r3,4(r16)
   832fc:	00c0130e 	bge	zero,r3,8334c <__svfscanf_r+0xab4>
   83300:	31800044 	addi	r6,r6,1
   83304:	81800015 	stw	r6,0(r16)
   83308:	d880a317 	ldw	r2,652(sp)
   8330c:	10bfffc4 	addi	r2,r2,-1
   83310:	d880a315 	stw	r2,652(sp)
   83314:	103ede1e 	bne	r2,zero,82e90 <__svfscanf_r+0x5f8>
   83318:	003f9b06 	br	83188 <__svfscanf_r+0x8f0>
   8331c:	9082000c 	andi	r2,r18,2048
   83320:	103ff126 	beq	r2,zero,832e8 <__svfscanf_r+0xa50>
   83324:	d8c0a117 	ldw	r3,644(sp)
   83328:	1800031e 	bne	r3,zero,83338 <__svfscanf_r+0xaa0>
   8332c:	01000204 	movi	r4,8
   83330:	94808014 	ori	r18,r18,512
   83334:	d900a115 	stw	r4,644(sp)
   83338:	9081000c 	andi	r2,r18,1024
   8333c:	10000826 	beq	r2,zero,83360 <__svfscanf_r+0xac8>
   83340:	00be9fc4 	movi	r2,-1409
   83344:	90a4703a 	and	r18,r18,r2
   83348:	003fe706 	br	832e8 <__svfscanf_r+0xa50>
   8334c:	b009883a 	mov	r4,r22
   83350:	800b883a 	mov	r5,r16
   83354:	008914c0 	call	8914c <__srefill_r>
   83358:	103feb26 	beq	r2,zero,83308 <__svfscanf_r+0xa70>
   8335c:	003f8a06 	br	83188 <__svfscanf_r+0x8f0>
   83360:	98000426 	beq	r19,zero,83374 <__svfscanf_r+0xadc>
   83364:	d880a317 	ldw	r2,652(sp)
   83368:	9cffffc4 	addi	r19,r19,-1
   8336c:	10800044 	addi	r2,r2,1
   83370:	d880a315 	stw	r2,652(sp)
   83374:	00bf1fc4 	movi	r2,-897
   83378:	90a4703a 	and	r18,r18,r2
   8337c:	bdc00044 	addi	r23,r23,1
   83380:	003fdb06 	br	832f0 <__svfscanf_r+0xa58>
   83384:	d900a317 	ldw	r4,652(sp)
   83388:	ad41e014 	ori	r21,r21,1920
   8338c:	2000791e 	bne	r4,zero,83574 <__svfscanf_r+0xcdc>
   83390:	d8c04404 	addi	r3,sp,272
   83394:	d8c0a515 	stw	r3,660(sp)
   83398:	182f883a 	mov	r23,r3
   8339c:	d8009c15 	stw	zero,624(sp)
   833a0:	d8009d15 	stw	zero,628(sp)
   833a4:	d8009f15 	stw	zero,636(sp)
   833a8:	d8009e15 	stw	zero,632(sp)
   833ac:	0039883a 	mov	fp,zero
   833b0:	e1003fcc 	andi	r4,fp,255
   833b4:	2100201c 	xori	r4,r4,128
   833b8:	213fe004 	addi	r4,r4,-128
   833bc:	20ffffc4 	addi	r3,r4,-1
   833c0:	00800184 	movi	r2,6
   833c4:	10c01736 	bltu	r2,r3,83424 <__svfscanf_r+0xb8c>
   833c8:	00c00084 	movi	r3,2
   833cc:	19026d0e 	bge	r3,r4,83d84 <__svfscanf_r+0x14ec>
   833d0:	008000c4 	movi	r2,3
   833d4:	1100130e 	bge	r2,r4,83424 <__svfscanf_r+0xb8c>
   833d8:	e4ffffc4 	addi	r19,fp,-1
   833dc:	b825883a 	mov	r18,r23
   833e0:	94bfffc4 	addi	r18,r18,-1
   833e4:	91400007 	ldb	r5,0(r18)
   833e8:	b009883a 	mov	r4,r22
   833ec:	800d883a 	mov	r6,r16
   833f0:	008ba040 	call	8ba04 <_ungetc_r>
   833f4:	9cffffc4 	addi	r19,r19,-1
   833f8:	98c03fcc 	andi	r3,r19,255
   833fc:	18c0201c 	xori	r3,r3,128
   83400:	18ffe004 	addi	r3,r3,-128
   83404:	00800084 	movi	r2,2
   83408:	18bff51e 	bne	r3,r2,833e0 <__svfscanf_r+0xb48>
   8340c:	e0bfff04 	addi	r2,fp,-4
   83410:	10803fcc 	andi	r2,r2,255
   83414:	b887c83a 	sub	r3,r23,r2
   83418:	8885c83a 	sub	r2,r17,r2
   8341c:	147fffc4 	addi	r17,r2,-1
   83420:	1dffffc4 	addi	r23,r3,-1
   83424:	a880400c 	andi	r2,r21,256
   83428:	10001226 	beq	r2,zero,83474 <__svfscanf_r+0xbdc>
   8342c:	a881000c 	andi	r2,r21,1024
   83430:	10002b1e 	bne	r2,zero,834e0 <__svfscanf_r+0xc48>
   83434:	bdffffc4 	addi	r23,r23,-1
   83438:	b9400007 	ldb	r5,0(r23)
   8343c:	00801944 	movi	r2,101
   83440:	8c7fffc4 	addi	r17,r17,-1
   83444:	28800826 	beq	r5,r2,83468 <__svfscanf_r+0xbd0>
   83448:	00801144 	movi	r2,69
   8344c:	28800626 	beq	r5,r2,83468 <__svfscanf_r+0xbd0>
   83450:	bdffffc4 	addi	r23,r23,-1
   83454:	b009883a 	mov	r4,r22
   83458:	800d883a 	mov	r6,r16
   8345c:	008ba040 	call	8ba04 <_ungetc_r>
   83460:	b9400007 	ldb	r5,0(r23)
   83464:	8c7fffc4 	addi	r17,r17,-1
   83468:	b009883a 	mov	r4,r22
   8346c:	800d883a 	mov	r6,r16
   83470:	008ba040 	call	8ba04 <_ungetc_r>
   83474:	a880040c 	andi	r2,r21,16
   83478:	103d1a1e 	bne	r2,zero,828e4 <__svfscanf_r+0x4c>
   8347c:	a8c1800c 	andi	r3,r21,1536
   83480:	00810004 	movi	r2,1024
   83484:	b8000005 	stb	zero,0(r23)
   83488:	18813326 	beq	r3,r2,83958 <__svfscanf_r+0x10c0>
   8348c:	d8809d17 	ldw	r2,628(sp)
   83490:	1000251e 	bne	r2,zero,83528 <__svfscanf_r+0xc90>
   83494:	d940a517 	ldw	r5,660(sp)
   83498:	b009883a 	mov	r4,r22
   8349c:	000d883a 	mov	r6,zero
   834a0:	008973c0 	call	8973c <_strtod_r>
   834a4:	a900004c 	andi	r4,r21,1
   834a8:	2009003a 	cmpeq	r4,r4,zero
   834ac:	1025883a 	mov	r18,r2
   834b0:	1827883a 	mov	r19,r3
   834b4:	2000141e 	bne	r4,zero,83508 <__svfscanf_r+0xc70>
   834b8:	d8c0a417 	ldw	r3,656(sp)
   834bc:	18800017 	ldw	r2,0(r3)
   834c0:	1d400104 	addi	r21,r3,4
   834c4:	14c00115 	stw	r19,4(r2)
   834c8:	14800015 	stw	r18,0(r2)
   834cc:	d8c0a217 	ldw	r3,648(sp)
   834d0:	dd40a415 	stw	r21,656(sp)
   834d4:	18c00044 	addi	r3,r3,1
   834d8:	d8c0a215 	stw	r3,648(sp)
   834dc:	003d0106 	br	828e4 <__svfscanf_r+0x4c>
   834e0:	d900a517 	ldw	r4,660(sp)
   834e4:	25fd212e 	bgeu	r4,r23,8296c <__svfscanf_r+0xd4>
   834e8:	bdffffc4 	addi	r23,r23,-1
   834ec:	b9400007 	ldb	r5,0(r23)
   834f0:	b009883a 	mov	r4,r22
   834f4:	800d883a 	mov	r6,r16
   834f8:	008ba040 	call	8ba04 <_ungetc_r>
   834fc:	d880a517 	ldw	r2,660(sp)
   83500:	15fff936 	bltu	r2,r23,834e8 <__svfscanf_r+0xc50>
   83504:	003d1906 	br	8296c <__svfscanf_r+0xd4>
   83508:	a880008c 	andi	r2,r21,2
   8350c:	10011926 	beq	r2,zero,83974 <__svfscanf_r+0x10dc>
   83510:	d900a417 	ldw	r4,656(sp)
   83514:	20800017 	ldw	r2,0(r4)
   83518:	25400104 	addi	r21,r4,4
   8351c:	10c00115 	stw	r3,4(r2)
   83520:	14800015 	stw	r18,0(r2)
   83524:	003fe906 	br	834cc <__svfscanf_r+0xc34>
   83528:	d8c09c17 	ldw	r3,624(sp)
   8352c:	b009883a 	mov	r4,r22
   83530:	000d883a 	mov	r6,zero
   83534:	19400044 	addi	r5,r3,1
   83538:	01c00284 	movi	r7,10
   8353c:	008ae480 	call	8ae48 <_strtol_r>
   83540:	d9009d17 	ldw	r4,628(sp)
   83544:	110dc83a 	sub	r6,r2,r4
   83548:	d8c0a517 	ldw	r3,660(sp)
   8354c:	d9009c17 	ldw	r4,624(sp)
   83550:	188054c4 	addi	r2,r3,339
   83554:	20800236 	bltu	r4,r2,83560 <__svfscanf_r+0xcc8>
   83558:	18805484 	addi	r2,r3,338
   8355c:	d8809c15 	stw	r2,624(sp)
   83560:	d9009c17 	ldw	r4,624(sp)
   83564:	01400274 	movhi	r5,9
   83568:	294ded04 	addi	r5,r5,14260
   8356c:	00894d40 	call	894d4 <sprintf>
   83570:	003fc806 	br	83494 <__svfscanf_r+0xbfc>
   83574:	0027883a 	mov	r19,zero
   83578:	d8c04404 	addi	r3,sp,272
   8357c:	d8c0a515 	stw	r3,660(sp)
   83580:	182f883a 	mov	r23,r3
   83584:	d8009f15 	stw	zero,636(sp)
   83588:	d8009e15 	stw	zero,632(sp)
   8358c:	d8009d15 	stw	zero,628(sp)
   83590:	d8009c15 	stw	zero,624(sp)
   83594:	0039883a 	mov	fp,zero
   83598:	0025883a 	mov	r18,zero
   8359c:	80800017 	ldw	r2,0(r16)
   835a0:	11400003 	ldbu	r5,0(r2)
   835a4:	00801384 	movi	r2,78
   835a8:	28fff544 	addi	r3,r5,-43
   835ac:	18c03fcc 	andi	r3,r3,255
   835b0:	10c08336 	bltu	r2,r3,837c0 <__svfscanf_r+0xf28>
   835b4:	18c5883a 	add	r2,r3,r3
   835b8:	1085883a 	add	r2,r2,r2
   835bc:	00c00234 	movhi	r3,8
   835c0:	18cd7404 	addi	r3,r3,13776
   835c4:	10c5883a 	add	r2,r2,r3
   835c8:	11000017 	ldw	r4,0(r2)
   835cc:	2000683a 	jmp	r4
   835d0:	00083778 	rdprs	zero,zero,8413
   835d4:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   835d8:	00083778 	rdprs	zero,zero,8413
   835dc:	00083804 	movi	zero,8416
   835e0:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   835e4:	00083870 	cmpltui	zero,zero,8417
   835e8:	000838a4 	muli	zero,zero,8418
   835ec:	000838a4 	muli	zero,zero,8418
   835f0:	000838a4 	muli	zero,zero,8418
   835f4:	000838a4 	muli	zero,zero,8418
   835f8:	000838a4 	muli	zero,zero,8418
   835fc:	000838a4 	muli	zero,zero,8418
   83600:	000838a4 	muli	zero,zero,8418
   83604:	000838a4 	muli	zero,zero,8418
   83608:	000838a4 	muli	zero,zero,8418
   8360c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83610:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83614:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83618:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   8361c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83620:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83624:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83628:	000838c4 	movi	zero,8419
   8362c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83630:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83634:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83638:	000838d4 	movui	zero,8419
   8363c:	00083920 	cmpeqi	zero,zero,8420
   83640:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83644:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83648:	000839f8 	rdprs	zero,zero,8423
   8364c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83650:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83654:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83658:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   8365c:	000839a4 	muli	zero,zero,8422
   83660:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83664:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83668:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   8366c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83670:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83674:	00083a38 	rdprs	zero,zero,8424
   83678:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   8367c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83680:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83684:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83688:	0008393c 	xorhi	zero,zero,8420
   8368c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83690:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83694:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83698:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   8369c:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836a0:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836a4:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836a8:	000838c4 	movi	zero,8419
   836ac:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836b0:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836b4:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836b8:	000838d4 	movui	zero,8419
   836bc:	00083920 	cmpeqi	zero,zero,8420
   836c0:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836c4:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836c8:	000839f8 	rdprs	zero,zero,8423
   836cc:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836d0:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836d4:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836d8:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836dc:	000839a4 	muli	zero,zero,8422
   836e0:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836e4:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836e8:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836ec:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836f0:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836f4:	00083a38 	rdprs	zero,zero,8424
   836f8:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   836fc:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83700:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83704:	000837c0 	call	837c <__alt_mem_sram_0-0x77c84>
   83708:	0008393c 	xorhi	zero,zero,8420
   8370c:	a880040c 	andi	r2,r21,16
   83710:	10004826 	beq	r2,zero,83834 <__svfscanf_r+0xf9c>
   83714:	0027883a 	mov	r19,zero
   83718:	00000b06 	br	83748 <__svfscanf_r+0xeb0>
   8371c:	80800017 	ldw	r2,0(r16)
   83720:	b009883a 	mov	r4,r22
   83724:	800b883a 	mov	r5,r16
   83728:	148d883a 	add	r6,r2,r18
   8372c:	81800015 	stw	r6,0(r16)
   83730:	9ca7883a 	add	r19,r19,r18
   83734:	008914c0 	call	8914c <__srefill_r>
   83738:	103dc61e 	bne	r2,zero,82e54 <__svfscanf_r+0x5bc>
   8373c:	d880a317 	ldw	r2,652(sp)
   83740:	1485c83a 	sub	r2,r2,r18
   83744:	d880a315 	stw	r2,652(sp)
   83748:	84800117 	ldw	r18,4(r16)
   8374c:	d900a317 	ldw	r4,652(sp)
   83750:	913ff216 	blt	r18,r4,8371c <__svfscanf_r+0xe84>
   83754:	d900a317 	ldw	r4,652(sp)
   83758:	80800017 	ldw	r2,0(r16)
   8375c:	9927883a 	add	r19,r19,r4
   83760:	9107c83a 	sub	r3,r18,r4
   83764:	110d883a 	add	r6,r2,r4
   83768:	8ce3883a 	add	r17,r17,r19
   8376c:	80c00115 	stw	r3,4(r16)
   83770:	81800015 	stw	r6,0(r16)
   83774:	003c5b06 	br	828e4 <__svfscanf_r+0x4c>
   83778:	a880200c 	andi	r2,r21,128
   8377c:	10001026 	beq	r2,zero,837c0 <__svfscanf_r+0xf28>
   83780:	00bfdfc4 	movi	r2,-129
   83784:	a8aa703a 	and	r21,r21,r2
   83788:	b9400005 	stb	r5,0(r23)
   8378c:	bdc00044 	addi	r23,r23,1
   83790:	80c00117 	ldw	r3,4(r16)
   83794:	8c400044 	addi	r17,r17,1
   83798:	18bfffc4 	addi	r2,r3,-1
   8379c:	80800115 	stw	r2,4(r16)
   837a0:	00801f0e 	bge	zero,r2,83820 <__svfscanf_r+0xf88>
   837a4:	80800017 	ldw	r2,0(r16)
   837a8:	10800044 	addi	r2,r2,1
   837ac:	80800015 	stw	r2,0(r16)
   837b0:	d880a317 	ldw	r2,652(sp)
   837b4:	10bfffc4 	addi	r2,r2,-1
   837b8:	d880a315 	stw	r2,652(sp)
   837bc:	103f771e 	bne	r2,zero,8359c <__svfscanf_r+0xd04>
   837c0:	d8c09e17 	ldw	r3,632(sp)
   837c4:	18000226 	beq	r3,zero,837d0 <__svfscanf_r+0xf38>
   837c8:	00bfbfc4 	movi	r2,-257
   837cc:	a8aa703a 	and	r21,r21,r2
   837d0:	90ffffc4 	addi	r3,r18,-1
   837d4:	00800044 	movi	r2,1
   837d8:	10fef536 	bltu	r2,r3,833b0 <__svfscanf_r+0xb18>
   837dc:	d900a517 	ldw	r4,660(sp)
   837e0:	25fc622e 	bgeu	r4,r23,8296c <__svfscanf_r+0xd4>
   837e4:	bdffffc4 	addi	r23,r23,-1
   837e8:	b9400007 	ldb	r5,0(r23)
   837ec:	b009883a 	mov	r4,r22
   837f0:	800d883a 	mov	r6,r16
   837f4:	008ba040 	call	8ba04 <_ungetc_r>
   837f8:	d880a517 	ldw	r2,660(sp)
   837fc:	15fff936 	bltu	r2,r23,837e4 <__svfscanf_r+0xf4c>
   83800:	003c5a06 	br	8296c <__svfscanf_r+0xd4>
   83804:	a880800c 	andi	r2,r21,512
   83808:	103fed26 	beq	r2,zero,837c0 <__svfscanf_r+0xf28>
   8380c:	d9009e17 	ldw	r4,632(sp)
   83810:	00bf5fc4 	movi	r2,-641
   83814:	a8aa703a 	and	r21,r21,r2
   83818:	d9009f15 	stw	r4,636(sp)
   8381c:	003fda06 	br	83788 <__svfscanf_r+0xef0>
   83820:	b009883a 	mov	r4,r22
   83824:	800b883a 	mov	r5,r16
   83828:	008914c0 	call	8914c <__srefill_r>
   8382c:	103fe026 	beq	r2,zero,837b0 <__svfscanf_r+0xf18>
   83830:	003fe306 	br	837c0 <__svfscanf_r+0xf28>
   83834:	d880a417 	ldw	r2,656(sp)
   83838:	d980a317 	ldw	r6,652(sp)
   8383c:	01400044 	movi	r5,1
   83840:	11000017 	ldw	r4,0(r2)
   83844:	800f883a 	mov	r7,r16
   83848:	00860840 	call	86084 <fread>
   8384c:	103c6726 	beq	r2,zero,829ec <__svfscanf_r+0x154>
   83850:	d8c0a417 	ldw	r3,656(sp)
   83854:	d900a217 	ldw	r4,648(sp)
   83858:	88a3883a 	add	r17,r17,r2
   8385c:	18c00104 	addi	r3,r3,4
   83860:	21000044 	addi	r4,r4,1
   83864:	d8c0a415 	stw	r3,656(sp)
   83868:	d900a215 	stw	r4,648(sp)
   8386c:	003c1d06 	br	828e4 <__svfscanf_r+0x4c>
   83870:	a880400c 	andi	r2,r21,256
   83874:	10000b26 	beq	r2,zero,838a4 <__svfscanf_r+0x100c>
   83878:	00bfdfc4 	movi	r2,-129
   8387c:	a8aa703a 	and	r21,r21,r2
   83880:	d8809e17 	ldw	r2,632(sp)
   83884:	10800044 	addi	r2,r2,1
   83888:	d8809e15 	stw	r2,632(sp)
   8388c:	983fc026 	beq	r19,zero,83790 <__svfscanf_r+0xef8>
   83890:	d8c0a317 	ldw	r3,652(sp)
   83894:	9cffffc4 	addi	r19,r19,-1
   83898:	18c00044 	addi	r3,r3,1
   8389c:	d8c0a315 	stw	r3,652(sp)
   838a0:	003fbb06 	br	83790 <__svfscanf_r+0xef8>
   838a4:	e0803fcc 	andi	r2,fp,255
   838a8:	1080201c 	xori	r2,r2,128
   838ac:	10bfe004 	addi	r2,r2,-128
   838b0:	9085883a 	add	r2,r18,r2
   838b4:	103fc21e 	bne	r2,zero,837c0 <__svfscanf_r+0xf28>
   838b8:	00bf9fc4 	movi	r2,-385
   838bc:	a8aa703a 	and	r21,r21,r2
   838c0:	003fb106 	br	83788 <__svfscanf_r+0xef0>
   838c4:	00800044 	movi	r2,1
   838c8:	90bfbd1e 	bne	r18,r2,837c0 <__svfscanf_r+0xf28>
   838cc:	04800084 	movi	r18,2
   838d0:	003fad06 	br	83788 <__svfscanf_r+0xef0>
   838d4:	a8c1400c 	andi	r3,r21,1280
   838d8:	00810004 	movi	r2,1024
   838dc:	18800426 	beq	r3,r2,838f0 <__svfscanf_r+0x1058>
   838e0:	a884703a 	and	r2,r21,r2
   838e4:	103fb626 	beq	r2,zero,837c0 <__svfscanf_r+0xf28>
   838e8:	d8809e17 	ldw	r2,632(sp)
   838ec:	103fb826 	beq	r2,zero,837d0 <__svfscanf_r+0xf38>
   838f0:	a880800c 	andi	r2,r21,512
   838f4:	1000051e 	bne	r2,zero,8390c <__svfscanf_r+0x1074>
   838f8:	d8c09e17 	ldw	r3,632(sp)
   838fc:	d9009f17 	ldw	r4,636(sp)
   83900:	ddc09c15 	stw	r23,624(sp)
   83904:	1907c83a 	sub	r3,r3,r4
   83908:	d8c09d15 	stw	r3,628(sp)
   8390c:	00be7fc4 	movi	r2,-1537
   83910:	a884703a 	and	r2,r21,r2
   83914:	15406014 	ori	r21,r2,384
   83918:	d8009e15 	stw	zero,632(sp)
   8391c:	003f9a06 	br	83788 <__svfscanf_r+0xef0>
   83920:	e0c03fcc 	andi	r3,fp,255
   83924:	18c0201c 	xori	r3,r3,128
   83928:	18ffe004 	addi	r3,r3,-128
   8392c:	00800084 	movi	r2,2
   83930:	18bfa31e 	bne	r3,r2,837c0 <__svfscanf_r+0xf28>
   83934:	070000c4 	movi	fp,3
   83938:	003f9306 	br	83788 <__svfscanf_r+0xef0>
   8393c:	e0c03fcc 	andi	r3,fp,255
   83940:	18c0201c 	xori	r3,r3,128
   83944:	18ffe004 	addi	r3,r3,-128
   83948:	008001c4 	movi	r2,7
   8394c:	18bf9c1e 	bne	r3,r2,837c0 <__svfscanf_r+0xf28>
   83950:	07000204 	movi	fp,8
   83954:	003f8c06 	br	83788 <__svfscanf_r+0xef0>
   83958:	d8c09e17 	ldw	r3,632(sp)
   8395c:	d9009f17 	ldw	r4,636(sp)
   83960:	1905c83a 	sub	r2,r3,r4
   83964:	103ecb26 	beq	r2,zero,83494 <__svfscanf_r+0xbfc>
   83968:	008dc83a 	sub	r6,zero,r2
   8396c:	ddc09c15 	stw	r23,624(sp)
   83970:	003ef506 	br	83548 <__svfscanf_r+0xcb0>
   83974:	d880a417 	ldw	r2,656(sp)
   83978:	9009883a 	mov	r4,r18
   8397c:	180b883a 	mov	r5,r3
   83980:	15c00017 	ldw	r23,0(r2)
   83984:	15400104 	addi	r21,r2,4
   83988:	008936c0 	call	8936c <__isnand>
   8398c:	1000311e 	bne	r2,zero,83a54 <__svfscanf_r+0x11bc>
   83990:	980b883a 	mov	r5,r19
   83994:	9009883a 	mov	r4,r18
   83998:	008ed980 	call	8ed98 <__truncdfsf2>
   8399c:	b8800015 	stw	r2,0(r23)
   839a0:	003eca06 	br	834cc <__svfscanf_r+0xc34>
   839a4:	9000101e 	bne	r18,zero,839e8 <__svfscanf_r+0x1150>
   839a8:	a8c1c00c 	andi	r3,r21,1792
   839ac:	0081c004 	movi	r2,1792
   839b0:	18800926 	beq	r3,r2,839d8 <__svfscanf_r+0x1140>
   839b4:	e0c03fcc 	andi	r3,fp,255
   839b8:	18c0201c 	xori	r3,r3,128
   839bc:	18ffe004 	addi	r3,r3,-128
   839c0:	00800044 	movi	r2,1
   839c4:	18800226 	beq	r3,r2,839d0 <__svfscanf_r+0x1138>
   839c8:	00800104 	movi	r2,4
   839cc:	18bf7c1e 	bne	r3,r2,837c0 <__svfscanf_r+0xf28>
   839d0:	e7000044 	addi	fp,fp,1
   839d4:	003f6c06 	br	83788 <__svfscanf_r+0xef0>
   839d8:	00be1fc4 	movi	r2,-1921
   839dc:	a8aa703a 	and	r21,r21,r2
   839e0:	04800044 	movi	r18,1
   839e4:	003f6806 	br	83788 <__svfscanf_r+0xef0>
   839e8:	00800084 	movi	r2,2
   839ec:	90bff11e 	bne	r18,r2,839b4 <__svfscanf_r+0x111c>
   839f0:	048000c4 	movi	r18,3
   839f4:	003f6406 	br	83788 <__svfscanf_r+0xef0>
   839f8:	e0c03fcc 	andi	r3,fp,255
   839fc:	18c0201c 	xori	r3,r3,128
   83a00:	18ffe004 	addi	r3,r3,-128
   83a04:	1800071e 	bne	r3,zero,83a24 <__svfscanf_r+0x118c>
   83a08:	a8c1c00c 	andi	r3,r21,1792
   83a0c:	0081c004 	movi	r2,1792
   83a10:	18bf6b1e 	bne	r3,r2,837c0 <__svfscanf_r+0xf28>
   83a14:	00be1fc4 	movi	r2,-1921
   83a18:	a8aa703a 	and	r21,r21,r2
   83a1c:	07000044 	movi	fp,1
   83a20:	003f5906 	br	83788 <__svfscanf_r+0xef0>
   83a24:	008000c4 	movi	r2,3
   83a28:	18bfe926 	beq	r3,r2,839d0 <__svfscanf_r+0x1138>
   83a2c:	00800144 	movi	r2,5
   83a30:	18bfe726 	beq	r3,r2,839d0 <__svfscanf_r+0x1138>
   83a34:	003f6206 	br	837c0 <__svfscanf_r+0xf28>
   83a38:	e0c03fcc 	andi	r3,fp,255
   83a3c:	18c0201c 	xori	r3,r3,128
   83a40:	18ffe004 	addi	r3,r3,-128
   83a44:	00800184 	movi	r2,6
   83a48:	18bf5d1e 	bne	r3,r2,837c0 <__svfscanf_r+0xf28>
   83a4c:	070001c4 	movi	fp,7
   83a50:	003f4d06 	br	83788 <__svfscanf_r+0xef0>
   83a54:	0009883a 	mov	r4,zero
   83a58:	00894cc0 	call	894cc <nanf>
   83a5c:	b8800015 	stw	r2,0(r23)
   83a60:	003e9a06 	br	834cc <__svfscanf_r+0xc34>
   83a64:	a00b883a 	mov	r5,r20
   83a68:	d9000404 	addi	r4,sp,16
   83a6c:	008940c0 	call	8940c <__sccl>
   83a70:	1029883a 	mov	r20,r2
   83a74:	ad401014 	ori	r21,r21,64
   83a78:	04800044 	movi	r18,1
   83a7c:	003c7506 	br	82c54 <__svfscanf_r+0x3bc>
   83a80:	01000204 	movi	r4,8
   83a84:	00800274 	movhi	r2,9
   83a88:	10acf504 	addi	r2,r2,-19500
   83a8c:	ad400054 	ori	r21,r21,1
   83a90:	048000c4 	movi	r18,3
   83a94:	d900a115 	stw	r4,644(sp)
   83a98:	d880a015 	stw	r2,640(sp)
   83a9c:	003c6d06 	br	82c54 <__svfscanf_r+0x3bc>
   83aa0:	ad400094 	ori	r21,r21,2
   83aa4:	003bd806 	br	82a08 <__svfscanf_r+0x170>
   83aa8:	d900a317 	ldw	r4,652(sp)
   83aac:	01400284 	movi	r5,10
   83ab0:	00806240 	call	80624 <__mulsi3>
   83ab4:	15c5883a 	add	r2,r2,r23
   83ab8:	10bff404 	addi	r2,r2,-48
   83abc:	d880a315 	stw	r2,652(sp)
   83ac0:	003bd106 	br	82a08 <__svfscanf_r+0x170>
   83ac4:	ad400414 	ori	r21,r21,16
   83ac8:	003bcf06 	br	82a08 <__svfscanf_r+0x170>
   83acc:	00800404 	movi	r2,16
   83ad0:	00c00274 	movhi	r3,9
   83ad4:	18ecf504 	addi	r3,r3,-19500
   83ad8:	ad408014 	ori	r21,r21,512
   83adc:	048000c4 	movi	r18,3
   83ae0:	d880a115 	stw	r2,644(sp)
   83ae4:	d8c0a015 	stw	r3,640(sp)
   83ae8:	003c5a06 	br	82c54 <__svfscanf_r+0x3bc>
   83aec:	00c00284 	movi	r3,10
   83af0:	01000274 	movhi	r4,9
   83af4:	212cf504 	addi	r4,r4,-19500
   83af8:	048000c4 	movi	r18,3
   83afc:	d8c0a115 	stw	r3,644(sp)
   83b00:	d900a015 	stw	r4,640(sp)
   83b04:	003c5306 	br	82c54 <__svfscanf_r+0x3bc>
   83b08:	00c00274 	movhi	r3,9
   83b0c:	18eb9204 	addi	r3,r3,-20920
   83b10:	048000c4 	movi	r18,3
   83b14:	d8c0a015 	stw	r3,640(sp)
   83b18:	d800a115 	stw	zero,644(sp)
   83b1c:	003c4d06 	br	82c54 <__svfscanf_r+0x3bc>
   83b20:	d8c0a117 	ldw	r3,644(sp)
   83b24:	18c5883a 	add	r2,r3,r3
   83b28:	00c00274 	movhi	r3,9
   83b2c:	18cdee84 	addi	r3,r3,14266
   83b30:	10c5883a 	add	r2,r2,r3
   83b34:	1080000f 	ldh	r2,0(r2)
   83b38:	00fd1fc4 	movi	r3,-2945
   83b3c:	90e4703a 	and	r18,r18,r3
   83b40:	d880a115 	stw	r2,644(sp)
   83b44:	003de806 	br	832e8 <__svfscanf_r+0xa50>
   83b48:	d900a117 	ldw	r4,644(sp)
   83b4c:	00c00274 	movhi	r3,9
   83b50:	18cdee84 	addi	r3,r3,14266
   83b54:	2105883a 	add	r2,r4,r4
   83b58:	10c5883a 	add	r2,r2,r3
   83b5c:	1080000f 	ldh	r2,0(r2)
   83b60:	00c00204 	movi	r3,8
   83b64:	d880a115 	stw	r2,644(sp)
   83b68:	18bd870e 	bge	r3,r2,83188 <__svfscanf_r+0x8f0>
   83b6c:	00bd1fc4 	movi	r2,-2945
   83b70:	90a4703a 	and	r18,r18,r2
   83b74:	003ddc06 	br	832e8 <__svfscanf_r+0xa50>
   83b78:	d8c0a117 	ldw	r3,644(sp)
   83b7c:	00800284 	movi	r2,10
   83b80:	10fffa16 	blt	r2,r3,83b6c <__svfscanf_r+0x12d4>
   83b84:	003d8006 	br	83188 <__svfscanf_r+0x8f0>
   83b88:	90c1800c 	andi	r3,r18,1536
   83b8c:	00808004 	movi	r2,512
   83b90:	18bd7d1e 	bne	r3,r2,83188 <__svfscanf_r+0x8f0>
   83b94:	00bf7fc4 	movi	r2,-513
   83b98:	9084703a 	and	r2,r18,r2
   83b9c:	01000404 	movi	r4,16
   83ba0:	14814014 	ori	r18,r2,1280
   83ba4:	d900a115 	stw	r4,644(sp)
   83ba8:	003dcf06 	br	832e8 <__svfscanf_r+0xa50>
   83bac:	04800104 	movi	r18,4
   83bb0:	003c2806 	br	82c54 <__svfscanf_r+0x3bc>
   83bb4:	ad401014 	ori	r21,r21,64
   83bb8:	0025883a 	mov	r18,zero
   83bbc:	003c2506 	br	82c54 <__svfscanf_r+0x3bc>
   83bc0:	ad400114 	ori	r21,r21,4
   83bc4:	003b9006 	br	82a08 <__svfscanf_r+0x170>
   83bc8:	0027883a 	mov	r19,zero
   83bcc:	003cac06 	br	82e80 <__svfscanf_r+0x5e8>
   83bd0:	903d5226 	beq	r18,zero,8311c <__svfscanf_r+0x884>
   83bd4:	94bfffc4 	addi	r18,r18,-1
   83bd8:	d8c04404 	addi	r3,sp,272
   83bdc:	1c85883a 	add	r2,r3,r18
   83be0:	11400003 	ldbu	r5,0(r2)
   83be4:	b009883a 	mov	r4,r22
   83be8:	800d883a 	mov	r6,r16
   83bec:	008ba040 	call	8ba04 <_ungetc_r>
   83bf0:	003ff706 	br	83bd0 <__svfscanf_r+0x1338>
   83bf4:	00bfff84 	movi	r2,-2
   83bf8:	18bd361e 	bne	r3,r2,830d4 <__svfscanf_r+0x83c>
   83bfc:	003d4006 	br	83100 <__svfscanf_r+0x868>
   83c00:	d900a417 	ldw	r4,656(sp)
   83c04:	25400017 	ldw	r21,0(r4)
   83c08:	21000104 	addi	r4,r4,4
   83c0c:	d900a415 	stw	r4,656(sp)
   83c10:	003d0606 	br	8302c <__svfscanf_r+0x794>
   83c14:	983b5526 	beq	r19,zero,8296c <__svfscanf_r+0xd4>
   83c18:	8ce3883a 	add	r17,r17,r19
   83c1c:	003b3106 	br	828e4 <__svfscanf_r+0x4c>
   83c20:	00bfff84 	movi	r2,-2
   83c24:	18bc621e 	bne	r3,r2,82db0 <__svfscanf_r+0x518>
   83c28:	003c6906 	br	82dd0 <__svfscanf_r+0x538>
   83c2c:	b009883a 	mov	r4,r22
   83c30:	800b883a 	mov	r5,r16
   83c34:	008914c0 	call	8914c <__srefill_r>
   83c38:	103c6726 	beq	r2,zero,82dd8 <__svfscanf_r+0x540>
   83c3c:	903b6b1e 	bne	r18,zero,829ec <__svfscanf_r+0x154>
   83c40:	a83b281e 	bne	r21,zero,828e4 <__svfscanf_r+0x4c>
   83c44:	d8c0a217 	ldw	r3,648(sp)
   83c48:	18c00044 	addi	r3,r3,1
   83c4c:	d8c0a215 	stw	r3,648(sp)
   83c50:	003b2406 	br	828e4 <__svfscanf_r+0x4c>
   83c54:	8080030b 	ldhu	r2,12(r16)
   83c58:	1080100c 	andi	r2,r2,64
   83c5c:	103b4326 	beq	r2,zero,8296c <__svfscanf_r+0xd4>
   83c60:	003b6406 	br	829f4 <__svfscanf_r+0x15c>
   83c64:	d8c0a417 	ldw	r3,656(sp)
   83c68:	1cc00017 	ldw	r19,0(r3)
   83c6c:	18c00104 	addi	r3,r3,4
   83c70:	d8c0a415 	stw	r3,656(sp)
   83c74:	003c2906 	br	82d1c <__svfscanf_r+0x484>
   83c78:	00800204 	movi	r2,8
   83c7c:	00c00274 	movhi	r3,9
   83c80:	18ecf504 	addi	r3,r3,-19500
   83c84:	048000c4 	movi	r18,3
   83c88:	d880a115 	stw	r2,644(sp)
   83c8c:	d8c0a015 	stw	r3,640(sp)
   83c90:	003bf006 	br	82c54 <__svfscanf_r+0x3bc>
   83c94:	04800084 	movi	r18,2
   83c98:	003bee06 	br	82c54 <__svfscanf_r+0x3bc>
   83c9c:	01000404 	movi	r4,16
   83ca0:	00800274 	movhi	r2,9
   83ca4:	10acf504 	addi	r2,r2,-19500
   83ca8:	ad408814 	ori	r21,r21,544
   83cac:	048000c4 	movi	r18,3
   83cb0:	d900a115 	stw	r4,644(sp)
   83cb4:	d880a015 	stw	r2,640(sp)
   83cb8:	003be606 	br	82c54 <__svfscanf_r+0x3bc>
   83cbc:	a880040c 	andi	r2,r21,16
   83cc0:	103b081e 	bne	r2,zero,828e4 <__svfscanf_r+0x4c>
   83cc4:	a880010c 	andi	r2,r21,4
   83cc8:	10004e26 	beq	r2,zero,83e04 <__svfscanf_r+0x156c>
   83ccc:	d8c0a417 	ldw	r3,656(sp)
   83cd0:	18800017 	ldw	r2,0(r3)
   83cd4:	18c00104 	addi	r3,r3,4
   83cd8:	d8c0a415 	stw	r3,656(sp)
   83cdc:	1440000d 	sth	r17,0(r2)
   83ce0:	003b0006 	br	828e4 <__svfscanf_r+0x4c>
   83ce4:	d880a417 	ldw	r2,656(sp)
   83ce8:	dd400404 	addi	r21,sp,16
   83cec:	14800017 	ldw	r18,0(r2)
   83cf0:	9027883a 	mov	r19,r18
   83cf4:	81000017 	ldw	r4,0(r16)
   83cf8:	20800003 	ldbu	r2,0(r4)
   83cfc:	a885883a 	add	r2,r21,r2
   83d00:	10c00007 	ldb	r3,0(r2)
   83d04:	18001426 	beq	r3,zero,83d58 <__svfscanf_r+0x14c0>
   83d08:	d8c0a317 	ldw	r3,652(sp)
   83d0c:	80800117 	ldw	r2,4(r16)
   83d10:	21800044 	addi	r6,r4,1
   83d14:	18ffffc4 	addi	r3,r3,-1
   83d18:	d8c0a315 	stw	r3,652(sp)
   83d1c:	10ffffc4 	addi	r3,r2,-1
   83d20:	80c00115 	stw	r3,4(r16)
   83d24:	20800003 	ldbu	r2,0(r4)
   83d28:	90800005 	stb	r2,0(r18)
   83d2c:	d900a317 	ldw	r4,652(sp)
   83d30:	81800015 	stw	r6,0(r16)
   83d34:	94800044 	addi	r18,r18,1
   83d38:	20000726 	beq	r4,zero,83d58 <__svfscanf_r+0x14c0>
   83d3c:	80800117 	ldw	r2,4(r16)
   83d40:	00bfec16 	blt	zero,r2,83cf4 <__svfscanf_r+0x145c>
   83d44:	b009883a 	mov	r4,r22
   83d48:	800b883a 	mov	r5,r16
   83d4c:	008914c0 	call	8914c <__srefill_r>
   83d50:	103fe826 	beq	r2,zero,83cf4 <__svfscanf_r+0x145c>
   83d54:	9cbb2526 	beq	r19,r18,829ec <__svfscanf_r+0x154>
   83d58:	94e7c83a 	sub	r19,r18,r19
   83d5c:	983b0326 	beq	r19,zero,8296c <__svfscanf_r+0xd4>
   83d60:	90000005 	stb	zero,0(r18)
   83d64:	d880a417 	ldw	r2,656(sp)
   83d68:	d8c0a217 	ldw	r3,648(sp)
   83d6c:	8ce3883a 	add	r17,r17,r19
   83d70:	10800104 	addi	r2,r2,4
   83d74:	18c00044 	addi	r3,r3,1
   83d78:	d880a415 	stw	r2,656(sp)
   83d7c:	d8c0a215 	stw	r3,648(sp)
   83d80:	003ad806 	br	828e4 <__svfscanf_r+0x4c>
   83d84:	d900a517 	ldw	r4,660(sp)
   83d88:	25faf82e 	bgeu	r4,r23,8296c <__svfscanf_r+0xd4>
   83d8c:	bdffffc4 	addi	r23,r23,-1
   83d90:	b9400007 	ldb	r5,0(r23)
   83d94:	b009883a 	mov	r4,r22
   83d98:	800d883a 	mov	r6,r16
   83d9c:	008ba040 	call	8ba04 <_ungetc_r>
   83da0:	d8c0a517 	ldw	r3,660(sp)
   83da4:	1dfff936 	bltu	r3,r23,83d8c <__svfscanf_r+0x14f4>
   83da8:	003af006 	br	8296c <__svfscanf_r+0xd4>
   83dac:	a880040c 	andi	r2,r21,16
   83db0:	10002d26 	beq	r2,zero,83e68 <__svfscanf_r+0x15d0>
   83db4:	0025883a 	mov	r18,zero
   83db8:	00000906 	br	83de0 <__svfscanf_r+0x1548>
   83dbc:	80c00117 	ldw	r3,4(r16)
   83dc0:	d880a317 	ldw	r2,652(sp)
   83dc4:	29800044 	addi	r6,r5,1
   83dc8:	18ffffc4 	addi	r3,r3,-1
   83dcc:	94800044 	addi	r18,r18,1
   83dd0:	81800015 	stw	r6,0(r16)
   83dd4:	80c00115 	stw	r3,4(r16)
   83dd8:	14800826 	beq	r2,r18,83dfc <__svfscanf_r+0x1564>
   83ddc:	00c0120e 	bge	zero,r3,83e28 <__svfscanf_r+0x1590>
   83de0:	81400017 	ldw	r5,0(r16)
   83de4:	98800017 	ldw	r2,0(r19)
   83de8:	28c00003 	ldbu	r3,0(r5)
   83dec:	1887883a 	add	r3,r3,r2
   83df0:	19000003 	ldbu	r4,0(r3)
   83df4:	2100020c 	andi	r4,r4,8
   83df8:	203ff026 	beq	r4,zero,83dbc <__svfscanf_r+0x1524>
   83dfc:	8ca3883a 	add	r17,r17,r18
   83e00:	003ab806 	br	828e4 <__svfscanf_r+0x4c>
   83e04:	a880004c 	andi	r2,r21,1
   83e08:	1005003a 	cmpeq	r2,r2,zero
   83e0c:	10000b1e 	bne	r2,zero,83e3c <__svfscanf_r+0x15a4>
   83e10:	d900a417 	ldw	r4,656(sp)
   83e14:	20800017 	ldw	r2,0(r4)
   83e18:	21000104 	addi	r4,r4,4
   83e1c:	d900a415 	stw	r4,656(sp)
   83e20:	14400015 	stw	r17,0(r2)
   83e24:	003aaf06 	br	828e4 <__svfscanf_r+0x4c>
   83e28:	b009883a 	mov	r4,r22
   83e2c:	800b883a 	mov	r5,r16
   83e30:	008914c0 	call	8914c <__srefill_r>
   83e34:	103fea26 	beq	r2,zero,83de0 <__svfscanf_r+0x1548>
   83e38:	003ff006 	br	83dfc <__svfscanf_r+0x1564>
   83e3c:	a880008c 	andi	r2,r21,2
   83e40:	10002c26 	beq	r2,zero,83ef4 <__svfscanf_r+0x165c>
   83e44:	d8c0a417 	ldw	r3,656(sp)
   83e48:	d900a417 	ldw	r4,656(sp)
   83e4c:	18800017 	ldw	r2,0(r3)
   83e50:	8807d7fa 	srai	r3,r17,31
   83e54:	21000104 	addi	r4,r4,4
   83e58:	d900a415 	stw	r4,656(sp)
   83e5c:	14400015 	stw	r17,0(r2)
   83e60:	10c00115 	stw	r3,4(r2)
   83e64:	003a9f06 	br	828e4 <__svfscanf_r+0x4c>
   83e68:	d8c0a417 	ldw	r3,656(sp)
   83e6c:	1d400017 	ldw	r21,0(r3)
   83e70:	a825883a 	mov	r18,r21
   83e74:	00000e06 	br	83eb0 <__svfscanf_r+0x1618>
   83e78:	80800117 	ldw	r2,4(r16)
   83e7c:	d900a317 	ldw	r4,652(sp)
   83e80:	29800044 	addi	r6,r5,1
   83e84:	10ffffc4 	addi	r3,r2,-1
   83e88:	213fffc4 	addi	r4,r4,-1
   83e8c:	d900a315 	stw	r4,652(sp)
   83e90:	80c00115 	stw	r3,4(r16)
   83e94:	28800003 	ldbu	r2,0(r5)
   83e98:	90800005 	stb	r2,0(r18)
   83e9c:	81800015 	stw	r6,0(r16)
   83ea0:	94800044 	addi	r18,r18,1
   83ea4:	20000926 	beq	r4,zero,83ecc <__svfscanf_r+0x1634>
   83ea8:	80800117 	ldw	r2,4(r16)
   83eac:	0080170e 	bge	zero,r2,83f0c <__svfscanf_r+0x1674>
   83eb0:	81400017 	ldw	r5,0(r16)
   83eb4:	98800017 	ldw	r2,0(r19)
   83eb8:	28c00003 	ldbu	r3,0(r5)
   83ebc:	1887883a 	add	r3,r3,r2
   83ec0:	19000003 	ldbu	r4,0(r3)
   83ec4:	2100020c 	andi	r4,r4,8
   83ec8:	203feb26 	beq	r4,zero,83e78 <__svfscanf_r+0x15e0>
   83ecc:	9545c83a 	sub	r2,r18,r21
   83ed0:	d8c0a217 	ldw	r3,648(sp)
   83ed4:	88a3883a 	add	r17,r17,r2
   83ed8:	d880a417 	ldw	r2,656(sp)
   83edc:	18c00044 	addi	r3,r3,1
   83ee0:	d8c0a215 	stw	r3,648(sp)
   83ee4:	10800104 	addi	r2,r2,4
   83ee8:	d880a415 	stw	r2,656(sp)
   83eec:	90000005 	stb	zero,0(r18)
   83ef0:	003a7c06 	br	828e4 <__svfscanf_r+0x4c>
   83ef4:	d8c0a417 	ldw	r3,656(sp)
   83ef8:	18800017 	ldw	r2,0(r3)
   83efc:	18c00104 	addi	r3,r3,4
   83f00:	d8c0a415 	stw	r3,656(sp)
   83f04:	14400015 	stw	r17,0(r2)
   83f08:	003a7606 	br	828e4 <__svfscanf_r+0x4c>
   83f0c:	b009883a 	mov	r4,r22
   83f10:	800b883a 	mov	r5,r16
   83f14:	008914c0 	call	8914c <__srefill_r>
   83f18:	103fe526 	beq	r2,zero,83eb0 <__svfscanf_r+0x1618>
   83f1c:	003feb06 	br	83ecc <__svfscanf_r+0x1634>

00083f20 <__svfscanf>:
   83f20:	00800274 	movhi	r2,9
   83f24:	10963a04 	addi	r2,r2,22760
   83f28:	2013883a 	mov	r9,r4
   83f2c:	11000017 	ldw	r4,0(r2)
   83f30:	2805883a 	mov	r2,r5
   83f34:	300f883a 	mov	r7,r6
   83f38:	480b883a 	mov	r5,r9
   83f3c:	100d883a 	mov	r6,r2
   83f40:	00828981 	jmpi	82898 <__svfscanf_r>

00083f44 <_vfscanf_r>:
   83f44:	defffb04 	addi	sp,sp,-20
   83f48:	dcc00315 	stw	r19,12(sp)
   83f4c:	dc800215 	stw	r18,8(sp)
   83f50:	dc400115 	stw	r17,4(sp)
   83f54:	dc000015 	stw	r16,0(sp)
   83f58:	dfc00415 	stw	ra,16(sp)
   83f5c:	2021883a 	mov	r16,r4
   83f60:	2823883a 	mov	r17,r5
   83f64:	3025883a 	mov	r18,r6
   83f68:	3827883a 	mov	r19,r7
   83f6c:	20000226 	beq	r4,zero,83f78 <_vfscanf_r+0x34>
   83f70:	20800e17 	ldw	r2,56(r4)
   83f74:	10000b26 	beq	r2,zero,83fa4 <_vfscanf_r+0x60>
   83f78:	8009883a 	mov	r4,r16
   83f7c:	880b883a 	mov	r5,r17
   83f80:	900d883a 	mov	r6,r18
   83f84:	980f883a 	mov	r7,r19
   83f88:	dfc00417 	ldw	ra,16(sp)
   83f8c:	dcc00317 	ldw	r19,12(sp)
   83f90:	dc800217 	ldw	r18,8(sp)
   83f94:	dc400117 	ldw	r17,4(sp)
   83f98:	dc000017 	ldw	r16,0(sp)
   83f9c:	dec00504 	addi	sp,sp,20
   83fa0:	00828981 	jmpi	82898 <__svfscanf_r>
   83fa4:	0085bec0 	call	85bec <__sinit>
   83fa8:	003ff306 	br	83f78 <_vfscanf_r+0x34>

00083fac <vfscanf>:
   83fac:	defffb04 	addi	sp,sp,-20
   83fb0:	dcc00315 	stw	r19,12(sp)
   83fb4:	04c00274 	movhi	r19,9
   83fb8:	9cd63a04 	addi	r19,r19,22760
   83fbc:	98c00017 	ldw	r3,0(r19)
   83fc0:	dc800215 	stw	r18,8(sp)
   83fc4:	dc400115 	stw	r17,4(sp)
   83fc8:	dc000015 	stw	r16,0(sp)
   83fcc:	dfc00415 	stw	ra,16(sp)
   83fd0:	2021883a 	mov	r16,r4
   83fd4:	2823883a 	mov	r17,r5
   83fd8:	3025883a 	mov	r18,r6
   83fdc:	18000326 	beq	r3,zero,83fec <vfscanf+0x40>
   83fe0:	18800e17 	ldw	r2,56(r3)
   83fe4:	1809883a 	mov	r4,r3
   83fe8:	10000b26 	beq	r2,zero,84018 <vfscanf+0x6c>
   83fec:	99000017 	ldw	r4,0(r19)
   83ff0:	800b883a 	mov	r5,r16
   83ff4:	880d883a 	mov	r6,r17
   83ff8:	900f883a 	mov	r7,r18
   83ffc:	dfc00417 	ldw	ra,16(sp)
   84000:	dcc00317 	ldw	r19,12(sp)
   84004:	dc800217 	ldw	r18,8(sp)
   84008:	dc400117 	ldw	r17,4(sp)
   8400c:	dc000017 	ldw	r16,0(sp)
   84010:	dec00504 	addi	sp,sp,20
   84014:	00828981 	jmpi	82898 <__svfscanf_r>
   84018:	0085bec0 	call	85bec <__sinit>
   8401c:	003ff306 	br	83fec <vfscanf+0x40>

00084020 <__swsetup_r>:
   84020:	00800274 	movhi	r2,9
   84024:	10963a04 	addi	r2,r2,22760
   84028:	10c00017 	ldw	r3,0(r2)
   8402c:	defffd04 	addi	sp,sp,-12
   84030:	dc400115 	stw	r17,4(sp)
   84034:	dc000015 	stw	r16,0(sp)
   84038:	dfc00215 	stw	ra,8(sp)
   8403c:	2023883a 	mov	r17,r4
   84040:	2821883a 	mov	r16,r5
   84044:	18000226 	beq	r3,zero,84050 <__swsetup_r+0x30>
   84048:	18800e17 	ldw	r2,56(r3)
   8404c:	10001f26 	beq	r2,zero,840cc <__swsetup_r+0xac>
   84050:	8100030b 	ldhu	r4,12(r16)
   84054:	2080020c 	andi	r2,r4,8
   84058:	10002826 	beq	r2,zero,840fc <__swsetup_r+0xdc>
   8405c:	81400417 	ldw	r5,16(r16)
   84060:	28001d26 	beq	r5,zero,840d8 <__swsetup_r+0xb8>
   84064:	2080004c 	andi	r2,r4,1
   84068:	1005003a 	cmpeq	r2,r2,zero
   8406c:	10000b26 	beq	r2,zero,8409c <__swsetup_r+0x7c>
   84070:	2080008c 	andi	r2,r4,2
   84074:	10001226 	beq	r2,zero,840c0 <__swsetup_r+0xa0>
   84078:	0005883a 	mov	r2,zero
   8407c:	80800215 	stw	r2,8(r16)
   84080:	28000b26 	beq	r5,zero,840b0 <__swsetup_r+0x90>
   84084:	0005883a 	mov	r2,zero
   84088:	dfc00217 	ldw	ra,8(sp)
   8408c:	dc400117 	ldw	r17,4(sp)
   84090:	dc000017 	ldw	r16,0(sp)
   84094:	dec00304 	addi	sp,sp,12
   84098:	f800283a 	ret
   8409c:	80800517 	ldw	r2,20(r16)
   840a0:	80000215 	stw	zero,8(r16)
   840a4:	0085c83a 	sub	r2,zero,r2
   840a8:	80800615 	stw	r2,24(r16)
   840ac:	283ff51e 	bne	r5,zero,84084 <__swsetup_r+0x64>
   840b0:	2080200c 	andi	r2,r4,128
   840b4:	103ff326 	beq	r2,zero,84084 <__swsetup_r+0x64>
   840b8:	00bfffc4 	movi	r2,-1
   840bc:	003ff206 	br	84088 <__swsetup_r+0x68>
   840c0:	80800517 	ldw	r2,20(r16)
   840c4:	80800215 	stw	r2,8(r16)
   840c8:	003fed06 	br	84080 <__swsetup_r+0x60>
   840cc:	1809883a 	mov	r4,r3
   840d0:	0085bec0 	call	85bec <__sinit>
   840d4:	003fde06 	br	84050 <__swsetup_r+0x30>
   840d8:	20c0a00c 	andi	r3,r4,640
   840dc:	00808004 	movi	r2,512
   840e0:	18bfe026 	beq	r3,r2,84064 <__swsetup_r+0x44>
   840e4:	8809883a 	mov	r4,r17
   840e8:	800b883a 	mov	r5,r16
   840ec:	0086c100 	call	86c10 <__smakebuf_r>
   840f0:	8100030b 	ldhu	r4,12(r16)
   840f4:	81400417 	ldw	r5,16(r16)
   840f8:	003fda06 	br	84064 <__swsetup_r+0x44>
   840fc:	2080040c 	andi	r2,r4,16
   84100:	103fed26 	beq	r2,zero,840b8 <__swsetup_r+0x98>
   84104:	2080010c 	andi	r2,r4,4
   84108:	10001226 	beq	r2,zero,84154 <__swsetup_r+0x134>
   8410c:	81400c17 	ldw	r5,48(r16)
   84110:	28000526 	beq	r5,zero,84128 <__swsetup_r+0x108>
   84114:	80801004 	addi	r2,r16,64
   84118:	28800226 	beq	r5,r2,84124 <__swsetup_r+0x104>
   8411c:	8809883a 	mov	r4,r17
   84120:	00861f00 	call	861f0 <_free_r>
   84124:	80000c15 	stw	zero,48(r16)
   84128:	8080030b 	ldhu	r2,12(r16)
   8412c:	81400417 	ldw	r5,16(r16)
   84130:	80000115 	stw	zero,4(r16)
   84134:	10bff6cc 	andi	r2,r2,65499
   84138:	8080030d 	sth	r2,12(r16)
   8413c:	81400015 	stw	r5,0(r16)
   84140:	8080030b 	ldhu	r2,12(r16)
   84144:	10800214 	ori	r2,r2,8
   84148:	113fffcc 	andi	r4,r2,65535
   8414c:	8080030d 	sth	r2,12(r16)
   84150:	003fc306 	br	84060 <__swsetup_r+0x40>
   84154:	81400417 	ldw	r5,16(r16)
   84158:	003ff906 	br	84140 <__swsetup_r+0x120>

0008415c <quorem>:
   8415c:	28c00417 	ldw	r3,16(r5)
   84160:	20800417 	ldw	r2,16(r4)
   84164:	defff104 	addi	sp,sp,-60
   84168:	dfc00e15 	stw	ra,56(sp)
   8416c:	df000d15 	stw	fp,52(sp)
   84170:	ddc00c15 	stw	r23,48(sp)
   84174:	dd800b15 	stw	r22,44(sp)
   84178:	dd400a15 	stw	r21,40(sp)
   8417c:	dd000915 	stw	r20,36(sp)
   84180:	dcc00815 	stw	r19,32(sp)
   84184:	dc800715 	stw	r18,28(sp)
   84188:	dc400615 	stw	r17,24(sp)
   8418c:	dc000515 	stw	r16,20(sp)
   84190:	d9000315 	stw	r4,12(sp)
   84194:	d9400415 	stw	r5,16(sp)
   84198:	10c07f16 	blt	r2,r3,84398 <quorem+0x23c>
   8419c:	1d3fffc4 	addi	r20,r3,-1
   841a0:	d8c00417 	ldw	r3,16(sp)
   841a4:	d9000317 	ldw	r4,12(sp)
   841a8:	a505883a 	add	r2,r20,r20
   841ac:	1085883a 	add	r2,r2,r2
   841b0:	1cc00504 	addi	r19,r3,20
   841b4:	25c00504 	addi	r23,r4,20
   841b8:	98ad883a 	add	r22,r19,r2
   841bc:	15c7883a 	add	r3,r2,r23
   841c0:	b1400017 	ldw	r5,0(r22)
   841c4:	19000017 	ldw	r4,0(r3)
   841c8:	d8c00015 	stw	r3,0(sp)
   841cc:	29400044 	addi	r5,r5,1
   841d0:	d9000215 	stw	r4,8(sp)
   841d4:	008f0dc0 	call	8f0dc <__udivsi3>
   841d8:	1039883a 	mov	fp,r2
   841dc:	10003d1e 	bne	r2,zero,842d4 <quorem+0x178>
   841e0:	d9400417 	ldw	r5,16(sp)
   841e4:	d9000317 	ldw	r4,12(sp)
   841e8:	0087a3c0 	call	87a3c <__mcmp>
   841ec:	10002c16 	blt	r2,zero,842a0 <quorem+0x144>
   841f0:	e7000044 	addi	fp,fp,1
   841f4:	b80f883a 	mov	r7,r23
   841f8:	0011883a 	mov	r8,zero
   841fc:	0009883a 	mov	r4,zero
   84200:	99400017 	ldw	r5,0(r19)
   84204:	38c00017 	ldw	r3,0(r7)
   84208:	9cc00104 	addi	r19,r19,4
   8420c:	28bfffcc 	andi	r2,r5,65535
   84210:	2085883a 	add	r2,r4,r2
   84214:	11bfffcc 	andi	r6,r2,65535
   84218:	193fffcc 	andi	r4,r3,65535
   8421c:	1004d43a 	srli	r2,r2,16
   84220:	280ad43a 	srli	r5,r5,16
   84224:	2189c83a 	sub	r4,r4,r6
   84228:	2209883a 	add	r4,r4,r8
   8422c:	1806d43a 	srli	r3,r3,16
   84230:	288b883a 	add	r5,r5,r2
   84234:	200dd43a 	srai	r6,r4,16
   84238:	28bfffcc 	andi	r2,r5,65535
   8423c:	1887c83a 	sub	r3,r3,r2
   84240:	1987883a 	add	r3,r3,r6
   84244:	3900000d 	sth	r4,0(r7)
   84248:	38c0008d 	sth	r3,2(r7)
   8424c:	2808d43a 	srli	r4,r5,16
   84250:	39c00104 	addi	r7,r7,4
   84254:	1811d43a 	srai	r8,r3,16
   84258:	b4ffe92e 	bgeu	r22,r19,84200 <quorem+0xa4>
   8425c:	a505883a 	add	r2,r20,r20
   84260:	1085883a 	add	r2,r2,r2
   84264:	b885883a 	add	r2,r23,r2
   84268:	10c00017 	ldw	r3,0(r2)
   8426c:	18000c1e 	bne	r3,zero,842a0 <quorem+0x144>
   84270:	113fff04 	addi	r4,r2,-4
   84274:	b900082e 	bgeu	r23,r4,84298 <quorem+0x13c>
   84278:	10bfff17 	ldw	r2,-4(r2)
   8427c:	10000326 	beq	r2,zero,8428c <quorem+0x130>
   84280:	00000506 	br	84298 <quorem+0x13c>
   84284:	20800017 	ldw	r2,0(r4)
   84288:	1000031e 	bne	r2,zero,84298 <quorem+0x13c>
   8428c:	213fff04 	addi	r4,r4,-4
   84290:	a53fffc4 	addi	r20,r20,-1
   84294:	b93ffb36 	bltu	r23,r4,84284 <quorem+0x128>
   84298:	d9000317 	ldw	r4,12(sp)
   8429c:	25000415 	stw	r20,16(r4)
   842a0:	e005883a 	mov	r2,fp
   842a4:	dfc00e17 	ldw	ra,56(sp)
   842a8:	df000d17 	ldw	fp,52(sp)
   842ac:	ddc00c17 	ldw	r23,48(sp)
   842b0:	dd800b17 	ldw	r22,44(sp)
   842b4:	dd400a17 	ldw	r21,40(sp)
   842b8:	dd000917 	ldw	r20,36(sp)
   842bc:	dcc00817 	ldw	r19,32(sp)
   842c0:	dc800717 	ldw	r18,28(sp)
   842c4:	dc400617 	ldw	r17,24(sp)
   842c8:	dc000517 	ldw	r16,20(sp)
   842cc:	dec00f04 	addi	sp,sp,60
   842d0:	f800283a 	ret
   842d4:	b823883a 	mov	r17,r23
   842d8:	9825883a 	mov	r18,r19
   842dc:	d8000115 	stw	zero,4(sp)
   842e0:	002b883a 	mov	r21,zero
   842e4:	94000017 	ldw	r16,0(r18)
   842e8:	e009883a 	mov	r4,fp
   842ec:	94800104 	addi	r18,r18,4
   842f0:	817fffcc 	andi	r5,r16,65535
   842f4:	00806240 	call	80624 <__mulsi3>
   842f8:	800ad43a 	srli	r5,r16,16
   842fc:	e009883a 	mov	r4,fp
   84300:	a8a1883a 	add	r16,r21,r2
   84304:	00806240 	call	80624 <__mulsi3>
   84308:	89000017 	ldw	r4,0(r17)
   8430c:	80ffffcc 	andi	r3,r16,65535
   84310:	8020d43a 	srli	r16,r16,16
   84314:	217fffcc 	andi	r5,r4,65535
   84318:	28cbc83a 	sub	r5,r5,r3
   8431c:	d8c00117 	ldw	r3,4(sp)
   84320:	2008d43a 	srli	r4,r4,16
   84324:	1405883a 	add	r2,r2,r16
   84328:	28cb883a 	add	r5,r5,r3
   8432c:	280dd43a 	srai	r6,r5,16
   84330:	10ffffcc 	andi	r3,r2,65535
   84334:	20c9c83a 	sub	r4,r4,r3
   84338:	2189883a 	add	r4,r4,r6
   8433c:	8900008d 	sth	r4,2(r17)
   84340:	2009d43a 	srai	r4,r4,16
   84344:	8940000d 	sth	r5,0(r17)
   84348:	102ad43a 	srli	r21,r2,16
   8434c:	8c400104 	addi	r17,r17,4
   84350:	d9000115 	stw	r4,4(sp)
   84354:	b4bfe32e 	bgeu	r22,r18,842e4 <quorem+0x188>
   84358:	d9000217 	ldw	r4,8(sp)
   8435c:	203fa01e 	bne	r4,zero,841e0 <quorem+0x84>
   84360:	d8800017 	ldw	r2,0(sp)
   84364:	10ffff04 	addi	r3,r2,-4
   84368:	b8c0082e 	bgeu	r23,r3,8438c <quorem+0x230>
   8436c:	10bfff17 	ldw	r2,-4(r2)
   84370:	10000326 	beq	r2,zero,84380 <quorem+0x224>
   84374:	00000506 	br	8438c <quorem+0x230>
   84378:	18800017 	ldw	r2,0(r3)
   8437c:	1000031e 	bne	r2,zero,8438c <quorem+0x230>
   84380:	18ffff04 	addi	r3,r3,-4
   84384:	a53fffc4 	addi	r20,r20,-1
   84388:	b8fffb36 	bltu	r23,r3,84378 <quorem+0x21c>
   8438c:	d8c00317 	ldw	r3,12(sp)
   84390:	1d000415 	stw	r20,16(r3)
   84394:	003f9206 	br	841e0 <quorem+0x84>
   84398:	0005883a 	mov	r2,zero
   8439c:	003fc106 	br	842a4 <quorem+0x148>

000843a0 <_dtoa_r>:
   843a0:	22001017 	ldw	r8,64(r4)
   843a4:	deffda04 	addi	sp,sp,-152
   843a8:	dd402115 	stw	r21,132(sp)
   843ac:	dd002015 	stw	r20,128(sp)
   843b0:	dc801e15 	stw	r18,120(sp)
   843b4:	dc401d15 	stw	r17,116(sp)
   843b8:	dfc02515 	stw	ra,148(sp)
   843bc:	df002415 	stw	fp,144(sp)
   843c0:	ddc02315 	stw	r23,140(sp)
   843c4:	dd802215 	stw	r22,136(sp)
   843c8:	dcc01f15 	stw	r19,124(sp)
   843cc:	dc001c15 	stw	r16,112(sp)
   843d0:	d9001615 	stw	r4,88(sp)
   843d4:	3023883a 	mov	r17,r6
   843d8:	2829883a 	mov	r20,r5
   843dc:	d9c01715 	stw	r7,92(sp)
   843e0:	dc802817 	ldw	r18,160(sp)
   843e4:	302b883a 	mov	r21,r6
   843e8:	40000a26 	beq	r8,zero,84414 <_dtoa_r+0x74>
   843ec:	20801117 	ldw	r2,68(r4)
   843f0:	400b883a 	mov	r5,r8
   843f4:	40800115 	stw	r2,4(r8)
   843f8:	20c01117 	ldw	r3,68(r4)
   843fc:	00800044 	movi	r2,1
   84400:	10c4983a 	sll	r2,r2,r3
   84404:	40800215 	stw	r2,8(r8)
   84408:	00878e00 	call	878e0 <_Bfree>
   8440c:	d8c01617 	ldw	r3,88(sp)
   84410:	18001015 	stw	zero,64(r3)
   84414:	8800a316 	blt	r17,zero,846a4 <_dtoa_r+0x304>
   84418:	90000015 	stw	zero,0(r18)
   8441c:	a8dffc2c 	andhi	r3,r21,32752
   84420:	009ffc34 	movhi	r2,32752
   84424:	18809126 	beq	r3,r2,8466c <_dtoa_r+0x2cc>
   84428:	000d883a 	mov	r6,zero
   8442c:	000f883a 	mov	r7,zero
   84430:	a009883a 	mov	r4,r20
   84434:	a80b883a 	mov	r5,r21
   84438:	dd001215 	stw	r20,72(sp)
   8443c:	dd401315 	stw	r21,76(sp)
   84440:	008e9200 	call	8e920 <__nedf2>
   84444:	1000171e 	bne	r2,zero,844a4 <_dtoa_r+0x104>
   84448:	d9802717 	ldw	r6,156(sp)
   8444c:	00800044 	movi	r2,1
   84450:	30800015 	stw	r2,0(r6)
   84454:	d8802917 	ldw	r2,164(sp)
   84458:	10029b26 	beq	r2,zero,84ec8 <_dtoa_r+0xb28>
   8445c:	d9002917 	ldw	r4,164(sp)
   84460:	00800274 	movhi	r2,9
   84464:	108de444 	addi	r2,r2,14225
   84468:	10ffffc4 	addi	r3,r2,-1
   8446c:	20800015 	stw	r2,0(r4)
   84470:	1805883a 	mov	r2,r3
   84474:	dfc02517 	ldw	ra,148(sp)
   84478:	df002417 	ldw	fp,144(sp)
   8447c:	ddc02317 	ldw	r23,140(sp)
   84480:	dd802217 	ldw	r22,136(sp)
   84484:	dd402117 	ldw	r21,132(sp)
   84488:	dd002017 	ldw	r20,128(sp)
   8448c:	dcc01f17 	ldw	r19,124(sp)
   84490:	dc801e17 	ldw	r18,120(sp)
   84494:	dc401d17 	ldw	r17,116(sp)
   84498:	dc001c17 	ldw	r16,112(sp)
   8449c:	dec02604 	addi	sp,sp,152
   844a0:	f800283a 	ret
   844a4:	d9001617 	ldw	r4,88(sp)
   844a8:	d9401217 	ldw	r5,72(sp)
   844ac:	d8800104 	addi	r2,sp,4
   844b0:	a80d883a 	mov	r6,r21
   844b4:	d9c00204 	addi	r7,sp,8
   844b8:	d8800015 	stw	r2,0(sp)
   844bc:	0087f1c0 	call	87f1c <__d2b>
   844c0:	d8800715 	stw	r2,28(sp)
   844c4:	a804d53a 	srli	r2,r21,20
   844c8:	1101ffcc 	andi	r4,r2,2047
   844cc:	20008626 	beq	r4,zero,846e8 <_dtoa_r+0x348>
   844d0:	d8c01217 	ldw	r3,72(sp)
   844d4:	00800434 	movhi	r2,16
   844d8:	10bfffc4 	addi	r2,r2,-1
   844dc:	ddc00117 	ldw	r23,4(sp)
   844e0:	a884703a 	and	r2,r21,r2
   844e4:	1811883a 	mov	r8,r3
   844e8:	124ffc34 	orhi	r9,r2,16368
   844ec:	25bf0044 	addi	r22,r4,-1023
   844f0:	d8000815 	stw	zero,32(sp)
   844f4:	0005883a 	mov	r2,zero
   844f8:	00cffe34 	movhi	r3,16376
   844fc:	480b883a 	mov	r5,r9
   84500:	4009883a 	mov	r4,r8
   84504:	180f883a 	mov	r7,r3
   84508:	100d883a 	mov	r6,r2
   8450c:	008e1880 	call	8e188 <__subdf3>
   84510:	0218dbf4 	movhi	r8,25455
   84514:	4210d844 	addi	r8,r8,17249
   84518:	024ff4f4 	movhi	r9,16339
   8451c:	4a61e9c4 	addi	r9,r9,-30809
   84520:	480f883a 	mov	r7,r9
   84524:	400d883a 	mov	r6,r8
   84528:	180b883a 	mov	r5,r3
   8452c:	1009883a 	mov	r4,r2
   84530:	008e27c0 	call	8e27c <__muldf3>
   84534:	0222d874 	movhi	r8,35681
   84538:	42322cc4 	addi	r8,r8,-14157
   8453c:	024ff1f4 	movhi	r9,16327
   84540:	4a628a04 	addi	r9,r9,-30168
   84544:	480f883a 	mov	r7,r9
   84548:	400d883a 	mov	r6,r8
   8454c:	180b883a 	mov	r5,r3
   84550:	1009883a 	mov	r4,r2
   84554:	008e2080 	call	8e208 <__adddf3>
   84558:	b009883a 	mov	r4,r22
   8455c:	1021883a 	mov	r16,r2
   84560:	1823883a 	mov	r17,r3
   84564:	008ebc80 	call	8ebc8 <__floatsidf>
   84568:	021427f4 	movhi	r8,20639
   8456c:	421e7ec4 	addi	r8,r8,31227
   84570:	024ff4f4 	movhi	r9,16339
   84574:	4a5104c4 	addi	r9,r9,17427
   84578:	480f883a 	mov	r7,r9
   8457c:	400d883a 	mov	r6,r8
   84580:	180b883a 	mov	r5,r3
   84584:	1009883a 	mov	r4,r2
   84588:	008e27c0 	call	8e27c <__muldf3>
   8458c:	180f883a 	mov	r7,r3
   84590:	880b883a 	mov	r5,r17
   84594:	100d883a 	mov	r6,r2
   84598:	8009883a 	mov	r4,r16
   8459c:	008e2080 	call	8e208 <__adddf3>
   845a0:	1009883a 	mov	r4,r2
   845a4:	180b883a 	mov	r5,r3
   845a8:	1021883a 	mov	r16,r2
   845ac:	1823883a 	mov	r17,r3
   845b0:	008ecc00 	call	8ecc0 <__fixdfsi>
   845b4:	000d883a 	mov	r6,zero
   845b8:	000f883a 	mov	r7,zero
   845bc:	8009883a 	mov	r4,r16
   845c0:	880b883a 	mov	r5,r17
   845c4:	d8800d15 	stw	r2,52(sp)
   845c8:	008eab80 	call	8eab8 <__ltdf2>
   845cc:	10031716 	blt	r2,zero,8522c <_dtoa_r+0xe8c>
   845d0:	d8c00d17 	ldw	r3,52(sp)
   845d4:	00800584 	movi	r2,22
   845d8:	10c1482e 	bgeu	r2,r3,84afc <_dtoa_r+0x75c>
   845dc:	01000044 	movi	r4,1
   845e0:	d9000c15 	stw	r4,48(sp)
   845e4:	bd85c83a 	sub	r2,r23,r22
   845e8:	11bfffc4 	addi	r6,r2,-1
   845ec:	30030b16 	blt	r6,zero,8521c <_dtoa_r+0xe7c>
   845f0:	d9800a15 	stw	r6,40(sp)
   845f4:	d8001115 	stw	zero,68(sp)
   845f8:	d8c00d17 	ldw	r3,52(sp)
   845fc:	1802ff16 	blt	r3,zero,851fc <_dtoa_r+0xe5c>
   84600:	d9000a17 	ldw	r4,40(sp)
   84604:	d8c00915 	stw	r3,36(sp)
   84608:	d8001015 	stw	zero,64(sp)
   8460c:	20c9883a 	add	r4,r4,r3
   84610:	d9000a15 	stw	r4,40(sp)
   84614:	d9001717 	ldw	r4,92(sp)
   84618:	00800244 	movi	r2,9
   8461c:	11004636 	bltu	r2,r4,84738 <_dtoa_r+0x398>
   84620:	00800144 	movi	r2,5
   84624:	11020416 	blt	r2,r4,84e38 <_dtoa_r+0xa98>
   84628:	04400044 	movi	r17,1
   8462c:	d8c01717 	ldw	r3,92(sp)
   84630:	00800144 	movi	r2,5
   84634:	10c1ed36 	bltu	r2,r3,84dec <_dtoa_r+0xa4c>
   84638:	18c5883a 	add	r2,r3,r3
   8463c:	1085883a 	add	r2,r2,r2
   84640:	00c00234 	movhi	r3,8
   84644:	18d19504 	addi	r3,r3,18004
   84648:	10c5883a 	add	r2,r2,r3
   8464c:	11000017 	ldw	r4,0(r2)
   84650:	2000683a 	jmp	r4
   84654:	00084740 	call	8474 <__alt_mem_sram_0-0x77b8c>
   84658:	00084740 	call	8474 <__alt_mem_sram_0-0x77b8c>
   8465c:	00085140 	call	8514 <__alt_mem_sram_0-0x77aec>
   84660:	00085118 	cmpnei	zero,zero,8516
   84664:	0008515c 	xori	zero,zero,8517
   84668:	00085168 	cmpgeui	zero,zero,8517
   8466c:	d9002717 	ldw	r4,156(sp)
   84670:	0089c3c4 	movi	r2,9999
   84674:	20800015 	stw	r2,0(r4)
   84678:	a0001026 	beq	r20,zero,846bc <_dtoa_r+0x31c>
   8467c:	00c00274 	movhi	r3,9
   84680:	18ce9b04 	addi	r3,r3,14956
   84684:	d9802917 	ldw	r6,164(sp)
   84688:	303f7926 	beq	r6,zero,84470 <_dtoa_r+0xd0>
   8468c:	188000c7 	ldb	r2,3(r3)
   84690:	190000c4 	addi	r4,r3,3
   84694:	1000101e 	bne	r2,zero,846d8 <_dtoa_r+0x338>
   84698:	d8802917 	ldw	r2,164(sp)
   8469c:	11000015 	stw	r4,0(r2)
   846a0:	003f7306 	br	84470 <_dtoa_r+0xd0>
   846a4:	00a00034 	movhi	r2,32768
   846a8:	10bfffc4 	addi	r2,r2,-1
   846ac:	00c00044 	movi	r3,1
   846b0:	88aa703a 	and	r21,r17,r2
   846b4:	90c00015 	stw	r3,0(r18)
   846b8:	003f5806 	br	8441c <_dtoa_r+0x7c>
   846bc:	00800434 	movhi	r2,16
   846c0:	10bfffc4 	addi	r2,r2,-1
   846c4:	a884703a 	and	r2,r21,r2
   846c8:	103fec1e 	bne	r2,zero,8467c <_dtoa_r+0x2dc>
   846cc:	00c00274 	movhi	r3,9
   846d0:	18ce9804 	addi	r3,r3,14944
   846d4:	003feb06 	br	84684 <_dtoa_r+0x2e4>
   846d8:	d8802917 	ldw	r2,164(sp)
   846dc:	19000204 	addi	r4,r3,8
   846e0:	11000015 	stw	r4,0(r2)
   846e4:	003f6206 	br	84470 <_dtoa_r+0xd0>
   846e8:	ddc00117 	ldw	r23,4(sp)
   846ec:	d8800217 	ldw	r2,8(sp)
   846f0:	01000804 	movi	r4,32
   846f4:	b8c10c84 	addi	r3,r23,1074
   846f8:	18a3883a 	add	r17,r3,r2
   846fc:	2441b80e 	bge	r4,r17,84de0 <_dtoa_r+0xa40>
   84700:	00c01004 	movi	r3,64
   84704:	1c47c83a 	sub	r3,r3,r17
   84708:	88bff804 	addi	r2,r17,-32
   8470c:	a8c6983a 	sll	r3,r21,r3
   84710:	a084d83a 	srl	r2,r20,r2
   84714:	1888b03a 	or	r4,r3,r2
   84718:	008ee0c0 	call	8ee0c <__floatunsidf>
   8471c:	1011883a 	mov	r8,r2
   84720:	00bf8434 	movhi	r2,65040
   84724:	01000044 	movi	r4,1
   84728:	10d3883a 	add	r9,r2,r3
   8472c:	8dbef344 	addi	r22,r17,-1075
   84730:	d9000815 	stw	r4,32(sp)
   84734:	003f6f06 	br	844f4 <_dtoa_r+0x154>
   84738:	d8001715 	stw	zero,92(sp)
   8473c:	04400044 	movi	r17,1
   84740:	00bfffc4 	movi	r2,-1
   84744:	00c00044 	movi	r3,1
   84748:	d8800e15 	stw	r2,56(sp)
   8474c:	d8002615 	stw	zero,152(sp)
   84750:	d8800f15 	stw	r2,60(sp)
   84754:	d8c00b15 	stw	r3,44(sp)
   84758:	1021883a 	mov	r16,r2
   8475c:	d8801617 	ldw	r2,88(sp)
   84760:	10001115 	stw	zero,68(r2)
   84764:	d8801617 	ldw	r2,88(sp)
   84768:	11401117 	ldw	r5,68(r2)
   8476c:	1009883a 	mov	r4,r2
   84770:	0087e600 	call	87e60 <_Balloc>
   84774:	d8c01617 	ldw	r3,88(sp)
   84778:	d8800515 	stw	r2,20(sp)
   8477c:	18801015 	stw	r2,64(r3)
   84780:	00800384 	movi	r2,14
   84784:	14006836 	bltu	r2,r16,84928 <_dtoa_r+0x588>
   84788:	8805003a 	cmpeq	r2,r17,zero
   8478c:	1000661e 	bne	r2,zero,84928 <_dtoa_r+0x588>
   84790:	d9000d17 	ldw	r4,52(sp)
   84794:	0102300e 	bge	zero,r4,85058 <_dtoa_r+0xcb8>
   84798:	208003cc 	andi	r2,r4,15
   8479c:	100490fa 	slli	r2,r2,3
   847a0:	2025d13a 	srai	r18,r4,4
   847a4:	00c00274 	movhi	r3,9
   847a8:	18cead04 	addi	r3,r3,15028
   847ac:	10c5883a 	add	r2,r2,r3
   847b0:	90c0040c 	andi	r3,r18,16
   847b4:	14000017 	ldw	r16,0(r2)
   847b8:	14400117 	ldw	r17,4(r2)
   847bc:	18036a1e 	bne	r3,zero,85568 <_dtoa_r+0x11c8>
   847c0:	05800084 	movi	r22,2
   847c4:	90001026 	beq	r18,zero,84808 <_dtoa_r+0x468>
   847c8:	04c00274 	movhi	r19,9
   847cc:	9ccedf04 	addi	r19,r19,15228
   847d0:	9080004c 	andi	r2,r18,1
   847d4:	1005003a 	cmpeq	r2,r2,zero
   847d8:	1000081e 	bne	r2,zero,847fc <_dtoa_r+0x45c>
   847dc:	99800017 	ldw	r6,0(r19)
   847e0:	99c00117 	ldw	r7,4(r19)
   847e4:	880b883a 	mov	r5,r17
   847e8:	8009883a 	mov	r4,r16
   847ec:	008e27c0 	call	8e27c <__muldf3>
   847f0:	1021883a 	mov	r16,r2
   847f4:	b5800044 	addi	r22,r22,1
   847f8:	1823883a 	mov	r17,r3
   847fc:	9025d07a 	srai	r18,r18,1
   84800:	9cc00204 	addi	r19,r19,8
   84804:	903ff21e 	bne	r18,zero,847d0 <_dtoa_r+0x430>
   84808:	a80b883a 	mov	r5,r21
   8480c:	a009883a 	mov	r4,r20
   84810:	880f883a 	mov	r7,r17
   84814:	800d883a 	mov	r6,r16
   84818:	008e6400 	call	8e640 <__divdf3>
   8481c:	1029883a 	mov	r20,r2
   84820:	182b883a 	mov	r21,r3
   84824:	d8c00c17 	ldw	r3,48(sp)
   84828:	1805003a 	cmpeq	r2,r3,zero
   8482c:	1000081e 	bne	r2,zero,84850 <_dtoa_r+0x4b0>
   84830:	0005883a 	mov	r2,zero
   84834:	00cffc34 	movhi	r3,16368
   84838:	180f883a 	mov	r7,r3
   8483c:	a009883a 	mov	r4,r20
   84840:	a80b883a 	mov	r5,r21
   84844:	100d883a 	mov	r6,r2
   84848:	008eab80 	call	8eab8 <__ltdf2>
   8484c:	1003fe16 	blt	r2,zero,85848 <_dtoa_r+0x14a8>
   84850:	b009883a 	mov	r4,r22
   84854:	008ebc80 	call	8ebc8 <__floatsidf>
   84858:	180b883a 	mov	r5,r3
   8485c:	1009883a 	mov	r4,r2
   84860:	a00d883a 	mov	r6,r20
   84864:	a80f883a 	mov	r7,r21
   84868:	008e27c0 	call	8e27c <__muldf3>
   8486c:	0011883a 	mov	r8,zero
   84870:	02500734 	movhi	r9,16412
   84874:	1009883a 	mov	r4,r2
   84878:	180b883a 	mov	r5,r3
   8487c:	480f883a 	mov	r7,r9
   84880:	400d883a 	mov	r6,r8
   84884:	008e2080 	call	8e208 <__adddf3>
   84888:	d9000f17 	ldw	r4,60(sp)
   8488c:	102d883a 	mov	r22,r2
   84890:	00bf3034 	movhi	r2,64704
   84894:	18b9883a 	add	fp,r3,r2
   84898:	e02f883a 	mov	r23,fp
   8489c:	20028f1e 	bne	r4,zero,852dc <_dtoa_r+0xf3c>
   848a0:	0005883a 	mov	r2,zero
   848a4:	00d00534 	movhi	r3,16404
   848a8:	a009883a 	mov	r4,r20
   848ac:	a80b883a 	mov	r5,r21
   848b0:	180f883a 	mov	r7,r3
   848b4:	100d883a 	mov	r6,r2
   848b8:	008e1880 	call	8e188 <__subdf3>
   848bc:	1009883a 	mov	r4,r2
   848c0:	e00f883a 	mov	r7,fp
   848c4:	180b883a 	mov	r5,r3
   848c8:	b00d883a 	mov	r6,r22
   848cc:	1025883a 	mov	r18,r2
   848d0:	1827883a 	mov	r19,r3
   848d4:	008e9a80 	call	8e9a8 <__gtdf2>
   848d8:	00834f16 	blt	zero,r2,85618 <_dtoa_r+0x1278>
   848dc:	e0e0003c 	xorhi	r3,fp,32768
   848e0:	9009883a 	mov	r4,r18
   848e4:	980b883a 	mov	r5,r19
   848e8:	180f883a 	mov	r7,r3
   848ec:	b00d883a 	mov	r6,r22
   848f0:	008eab80 	call	8eab8 <__ltdf2>
   848f4:	1000080e 	bge	r2,zero,84918 <_dtoa_r+0x578>
   848f8:	0027883a 	mov	r19,zero
   848fc:	0025883a 	mov	r18,zero
   84900:	d8802617 	ldw	r2,152(sp)
   84904:	df000517 	ldw	fp,20(sp)
   84908:	d8000615 	stw	zero,24(sp)
   8490c:	0084303a 	nor	r2,zero,r2
   84910:	d8800d15 	stw	r2,52(sp)
   84914:	00019b06 	br	84f84 <_dtoa_r+0xbe4>
   84918:	d9801217 	ldw	r6,72(sp)
   8491c:	d8801317 	ldw	r2,76(sp)
   84920:	3029883a 	mov	r20,r6
   84924:	102b883a 	mov	r21,r2
   84928:	d8c00217 	ldw	r3,8(sp)
   8492c:	18008516 	blt	r3,zero,84b44 <_dtoa_r+0x7a4>
   84930:	d9000d17 	ldw	r4,52(sp)
   84934:	00800384 	movi	r2,14
   84938:	11008216 	blt	r2,r4,84b44 <_dtoa_r+0x7a4>
   8493c:	200490fa 	slli	r2,r4,3
   84940:	d9802617 	ldw	r6,152(sp)
   84944:	00c00274 	movhi	r3,9
   84948:	18cead04 	addi	r3,r3,15028
   8494c:	10c5883a 	add	r2,r2,r3
   84950:	14800017 	ldw	r18,0(r2)
   84954:	14c00117 	ldw	r19,4(r2)
   84958:	30031e16 	blt	r6,zero,855d4 <_dtoa_r+0x1234>
   8495c:	d9000517 	ldw	r4,20(sp)
   84960:	d8c00f17 	ldw	r3,60(sp)
   84964:	a823883a 	mov	r17,r21
   84968:	a021883a 	mov	r16,r20
   8496c:	192b883a 	add	r21,r3,r4
   84970:	2039883a 	mov	fp,r4
   84974:	00000f06 	br	849b4 <_dtoa_r+0x614>
   84978:	0005883a 	mov	r2,zero
   8497c:	00d00934 	movhi	r3,16420
   84980:	5009883a 	mov	r4,r10
   84984:	580b883a 	mov	r5,r11
   84988:	180f883a 	mov	r7,r3
   8498c:	100d883a 	mov	r6,r2
   84990:	008e27c0 	call	8e27c <__muldf3>
   84994:	180b883a 	mov	r5,r3
   84998:	000d883a 	mov	r6,zero
   8499c:	000f883a 	mov	r7,zero
   849a0:	1009883a 	mov	r4,r2
   849a4:	1021883a 	mov	r16,r2
   849a8:	1823883a 	mov	r17,r3
   849ac:	008e9200 	call	8e920 <__nedf2>
   849b0:	10004526 	beq	r2,zero,84ac8 <_dtoa_r+0x728>
   849b4:	900d883a 	mov	r6,r18
   849b8:	980f883a 	mov	r7,r19
   849bc:	8009883a 	mov	r4,r16
   849c0:	880b883a 	mov	r5,r17
   849c4:	008e6400 	call	8e640 <__divdf3>
   849c8:	180b883a 	mov	r5,r3
   849cc:	1009883a 	mov	r4,r2
   849d0:	008ecc00 	call	8ecc0 <__fixdfsi>
   849d4:	1009883a 	mov	r4,r2
   849d8:	1029883a 	mov	r20,r2
   849dc:	008ebc80 	call	8ebc8 <__floatsidf>
   849e0:	180f883a 	mov	r7,r3
   849e4:	9009883a 	mov	r4,r18
   849e8:	980b883a 	mov	r5,r19
   849ec:	100d883a 	mov	r6,r2
   849f0:	008e27c0 	call	8e27c <__muldf3>
   849f4:	180f883a 	mov	r7,r3
   849f8:	880b883a 	mov	r5,r17
   849fc:	8009883a 	mov	r4,r16
   84a00:	100d883a 	mov	r6,r2
   84a04:	008e1880 	call	8e188 <__subdf3>
   84a08:	1015883a 	mov	r10,r2
   84a0c:	a0800c04 	addi	r2,r20,48
   84a10:	e0800005 	stb	r2,0(fp)
   84a14:	e7000044 	addi	fp,fp,1
   84a18:	1817883a 	mov	r11,r3
   84a1c:	e57fd61e 	bne	fp,r21,84978 <_dtoa_r+0x5d8>
   84a20:	500d883a 	mov	r6,r10
   84a24:	180f883a 	mov	r7,r3
   84a28:	5009883a 	mov	r4,r10
   84a2c:	180b883a 	mov	r5,r3
   84a30:	008e2080 	call	8e208 <__adddf3>
   84a34:	100d883a 	mov	r6,r2
   84a38:	9009883a 	mov	r4,r18
   84a3c:	980b883a 	mov	r5,r19
   84a40:	180f883a 	mov	r7,r3
   84a44:	1021883a 	mov	r16,r2
   84a48:	1823883a 	mov	r17,r3
   84a4c:	008eab80 	call	8eab8 <__ltdf2>
   84a50:	10000816 	blt	r2,zero,84a74 <_dtoa_r+0x6d4>
   84a54:	980b883a 	mov	r5,r19
   84a58:	800d883a 	mov	r6,r16
   84a5c:	880f883a 	mov	r7,r17
   84a60:	9009883a 	mov	r4,r18
   84a64:	008e8980 	call	8e898 <__eqdf2>
   84a68:	1000171e 	bne	r2,zero,84ac8 <_dtoa_r+0x728>
   84a6c:	a080004c 	andi	r2,r20,1
   84a70:	10001526 	beq	r2,zero,84ac8 <_dtoa_r+0x728>
   84a74:	d8800d17 	ldw	r2,52(sp)
   84a78:	d8800415 	stw	r2,16(sp)
   84a7c:	e009883a 	mov	r4,fp
   84a80:	213fffc4 	addi	r4,r4,-1
   84a84:	20c00007 	ldb	r3,0(r4)
   84a88:	00800e44 	movi	r2,57
   84a8c:	1880081e 	bne	r3,r2,84ab0 <_dtoa_r+0x710>
   84a90:	d8800517 	ldw	r2,20(sp)
   84a94:	113ffa1e 	bne	r2,r4,84a80 <_dtoa_r+0x6e0>
   84a98:	d8c00417 	ldw	r3,16(sp)
   84a9c:	d9800517 	ldw	r6,20(sp)
   84aa0:	00800c04 	movi	r2,48
   84aa4:	18c00044 	addi	r3,r3,1
   84aa8:	d8c00415 	stw	r3,16(sp)
   84aac:	30800005 	stb	r2,0(r6)
   84ab0:	20800003 	ldbu	r2,0(r4)
   84ab4:	d8c00417 	ldw	r3,16(sp)
   84ab8:	27000044 	addi	fp,r4,1
   84abc:	10800044 	addi	r2,r2,1
   84ac0:	d8c00d15 	stw	r3,52(sp)
   84ac4:	20800005 	stb	r2,0(r4)
   84ac8:	d9001617 	ldw	r4,88(sp)
   84acc:	d9400717 	ldw	r5,28(sp)
   84ad0:	00878e00 	call	878e0 <_Bfree>
   84ad4:	e0000005 	stb	zero,0(fp)
   84ad8:	d9800d17 	ldw	r6,52(sp)
   84adc:	d8c02717 	ldw	r3,156(sp)
   84ae0:	d9002917 	ldw	r4,164(sp)
   84ae4:	30800044 	addi	r2,r6,1
   84ae8:	18800015 	stw	r2,0(r3)
   84aec:	20029c26 	beq	r4,zero,85560 <_dtoa_r+0x11c0>
   84af0:	d8c00517 	ldw	r3,20(sp)
   84af4:	27000015 	stw	fp,0(r4)
   84af8:	003e5d06 	br	84470 <_dtoa_r+0xd0>
   84afc:	d9800d17 	ldw	r6,52(sp)
   84b00:	00c00274 	movhi	r3,9
   84b04:	18cead04 	addi	r3,r3,15028
   84b08:	d9001217 	ldw	r4,72(sp)
   84b0c:	300490fa 	slli	r2,r6,3
   84b10:	d9401317 	ldw	r5,76(sp)
   84b14:	10c5883a 	add	r2,r2,r3
   84b18:	12000017 	ldw	r8,0(r2)
   84b1c:	12400117 	ldw	r9,4(r2)
   84b20:	400d883a 	mov	r6,r8
   84b24:	480f883a 	mov	r7,r9
   84b28:	008eab80 	call	8eab8 <__ltdf2>
   84b2c:	1000030e 	bge	r2,zero,84b3c <_dtoa_r+0x79c>
   84b30:	d8800d17 	ldw	r2,52(sp)
   84b34:	10bfffc4 	addi	r2,r2,-1
   84b38:	d8800d15 	stw	r2,52(sp)
   84b3c:	d8000c15 	stw	zero,48(sp)
   84b40:	003ea806 	br	845e4 <_dtoa_r+0x244>
   84b44:	d9000b17 	ldw	r4,44(sp)
   84b48:	202cc03a 	cmpne	r22,r4,zero
   84b4c:	b000c71e 	bne	r22,zero,84e6c <_dtoa_r+0xacc>
   84b50:	dc001117 	ldw	r16,68(sp)
   84b54:	dc801017 	ldw	r18,64(sp)
   84b58:	0027883a 	mov	r19,zero
   84b5c:	04000b0e 	bge	zero,r16,84b8c <_dtoa_r+0x7ec>
   84b60:	d8c00a17 	ldw	r3,40(sp)
   84b64:	00c0090e 	bge	zero,r3,84b8c <_dtoa_r+0x7ec>
   84b68:	8005883a 	mov	r2,r16
   84b6c:	1c011316 	blt	r3,r16,84fbc <_dtoa_r+0xc1c>
   84b70:	d9000a17 	ldw	r4,40(sp)
   84b74:	d9801117 	ldw	r6,68(sp)
   84b78:	80a1c83a 	sub	r16,r16,r2
   84b7c:	2089c83a 	sub	r4,r4,r2
   84b80:	308dc83a 	sub	r6,r6,r2
   84b84:	d9000a15 	stw	r4,40(sp)
   84b88:	d9801115 	stw	r6,68(sp)
   84b8c:	d8801017 	ldw	r2,64(sp)
   84b90:	0080150e 	bge	zero,r2,84be8 <_dtoa_r+0x848>
   84b94:	d8c00b17 	ldw	r3,44(sp)
   84b98:	1805003a 	cmpeq	r2,r3,zero
   84b9c:	1001c91e 	bne	r2,zero,852c4 <_dtoa_r+0xf24>
   84ba0:	04800e0e 	bge	zero,r18,84bdc <_dtoa_r+0x83c>
   84ba4:	d9001617 	ldw	r4,88(sp)
   84ba8:	980b883a 	mov	r5,r19
   84bac:	900d883a 	mov	r6,r18
   84bb0:	008872c0 	call	8872c <__pow5mult>
   84bb4:	d9001617 	ldw	r4,88(sp)
   84bb8:	d9800717 	ldw	r6,28(sp)
   84bbc:	100b883a 	mov	r5,r2
   84bc0:	1027883a 	mov	r19,r2
   84bc4:	00883700 	call	88370 <__multiply>
   84bc8:	d9001617 	ldw	r4,88(sp)
   84bcc:	d9400717 	ldw	r5,28(sp)
   84bd0:	1023883a 	mov	r17,r2
   84bd4:	00878e00 	call	878e0 <_Bfree>
   84bd8:	dc400715 	stw	r17,28(sp)
   84bdc:	d9001017 	ldw	r4,64(sp)
   84be0:	248dc83a 	sub	r6,r4,r18
   84be4:	30010e1e 	bne	r6,zero,85020 <_dtoa_r+0xc80>
   84be8:	d9001617 	ldw	r4,88(sp)
   84bec:	04400044 	movi	r17,1
   84bf0:	880b883a 	mov	r5,r17
   84bf4:	00885c40 	call	885c4 <__i2b>
   84bf8:	d9800917 	ldw	r6,36(sp)
   84bfc:	1025883a 	mov	r18,r2
   84c00:	0180040e 	bge	zero,r6,84c14 <_dtoa_r+0x874>
   84c04:	d9001617 	ldw	r4,88(sp)
   84c08:	100b883a 	mov	r5,r2
   84c0c:	008872c0 	call	8872c <__pow5mult>
   84c10:	1025883a 	mov	r18,r2
   84c14:	d8801717 	ldw	r2,92(sp)
   84c18:	8880f30e 	bge	r17,r2,84fe8 <_dtoa_r+0xc48>
   84c1c:	0023883a 	mov	r17,zero
   84c20:	d9800917 	ldw	r6,36(sp)
   84c24:	30019e1e 	bne	r6,zero,852a0 <_dtoa_r+0xf00>
   84c28:	00c00044 	movi	r3,1
   84c2c:	d9000a17 	ldw	r4,40(sp)
   84c30:	20c5883a 	add	r2,r4,r3
   84c34:	10c007cc 	andi	r3,r2,31
   84c38:	1800841e 	bne	r3,zero,84e4c <_dtoa_r+0xaac>
   84c3c:	00800704 	movi	r2,28
   84c40:	d9000a17 	ldw	r4,40(sp)
   84c44:	d9801117 	ldw	r6,68(sp)
   84c48:	80a1883a 	add	r16,r16,r2
   84c4c:	2089883a 	add	r4,r4,r2
   84c50:	308d883a 	add	r6,r6,r2
   84c54:	d9000a15 	stw	r4,40(sp)
   84c58:	d9801115 	stw	r6,68(sp)
   84c5c:	d8801117 	ldw	r2,68(sp)
   84c60:	0080050e 	bge	zero,r2,84c78 <_dtoa_r+0x8d8>
   84c64:	d9400717 	ldw	r5,28(sp)
   84c68:	d9001617 	ldw	r4,88(sp)
   84c6c:	100d883a 	mov	r6,r2
   84c70:	00882240 	call	88224 <__lshift>
   84c74:	d8800715 	stw	r2,28(sp)
   84c78:	d8c00a17 	ldw	r3,40(sp)
   84c7c:	00c0050e 	bge	zero,r3,84c94 <_dtoa_r+0x8f4>
   84c80:	d9001617 	ldw	r4,88(sp)
   84c84:	900b883a 	mov	r5,r18
   84c88:	180d883a 	mov	r6,r3
   84c8c:	00882240 	call	88224 <__lshift>
   84c90:	1025883a 	mov	r18,r2
   84c94:	d9000c17 	ldw	r4,48(sp)
   84c98:	2005003a 	cmpeq	r2,r4,zero
   84c9c:	10016f26 	beq	r2,zero,8525c <_dtoa_r+0xebc>
   84ca0:	d9000f17 	ldw	r4,60(sp)
   84ca4:	0102170e 	bge	zero,r4,85504 <_dtoa_r+0x1164>
   84ca8:	d9800b17 	ldw	r6,44(sp)
   84cac:	3005003a 	cmpeq	r2,r6,zero
   84cb0:	1000881e 	bne	r2,zero,84ed4 <_dtoa_r+0xb34>
   84cb4:	0400050e 	bge	zero,r16,84ccc <_dtoa_r+0x92c>
   84cb8:	d9001617 	ldw	r4,88(sp)
   84cbc:	980b883a 	mov	r5,r19
   84cc0:	800d883a 	mov	r6,r16
   84cc4:	00882240 	call	88224 <__lshift>
   84cc8:	1027883a 	mov	r19,r2
   84ccc:	8804c03a 	cmpne	r2,r17,zero
   84cd0:	1002541e 	bne	r2,zero,85624 <_dtoa_r+0x1284>
   84cd4:	980b883a 	mov	r5,r19
   84cd8:	dd800517 	ldw	r22,20(sp)
   84cdc:	dcc00615 	stw	r19,24(sp)
   84ce0:	a700004c 	andi	fp,r20,1
   84ce4:	2827883a 	mov	r19,r5
   84ce8:	d9000717 	ldw	r4,28(sp)
   84cec:	900b883a 	mov	r5,r18
   84cf0:	008415c0 	call	8415c <quorem>
   84cf4:	d9000717 	ldw	r4,28(sp)
   84cf8:	d9400617 	ldw	r5,24(sp)
   84cfc:	1023883a 	mov	r17,r2
   84d00:	8dc00c04 	addi	r23,r17,48
   84d04:	0087a3c0 	call	87a3c <__mcmp>
   84d08:	d9001617 	ldw	r4,88(sp)
   84d0c:	900b883a 	mov	r5,r18
   84d10:	980d883a 	mov	r6,r19
   84d14:	1029883a 	mov	r20,r2
   84d18:	00880980 	call	88098 <__mdiff>
   84d1c:	102b883a 	mov	r21,r2
   84d20:	10800317 	ldw	r2,12(r2)
   84d24:	1001281e 	bne	r2,zero,851c8 <_dtoa_r+0xe28>
   84d28:	d9000717 	ldw	r4,28(sp)
   84d2c:	a80b883a 	mov	r5,r21
   84d30:	0087a3c0 	call	87a3c <__mcmp>
   84d34:	d9001617 	ldw	r4,88(sp)
   84d38:	1021883a 	mov	r16,r2
   84d3c:	a80b883a 	mov	r5,r21
   84d40:	00878e00 	call	878e0 <_Bfree>
   84d44:	8000041e 	bne	r16,zero,84d58 <_dtoa_r+0x9b8>
   84d48:	d8801717 	ldw	r2,92(sp)
   84d4c:	1000021e 	bne	r2,zero,84d58 <_dtoa_r+0x9b8>
   84d50:	e004c03a 	cmpne	r2,fp,zero
   84d54:	10011726 	beq	r2,zero,851b4 <_dtoa_r+0xe14>
   84d58:	a0010616 	blt	r20,zero,85174 <_dtoa_r+0xdd4>
   84d5c:	a000041e 	bne	r20,zero,84d70 <_dtoa_r+0x9d0>
   84d60:	d8c01717 	ldw	r3,92(sp)
   84d64:	1800021e 	bne	r3,zero,84d70 <_dtoa_r+0x9d0>
   84d68:	e004c03a 	cmpne	r2,fp,zero
   84d6c:	10010126 	beq	r2,zero,85174 <_dtoa_r+0xdd4>
   84d70:	04023d16 	blt	zero,r16,85668 <_dtoa_r+0x12c8>
   84d74:	b5c00005 	stb	r23,0(r22)
   84d78:	d9800517 	ldw	r6,20(sp)
   84d7c:	d9000f17 	ldw	r4,60(sp)
   84d80:	b5800044 	addi	r22,r22,1
   84d84:	3105883a 	add	r2,r6,r4
   84d88:	b0806526 	beq	r22,r2,84f20 <_dtoa_r+0xb80>
   84d8c:	d9400717 	ldw	r5,28(sp)
   84d90:	d9001617 	ldw	r4,88(sp)
   84d94:	01800284 	movi	r6,10
   84d98:	000f883a 	mov	r7,zero
   84d9c:	00886000 	call	88600 <__multadd>
   84da0:	d8800715 	stw	r2,28(sp)
   84da4:	d8800617 	ldw	r2,24(sp)
   84da8:	14c10c26 	beq	r2,r19,851dc <_dtoa_r+0xe3c>
   84dac:	d9400617 	ldw	r5,24(sp)
   84db0:	d9001617 	ldw	r4,88(sp)
   84db4:	01800284 	movi	r6,10
   84db8:	000f883a 	mov	r7,zero
   84dbc:	00886000 	call	88600 <__multadd>
   84dc0:	d9001617 	ldw	r4,88(sp)
   84dc4:	980b883a 	mov	r5,r19
   84dc8:	01800284 	movi	r6,10
   84dcc:	000f883a 	mov	r7,zero
   84dd0:	d8800615 	stw	r2,24(sp)
   84dd4:	00886000 	call	88600 <__multadd>
   84dd8:	1027883a 	mov	r19,r2
   84ddc:	003fc206 	br	84ce8 <_dtoa_r+0x948>
   84de0:	2445c83a 	sub	r2,r4,r17
   84de4:	a088983a 	sll	r4,r20,r2
   84de8:	003e4b06 	br	84718 <_dtoa_r+0x378>
   84dec:	01bfffc4 	movi	r6,-1
   84df0:	00800044 	movi	r2,1
   84df4:	d9800e15 	stw	r6,56(sp)
   84df8:	d9800f15 	stw	r6,60(sp)
   84dfc:	d8800b15 	stw	r2,44(sp)
   84e00:	d8c01617 	ldw	r3,88(sp)
   84e04:	008005c4 	movi	r2,23
   84e08:	18001115 	stw	zero,68(r3)
   84e0c:	1580082e 	bgeu	r2,r22,84e30 <_dtoa_r+0xa90>
   84e10:	00c00104 	movi	r3,4
   84e14:	0009883a 	mov	r4,zero
   84e18:	18c7883a 	add	r3,r3,r3
   84e1c:	18800504 	addi	r2,r3,20
   84e20:	21000044 	addi	r4,r4,1
   84e24:	b0bffc2e 	bgeu	r22,r2,84e18 <_dtoa_r+0xa78>
   84e28:	d9801617 	ldw	r6,88(sp)
   84e2c:	31001115 	stw	r4,68(r6)
   84e30:	dc000f17 	ldw	r16,60(sp)
   84e34:	003e4b06 	br	84764 <_dtoa_r+0x3c4>
   84e38:	d9801717 	ldw	r6,92(sp)
   84e3c:	0023883a 	mov	r17,zero
   84e40:	31bfff04 	addi	r6,r6,-4
   84e44:	d9801715 	stw	r6,92(sp)
   84e48:	003df806 	br	8462c <_dtoa_r+0x28c>
   84e4c:	00800804 	movi	r2,32
   84e50:	10c9c83a 	sub	r4,r2,r3
   84e54:	00c00104 	movi	r3,4
   84e58:	19005a16 	blt	r3,r4,84fc4 <_dtoa_r+0xc24>
   84e5c:	008000c4 	movi	r2,3
   84e60:	113f7e16 	blt	r2,r4,84c5c <_dtoa_r+0x8bc>
   84e64:	20800704 	addi	r2,r4,28
   84e68:	003f7506 	br	84c40 <_dtoa_r+0x8a0>
   84e6c:	d9801717 	ldw	r6,92(sp)
   84e70:	00800044 	movi	r2,1
   84e74:	1180a10e 	bge	r2,r6,850fc <_dtoa_r+0xd5c>
   84e78:	d9800f17 	ldw	r6,60(sp)
   84e7c:	d8c01017 	ldw	r3,64(sp)
   84e80:	30bfffc4 	addi	r2,r6,-1
   84e84:	1881c616 	blt	r3,r2,855a0 <_dtoa_r+0x1200>
   84e88:	18a5c83a 	sub	r18,r3,r2
   84e8c:	d8800f17 	ldw	r2,60(sp)
   84e90:	10026216 	blt	r2,zero,8581c <_dtoa_r+0x147c>
   84e94:	dc001117 	ldw	r16,68(sp)
   84e98:	1007883a 	mov	r3,r2
   84e9c:	d9800a17 	ldw	r6,40(sp)
   84ea0:	d8801117 	ldw	r2,68(sp)
   84ea4:	d9001617 	ldw	r4,88(sp)
   84ea8:	30cd883a 	add	r6,r6,r3
   84eac:	10c5883a 	add	r2,r2,r3
   84eb0:	01400044 	movi	r5,1
   84eb4:	d9800a15 	stw	r6,40(sp)
   84eb8:	d8801115 	stw	r2,68(sp)
   84ebc:	00885c40 	call	885c4 <__i2b>
   84ec0:	1027883a 	mov	r19,r2
   84ec4:	003f2506 	br	84b5c <_dtoa_r+0x7bc>
   84ec8:	00c00274 	movhi	r3,9
   84ecc:	18cde404 	addi	r3,r3,14224
   84ed0:	003d6706 	br	84470 <_dtoa_r+0xd0>
   84ed4:	dd800517 	ldw	r22,20(sp)
   84ed8:	04000044 	movi	r16,1
   84edc:	00000706 	br	84efc <_dtoa_r+0xb5c>
   84ee0:	d9400717 	ldw	r5,28(sp)
   84ee4:	d9001617 	ldw	r4,88(sp)
   84ee8:	01800284 	movi	r6,10
   84eec:	000f883a 	mov	r7,zero
   84ef0:	00886000 	call	88600 <__multadd>
   84ef4:	d8800715 	stw	r2,28(sp)
   84ef8:	84000044 	addi	r16,r16,1
   84efc:	d9000717 	ldw	r4,28(sp)
   84f00:	900b883a 	mov	r5,r18
   84f04:	008415c0 	call	8415c <quorem>
   84f08:	15c00c04 	addi	r23,r2,48
   84f0c:	b5c00005 	stb	r23,0(r22)
   84f10:	d8c00f17 	ldw	r3,60(sp)
   84f14:	b5800044 	addi	r22,r22,1
   84f18:	80fff116 	blt	r16,r3,84ee0 <_dtoa_r+0xb40>
   84f1c:	d8000615 	stw	zero,24(sp)
   84f20:	d9400717 	ldw	r5,28(sp)
   84f24:	d9001617 	ldw	r4,88(sp)
   84f28:	01800044 	movi	r6,1
   84f2c:	00882240 	call	88224 <__lshift>
   84f30:	1009883a 	mov	r4,r2
   84f34:	900b883a 	mov	r5,r18
   84f38:	d8800715 	stw	r2,28(sp)
   84f3c:	0087a3c0 	call	87a3c <__mcmp>
   84f40:	00803c0e 	bge	zero,r2,85034 <_dtoa_r+0xc94>
   84f44:	b009883a 	mov	r4,r22
   84f48:	213fffc4 	addi	r4,r4,-1
   84f4c:	21400003 	ldbu	r5,0(r4)
   84f50:	00800e44 	movi	r2,57
   84f54:	28c03fcc 	andi	r3,r5,255
   84f58:	18c0201c 	xori	r3,r3,128
   84f5c:	18ffe004 	addi	r3,r3,-128
   84f60:	1881981e 	bne	r3,r2,855c4 <_dtoa_r+0x1224>
   84f64:	d9800517 	ldw	r6,20(sp)
   84f68:	21bff71e 	bne	r4,r6,84f48 <_dtoa_r+0xba8>
   84f6c:	d8800d17 	ldw	r2,52(sp)
   84f70:	37000044 	addi	fp,r6,1
   84f74:	10800044 	addi	r2,r2,1
   84f78:	d8800d15 	stw	r2,52(sp)
   84f7c:	00800c44 	movi	r2,49
   84f80:	30800005 	stb	r2,0(r6)
   84f84:	d9001617 	ldw	r4,88(sp)
   84f88:	900b883a 	mov	r5,r18
   84f8c:	00878e00 	call	878e0 <_Bfree>
   84f90:	983ecd26 	beq	r19,zero,84ac8 <_dtoa_r+0x728>
   84f94:	d8c00617 	ldw	r3,24(sp)
   84f98:	18000426 	beq	r3,zero,84fac <_dtoa_r+0xc0c>
   84f9c:	1cc00326 	beq	r3,r19,84fac <_dtoa_r+0xc0c>
   84fa0:	d9001617 	ldw	r4,88(sp)
   84fa4:	180b883a 	mov	r5,r3
   84fa8:	00878e00 	call	878e0 <_Bfree>
   84fac:	d9001617 	ldw	r4,88(sp)
   84fb0:	980b883a 	mov	r5,r19
   84fb4:	00878e00 	call	878e0 <_Bfree>
   84fb8:	003ec306 	br	84ac8 <_dtoa_r+0x728>
   84fbc:	1805883a 	mov	r2,r3
   84fc0:	003eeb06 	br	84b70 <_dtoa_r+0x7d0>
   84fc4:	d9800a17 	ldw	r6,40(sp)
   84fc8:	d8c01117 	ldw	r3,68(sp)
   84fcc:	20bfff04 	addi	r2,r4,-4
   84fd0:	308d883a 	add	r6,r6,r2
   84fd4:	1887883a 	add	r3,r3,r2
   84fd8:	80a1883a 	add	r16,r16,r2
   84fdc:	d9800a15 	stw	r6,40(sp)
   84fe0:	d8c01115 	stw	r3,68(sp)
   84fe4:	003f1d06 	br	84c5c <_dtoa_r+0x8bc>
   84fe8:	a03f0c1e 	bne	r20,zero,84c1c <_dtoa_r+0x87c>
   84fec:	00800434 	movhi	r2,16
   84ff0:	10bfffc4 	addi	r2,r2,-1
   84ff4:	a884703a 	and	r2,r21,r2
   84ff8:	103f081e 	bne	r2,zero,84c1c <_dtoa_r+0x87c>
   84ffc:	a89ffc2c 	andhi	r2,r21,32752
   85000:	103f0626 	beq	r2,zero,84c1c <_dtoa_r+0x87c>
   85004:	d8c01117 	ldw	r3,68(sp)
   85008:	d9000a17 	ldw	r4,40(sp)
   8500c:	18c00044 	addi	r3,r3,1
   85010:	21000044 	addi	r4,r4,1
   85014:	d8c01115 	stw	r3,68(sp)
   85018:	d9000a15 	stw	r4,40(sp)
   8501c:	003f0006 	br	84c20 <_dtoa_r+0x880>
   85020:	d9400717 	ldw	r5,28(sp)
   85024:	d9001617 	ldw	r4,88(sp)
   85028:	008872c0 	call	8872c <__pow5mult>
   8502c:	d8800715 	stw	r2,28(sp)
   85030:	003eed06 	br	84be8 <_dtoa_r+0x848>
   85034:	1000021e 	bne	r2,zero,85040 <_dtoa_r+0xca0>
   85038:	b880004c 	andi	r2,r23,1
   8503c:	103fc11e 	bne	r2,zero,84f44 <_dtoa_r+0xba4>
   85040:	b5bfffc4 	addi	r22,r22,-1
   85044:	b0c00007 	ldb	r3,0(r22)
   85048:	00800c04 	movi	r2,48
   8504c:	18bffc26 	beq	r3,r2,85040 <_dtoa_r+0xca0>
   85050:	b7000044 	addi	fp,r22,1
   85054:	003fcb06 	br	84f84 <_dtoa_r+0xbe4>
   85058:	d9800d17 	ldw	r6,52(sp)
   8505c:	018fc83a 	sub	r7,zero,r6
   85060:	3801f726 	beq	r7,zero,85840 <_dtoa_r+0x14a0>
   85064:	398003cc 	andi	r6,r7,15
   85068:	300c90fa 	slli	r6,r6,3
   8506c:	01400274 	movhi	r5,9
   85070:	294ead04 	addi	r5,r5,15028
   85074:	d9001217 	ldw	r4,72(sp)
   85078:	314d883a 	add	r6,r6,r5
   8507c:	30c00117 	ldw	r3,4(r6)
   85080:	30800017 	ldw	r2,0(r6)
   85084:	d9401317 	ldw	r5,76(sp)
   85088:	3821d13a 	srai	r16,r7,4
   8508c:	100d883a 	mov	r6,r2
   85090:	180f883a 	mov	r7,r3
   85094:	008e27c0 	call	8e27c <__muldf3>
   85098:	1011883a 	mov	r8,r2
   8509c:	1813883a 	mov	r9,r3
   850a0:	1029883a 	mov	r20,r2
   850a4:	182b883a 	mov	r21,r3
   850a8:	8001e526 	beq	r16,zero,85840 <_dtoa_r+0x14a0>
   850ac:	05800084 	movi	r22,2
   850b0:	04400274 	movhi	r17,9
   850b4:	8c4edf04 	addi	r17,r17,15228
   850b8:	8080004c 	andi	r2,r16,1
   850bc:	1005003a 	cmpeq	r2,r2,zero
   850c0:	1000081e 	bne	r2,zero,850e4 <_dtoa_r+0xd44>
   850c4:	89800017 	ldw	r6,0(r17)
   850c8:	89c00117 	ldw	r7,4(r17)
   850cc:	480b883a 	mov	r5,r9
   850d0:	4009883a 	mov	r4,r8
   850d4:	008e27c0 	call	8e27c <__muldf3>
   850d8:	1011883a 	mov	r8,r2
   850dc:	b5800044 	addi	r22,r22,1
   850e0:	1813883a 	mov	r9,r3
   850e4:	8021d07a 	srai	r16,r16,1
   850e8:	8c400204 	addi	r17,r17,8
   850ec:	803ff21e 	bne	r16,zero,850b8 <_dtoa_r+0xd18>
   850f0:	4029883a 	mov	r20,r8
   850f4:	482b883a 	mov	r21,r9
   850f8:	003dca06 	br	84824 <_dtoa_r+0x484>
   850fc:	d9000817 	ldw	r4,32(sp)
   85100:	2005003a 	cmpeq	r2,r4,zero
   85104:	1001f61e 	bne	r2,zero,858e0 <_dtoa_r+0x1540>
   85108:	dc001117 	ldw	r16,68(sp)
   8510c:	dc801017 	ldw	r18,64(sp)
   85110:	18c10cc4 	addi	r3,r3,1075
   85114:	003f6106 	br	84e9c <_dtoa_r+0xafc>
   85118:	d8000b15 	stw	zero,44(sp)
   8511c:	d9802617 	ldw	r6,152(sp)
   85120:	d8c00d17 	ldw	r3,52(sp)
   85124:	30800044 	addi	r2,r6,1
   85128:	18ad883a 	add	r22,r3,r2
   8512c:	b13fffc4 	addi	r4,r22,-1
   85130:	d9000e15 	stw	r4,56(sp)
   85134:	0581f60e 	bge	zero,r22,85910 <_dtoa_r+0x1570>
   85138:	dd800f15 	stw	r22,60(sp)
   8513c:	003f3006 	br	84e00 <_dtoa_r+0xa60>
   85140:	d8000b15 	stw	zero,44(sp)
   85144:	d9002617 	ldw	r4,152(sp)
   85148:	0101eb0e 	bge	zero,r4,858f8 <_dtoa_r+0x1558>
   8514c:	202d883a 	mov	r22,r4
   85150:	d9000e15 	stw	r4,56(sp)
   85154:	d9000f15 	stw	r4,60(sp)
   85158:	003f2906 	br	84e00 <_dtoa_r+0xa60>
   8515c:	01800044 	movi	r6,1
   85160:	d9800b15 	stw	r6,44(sp)
   85164:	003ff706 	br	85144 <_dtoa_r+0xda4>
   85168:	01000044 	movi	r4,1
   8516c:	d9000b15 	stw	r4,44(sp)
   85170:	003fea06 	br	8511c <_dtoa_r+0xd7c>
   85174:	04000c0e 	bge	zero,r16,851a8 <_dtoa_r+0xe08>
   85178:	d9400717 	ldw	r5,28(sp)
   8517c:	d9001617 	ldw	r4,88(sp)
   85180:	01800044 	movi	r6,1
   85184:	00882240 	call	88224 <__lshift>
   85188:	1009883a 	mov	r4,r2
   8518c:	900b883a 	mov	r5,r18
   85190:	d8800715 	stw	r2,28(sp)
   85194:	0087a3c0 	call	87a3c <__mcmp>
   85198:	0081e00e 	bge	zero,r2,8591c <_dtoa_r+0x157c>
   8519c:	bdc00044 	addi	r23,r23,1
   851a0:	00800e84 	movi	r2,58
   851a4:	b881a226 	beq	r23,r2,85830 <_dtoa_r+0x1490>
   851a8:	b7000044 	addi	fp,r22,1
   851ac:	b5c00005 	stb	r23,0(r22)
   851b0:	003f7406 	br	84f84 <_dtoa_r+0xbe4>
   851b4:	00800e44 	movi	r2,57
   851b8:	b8819d26 	beq	r23,r2,85830 <_dtoa_r+0x1490>
   851bc:	053ffa0e 	bge	zero,r20,851a8 <_dtoa_r+0xe08>
   851c0:	8dc00c44 	addi	r23,r17,49
   851c4:	003ff806 	br	851a8 <_dtoa_r+0xe08>
   851c8:	d9001617 	ldw	r4,88(sp)
   851cc:	a80b883a 	mov	r5,r21
   851d0:	04000044 	movi	r16,1
   851d4:	00878e00 	call	878e0 <_Bfree>
   851d8:	003edf06 	br	84d58 <_dtoa_r+0x9b8>
   851dc:	d9001617 	ldw	r4,88(sp)
   851e0:	980b883a 	mov	r5,r19
   851e4:	01800284 	movi	r6,10
   851e8:	000f883a 	mov	r7,zero
   851ec:	00886000 	call	88600 <__multadd>
   851f0:	1027883a 	mov	r19,r2
   851f4:	d8800615 	stw	r2,24(sp)
   851f8:	003ebb06 	br	84ce8 <_dtoa_r+0x948>
   851fc:	d9801117 	ldw	r6,68(sp)
   85200:	d8800d17 	ldw	r2,52(sp)
   85204:	d8000915 	stw	zero,36(sp)
   85208:	308dc83a 	sub	r6,r6,r2
   8520c:	0087c83a 	sub	r3,zero,r2
   85210:	d9801115 	stw	r6,68(sp)
   85214:	d8c01015 	stw	r3,64(sp)
   85218:	003cfe06 	br	84614 <_dtoa_r+0x274>
   8521c:	018dc83a 	sub	r6,zero,r6
   85220:	d9801115 	stw	r6,68(sp)
   85224:	d8000a15 	stw	zero,40(sp)
   85228:	003cf306 	br	845f8 <_dtoa_r+0x258>
   8522c:	d9000d17 	ldw	r4,52(sp)
   85230:	008ebc80 	call	8ebc8 <__floatsidf>
   85234:	880b883a 	mov	r5,r17
   85238:	8009883a 	mov	r4,r16
   8523c:	180f883a 	mov	r7,r3
   85240:	100d883a 	mov	r6,r2
   85244:	008e9200 	call	8e920 <__nedf2>
   85248:	103ce126 	beq	r2,zero,845d0 <_dtoa_r+0x230>
   8524c:	d9800d17 	ldw	r6,52(sp)
   85250:	31bfffc4 	addi	r6,r6,-1
   85254:	d9800d15 	stw	r6,52(sp)
   85258:	003cdd06 	br	845d0 <_dtoa_r+0x230>
   8525c:	d9000717 	ldw	r4,28(sp)
   85260:	900b883a 	mov	r5,r18
   85264:	0087a3c0 	call	87a3c <__mcmp>
   85268:	103e8d0e 	bge	r2,zero,84ca0 <_dtoa_r+0x900>
   8526c:	d9400717 	ldw	r5,28(sp)
   85270:	d9001617 	ldw	r4,88(sp)
   85274:	01800284 	movi	r6,10
   85278:	000f883a 	mov	r7,zero
   8527c:	00886000 	call	88600 <__multadd>
   85280:	d9800d17 	ldw	r6,52(sp)
   85284:	d8800715 	stw	r2,28(sp)
   85288:	31bfffc4 	addi	r6,r6,-1
   8528c:	d9800d15 	stw	r6,52(sp)
   85290:	b001a71e 	bne	r22,zero,85930 <_dtoa_r+0x1590>
   85294:	d8800e17 	ldw	r2,56(sp)
   85298:	d8800f15 	stw	r2,60(sp)
   8529c:	003e8006 	br	84ca0 <_dtoa_r+0x900>
   852a0:	90800417 	ldw	r2,16(r18)
   852a4:	1085883a 	add	r2,r2,r2
   852a8:	1085883a 	add	r2,r2,r2
   852ac:	1485883a 	add	r2,r2,r18
   852b0:	11000417 	ldw	r4,16(r2)
   852b4:	00879080 	call	87908 <__hi0bits>
   852b8:	00c00804 	movi	r3,32
   852bc:	1887c83a 	sub	r3,r3,r2
   852c0:	003e5a06 	br	84c2c <_dtoa_r+0x88c>
   852c4:	d9400717 	ldw	r5,28(sp)
   852c8:	d9801017 	ldw	r6,64(sp)
   852cc:	d9001617 	ldw	r4,88(sp)
   852d0:	008872c0 	call	8872c <__pow5mult>
   852d4:	d8800715 	stw	r2,28(sp)
   852d8:	003e4306 	br	84be8 <_dtoa_r+0x848>
   852dc:	d9800f17 	ldw	r6,60(sp)
   852e0:	d8800d17 	ldw	r2,52(sp)
   852e4:	d9800315 	stw	r6,12(sp)
   852e8:	d8800415 	stw	r2,16(sp)
   852ec:	d8c00b17 	ldw	r3,44(sp)
   852f0:	1805003a 	cmpeq	r2,r3,zero
   852f4:	1000e21e 	bne	r2,zero,85680 <_dtoa_r+0x12e0>
   852f8:	d9000317 	ldw	r4,12(sp)
   852fc:	0005883a 	mov	r2,zero
   85300:	00cff834 	movhi	r3,16352
   85304:	200c90fa 	slli	r6,r4,3
   85308:	01000274 	movhi	r4,9
   8530c:	210ead04 	addi	r4,r4,15028
   85310:	180b883a 	mov	r5,r3
   85314:	310d883a 	add	r6,r6,r4
   85318:	327fff17 	ldw	r9,-4(r6)
   8531c:	323ffe17 	ldw	r8,-8(r6)
   85320:	1009883a 	mov	r4,r2
   85324:	480f883a 	mov	r7,r9
   85328:	400d883a 	mov	r6,r8
   8532c:	008e6400 	call	8e640 <__divdf3>
   85330:	180b883a 	mov	r5,r3
   85334:	b00d883a 	mov	r6,r22
   85338:	b80f883a 	mov	r7,r23
   8533c:	1009883a 	mov	r4,r2
   85340:	008e1880 	call	8e188 <__subdf3>
   85344:	a80b883a 	mov	r5,r21
   85348:	a009883a 	mov	r4,r20
   8534c:	d8c01915 	stw	r3,100(sp)
   85350:	d8801815 	stw	r2,96(sp)
   85354:	008ecc00 	call	8ecc0 <__fixdfsi>
   85358:	1009883a 	mov	r4,r2
   8535c:	1027883a 	mov	r19,r2
   85360:	008ebc80 	call	8ebc8 <__floatsidf>
   85364:	a80b883a 	mov	r5,r21
   85368:	a009883a 	mov	r4,r20
   8536c:	180f883a 	mov	r7,r3
   85370:	100d883a 	mov	r6,r2
   85374:	008e1880 	call	8e188 <__subdf3>
   85378:	d9801817 	ldw	r6,96(sp)
   8537c:	1823883a 	mov	r17,r3
   85380:	d8801415 	stw	r2,80(sp)
   85384:	302d883a 	mov	r22,r6
   85388:	d9800517 	ldw	r6,20(sp)
   8538c:	9cc00c04 	addi	r19,r19,48
   85390:	dc401515 	stw	r17,84(sp)
   85394:	d8c01917 	ldw	r3,100(sp)
   85398:	34c00005 	stb	r19,0(r6)
   8539c:	d8800517 	ldw	r2,20(sp)
   853a0:	d9401917 	ldw	r5,100(sp)
   853a4:	d9801417 	ldw	r6,80(sp)
   853a8:	b009883a 	mov	r4,r22
   853ac:	880f883a 	mov	r7,r17
   853b0:	182f883a 	mov	r23,r3
   853b4:	17000044 	addi	fp,r2,1
   853b8:	008e9a80 	call	8e9a8 <__gtdf2>
   853bc:	00804e16 	blt	zero,r2,854f8 <_dtoa_r+0x1158>
   853c0:	d9801417 	ldw	r6,80(sp)
   853c4:	0005883a 	mov	r2,zero
   853c8:	00cffc34 	movhi	r3,16368
   853cc:	180b883a 	mov	r5,r3
   853d0:	880f883a 	mov	r7,r17
   853d4:	1009883a 	mov	r4,r2
   853d8:	008e1880 	call	8e188 <__subdf3>
   853dc:	d9401917 	ldw	r5,100(sp)
   853e0:	180f883a 	mov	r7,r3
   853e4:	b009883a 	mov	r4,r22
   853e8:	100d883a 	mov	r6,r2
   853ec:	008e9a80 	call	8e9a8 <__gtdf2>
   853f0:	00bda216 	blt	zero,r2,84a7c <_dtoa_r+0x6dc>
   853f4:	d8c00317 	ldw	r3,12(sp)
   853f8:	00800044 	movi	r2,1
   853fc:	10c01216 	blt	r2,r3,85448 <_dtoa_r+0x10a8>
   85400:	003d4506 	br	84918 <_dtoa_r+0x578>
   85404:	d9801417 	ldw	r6,80(sp)
   85408:	0005883a 	mov	r2,zero
   8540c:	00cffc34 	movhi	r3,16368
   85410:	180b883a 	mov	r5,r3
   85414:	880f883a 	mov	r7,r17
   85418:	1009883a 	mov	r4,r2
   8541c:	008e1880 	call	8e188 <__subdf3>
   85420:	d9c01b17 	ldw	r7,108(sp)
   85424:	180b883a 	mov	r5,r3
   85428:	1009883a 	mov	r4,r2
   8542c:	b00d883a 	mov	r6,r22
   85430:	008eab80 	call	8eab8 <__ltdf2>
   85434:	103d9116 	blt	r2,zero,84a7c <_dtoa_r+0x6dc>
   85438:	d9800517 	ldw	r6,20(sp)
   8543c:	d9000317 	ldw	r4,12(sp)
   85440:	3105883a 	add	r2,r6,r4
   85444:	e0bd3426 	beq	fp,r2,84918 <_dtoa_r+0x578>
   85448:	04500934 	movhi	r17,16420
   8544c:	0021883a 	mov	r16,zero
   85450:	b80b883a 	mov	r5,r23
   85454:	b009883a 	mov	r4,r22
   85458:	800d883a 	mov	r6,r16
   8545c:	880f883a 	mov	r7,r17
   85460:	008e27c0 	call	8e27c <__muldf3>
   85464:	d9401517 	ldw	r5,84(sp)
   85468:	d9001417 	ldw	r4,80(sp)
   8546c:	880f883a 	mov	r7,r17
   85470:	000d883a 	mov	r6,zero
   85474:	d8801a15 	stw	r2,104(sp)
   85478:	d8c01b15 	stw	r3,108(sp)
   8547c:	008e27c0 	call	8e27c <__muldf3>
   85480:	180b883a 	mov	r5,r3
   85484:	1009883a 	mov	r4,r2
   85488:	1823883a 	mov	r17,r3
   8548c:	1021883a 	mov	r16,r2
   85490:	008ecc00 	call	8ecc0 <__fixdfsi>
   85494:	1009883a 	mov	r4,r2
   85498:	102b883a 	mov	r21,r2
   8549c:	008ebc80 	call	8ebc8 <__floatsidf>
   854a0:	880b883a 	mov	r5,r17
   854a4:	8009883a 	mov	r4,r16
   854a8:	180f883a 	mov	r7,r3
   854ac:	100d883a 	mov	r6,r2
   854b0:	008e1880 	call	8e188 <__subdf3>
   854b4:	1021883a 	mov	r16,r2
   854b8:	d9001b17 	ldw	r4,108(sp)
   854bc:	1823883a 	mov	r17,r3
   854c0:	dc001415 	stw	r16,80(sp)
   854c4:	ad400c04 	addi	r21,r21,48
   854c8:	dc401515 	stw	r17,84(sp)
   854cc:	d8801a17 	ldw	r2,104(sp)
   854d0:	e5400005 	stb	r21,0(fp)
   854d4:	202f883a 	mov	r23,r4
   854d8:	d9c01b17 	ldw	r7,108(sp)
   854dc:	d9001417 	ldw	r4,80(sp)
   854e0:	880b883a 	mov	r5,r17
   854e4:	100d883a 	mov	r6,r2
   854e8:	102d883a 	mov	r22,r2
   854ec:	e7000044 	addi	fp,fp,1
   854f0:	008eab80 	call	8eab8 <__ltdf2>
   854f4:	103fc30e 	bge	r2,zero,85404 <_dtoa_r+0x1064>
   854f8:	d9000417 	ldw	r4,16(sp)
   854fc:	d9000d15 	stw	r4,52(sp)
   85500:	003d7106 	br	84ac8 <_dtoa_r+0x728>
   85504:	d9801717 	ldw	r6,92(sp)
   85508:	00800084 	movi	r2,2
   8550c:	11bde60e 	bge	r2,r6,84ca8 <_dtoa_r+0x908>
   85510:	203cfb1e 	bne	r4,zero,84900 <_dtoa_r+0x560>
   85514:	d9001617 	ldw	r4,88(sp)
   85518:	900b883a 	mov	r5,r18
   8551c:	01800144 	movi	r6,5
   85520:	000f883a 	mov	r7,zero
   85524:	00886000 	call	88600 <__multadd>
   85528:	d9000717 	ldw	r4,28(sp)
   8552c:	100b883a 	mov	r5,r2
   85530:	1025883a 	mov	r18,r2
   85534:	0087a3c0 	call	87a3c <__mcmp>
   85538:	00bcf10e 	bge	zero,r2,84900 <_dtoa_r+0x560>
   8553c:	d8c00d17 	ldw	r3,52(sp)
   85540:	d9000517 	ldw	r4,20(sp)
   85544:	d8000615 	stw	zero,24(sp)
   85548:	18c00044 	addi	r3,r3,1
   8554c:	d8c00d15 	stw	r3,52(sp)
   85550:	00800c44 	movi	r2,49
   85554:	27000044 	addi	fp,r4,1
   85558:	20800005 	stb	r2,0(r4)
   8555c:	003e8906 	br	84f84 <_dtoa_r+0xbe4>
   85560:	d8c00517 	ldw	r3,20(sp)
   85564:	003bc206 	br	84470 <_dtoa_r+0xd0>
   85568:	01800274 	movhi	r6,9
   8556c:	318edf04 	addi	r6,r6,15228
   85570:	30c00917 	ldw	r3,36(r6)
   85574:	30800817 	ldw	r2,32(r6)
   85578:	d9001217 	ldw	r4,72(sp)
   8557c:	d9401317 	ldw	r5,76(sp)
   85580:	180f883a 	mov	r7,r3
   85584:	100d883a 	mov	r6,r2
   85588:	008e6400 	call	8e640 <__divdf3>
   8558c:	948003cc 	andi	r18,r18,15
   85590:	058000c4 	movi	r22,3
   85594:	1029883a 	mov	r20,r2
   85598:	182b883a 	mov	r21,r3
   8559c:	003c8906 	br	847c4 <_dtoa_r+0x424>
   855a0:	d9001017 	ldw	r4,64(sp)
   855a4:	d9800917 	ldw	r6,36(sp)
   855a8:	0025883a 	mov	r18,zero
   855ac:	1105c83a 	sub	r2,r2,r4
   855b0:	2089883a 	add	r4,r4,r2
   855b4:	308d883a 	add	r6,r6,r2
   855b8:	d9001015 	stw	r4,64(sp)
   855bc:	d9800915 	stw	r6,36(sp)
   855c0:	003e3206 	br	84e8c <_dtoa_r+0xaec>
   855c4:	28800044 	addi	r2,r5,1
   855c8:	27000044 	addi	fp,r4,1
   855cc:	20800005 	stb	r2,0(r4)
   855d0:	003e6c06 	br	84f84 <_dtoa_r+0xbe4>
   855d4:	d8800f17 	ldw	r2,60(sp)
   855d8:	00bce016 	blt	zero,r2,8495c <_dtoa_r+0x5bc>
   855dc:	d9800f17 	ldw	r6,60(sp)
   855e0:	303cc51e 	bne	r6,zero,848f8 <_dtoa_r+0x558>
   855e4:	0005883a 	mov	r2,zero
   855e8:	00d00534 	movhi	r3,16404
   855ec:	980b883a 	mov	r5,r19
   855f0:	180f883a 	mov	r7,r3
   855f4:	9009883a 	mov	r4,r18
   855f8:	100d883a 	mov	r6,r2
   855fc:	008e27c0 	call	8e27c <__muldf3>
   85600:	180b883a 	mov	r5,r3
   85604:	a80f883a 	mov	r7,r21
   85608:	1009883a 	mov	r4,r2
   8560c:	a00d883a 	mov	r6,r20
   85610:	008ea300 	call	8ea30 <__gedf2>
   85614:	103cb80e 	bge	r2,zero,848f8 <_dtoa_r+0x558>
   85618:	0027883a 	mov	r19,zero
   8561c:	0025883a 	mov	r18,zero
   85620:	003fc606 	br	8553c <_dtoa_r+0x119c>
   85624:	99400117 	ldw	r5,4(r19)
   85628:	d9001617 	ldw	r4,88(sp)
   8562c:	0087e600 	call	87e60 <_Balloc>
   85630:	99800417 	ldw	r6,16(r19)
   85634:	11000304 	addi	r4,r2,12
   85638:	99400304 	addi	r5,r19,12
   8563c:	318d883a 	add	r6,r6,r6
   85640:	318d883a 	add	r6,r6,r6
   85644:	31800204 	addi	r6,r6,8
   85648:	1023883a 	mov	r17,r2
   8564c:	00876c80 	call	876c8 <memcpy>
   85650:	d9001617 	ldw	r4,88(sp)
   85654:	880b883a 	mov	r5,r17
   85658:	01800044 	movi	r6,1
   8565c:	00882240 	call	88224 <__lshift>
   85660:	100b883a 	mov	r5,r2
   85664:	003d9c06 	br	84cd8 <_dtoa_r+0x938>
   85668:	00800e44 	movi	r2,57
   8566c:	b8807026 	beq	r23,r2,85830 <_dtoa_r+0x1490>
   85670:	b8800044 	addi	r2,r23,1
   85674:	b7000044 	addi	fp,r22,1
   85678:	b0800005 	stb	r2,0(r22)
   8567c:	003e4106 	br	84f84 <_dtoa_r+0xbe4>
   85680:	d8800317 	ldw	r2,12(sp)
   85684:	01800274 	movhi	r6,9
   85688:	318ead04 	addi	r6,r6,15028
   8568c:	b009883a 	mov	r4,r22
   85690:	100e90fa 	slli	r7,r2,3
   85694:	b80b883a 	mov	r5,r23
   85698:	398f883a 	add	r7,r7,r6
   8569c:	38bffe17 	ldw	r2,-8(r7)
   856a0:	d9800517 	ldw	r6,20(sp)
   856a4:	38ffff17 	ldw	r3,-4(r7)
   856a8:	37000044 	addi	fp,r6,1
   856ac:	180f883a 	mov	r7,r3
   856b0:	100d883a 	mov	r6,r2
   856b4:	008e27c0 	call	8e27c <__muldf3>
   856b8:	a80b883a 	mov	r5,r21
   856bc:	a009883a 	mov	r4,r20
   856c0:	182f883a 	mov	r23,r3
   856c4:	102d883a 	mov	r22,r2
   856c8:	008ecc00 	call	8ecc0 <__fixdfsi>
   856cc:	1009883a 	mov	r4,r2
   856d0:	1027883a 	mov	r19,r2
   856d4:	008ebc80 	call	8ebc8 <__floatsidf>
   856d8:	a80b883a 	mov	r5,r21
   856dc:	a009883a 	mov	r4,r20
   856e0:	180f883a 	mov	r7,r3
   856e4:	100d883a 	mov	r6,r2
   856e8:	008e1880 	call	8e188 <__subdf3>
   856ec:	180b883a 	mov	r5,r3
   856f0:	d8c00517 	ldw	r3,20(sp)
   856f4:	9cc00c04 	addi	r19,r19,48
   856f8:	1009883a 	mov	r4,r2
   856fc:	1cc00005 	stb	r19,0(r3)
   85700:	2021883a 	mov	r16,r4
   85704:	d9000317 	ldw	r4,12(sp)
   85708:	00800044 	movi	r2,1
   8570c:	2823883a 	mov	r17,r5
   85710:	20802226 	beq	r4,r2,8579c <_dtoa_r+0x13fc>
   85714:	1029883a 	mov	r20,r2
   85718:	0005883a 	mov	r2,zero
   8571c:	00d00934 	movhi	r3,16420
   85720:	180f883a 	mov	r7,r3
   85724:	100d883a 	mov	r6,r2
   85728:	880b883a 	mov	r5,r17
   8572c:	8009883a 	mov	r4,r16
   85730:	008e27c0 	call	8e27c <__muldf3>
   85734:	180b883a 	mov	r5,r3
   85738:	1009883a 	mov	r4,r2
   8573c:	1823883a 	mov	r17,r3
   85740:	1021883a 	mov	r16,r2
   85744:	008ecc00 	call	8ecc0 <__fixdfsi>
   85748:	1009883a 	mov	r4,r2
   8574c:	102b883a 	mov	r21,r2
   85750:	008ebc80 	call	8ebc8 <__floatsidf>
   85754:	880b883a 	mov	r5,r17
   85758:	8009883a 	mov	r4,r16
   8575c:	180f883a 	mov	r7,r3
   85760:	100d883a 	mov	r6,r2
   85764:	008e1880 	call	8e188 <__subdf3>
   85768:	180b883a 	mov	r5,r3
   8576c:	d8c00517 	ldw	r3,20(sp)
   85770:	1009883a 	mov	r4,r2
   85774:	ad400c04 	addi	r21,r21,48
   85778:	1d05883a 	add	r2,r3,r20
   8577c:	15400005 	stb	r21,0(r2)
   85780:	2021883a 	mov	r16,r4
   85784:	d9000317 	ldw	r4,12(sp)
   85788:	a5000044 	addi	r20,r20,1
   8578c:	2823883a 	mov	r17,r5
   85790:	a13fe11e 	bne	r20,r4,85718 <_dtoa_r+0x1378>
   85794:	e505883a 	add	r2,fp,r20
   85798:	173fffc4 	addi	fp,r2,-1
   8579c:	0025883a 	mov	r18,zero
   857a0:	04cff834 	movhi	r19,16352
   857a4:	b009883a 	mov	r4,r22
   857a8:	b80b883a 	mov	r5,r23
   857ac:	900d883a 	mov	r6,r18
   857b0:	980f883a 	mov	r7,r19
   857b4:	008e2080 	call	8e208 <__adddf3>
   857b8:	180b883a 	mov	r5,r3
   857bc:	1009883a 	mov	r4,r2
   857c0:	800d883a 	mov	r6,r16
   857c4:	880f883a 	mov	r7,r17
   857c8:	008eab80 	call	8eab8 <__ltdf2>
   857cc:	103cab16 	blt	r2,zero,84a7c <_dtoa_r+0x6dc>
   857d0:	0009883a 	mov	r4,zero
   857d4:	980b883a 	mov	r5,r19
   857d8:	b80f883a 	mov	r7,r23
   857dc:	b00d883a 	mov	r6,r22
   857e0:	008e1880 	call	8e188 <__subdf3>
   857e4:	180b883a 	mov	r5,r3
   857e8:	880f883a 	mov	r7,r17
   857ec:	1009883a 	mov	r4,r2
   857f0:	800d883a 	mov	r6,r16
   857f4:	008e9a80 	call	8e9a8 <__gtdf2>
   857f8:	00bc470e 	bge	zero,r2,84918 <_dtoa_r+0x578>
   857fc:	00c00c04 	movi	r3,48
   85800:	e73fffc4 	addi	fp,fp,-1
   85804:	e0800007 	ldb	r2,0(fp)
   85808:	10fffd26 	beq	r2,r3,85800 <_dtoa_r+0x1460>
   8580c:	d9800417 	ldw	r6,16(sp)
   85810:	e7000044 	addi	fp,fp,1
   85814:	d9800d15 	stw	r6,52(sp)
   85818:	003cab06 	br	84ac8 <_dtoa_r+0x728>
   8581c:	d8c00f17 	ldw	r3,60(sp)
   85820:	d9001117 	ldw	r4,68(sp)
   85824:	20e1c83a 	sub	r16,r4,r3
   85828:	0007883a 	mov	r3,zero
   8582c:	003d9b06 	br	84e9c <_dtoa_r+0xafc>
   85830:	00800e44 	movi	r2,57
   85834:	b0800005 	stb	r2,0(r22)
   85838:	b5800044 	addi	r22,r22,1
   8583c:	003dc106 	br	84f44 <_dtoa_r+0xba4>
   85840:	05800084 	movi	r22,2
   85844:	003bf706 	br	84824 <_dtoa_r+0x484>
   85848:	d9000f17 	ldw	r4,60(sp)
   8584c:	013c000e 	bge	zero,r4,84850 <_dtoa_r+0x4b0>
   85850:	d9800e17 	ldw	r6,56(sp)
   85854:	01bc300e 	bge	zero,r6,84918 <_dtoa_r+0x578>
   85858:	0005883a 	mov	r2,zero
   8585c:	00d00934 	movhi	r3,16420
   85860:	a80b883a 	mov	r5,r21
   85864:	180f883a 	mov	r7,r3
   85868:	a009883a 	mov	r4,r20
   8586c:	100d883a 	mov	r6,r2
   85870:	008e27c0 	call	8e27c <__muldf3>
   85874:	b1000044 	addi	r4,r22,1
   85878:	1021883a 	mov	r16,r2
   8587c:	1823883a 	mov	r17,r3
   85880:	008ebc80 	call	8ebc8 <__floatsidf>
   85884:	880b883a 	mov	r5,r17
   85888:	8009883a 	mov	r4,r16
   8588c:	180f883a 	mov	r7,r3
   85890:	100d883a 	mov	r6,r2
   85894:	008e27c0 	call	8e27c <__muldf3>
   85898:	0011883a 	mov	r8,zero
   8589c:	02500734 	movhi	r9,16412
   858a0:	180b883a 	mov	r5,r3
   858a4:	480f883a 	mov	r7,r9
   858a8:	1009883a 	mov	r4,r2
   858ac:	400d883a 	mov	r6,r8
   858b0:	008e2080 	call	8e208 <__adddf3>
   858b4:	102d883a 	mov	r22,r2
   858b8:	00bf3034 	movhi	r2,64704
   858bc:	10ef883a 	add	r23,r2,r3
   858c0:	d8800d17 	ldw	r2,52(sp)
   858c4:	d8c00e17 	ldw	r3,56(sp)
   858c8:	8029883a 	mov	r20,r16
   858cc:	10bfffc4 	addi	r2,r2,-1
   858d0:	882b883a 	mov	r21,r17
   858d4:	d8800415 	stw	r2,16(sp)
   858d8:	d8c00315 	stw	r3,12(sp)
   858dc:	003e8306 	br	852ec <_dtoa_r+0xf4c>
   858e0:	d8800117 	ldw	r2,4(sp)
   858e4:	dc001117 	ldw	r16,68(sp)
   858e8:	dc801017 	ldw	r18,64(sp)
   858ec:	00c00d84 	movi	r3,54
   858f0:	1887c83a 	sub	r3,r3,r2
   858f4:	003d6906 	br	84e9c <_dtoa_r+0xafc>
   858f8:	01800044 	movi	r6,1
   858fc:	3021883a 	mov	r16,r6
   85900:	d9800f15 	stw	r6,60(sp)
   85904:	d9802615 	stw	r6,152(sp)
   85908:	d9800e15 	stw	r6,56(sp)
   8590c:	003b9306 	br	8475c <_dtoa_r+0x3bc>
   85910:	b021883a 	mov	r16,r22
   85914:	dd800f15 	stw	r22,60(sp)
   85918:	003b9006 	br	8475c <_dtoa_r+0x3bc>
   8591c:	103e221e 	bne	r2,zero,851a8 <_dtoa_r+0xe08>
   85920:	b880004c 	andi	r2,r23,1
   85924:	1005003a 	cmpeq	r2,r2,zero
   85928:	103e1f1e 	bne	r2,zero,851a8 <_dtoa_r+0xe08>
   8592c:	003e1b06 	br	8519c <_dtoa_r+0xdfc>
   85930:	d9001617 	ldw	r4,88(sp)
   85934:	980b883a 	mov	r5,r19
   85938:	01800284 	movi	r6,10
   8593c:	000f883a 	mov	r7,zero
   85940:	00886000 	call	88600 <__multadd>
   85944:	d8c00e17 	ldw	r3,56(sp)
   85948:	1027883a 	mov	r19,r2
   8594c:	d8c00f15 	stw	r3,60(sp)
   85950:	003cd306 	br	84ca0 <_dtoa_r+0x900>

00085954 <_fflush_r>:
   85954:	defffb04 	addi	sp,sp,-20
   85958:	dcc00315 	stw	r19,12(sp)
   8595c:	dc800215 	stw	r18,8(sp)
   85960:	dfc00415 	stw	ra,16(sp)
   85964:	dc400115 	stw	r17,4(sp)
   85968:	dc000015 	stw	r16,0(sp)
   8596c:	2027883a 	mov	r19,r4
   85970:	2825883a 	mov	r18,r5
   85974:	20000226 	beq	r4,zero,85980 <_fflush_r+0x2c>
   85978:	20800e17 	ldw	r2,56(r4)
   8597c:	10005626 	beq	r2,zero,85ad8 <_fflush_r+0x184>
   85980:	9100030b 	ldhu	r4,12(r18)
   85984:	20ffffcc 	andi	r3,r4,65535
   85988:	18e0001c 	xori	r3,r3,32768
   8598c:	18e00004 	addi	r3,r3,-32768
   85990:	1880020c 	andi	r2,r3,8
   85994:	1000261e 	bne	r2,zero,85a30 <_fflush_r+0xdc>
   85998:	90c00117 	ldw	r3,4(r18)
   8599c:	20820014 	ori	r2,r4,2048
   859a0:	9080030d 	sth	r2,12(r18)
   859a4:	1009883a 	mov	r4,r2
   859a8:	00c0400e 	bge	zero,r3,85aac <_fflush_r+0x158>
   859ac:	92000a17 	ldw	r8,40(r18)
   859b0:	40004026 	beq	r8,zero,85ab4 <_fflush_r+0x160>
   859b4:	2084000c 	andi	r2,r4,4096
   859b8:	10005326 	beq	r2,zero,85b08 <_fflush_r+0x1b4>
   859bc:	94001417 	ldw	r16,80(r18)
   859c0:	9080030b 	ldhu	r2,12(r18)
   859c4:	1080010c 	andi	r2,r2,4
   859c8:	1000481e 	bne	r2,zero,85aec <_fflush_r+0x198>
   859cc:	91400717 	ldw	r5,28(r18)
   859d0:	9809883a 	mov	r4,r19
   859d4:	800d883a 	mov	r6,r16
   859d8:	000f883a 	mov	r7,zero
   859dc:	403ee83a 	callr	r8
   859e0:	8080261e 	bne	r16,r2,85a7c <_fflush_r+0x128>
   859e4:	9080030b 	ldhu	r2,12(r18)
   859e8:	91000417 	ldw	r4,16(r18)
   859ec:	90000115 	stw	zero,4(r18)
   859f0:	10bdffcc 	andi	r2,r2,63487
   859f4:	10ffffcc 	andi	r3,r2,65535
   859f8:	18c4000c 	andi	r3,r3,4096
   859fc:	9080030d 	sth	r2,12(r18)
   85a00:	91000015 	stw	r4,0(r18)
   85a04:	18002b26 	beq	r3,zero,85ab4 <_fflush_r+0x160>
   85a08:	0007883a 	mov	r3,zero
   85a0c:	1805883a 	mov	r2,r3
   85a10:	94001415 	stw	r16,80(r18)
   85a14:	dfc00417 	ldw	ra,16(sp)
   85a18:	dcc00317 	ldw	r19,12(sp)
   85a1c:	dc800217 	ldw	r18,8(sp)
   85a20:	dc400117 	ldw	r17,4(sp)
   85a24:	dc000017 	ldw	r16,0(sp)
   85a28:	dec00504 	addi	sp,sp,20
   85a2c:	f800283a 	ret
   85a30:	94400417 	ldw	r17,16(r18)
   85a34:	88001f26 	beq	r17,zero,85ab4 <_fflush_r+0x160>
   85a38:	90800017 	ldw	r2,0(r18)
   85a3c:	18c000cc 	andi	r3,r3,3
   85a40:	94400015 	stw	r17,0(r18)
   85a44:	1461c83a 	sub	r16,r2,r17
   85a48:	18002526 	beq	r3,zero,85ae0 <_fflush_r+0x18c>
   85a4c:	0005883a 	mov	r2,zero
   85a50:	90800215 	stw	r2,8(r18)
   85a54:	0400170e 	bge	zero,r16,85ab4 <_fflush_r+0x160>
   85a58:	90c00917 	ldw	r3,36(r18)
   85a5c:	91400717 	ldw	r5,28(r18)
   85a60:	880d883a 	mov	r6,r17
   85a64:	800f883a 	mov	r7,r16
   85a68:	9809883a 	mov	r4,r19
   85a6c:	183ee83a 	callr	r3
   85a70:	88a3883a 	add	r17,r17,r2
   85a74:	80a1c83a 	sub	r16,r16,r2
   85a78:	00bff616 	blt	zero,r2,85a54 <_fflush_r+0x100>
   85a7c:	9080030b 	ldhu	r2,12(r18)
   85a80:	00ffffc4 	movi	r3,-1
   85a84:	10801014 	ori	r2,r2,64
   85a88:	9080030d 	sth	r2,12(r18)
   85a8c:	1805883a 	mov	r2,r3
   85a90:	dfc00417 	ldw	ra,16(sp)
   85a94:	dcc00317 	ldw	r19,12(sp)
   85a98:	dc800217 	ldw	r18,8(sp)
   85a9c:	dc400117 	ldw	r17,4(sp)
   85aa0:	dc000017 	ldw	r16,0(sp)
   85aa4:	dec00504 	addi	sp,sp,20
   85aa8:	f800283a 	ret
   85aac:	90800f17 	ldw	r2,60(r18)
   85ab0:	00bfbe16 	blt	zero,r2,859ac <_fflush_r+0x58>
   85ab4:	0007883a 	mov	r3,zero
   85ab8:	1805883a 	mov	r2,r3
   85abc:	dfc00417 	ldw	ra,16(sp)
   85ac0:	dcc00317 	ldw	r19,12(sp)
   85ac4:	dc800217 	ldw	r18,8(sp)
   85ac8:	dc400117 	ldw	r17,4(sp)
   85acc:	dc000017 	ldw	r16,0(sp)
   85ad0:	dec00504 	addi	sp,sp,20
   85ad4:	f800283a 	ret
   85ad8:	0085bec0 	call	85bec <__sinit>
   85adc:	003fa806 	br	85980 <_fflush_r+0x2c>
   85ae0:	90800517 	ldw	r2,20(r18)
   85ae4:	90800215 	stw	r2,8(r18)
   85ae8:	003fda06 	br	85a54 <_fflush_r+0x100>
   85aec:	90800117 	ldw	r2,4(r18)
   85af0:	90c00c17 	ldw	r3,48(r18)
   85af4:	80a1c83a 	sub	r16,r16,r2
   85af8:	183fb426 	beq	r3,zero,859cc <_fflush_r+0x78>
   85afc:	90800f17 	ldw	r2,60(r18)
   85b00:	80a1c83a 	sub	r16,r16,r2
   85b04:	003fb106 	br	859cc <_fflush_r+0x78>
   85b08:	91400717 	ldw	r5,28(r18)
   85b0c:	9809883a 	mov	r4,r19
   85b10:	000d883a 	mov	r6,zero
   85b14:	01c00044 	movi	r7,1
   85b18:	403ee83a 	callr	r8
   85b1c:	1021883a 	mov	r16,r2
   85b20:	00bfffc4 	movi	r2,-1
   85b24:	80800226 	beq	r16,r2,85b30 <_fflush_r+0x1dc>
   85b28:	92000a17 	ldw	r8,40(r18)
   85b2c:	003fa406 	br	859c0 <_fflush_r+0x6c>
   85b30:	98c00017 	ldw	r3,0(r19)
   85b34:	00800744 	movi	r2,29
   85b38:	18bfde26 	beq	r3,r2,85ab4 <_fflush_r+0x160>
   85b3c:	9080030b 	ldhu	r2,12(r18)
   85b40:	8007883a 	mov	r3,r16
   85b44:	10801014 	ori	r2,r2,64
   85b48:	9080030d 	sth	r2,12(r18)
   85b4c:	003fcf06 	br	85a8c <_fflush_r+0x138>

00085b50 <fflush>:
   85b50:	01400234 	movhi	r5,8
   85b54:	29565504 	addi	r5,r5,22868
   85b58:	2007883a 	mov	r3,r4
   85b5c:	20000526 	beq	r4,zero,85b74 <fflush+0x24>
   85b60:	00800274 	movhi	r2,9
   85b64:	10963a04 	addi	r2,r2,22760
   85b68:	11000017 	ldw	r4,0(r2)
   85b6c:	180b883a 	mov	r5,r3
   85b70:	00859541 	jmpi	85954 <_fflush_r>
   85b74:	00800274 	movhi	r2,9
   85b78:	10963b04 	addi	r2,r2,22764
   85b7c:	11000017 	ldw	r4,0(r2)
   85b80:	00869a01 	jmpi	869a0 <_fwalk_reent>

00085b84 <std>:
   85b84:	00800274 	movhi	r2,9
   85b88:	10a56a04 	addi	r2,r2,-27224
   85b8c:	20800b15 	stw	r2,44(r4)
   85b90:	00800274 	movhi	r2,9
   85b94:	10a5a504 	addi	r2,r2,-26988
   85b98:	20800815 	stw	r2,32(r4)
   85b9c:	00c00274 	movhi	r3,9
   85ba0:	18e58604 	addi	r3,r3,-27112
   85ba4:	00800274 	movhi	r2,9
   85ba8:	10a56c04 	addi	r2,r2,-27216
   85bac:	2140030d 	sth	r5,12(r4)
   85bb0:	2180038d 	sth	r6,14(r4)
   85bb4:	20c00915 	stw	r3,36(r4)
   85bb8:	20800a15 	stw	r2,40(r4)
   85bbc:	20000015 	stw	zero,0(r4)
   85bc0:	20000115 	stw	zero,4(r4)
   85bc4:	20000215 	stw	zero,8(r4)
   85bc8:	20000415 	stw	zero,16(r4)
   85bcc:	20000515 	stw	zero,20(r4)
   85bd0:	20000615 	stw	zero,24(r4)
   85bd4:	21000715 	stw	r4,28(r4)
   85bd8:	f800283a 	ret

00085bdc <__sfp_lock_acquire>:
   85bdc:	f800283a 	ret

00085be0 <__sfp_lock_release>:
   85be0:	f800283a 	ret

00085be4 <__sinit_lock_acquire>:
   85be4:	f800283a 	ret

00085be8 <__sinit_lock_release>:
   85be8:	f800283a 	ret

00085bec <__sinit>:
   85bec:	20800e17 	ldw	r2,56(r4)
   85bf0:	defffd04 	addi	sp,sp,-12
   85bf4:	dc400115 	stw	r17,4(sp)
   85bf8:	dc000015 	stw	r16,0(sp)
   85bfc:	dfc00215 	stw	ra,8(sp)
   85c00:	04400044 	movi	r17,1
   85c04:	01400104 	movi	r5,4
   85c08:	000d883a 	mov	r6,zero
   85c0c:	2021883a 	mov	r16,r4
   85c10:	2200bb04 	addi	r8,r4,748
   85c14:	200f883a 	mov	r7,r4
   85c18:	10000526 	beq	r2,zero,85c30 <__sinit+0x44>
   85c1c:	dfc00217 	ldw	ra,8(sp)
   85c20:	dc400117 	ldw	r17,4(sp)
   85c24:	dc000017 	ldw	r16,0(sp)
   85c28:	dec00304 	addi	sp,sp,12
   85c2c:	f800283a 	ret
   85c30:	21000117 	ldw	r4,4(r4)
   85c34:	00800234 	movhi	r2,8
   85c38:	10973404 	addi	r2,r2,23760
   85c3c:	00c000c4 	movi	r3,3
   85c40:	80800f15 	stw	r2,60(r16)
   85c44:	80c0b915 	stw	r3,740(r16)
   85c48:	8200ba15 	stw	r8,744(r16)
   85c4c:	84400e15 	stw	r17,56(r16)
   85c50:	8000b815 	stw	zero,736(r16)
   85c54:	0085b840 	call	85b84 <std>
   85c58:	81000217 	ldw	r4,8(r16)
   85c5c:	880d883a 	mov	r6,r17
   85c60:	800f883a 	mov	r7,r16
   85c64:	01400284 	movi	r5,10
   85c68:	0085b840 	call	85b84 <std>
   85c6c:	81000317 	ldw	r4,12(r16)
   85c70:	800f883a 	mov	r7,r16
   85c74:	01400484 	movi	r5,18
   85c78:	01800084 	movi	r6,2
   85c7c:	dfc00217 	ldw	ra,8(sp)
   85c80:	dc400117 	ldw	r17,4(sp)
   85c84:	dc000017 	ldw	r16,0(sp)
   85c88:	dec00304 	addi	sp,sp,12
   85c8c:	0085b841 	jmpi	85b84 <std>

00085c90 <__fp_lock>:
   85c90:	0005883a 	mov	r2,zero
   85c94:	f800283a 	ret

00085c98 <__fp_unlock>:
   85c98:	0005883a 	mov	r2,zero
   85c9c:	f800283a 	ret

00085ca0 <__fp_unlock_all>:
   85ca0:	00800274 	movhi	r2,9
   85ca4:	10963a04 	addi	r2,r2,22760
   85ca8:	11000017 	ldw	r4,0(r2)
   85cac:	01400234 	movhi	r5,8
   85cb0:	29572604 	addi	r5,r5,23704
   85cb4:	0086a681 	jmpi	86a68 <_fwalk>

00085cb8 <__fp_lock_all>:
   85cb8:	00800274 	movhi	r2,9
   85cbc:	10963a04 	addi	r2,r2,22760
   85cc0:	11000017 	ldw	r4,0(r2)
   85cc4:	01400234 	movhi	r5,8
   85cc8:	29572404 	addi	r5,r5,23696
   85ccc:	0086a681 	jmpi	86a68 <_fwalk>

00085cd0 <_cleanup_r>:
   85cd0:	01400274 	movhi	r5,9
   85cd4:	296ff204 	addi	r5,r5,-16440
   85cd8:	0086a681 	jmpi	86a68 <_fwalk>

00085cdc <_cleanup>:
   85cdc:	00800274 	movhi	r2,9
   85ce0:	10963b04 	addi	r2,r2,22764
   85ce4:	11000017 	ldw	r4,0(r2)
   85ce8:	0085cd01 	jmpi	85cd0 <_cleanup_r>

00085cec <__sfmoreglue>:
   85cec:	defffc04 	addi	sp,sp,-16
   85cf0:	dc000015 	stw	r16,0(sp)
   85cf4:	2821883a 	mov	r16,r5
   85cf8:	dc400115 	stw	r17,4(sp)
   85cfc:	01401704 	movi	r5,92
   85d00:	2023883a 	mov	r17,r4
   85d04:	8009883a 	mov	r4,r16
   85d08:	dfc00315 	stw	ra,12(sp)
   85d0c:	dcc00215 	stw	r19,8(sp)
   85d10:	00806240 	call	80624 <__mulsi3>
   85d14:	11400304 	addi	r5,r2,12
   85d18:	8809883a 	mov	r4,r17
   85d1c:	1027883a 	mov	r19,r2
   85d20:	0086da40 	call	86da4 <_malloc_r>
   85d24:	10c00304 	addi	r3,r2,12
   85d28:	1023883a 	mov	r17,r2
   85d2c:	1809883a 	mov	r4,r3
   85d30:	980d883a 	mov	r6,r19
   85d34:	000b883a 	mov	r5,zero
   85d38:	10000b26 	beq	r2,zero,85d68 <__sfmoreglue+0x7c>
   85d3c:	14000115 	stw	r16,4(r2)
   85d40:	10c00215 	stw	r3,8(r2)
   85d44:	10000015 	stw	zero,0(r2)
   85d48:	00878480 	call	87848 <memset>
   85d4c:	8805883a 	mov	r2,r17
   85d50:	dfc00317 	ldw	ra,12(sp)
   85d54:	dcc00217 	ldw	r19,8(sp)
   85d58:	dc400117 	ldw	r17,4(sp)
   85d5c:	dc000017 	ldw	r16,0(sp)
   85d60:	dec00404 	addi	sp,sp,16
   85d64:	f800283a 	ret
   85d68:	0023883a 	mov	r17,zero
   85d6c:	8805883a 	mov	r2,r17
   85d70:	dfc00317 	ldw	ra,12(sp)
   85d74:	dcc00217 	ldw	r19,8(sp)
   85d78:	dc400117 	ldw	r17,4(sp)
   85d7c:	dc000017 	ldw	r16,0(sp)
   85d80:	dec00404 	addi	sp,sp,16
   85d84:	f800283a 	ret

00085d88 <__sfp>:
   85d88:	defffd04 	addi	sp,sp,-12
   85d8c:	00800274 	movhi	r2,9
   85d90:	10963b04 	addi	r2,r2,22764
   85d94:	dc000015 	stw	r16,0(sp)
   85d98:	14000017 	ldw	r16,0(r2)
   85d9c:	dc400115 	stw	r17,4(sp)
   85da0:	dfc00215 	stw	ra,8(sp)
   85da4:	80800e17 	ldw	r2,56(r16)
   85da8:	2023883a 	mov	r17,r4
   85dac:	10002626 	beq	r2,zero,85e48 <__sfp+0xc0>
   85db0:	8400b804 	addi	r16,r16,736
   85db4:	80800117 	ldw	r2,4(r16)
   85db8:	81000217 	ldw	r4,8(r16)
   85dbc:	10ffffc4 	addi	r3,r2,-1
   85dc0:	18000916 	blt	r3,zero,85de8 <__sfp+0x60>
   85dc4:	2080030f 	ldh	r2,12(r4)
   85dc8:	10000b26 	beq	r2,zero,85df8 <__sfp+0x70>
   85dcc:	017fffc4 	movi	r5,-1
   85dd0:	00000206 	br	85ddc <__sfp+0x54>
   85dd4:	2080030f 	ldh	r2,12(r4)
   85dd8:	10000726 	beq	r2,zero,85df8 <__sfp+0x70>
   85ddc:	18ffffc4 	addi	r3,r3,-1
   85de0:	21001704 	addi	r4,r4,92
   85de4:	197ffb1e 	bne	r3,r5,85dd4 <__sfp+0x4c>
   85de8:	80800017 	ldw	r2,0(r16)
   85dec:	10001926 	beq	r2,zero,85e54 <__sfp+0xcc>
   85df0:	1021883a 	mov	r16,r2
   85df4:	003fef06 	br	85db4 <__sfp+0x2c>
   85df8:	00bfffc4 	movi	r2,-1
   85dfc:	00c00044 	movi	r3,1
   85e00:	2080038d 	sth	r2,14(r4)
   85e04:	20c0030d 	sth	r3,12(r4)
   85e08:	20000015 	stw	zero,0(r4)
   85e0c:	20000215 	stw	zero,8(r4)
   85e10:	20000115 	stw	zero,4(r4)
   85e14:	20000415 	stw	zero,16(r4)
   85e18:	20000515 	stw	zero,20(r4)
   85e1c:	20000615 	stw	zero,24(r4)
   85e20:	20000c15 	stw	zero,48(r4)
   85e24:	20000d15 	stw	zero,52(r4)
   85e28:	20001115 	stw	zero,68(r4)
   85e2c:	20001215 	stw	zero,72(r4)
   85e30:	2005883a 	mov	r2,r4
   85e34:	dfc00217 	ldw	ra,8(sp)
   85e38:	dc400117 	ldw	r17,4(sp)
   85e3c:	dc000017 	ldw	r16,0(sp)
   85e40:	dec00304 	addi	sp,sp,12
   85e44:	f800283a 	ret
   85e48:	8009883a 	mov	r4,r16
   85e4c:	0085bec0 	call	85bec <__sinit>
   85e50:	003fd706 	br	85db0 <__sfp+0x28>
   85e54:	8809883a 	mov	r4,r17
   85e58:	01400104 	movi	r5,4
   85e5c:	0085cec0 	call	85cec <__sfmoreglue>
   85e60:	80800015 	stw	r2,0(r16)
   85e64:	103fe21e 	bne	r2,zero,85df0 <__sfp+0x68>
   85e68:	00800304 	movi	r2,12
   85e6c:	0009883a 	mov	r4,zero
   85e70:	88800015 	stw	r2,0(r17)
   85e74:	003fee06 	br	85e30 <__sfp+0xa8>

00085e78 <_fread_r>:
   85e78:	defff504 	addi	sp,sp,-44
   85e7c:	dd800715 	stw	r22,28(sp)
   85e80:	dc000115 	stw	r16,4(sp)
   85e84:	202d883a 	mov	r22,r4
   85e88:	2821883a 	mov	r16,r5
   85e8c:	3809883a 	mov	r4,r7
   85e90:	300b883a 	mov	r5,r6
   85e94:	df000915 	stw	fp,36(sp)
   85e98:	ddc00815 	stw	r23,32(sp)
   85e9c:	dcc00415 	stw	r19,16(sp)
   85ea0:	dfc00a15 	stw	ra,40(sp)
   85ea4:	dd400615 	stw	r21,24(sp)
   85ea8:	dd000515 	stw	r20,20(sp)
   85eac:	dc800315 	stw	r18,12(sp)
   85eb0:	dc400215 	stw	r17,8(sp)
   85eb4:	d9800015 	stw	r6,0(sp)
   85eb8:	3839883a 	mov	fp,r7
   85ebc:	00806240 	call	80624 <__mulsi3>
   85ec0:	102f883a 	mov	r23,r2
   85ec4:	dcc00b17 	ldw	r19,44(sp)
   85ec8:	10005926 	beq	r2,zero,86030 <_fread_r+0x1b8>
   85ecc:	b0000226 	beq	r22,zero,85ed8 <_fread_r+0x60>
   85ed0:	b0800e17 	ldw	r2,56(r22)
   85ed4:	10005826 	beq	r2,zero,86038 <_fread_r+0x1c0>
   85ed8:	9c400117 	ldw	r17,4(r19)
   85edc:	88005a16 	blt	r17,zero,86048 <_fread_r+0x1d0>
   85ee0:	9880030b 	ldhu	r2,12(r19)
   85ee4:	8029883a 	mov	r20,r16
   85ee8:	1080008c 	andi	r2,r2,2
   85eec:	1000221e 	bne	r2,zero,85f78 <_fread_r+0x100>
   85ef0:	b825883a 	mov	r18,r23
   85ef4:	00000106 	br	85efc <_fread_r+0x84>
   85ef8:	9c400117 	ldw	r17,4(r19)
   85efc:	a009883a 	mov	r4,r20
   85f00:	880d883a 	mov	r6,r17
   85f04:	8c80552e 	bgeu	r17,r18,8605c <_fread_r+0x1e4>
   85f08:	99400017 	ldw	r5,0(r19)
   85f0c:	a469883a 	add	r20,r20,r17
   85f10:	9465c83a 	sub	r18,r18,r17
   85f14:	00876c80 	call	876c8 <memcpy>
   85f18:	98800017 	ldw	r2,0(r19)
   85f1c:	b009883a 	mov	r4,r22
   85f20:	980b883a 	mov	r5,r19
   85f24:	1461883a 	add	r16,r2,r17
   85f28:	9c000015 	stw	r16,0(r19)
   85f2c:	008914c0 	call	8914c <__srefill_r>
   85f30:	103ff126 	beq	r2,zero,85ef8 <_fread_r+0x80>
   85f34:	d9400017 	ldw	r5,0(sp)
   85f38:	bc89c83a 	sub	r4,r23,r18
   85f3c:	008f0dc0 	call	8f0dc <__udivsi3>
   85f40:	1039883a 	mov	fp,r2
   85f44:	e005883a 	mov	r2,fp
   85f48:	dfc00a17 	ldw	ra,40(sp)
   85f4c:	df000917 	ldw	fp,36(sp)
   85f50:	ddc00817 	ldw	r23,32(sp)
   85f54:	dd800717 	ldw	r22,28(sp)
   85f58:	dd400617 	ldw	r21,24(sp)
   85f5c:	dd000517 	ldw	r20,20(sp)
   85f60:	dcc00417 	ldw	r19,16(sp)
   85f64:	dc800317 	ldw	r18,12(sp)
   85f68:	dc400217 	ldw	r17,8(sp)
   85f6c:	dc000117 	ldw	r16,4(sp)
   85f70:	dec00b04 	addi	sp,sp,44
   85f74:	f800283a 	ret
   85f78:	b825883a 	mov	r18,r23
   85f7c:	8dc03536 	bltu	r17,r23,86054 <_fread_r+0x1dc>
   85f80:	99400017 	ldw	r5,0(r19)
   85f84:	a009883a 	mov	r4,r20
   85f88:	900d883a 	mov	r6,r18
   85f8c:	00876c80 	call	876c8 <memcpy>
   85f90:	9c000017 	ldw	r16,0(r19)
   85f94:	98800117 	ldw	r2,4(r19)
   85f98:	99400c17 	ldw	r5,48(r19)
   85f9c:	84a1883a 	add	r16,r16,r18
   85fa0:	14a3c83a 	sub	r17,r2,r18
   85fa4:	a4ab883a 	add	r21,r20,r18
   85fa8:	9c400115 	stw	r17,4(r19)
   85fac:	9c000015 	stw	r16,0(r19)
   85fb0:	bca9c83a 	sub	r20,r23,r18
   85fb4:	28000826 	beq	r5,zero,85fd8 <_fread_r+0x160>
   85fb8:	a03fe226 	beq	r20,zero,85f44 <_fread_r+0xcc>
   85fbc:	98801004 	addi	r2,r19,64
   85fc0:	28800326 	beq	r5,r2,85fd0 <_fread_r+0x158>
   85fc4:	b009883a 	mov	r4,r22
   85fc8:	00861f00 	call	861f0 <_free_r>
   85fcc:	9c000017 	ldw	r16,0(r19)
   85fd0:	98000c15 	stw	zero,48(r19)
   85fd4:	00000106 	br	85fdc <_fread_r+0x164>
   85fd8:	a03fda26 	beq	r20,zero,85f44 <_fread_r+0xcc>
   85fdc:	9c800417 	ldw	r18,16(r19)
   85fe0:	9c400517 	ldw	r17,20(r19)
   85fe4:	9d400015 	stw	r21,0(r19)
   85fe8:	9d400415 	stw	r21,16(r19)
   85fec:	9d000515 	stw	r20,20(r19)
   85ff0:	b009883a 	mov	r4,r22
   85ff4:	980b883a 	mov	r5,r19
   85ff8:	008914c0 	call	8914c <__srefill_r>
   85ffc:	98c00117 	ldw	r3,4(r19)
   86000:	9c800415 	stw	r18,16(r19)
   86004:	9c400515 	stw	r17,20(r19)
   86008:	a8eb883a 	add	r21,r21,r3
   8600c:	9c000015 	stw	r16,0(r19)
   86010:	a0e9c83a 	sub	r20,r20,r3
   86014:	98000115 	stw	zero,4(r19)
   86018:	103fef26 	beq	r2,zero,85fd8 <_fread_r+0x160>
   8601c:	d9400017 	ldw	r5,0(sp)
   86020:	bd09c83a 	sub	r4,r23,r20
   86024:	008f0dc0 	call	8f0dc <__udivsi3>
   86028:	1039883a 	mov	fp,r2
   8602c:	003fc506 	br	85f44 <_fread_r+0xcc>
   86030:	0039883a 	mov	fp,zero
   86034:	003fc306 	br	85f44 <_fread_r+0xcc>
   86038:	b009883a 	mov	r4,r22
   8603c:	0085bec0 	call	85bec <__sinit>
   86040:	9c400117 	ldw	r17,4(r19)
   86044:	883fa60e 	bge	r17,zero,85ee0 <_fread_r+0x68>
   86048:	0023883a 	mov	r17,zero
   8604c:	98000115 	stw	zero,4(r19)
   86050:	003fa306 	br	85ee0 <_fread_r+0x68>
   86054:	8825883a 	mov	r18,r17
   86058:	003fc906 	br	85f80 <_fread_r+0x108>
   8605c:	99400017 	ldw	r5,0(r19)
   86060:	900d883a 	mov	r6,r18
   86064:	00876c80 	call	876c8 <memcpy>
   86068:	98c00117 	ldw	r3,4(r19)
   8606c:	98800017 	ldw	r2,0(r19)
   86070:	1c87c83a 	sub	r3,r3,r18
   86074:	1485883a 	add	r2,r2,r18
   86078:	98800015 	stw	r2,0(r19)
   8607c:	98c00115 	stw	r3,4(r19)
   86080:	003fb006 	br	85f44 <_fread_r+0xcc>

00086084 <fread>:
   86084:	00800274 	movhi	r2,9
   86088:	10963a04 	addi	r2,r2,22760
   8608c:	2017883a 	mov	r11,r4
   86090:	11000017 	ldw	r4,0(r2)
   86094:	defffe04 	addi	sp,sp,-8
   86098:	3013883a 	mov	r9,r6
   8609c:	2805883a 	mov	r2,r5
   860a0:	d9c00015 	stw	r7,0(sp)
   860a4:	580b883a 	mov	r5,r11
   860a8:	100d883a 	mov	r6,r2
   860ac:	480f883a 	mov	r7,r9
   860b0:	dfc00115 	stw	ra,4(sp)
   860b4:	0085e780 	call	85e78 <_fread_r>
   860b8:	dfc00117 	ldw	ra,4(sp)
   860bc:	dec00204 	addi	sp,sp,8
   860c0:	f800283a 	ret

000860c4 <_malloc_trim_r>:
   860c4:	defffb04 	addi	sp,sp,-20
   860c8:	dcc00315 	stw	r19,12(sp)
   860cc:	04c00274 	movhi	r19,9
   860d0:	9cd06304 	addi	r19,r19,16780
   860d4:	dc800215 	stw	r18,8(sp)
   860d8:	dc400115 	stw	r17,4(sp)
   860dc:	dc000015 	stw	r16,0(sp)
   860e0:	2823883a 	mov	r17,r5
   860e4:	2025883a 	mov	r18,r4
   860e8:	dfc00415 	stw	ra,16(sp)
   860ec:	00900100 	call	90010 <__malloc_lock>
   860f0:	98800217 	ldw	r2,8(r19)
   860f4:	9009883a 	mov	r4,r18
   860f8:	000b883a 	mov	r5,zero
   860fc:	10c00117 	ldw	r3,4(r2)
   86100:	00bfff04 	movi	r2,-4
   86104:	18a0703a 	and	r16,r3,r2
   86108:	8463c83a 	sub	r17,r16,r17
   8610c:	8c43fbc4 	addi	r17,r17,4079
   86110:	8822d33a 	srli	r17,r17,12
   86114:	0083ffc4 	movi	r2,4095
   86118:	8c7fffc4 	addi	r17,r17,-1
   8611c:	8822933a 	slli	r17,r17,12
   86120:	1440060e 	bge	r2,r17,8613c <_malloc_trim_r+0x78>
   86124:	008939c0 	call	8939c <_sbrk_r>
   86128:	98c00217 	ldw	r3,8(r19)
   8612c:	9009883a 	mov	r4,r18
   86130:	044bc83a 	sub	r5,zero,r17
   86134:	80c7883a 	add	r3,r16,r3
   86138:	10c00926 	beq	r2,r3,86160 <_malloc_trim_r+0x9c>
   8613c:	00900300 	call	90030 <__malloc_unlock>
   86140:	0005883a 	mov	r2,zero
   86144:	dfc00417 	ldw	ra,16(sp)
   86148:	dcc00317 	ldw	r19,12(sp)
   8614c:	dc800217 	ldw	r18,8(sp)
   86150:	dc400117 	ldw	r17,4(sp)
   86154:	dc000017 	ldw	r16,0(sp)
   86158:	dec00504 	addi	sp,sp,20
   8615c:	f800283a 	ret
   86160:	9009883a 	mov	r4,r18
   86164:	008939c0 	call	8939c <_sbrk_r>
   86168:	844dc83a 	sub	r6,r16,r17
   8616c:	00ffffc4 	movi	r3,-1
   86170:	9009883a 	mov	r4,r18
   86174:	000b883a 	mov	r5,zero
   86178:	01c00274 	movhi	r7,9
   8617c:	39dd4504 	addi	r7,r7,29972
   86180:	31800054 	ori	r6,r6,1
   86184:	10c00926 	beq	r2,r3,861ac <_malloc_trim_r+0xe8>
   86188:	38800017 	ldw	r2,0(r7)
   8618c:	98c00217 	ldw	r3,8(r19)
   86190:	9009883a 	mov	r4,r18
   86194:	1445c83a 	sub	r2,r2,r17
   86198:	38800015 	stw	r2,0(r7)
   8619c:	19800115 	stw	r6,4(r3)
   861a0:	00900300 	call	90030 <__malloc_unlock>
   861a4:	00800044 	movi	r2,1
   861a8:	003fe606 	br	86144 <_malloc_trim_r+0x80>
   861ac:	008939c0 	call	8939c <_sbrk_r>
   861b0:	99800217 	ldw	r6,8(r19)
   861b4:	100f883a 	mov	r7,r2
   861b8:	9009883a 	mov	r4,r18
   861bc:	1187c83a 	sub	r3,r2,r6
   861c0:	008003c4 	movi	r2,15
   861c4:	19400054 	ori	r5,r3,1
   861c8:	10ffdc0e 	bge	r2,r3,8613c <_malloc_trim_r+0x78>
   861cc:	00800274 	movhi	r2,9
   861d0:	10963f04 	addi	r2,r2,22780
   861d4:	10c00017 	ldw	r3,0(r2)
   861d8:	00800274 	movhi	r2,9
   861dc:	109d4504 	addi	r2,r2,29972
   861e0:	31400115 	stw	r5,4(r6)
   861e4:	38c7c83a 	sub	r3,r7,r3
   861e8:	10c00015 	stw	r3,0(r2)
   861ec:	003fd306 	br	8613c <_malloc_trim_r+0x78>

000861f0 <_free_r>:
   861f0:	defffd04 	addi	sp,sp,-12
   861f4:	dc400115 	stw	r17,4(sp)
   861f8:	dc000015 	stw	r16,0(sp)
   861fc:	dfc00215 	stw	ra,8(sp)
   86200:	2821883a 	mov	r16,r5
   86204:	2023883a 	mov	r17,r4
   86208:	28005a26 	beq	r5,zero,86374 <_free_r+0x184>
   8620c:	00900100 	call	90010 <__malloc_lock>
   86210:	823ffe04 	addi	r8,r16,-8
   86214:	41400117 	ldw	r5,4(r8)
   86218:	00bfff84 	movi	r2,-2
   8621c:	02800274 	movhi	r10,9
   86220:	52906304 	addi	r10,r10,16780
   86224:	288e703a 	and	r7,r5,r2
   86228:	41cd883a 	add	r6,r8,r7
   8622c:	30c00117 	ldw	r3,4(r6)
   86230:	51000217 	ldw	r4,8(r10)
   86234:	00bfff04 	movi	r2,-4
   86238:	1892703a 	and	r9,r3,r2
   8623c:	5017883a 	mov	r11,r10
   86240:	31006726 	beq	r6,r4,863e0 <_free_r+0x1f0>
   86244:	2880004c 	andi	r2,r5,1
   86248:	1005003a 	cmpeq	r2,r2,zero
   8624c:	32400115 	stw	r9,4(r6)
   86250:	10001a1e 	bne	r2,zero,862bc <_free_r+0xcc>
   86254:	000b883a 	mov	r5,zero
   86258:	3247883a 	add	r3,r6,r9
   8625c:	18800117 	ldw	r2,4(r3)
   86260:	1080004c 	andi	r2,r2,1
   86264:	1000231e 	bne	r2,zero,862f4 <_free_r+0x104>
   86268:	280ac03a 	cmpne	r5,r5,zero
   8626c:	3a4f883a 	add	r7,r7,r9
   86270:	2800451e 	bne	r5,zero,86388 <_free_r+0x198>
   86274:	31000217 	ldw	r4,8(r6)
   86278:	00800274 	movhi	r2,9
   8627c:	10906504 	addi	r2,r2,16788
   86280:	20807b26 	beq	r4,r2,86470 <_free_r+0x280>
   86284:	30800317 	ldw	r2,12(r6)
   86288:	3a07883a 	add	r3,r7,r8
   8628c:	19c00015 	stw	r7,0(r3)
   86290:	11000215 	stw	r4,8(r2)
   86294:	20800315 	stw	r2,12(r4)
   86298:	38800054 	ori	r2,r7,1
   8629c:	40800115 	stw	r2,4(r8)
   862a0:	28001a26 	beq	r5,zero,8630c <_free_r+0x11c>
   862a4:	8809883a 	mov	r4,r17
   862a8:	dfc00217 	ldw	ra,8(sp)
   862ac:	dc400117 	ldw	r17,4(sp)
   862b0:	dc000017 	ldw	r16,0(sp)
   862b4:	dec00304 	addi	sp,sp,12
   862b8:	00900301 	jmpi	90030 <__malloc_unlock>
   862bc:	80bffe17 	ldw	r2,-8(r16)
   862c0:	50c00204 	addi	r3,r10,8
   862c4:	4091c83a 	sub	r8,r8,r2
   862c8:	41000217 	ldw	r4,8(r8)
   862cc:	388f883a 	add	r7,r7,r2
   862d0:	20c06126 	beq	r4,r3,86458 <_free_r+0x268>
   862d4:	40800317 	ldw	r2,12(r8)
   862d8:	3247883a 	add	r3,r6,r9
   862dc:	000b883a 	mov	r5,zero
   862e0:	11000215 	stw	r4,8(r2)
   862e4:	20800315 	stw	r2,12(r4)
   862e8:	18800117 	ldw	r2,4(r3)
   862ec:	1080004c 	andi	r2,r2,1
   862f0:	103fdd26 	beq	r2,zero,86268 <_free_r+0x78>
   862f4:	38800054 	ori	r2,r7,1
   862f8:	3a07883a 	add	r3,r7,r8
   862fc:	280ac03a 	cmpne	r5,r5,zero
   86300:	40800115 	stw	r2,4(r8)
   86304:	19c00015 	stw	r7,0(r3)
   86308:	283fe61e 	bne	r5,zero,862a4 <_free_r+0xb4>
   8630c:	00807fc4 	movi	r2,511
   86310:	11c01f2e 	bgeu	r2,r7,86390 <_free_r+0x1a0>
   86314:	3806d27a 	srli	r3,r7,9
   86318:	1800481e 	bne	r3,zero,8643c <_free_r+0x24c>
   8631c:	3804d0fa 	srli	r2,r7,3
   86320:	100690fa 	slli	r3,r2,3
   86324:	1acd883a 	add	r6,r3,r11
   86328:	31400217 	ldw	r5,8(r6)
   8632c:	31405926 	beq	r6,r5,86494 <_free_r+0x2a4>
   86330:	28800117 	ldw	r2,4(r5)
   86334:	00ffff04 	movi	r3,-4
   86338:	10c4703a 	and	r2,r2,r3
   8633c:	3880022e 	bgeu	r7,r2,86348 <_free_r+0x158>
   86340:	29400217 	ldw	r5,8(r5)
   86344:	317ffa1e 	bne	r6,r5,86330 <_free_r+0x140>
   86348:	29800317 	ldw	r6,12(r5)
   8634c:	41800315 	stw	r6,12(r8)
   86350:	41400215 	stw	r5,8(r8)
   86354:	8809883a 	mov	r4,r17
   86358:	2a000315 	stw	r8,12(r5)
   8635c:	32000215 	stw	r8,8(r6)
   86360:	dfc00217 	ldw	ra,8(sp)
   86364:	dc400117 	ldw	r17,4(sp)
   86368:	dc000017 	ldw	r16,0(sp)
   8636c:	dec00304 	addi	sp,sp,12
   86370:	00900301 	jmpi	90030 <__malloc_unlock>
   86374:	dfc00217 	ldw	ra,8(sp)
   86378:	dc400117 	ldw	r17,4(sp)
   8637c:	dc000017 	ldw	r16,0(sp)
   86380:	dec00304 	addi	sp,sp,12
   86384:	f800283a 	ret
   86388:	31000217 	ldw	r4,8(r6)
   8638c:	003fbd06 	br	86284 <_free_r+0x94>
   86390:	3806d0fa 	srli	r3,r7,3
   86394:	00800044 	movi	r2,1
   86398:	51400117 	ldw	r5,4(r10)
   8639c:	180890fa 	slli	r4,r3,3
   863a0:	1807d0ba 	srai	r3,r3,2
   863a4:	22c9883a 	add	r4,r4,r11
   863a8:	21800217 	ldw	r6,8(r4)
   863ac:	10c4983a 	sll	r2,r2,r3
   863b0:	41000315 	stw	r4,12(r8)
   863b4:	41800215 	stw	r6,8(r8)
   863b8:	288ab03a 	or	r5,r5,r2
   863bc:	22000215 	stw	r8,8(r4)
   863c0:	8809883a 	mov	r4,r17
   863c4:	51400115 	stw	r5,4(r10)
   863c8:	32000315 	stw	r8,12(r6)
   863cc:	dfc00217 	ldw	ra,8(sp)
   863d0:	dc400117 	ldw	r17,4(sp)
   863d4:	dc000017 	ldw	r16,0(sp)
   863d8:	dec00304 	addi	sp,sp,12
   863dc:	00900301 	jmpi	90030 <__malloc_unlock>
   863e0:	2880004c 	andi	r2,r5,1
   863e4:	3a4d883a 	add	r6,r7,r9
   863e8:	1000071e 	bne	r2,zero,86408 <_free_r+0x218>
   863ec:	80bffe17 	ldw	r2,-8(r16)
   863f0:	4091c83a 	sub	r8,r8,r2
   863f4:	41000317 	ldw	r4,12(r8)
   863f8:	40c00217 	ldw	r3,8(r8)
   863fc:	308d883a 	add	r6,r6,r2
   86400:	20c00215 	stw	r3,8(r4)
   86404:	19000315 	stw	r4,12(r3)
   86408:	00800274 	movhi	r2,9
   8640c:	10963e04 	addi	r2,r2,22776
   86410:	11000017 	ldw	r4,0(r2)
   86414:	30c00054 	ori	r3,r6,1
   86418:	52000215 	stw	r8,8(r10)
   8641c:	40c00115 	stw	r3,4(r8)
   86420:	313fa036 	bltu	r6,r4,862a4 <_free_r+0xb4>
   86424:	00800274 	movhi	r2,9
   86428:	109d3904 	addi	r2,r2,29924
   8642c:	11400017 	ldw	r5,0(r2)
   86430:	8809883a 	mov	r4,r17
   86434:	00860c40 	call	860c4 <_malloc_trim_r>
   86438:	003f9a06 	br	862a4 <_free_r+0xb4>
   8643c:	00800104 	movi	r2,4
   86440:	10c0072e 	bgeu	r2,r3,86460 <_free_r+0x270>
   86444:	00800504 	movi	r2,20
   86448:	10c01936 	bltu	r2,r3,864b0 <_free_r+0x2c0>
   8644c:	188016c4 	addi	r2,r3,91
   86450:	100690fa 	slli	r3,r2,3
   86454:	003fb306 	br	86324 <_free_r+0x134>
   86458:	01400044 	movi	r5,1
   8645c:	003f7e06 	br	86258 <_free_r+0x68>
   86460:	3804d1ba 	srli	r2,r7,6
   86464:	10800e04 	addi	r2,r2,56
   86468:	100690fa 	slli	r3,r2,3
   8646c:	003fad06 	br	86324 <_free_r+0x134>
   86470:	22000315 	stw	r8,12(r4)
   86474:	22000215 	stw	r8,8(r4)
   86478:	3a05883a 	add	r2,r7,r8
   8647c:	38c00054 	ori	r3,r7,1
   86480:	11c00015 	stw	r7,0(r2)
   86484:	41000215 	stw	r4,8(r8)
   86488:	40c00115 	stw	r3,4(r8)
   8648c:	41000315 	stw	r4,12(r8)
   86490:	003f8406 	br	862a4 <_free_r+0xb4>
   86494:	1005d0ba 	srai	r2,r2,2
   86498:	00c00044 	movi	r3,1
   8649c:	51000117 	ldw	r4,4(r10)
   864a0:	1886983a 	sll	r3,r3,r2
   864a4:	20c8b03a 	or	r4,r4,r3
   864a8:	51000115 	stw	r4,4(r10)
   864ac:	003fa706 	br	8634c <_free_r+0x15c>
   864b0:	00801504 	movi	r2,84
   864b4:	10c00436 	bltu	r2,r3,864c8 <_free_r+0x2d8>
   864b8:	3804d33a 	srli	r2,r7,12
   864bc:	10801b84 	addi	r2,r2,110
   864c0:	100690fa 	slli	r3,r2,3
   864c4:	003f9706 	br	86324 <_free_r+0x134>
   864c8:	00805504 	movi	r2,340
   864cc:	10c00436 	bltu	r2,r3,864e0 <_free_r+0x2f0>
   864d0:	3804d3fa 	srli	r2,r7,15
   864d4:	10801dc4 	addi	r2,r2,119
   864d8:	100690fa 	slli	r3,r2,3
   864dc:	003f9106 	br	86324 <_free_r+0x134>
   864e0:	00815504 	movi	r2,1364
   864e4:	10c0032e 	bgeu	r2,r3,864f4 <_free_r+0x304>
   864e8:	00801f84 	movi	r2,126
   864ec:	00c0fc04 	movi	r3,1008
   864f0:	003f8c06 	br	86324 <_free_r+0x134>
   864f4:	3804d4ba 	srli	r2,r7,18
   864f8:	10801f04 	addi	r2,r2,124
   864fc:	100690fa 	slli	r3,r2,3
   86500:	003f8806 	br	86324 <_free_r+0x134>

00086504 <__sfvwrite_r>:
   86504:	30800217 	ldw	r2,8(r6)
   86508:	defff504 	addi	sp,sp,-44
   8650c:	df000915 	stw	fp,36(sp)
   86510:	dd800715 	stw	r22,28(sp)
   86514:	dc800315 	stw	r18,12(sp)
   86518:	dfc00a15 	stw	ra,40(sp)
   8651c:	ddc00815 	stw	r23,32(sp)
   86520:	dd400615 	stw	r21,24(sp)
   86524:	dd000515 	stw	r20,20(sp)
   86528:	dcc00415 	stw	r19,16(sp)
   8652c:	dc400215 	stw	r17,8(sp)
   86530:	dc000115 	stw	r16,4(sp)
   86534:	302d883a 	mov	r22,r6
   86538:	2039883a 	mov	fp,r4
   8653c:	2825883a 	mov	r18,r5
   86540:	10001c26 	beq	r2,zero,865b4 <__sfvwrite_r+0xb0>
   86544:	29c0030b 	ldhu	r7,12(r5)
   86548:	3880020c 	andi	r2,r7,8
   8654c:	10002726 	beq	r2,zero,865ec <__sfvwrite_r+0xe8>
   86550:	28800417 	ldw	r2,16(r5)
   86554:	10002526 	beq	r2,zero,865ec <__sfvwrite_r+0xe8>
   86558:	3880008c 	andi	r2,r7,2
   8655c:	b5400017 	ldw	r21,0(r22)
   86560:	10002826 	beq	r2,zero,86604 <__sfvwrite_r+0x100>
   86564:	0021883a 	mov	r16,zero
   86568:	0023883a 	mov	r17,zero
   8656c:	880d883a 	mov	r6,r17
   86570:	e009883a 	mov	r4,fp
   86574:	00810004 	movi	r2,1024
   86578:	80006e26 	beq	r16,zero,86734 <__sfvwrite_r+0x230>
   8657c:	800f883a 	mov	r7,r16
   86580:	91400717 	ldw	r5,28(r18)
   86584:	1400012e 	bgeu	r2,r16,8658c <__sfvwrite_r+0x88>
   86588:	100f883a 	mov	r7,r2
   8658c:	90c00917 	ldw	r3,36(r18)
   86590:	183ee83a 	callr	r3
   86594:	1007883a 	mov	r3,r2
   86598:	80a1c83a 	sub	r16,r16,r2
   8659c:	88a3883a 	add	r17,r17,r2
   865a0:	00806d0e 	bge	zero,r2,86758 <__sfvwrite_r+0x254>
   865a4:	b0800217 	ldw	r2,8(r22)
   865a8:	10c5c83a 	sub	r2,r2,r3
   865ac:	b0800215 	stw	r2,8(r22)
   865b0:	103fee1e 	bne	r2,zero,8656c <__sfvwrite_r+0x68>
   865b4:	0009883a 	mov	r4,zero
   865b8:	2005883a 	mov	r2,r4
   865bc:	dfc00a17 	ldw	ra,40(sp)
   865c0:	df000917 	ldw	fp,36(sp)
   865c4:	ddc00817 	ldw	r23,32(sp)
   865c8:	dd800717 	ldw	r22,28(sp)
   865cc:	dd400617 	ldw	r21,24(sp)
   865d0:	dd000517 	ldw	r20,20(sp)
   865d4:	dcc00417 	ldw	r19,16(sp)
   865d8:	dc800317 	ldw	r18,12(sp)
   865dc:	dc400217 	ldw	r17,8(sp)
   865e0:	dc000117 	ldw	r16,4(sp)
   865e4:	dec00b04 	addi	sp,sp,44
   865e8:	f800283a 	ret
   865ec:	00840200 	call	84020 <__swsetup_r>
   865f0:	1000e41e 	bne	r2,zero,86984 <__sfvwrite_r+0x480>
   865f4:	91c0030b 	ldhu	r7,12(r18)
   865f8:	b5400017 	ldw	r21,0(r22)
   865fc:	3880008c 	andi	r2,r7,2
   86600:	103fd81e 	bne	r2,zero,86564 <__sfvwrite_r+0x60>
   86604:	3880004c 	andi	r2,r7,1
   86608:	1005003a 	cmpeq	r2,r2,zero
   8660c:	10005726 	beq	r2,zero,8676c <__sfvwrite_r+0x268>
   86610:	0029883a 	mov	r20,zero
   86614:	002f883a 	mov	r23,zero
   86618:	a0004226 	beq	r20,zero,86724 <__sfvwrite_r+0x220>
   8661c:	3880800c 	andi	r2,r7,512
   86620:	94000217 	ldw	r16,8(r18)
   86624:	10008b26 	beq	r2,zero,86854 <__sfvwrite_r+0x350>
   86628:	800d883a 	mov	r6,r16
   8662c:	a400a536 	bltu	r20,r16,868c4 <__sfvwrite_r+0x3c0>
   86630:	3881200c 	andi	r2,r7,1152
   86634:	10002726 	beq	r2,zero,866d4 <__sfvwrite_r+0x1d0>
   86638:	90800517 	ldw	r2,20(r18)
   8663c:	92000417 	ldw	r8,16(r18)
   86640:	91400017 	ldw	r5,0(r18)
   86644:	1087883a 	add	r3,r2,r2
   86648:	1887883a 	add	r3,r3,r2
   8664c:	1808d7fa 	srli	r4,r3,31
   86650:	2a21c83a 	sub	r16,r5,r8
   86654:	80800044 	addi	r2,r16,1
   86658:	20c9883a 	add	r4,r4,r3
   8665c:	2027d07a 	srai	r19,r4,1
   86660:	a085883a 	add	r2,r20,r2
   86664:	980d883a 	mov	r6,r19
   86668:	9880022e 	bgeu	r19,r2,86674 <__sfvwrite_r+0x170>
   8666c:	1027883a 	mov	r19,r2
   86670:	100d883a 	mov	r6,r2
   86674:	3881000c 	andi	r2,r7,1024
   86678:	1000b826 	beq	r2,zero,8695c <__sfvwrite_r+0x458>
   8667c:	300b883a 	mov	r5,r6
   86680:	e009883a 	mov	r4,fp
   86684:	0086da40 	call	86da4 <_malloc_r>
   86688:	10003126 	beq	r2,zero,86750 <__sfvwrite_r+0x24c>
   8668c:	91400417 	ldw	r5,16(r18)
   86690:	1009883a 	mov	r4,r2
   86694:	800d883a 	mov	r6,r16
   86698:	1023883a 	mov	r17,r2
   8669c:	00876c80 	call	876c8 <memcpy>
   866a0:	90c0030b 	ldhu	r3,12(r18)
   866a4:	00beffc4 	movi	r2,-1025
   866a8:	1886703a 	and	r3,r3,r2
   866ac:	18c02014 	ori	r3,r3,128
   866b0:	90c0030d 	sth	r3,12(r18)
   866b4:	9c07c83a 	sub	r3,r19,r16
   866b8:	8c05883a 	add	r2,r17,r16
   866bc:	a00d883a 	mov	r6,r20
   866c0:	a021883a 	mov	r16,r20
   866c4:	90800015 	stw	r2,0(r18)
   866c8:	90c00215 	stw	r3,8(r18)
   866cc:	94400415 	stw	r17,16(r18)
   866d0:	94c00515 	stw	r19,20(r18)
   866d4:	91000017 	ldw	r4,0(r18)
   866d8:	b80b883a 	mov	r5,r23
   866dc:	a023883a 	mov	r17,r20
   866e0:	00877680 	call	87768 <memmove>
   866e4:	90c00217 	ldw	r3,8(r18)
   866e8:	90800017 	ldw	r2,0(r18)
   866ec:	a027883a 	mov	r19,r20
   866f0:	1c07c83a 	sub	r3,r3,r16
   866f4:	1405883a 	add	r2,r2,r16
   866f8:	90c00215 	stw	r3,8(r18)
   866fc:	a021883a 	mov	r16,r20
   86700:	90800015 	stw	r2,0(r18)
   86704:	b0800217 	ldw	r2,8(r22)
   86708:	1405c83a 	sub	r2,r2,r16
   8670c:	b0800215 	stw	r2,8(r22)
   86710:	103fa826 	beq	r2,zero,865b4 <__sfvwrite_r+0xb0>
   86714:	a469c83a 	sub	r20,r20,r17
   86718:	91c0030b 	ldhu	r7,12(r18)
   8671c:	bcef883a 	add	r23,r23,r19
   86720:	a03fbe1e 	bne	r20,zero,8661c <__sfvwrite_r+0x118>
   86724:	adc00017 	ldw	r23,0(r21)
   86728:	ad000117 	ldw	r20,4(r21)
   8672c:	ad400204 	addi	r21,r21,8
   86730:	003fb906 	br	86618 <__sfvwrite_r+0x114>
   86734:	ac400017 	ldw	r17,0(r21)
   86738:	ac000117 	ldw	r16,4(r21)
   8673c:	ad400204 	addi	r21,r21,8
   86740:	003f8a06 	br	8656c <__sfvwrite_r+0x68>
   86744:	91400417 	ldw	r5,16(r18)
   86748:	e009883a 	mov	r4,fp
   8674c:	00861f00 	call	861f0 <_free_r>
   86750:	00800304 	movi	r2,12
   86754:	e0800015 	stw	r2,0(fp)
   86758:	9080030b 	ldhu	r2,12(r18)
   8675c:	013fffc4 	movi	r4,-1
   86760:	10801014 	ori	r2,r2,64
   86764:	9080030d 	sth	r2,12(r18)
   86768:	003f9306 	br	865b8 <__sfvwrite_r+0xb4>
   8676c:	0027883a 	mov	r19,zero
   86770:	002f883a 	mov	r23,zero
   86774:	d8000015 	stw	zero,0(sp)
   86778:	0029883a 	mov	r20,zero
   8677c:	98001e26 	beq	r19,zero,867f8 <__sfvwrite_r+0x2f4>
   86780:	d8c00017 	ldw	r3,0(sp)
   86784:	1804c03a 	cmpne	r2,r3,zero
   86788:	10005e26 	beq	r2,zero,86904 <__sfvwrite_r+0x400>
   8678c:	9821883a 	mov	r16,r19
   86790:	a4c0012e 	bgeu	r20,r19,86798 <__sfvwrite_r+0x294>
   86794:	a021883a 	mov	r16,r20
   86798:	91000017 	ldw	r4,0(r18)
   8679c:	90800417 	ldw	r2,16(r18)
   867a0:	91800217 	ldw	r6,8(r18)
   867a4:	91c00517 	ldw	r7,20(r18)
   867a8:	1100022e 	bgeu	r2,r4,867b4 <__sfvwrite_r+0x2b0>
   867ac:	31e3883a 	add	r17,r6,r7
   867b0:	8c001616 	blt	r17,r16,8680c <__sfvwrite_r+0x308>
   867b4:	81c03816 	blt	r16,r7,86898 <__sfvwrite_r+0x394>
   867b8:	90c00917 	ldw	r3,36(r18)
   867bc:	91400717 	ldw	r5,28(r18)
   867c0:	e009883a 	mov	r4,fp
   867c4:	b80d883a 	mov	r6,r23
   867c8:	183ee83a 	callr	r3
   867cc:	1023883a 	mov	r17,r2
   867d0:	00bfe10e 	bge	zero,r2,86758 <__sfvwrite_r+0x254>
   867d4:	a469c83a 	sub	r20,r20,r17
   867d8:	a0001826 	beq	r20,zero,8683c <__sfvwrite_r+0x338>
   867dc:	b0800217 	ldw	r2,8(r22)
   867e0:	1445c83a 	sub	r2,r2,r17
   867e4:	b0800215 	stw	r2,8(r22)
   867e8:	103f7226 	beq	r2,zero,865b4 <__sfvwrite_r+0xb0>
   867ec:	9c67c83a 	sub	r19,r19,r17
   867f0:	bc6f883a 	add	r23,r23,r17
   867f4:	983fe21e 	bne	r19,zero,86780 <__sfvwrite_r+0x27c>
   867f8:	adc00017 	ldw	r23,0(r21)
   867fc:	acc00117 	ldw	r19,4(r21)
   86800:	ad400204 	addi	r21,r21,8
   86804:	d8000015 	stw	zero,0(sp)
   86808:	003fdc06 	br	8677c <__sfvwrite_r+0x278>
   8680c:	b80b883a 	mov	r5,r23
   86810:	880d883a 	mov	r6,r17
   86814:	00877680 	call	87768 <memmove>
   86818:	90c00017 	ldw	r3,0(r18)
   8681c:	e009883a 	mov	r4,fp
   86820:	900b883a 	mov	r5,r18
   86824:	1c47883a 	add	r3,r3,r17
   86828:	90c00015 	stw	r3,0(r18)
   8682c:	00859540 	call	85954 <_fflush_r>
   86830:	103fc91e 	bne	r2,zero,86758 <__sfvwrite_r+0x254>
   86834:	a469c83a 	sub	r20,r20,r17
   86838:	a03fe81e 	bne	r20,zero,867dc <__sfvwrite_r+0x2d8>
   8683c:	e009883a 	mov	r4,fp
   86840:	900b883a 	mov	r5,r18
   86844:	00859540 	call	85954 <_fflush_r>
   86848:	103fc31e 	bne	r2,zero,86758 <__sfvwrite_r+0x254>
   8684c:	d8000015 	stw	zero,0(sp)
   86850:	003fe206 	br	867dc <__sfvwrite_r+0x2d8>
   86854:	91000017 	ldw	r4,0(r18)
   86858:	90800417 	ldw	r2,16(r18)
   8685c:	1100022e 	bgeu	r2,r4,86868 <__sfvwrite_r+0x364>
   86860:	8023883a 	mov	r17,r16
   86864:	85003136 	bltu	r16,r20,8692c <__sfvwrite_r+0x428>
   86868:	91c00517 	ldw	r7,20(r18)
   8686c:	a1c01836 	bltu	r20,r7,868d0 <__sfvwrite_r+0x3cc>
   86870:	90c00917 	ldw	r3,36(r18)
   86874:	91400717 	ldw	r5,28(r18)
   86878:	e009883a 	mov	r4,fp
   8687c:	b80d883a 	mov	r6,r23
   86880:	183ee83a 	callr	r3
   86884:	1021883a 	mov	r16,r2
   86888:	00bfb30e 	bge	zero,r2,86758 <__sfvwrite_r+0x254>
   8688c:	1023883a 	mov	r17,r2
   86890:	1027883a 	mov	r19,r2
   86894:	003f9b06 	br	86704 <__sfvwrite_r+0x200>
   86898:	b80b883a 	mov	r5,r23
   8689c:	800d883a 	mov	r6,r16
   868a0:	00877680 	call	87768 <memmove>
   868a4:	90c00217 	ldw	r3,8(r18)
   868a8:	90800017 	ldw	r2,0(r18)
   868ac:	8023883a 	mov	r17,r16
   868b0:	1c07c83a 	sub	r3,r3,r16
   868b4:	1405883a 	add	r2,r2,r16
   868b8:	90c00215 	stw	r3,8(r18)
   868bc:	90800015 	stw	r2,0(r18)
   868c0:	003fc406 	br	867d4 <__sfvwrite_r+0x2d0>
   868c4:	a00d883a 	mov	r6,r20
   868c8:	a021883a 	mov	r16,r20
   868cc:	003f8106 	br	866d4 <__sfvwrite_r+0x1d0>
   868d0:	b80b883a 	mov	r5,r23
   868d4:	a00d883a 	mov	r6,r20
   868d8:	00877680 	call	87768 <memmove>
   868dc:	90c00217 	ldw	r3,8(r18)
   868e0:	90800017 	ldw	r2,0(r18)
   868e4:	a021883a 	mov	r16,r20
   868e8:	1d07c83a 	sub	r3,r3,r20
   868ec:	1505883a 	add	r2,r2,r20
   868f0:	a023883a 	mov	r17,r20
   868f4:	a027883a 	mov	r19,r20
   868f8:	90c00215 	stw	r3,8(r18)
   868fc:	90800015 	stw	r2,0(r18)
   86900:	003f8006 	br	86704 <__sfvwrite_r+0x200>
   86904:	b809883a 	mov	r4,r23
   86908:	01400284 	movi	r5,10
   8690c:	980d883a 	mov	r6,r19
   86910:	00875e40 	call	875e4 <memchr>
   86914:	10001726 	beq	r2,zero,86974 <__sfvwrite_r+0x470>
   86918:	15c5c83a 	sub	r2,r2,r23
   8691c:	15000044 	addi	r20,r2,1
   86920:	00800044 	movi	r2,1
   86924:	d8800015 	stw	r2,0(sp)
   86928:	003f9806 	br	8678c <__sfvwrite_r+0x288>
   8692c:	b80b883a 	mov	r5,r23
   86930:	800d883a 	mov	r6,r16
   86934:	00877680 	call	87768 <memmove>
   86938:	90c00017 	ldw	r3,0(r18)
   8693c:	e009883a 	mov	r4,fp
   86940:	900b883a 	mov	r5,r18
   86944:	1c07883a 	add	r3,r3,r16
   86948:	90c00015 	stw	r3,0(r18)
   8694c:	8027883a 	mov	r19,r16
   86950:	00859540 	call	85954 <_fflush_r>
   86954:	103f6b26 	beq	r2,zero,86704 <__sfvwrite_r+0x200>
   86958:	003f7f06 	br	86758 <__sfvwrite_r+0x254>
   8695c:	400b883a 	mov	r5,r8
   86960:	e009883a 	mov	r4,fp
   86964:	0088b580 	call	88b58 <_realloc_r>
   86968:	103f7626 	beq	r2,zero,86744 <__sfvwrite_r+0x240>
   8696c:	1023883a 	mov	r17,r2
   86970:	003f5006 	br	866b4 <__sfvwrite_r+0x1b0>
   86974:	00c00044 	movi	r3,1
   86978:	9d000044 	addi	r20,r19,1
   8697c:	d8c00015 	stw	r3,0(sp)
   86980:	003f8206 	br	8678c <__sfvwrite_r+0x288>
   86984:	9080030b 	ldhu	r2,12(r18)
   86988:	00c00244 	movi	r3,9
   8698c:	013fffc4 	movi	r4,-1
   86990:	10801014 	ori	r2,r2,64
   86994:	9080030d 	sth	r2,12(r18)
   86998:	e0c00015 	stw	r3,0(fp)
   8699c:	003f0606 	br	865b8 <__sfvwrite_r+0xb4>

000869a0 <_fwalk_reent>:
   869a0:	defff704 	addi	sp,sp,-36
   869a4:	dcc00315 	stw	r19,12(sp)
   869a8:	24c0b804 	addi	r19,r4,736
   869ac:	dd800615 	stw	r22,24(sp)
   869b0:	dd400515 	stw	r21,20(sp)
   869b4:	dfc00815 	stw	ra,32(sp)
   869b8:	ddc00715 	stw	r23,28(sp)
   869bc:	dd000415 	stw	r20,16(sp)
   869c0:	dc800215 	stw	r18,8(sp)
   869c4:	dc400115 	stw	r17,4(sp)
   869c8:	dc000015 	stw	r16,0(sp)
   869cc:	202b883a 	mov	r21,r4
   869d0:	282d883a 	mov	r22,r5
   869d4:	0085bdc0 	call	85bdc <__sfp_lock_acquire>
   869d8:	98002126 	beq	r19,zero,86a60 <_fwalk_reent+0xc0>
   869dc:	002f883a 	mov	r23,zero
   869e0:	9c800117 	ldw	r18,4(r19)
   869e4:	9c000217 	ldw	r16,8(r19)
   869e8:	90bfffc4 	addi	r2,r18,-1
   869ec:	10000d16 	blt	r2,zero,86a24 <_fwalk_reent+0x84>
   869f0:	0023883a 	mov	r17,zero
   869f4:	053fffc4 	movi	r20,-1
   869f8:	8080030f 	ldh	r2,12(r16)
   869fc:	8c400044 	addi	r17,r17,1
   86a00:	10000626 	beq	r2,zero,86a1c <_fwalk_reent+0x7c>
   86a04:	8080038f 	ldh	r2,14(r16)
   86a08:	800b883a 	mov	r5,r16
   86a0c:	a809883a 	mov	r4,r21
   86a10:	15000226 	beq	r2,r20,86a1c <_fwalk_reent+0x7c>
   86a14:	b03ee83a 	callr	r22
   86a18:	b8aeb03a 	or	r23,r23,r2
   86a1c:	84001704 	addi	r16,r16,92
   86a20:	947ff51e 	bne	r18,r17,869f8 <_fwalk_reent+0x58>
   86a24:	9cc00017 	ldw	r19,0(r19)
   86a28:	983fed1e 	bne	r19,zero,869e0 <_fwalk_reent+0x40>
   86a2c:	0085be00 	call	85be0 <__sfp_lock_release>
   86a30:	b805883a 	mov	r2,r23
   86a34:	dfc00817 	ldw	ra,32(sp)
   86a38:	ddc00717 	ldw	r23,28(sp)
   86a3c:	dd800617 	ldw	r22,24(sp)
   86a40:	dd400517 	ldw	r21,20(sp)
   86a44:	dd000417 	ldw	r20,16(sp)
   86a48:	dcc00317 	ldw	r19,12(sp)
   86a4c:	dc800217 	ldw	r18,8(sp)
   86a50:	dc400117 	ldw	r17,4(sp)
   86a54:	dc000017 	ldw	r16,0(sp)
   86a58:	dec00904 	addi	sp,sp,36
   86a5c:	f800283a 	ret
   86a60:	002f883a 	mov	r23,zero
   86a64:	003ff106 	br	86a2c <_fwalk_reent+0x8c>

00086a68 <_fwalk>:
   86a68:	defff804 	addi	sp,sp,-32
   86a6c:	dcc00315 	stw	r19,12(sp)
   86a70:	24c0b804 	addi	r19,r4,736
   86a74:	dd400515 	stw	r21,20(sp)
   86a78:	dfc00715 	stw	ra,28(sp)
   86a7c:	dd800615 	stw	r22,24(sp)
   86a80:	dd000415 	stw	r20,16(sp)
   86a84:	dc800215 	stw	r18,8(sp)
   86a88:	dc400115 	stw	r17,4(sp)
   86a8c:	dc000015 	stw	r16,0(sp)
   86a90:	282b883a 	mov	r21,r5
   86a94:	0085bdc0 	call	85bdc <__sfp_lock_acquire>
   86a98:	98001f26 	beq	r19,zero,86b18 <_fwalk+0xb0>
   86a9c:	002d883a 	mov	r22,zero
   86aa0:	9c800117 	ldw	r18,4(r19)
   86aa4:	9c000217 	ldw	r16,8(r19)
   86aa8:	90bfffc4 	addi	r2,r18,-1
   86aac:	10000c16 	blt	r2,zero,86ae0 <_fwalk+0x78>
   86ab0:	0023883a 	mov	r17,zero
   86ab4:	053fffc4 	movi	r20,-1
   86ab8:	8080030f 	ldh	r2,12(r16)
   86abc:	8c400044 	addi	r17,r17,1
   86ac0:	10000526 	beq	r2,zero,86ad8 <_fwalk+0x70>
   86ac4:	8080038f 	ldh	r2,14(r16)
   86ac8:	8009883a 	mov	r4,r16
   86acc:	15000226 	beq	r2,r20,86ad8 <_fwalk+0x70>
   86ad0:	a83ee83a 	callr	r21
   86ad4:	b0acb03a 	or	r22,r22,r2
   86ad8:	84001704 	addi	r16,r16,92
   86adc:	947ff61e 	bne	r18,r17,86ab8 <_fwalk+0x50>
   86ae0:	9cc00017 	ldw	r19,0(r19)
   86ae4:	983fee1e 	bne	r19,zero,86aa0 <_fwalk+0x38>
   86ae8:	0085be00 	call	85be0 <__sfp_lock_release>
   86aec:	b005883a 	mov	r2,r22
   86af0:	dfc00717 	ldw	ra,28(sp)
   86af4:	dd800617 	ldw	r22,24(sp)
   86af8:	dd400517 	ldw	r21,20(sp)
   86afc:	dd000417 	ldw	r20,16(sp)
   86b00:	dcc00317 	ldw	r19,12(sp)
   86b04:	dc800217 	ldw	r18,8(sp)
   86b08:	dc400117 	ldw	r17,4(sp)
   86b0c:	dc000017 	ldw	r16,0(sp)
   86b10:	dec00804 	addi	sp,sp,32
   86b14:	f800283a 	ret
   86b18:	002d883a 	mov	r22,zero
   86b1c:	003ff206 	br	86ae8 <_fwalk+0x80>

00086b20 <iswspace>:
   86b20:	00803fc4 	movi	r2,255
   86b24:	0007883a 	mov	r3,zero
   86b28:	11000636 	bltu	r2,r4,86b44 <iswspace+0x24>
   86b2c:	00800274 	movhi	r2,9
   86b30:	10963904 	addi	r2,r2,22756
   86b34:	10c00017 	ldw	r3,0(r2)
   86b38:	1907883a 	add	r3,r3,r4
   86b3c:	18800003 	ldbu	r2,0(r3)
   86b40:	10c0020c 	andi	r3,r2,8
   86b44:	1805883a 	mov	r2,r3
   86b48:	f800283a 	ret

00086b4c <__locale_charset>:
   86b4c:	d0a00417 	ldw	r2,-32752(gp)
   86b50:	f800283a 	ret

00086b54 <_localeconv_r>:
   86b54:	00800274 	movhi	r2,9
   86b58:	108ea104 	addi	r2,r2,14980
   86b5c:	f800283a 	ret

00086b60 <localeconv>:
   86b60:	00800274 	movhi	r2,9
   86b64:	10963a04 	addi	r2,r2,22760
   86b68:	11000017 	ldw	r4,0(r2)
   86b6c:	0086b541 	jmpi	86b54 <_localeconv_r>

00086b70 <_setlocale_r>:
   86b70:	defffc04 	addi	sp,sp,-16
   86b74:	00c00274 	movhi	r3,9
   86b78:	18ce9c04 	addi	r3,r3,14960
   86b7c:	dc800215 	stw	r18,8(sp)
   86b80:	dc400115 	stw	r17,4(sp)
   86b84:	dc000015 	stw	r16,0(sp)
   86b88:	2023883a 	mov	r17,r4
   86b8c:	2825883a 	mov	r18,r5
   86b90:	dfc00315 	stw	ra,12(sp)
   86b94:	3021883a 	mov	r16,r6
   86b98:	3009883a 	mov	r4,r6
   86b9c:	180b883a 	mov	r5,r3
   86ba0:	30000926 	beq	r6,zero,86bc8 <_setlocale_r+0x58>
   86ba4:	00808280 	call	80828 <strcmp>
   86ba8:	8009883a 	mov	r4,r16
   86bac:	01400274 	movhi	r5,9
   86bb0:	294ddc04 	addi	r5,r5,14192
   86bb4:	10000b1e 	bne	r2,zero,86be4 <_setlocale_r+0x74>
   86bb8:	8c000d15 	stw	r16,52(r17)
   86bbc:	8c800c15 	stw	r18,48(r17)
   86bc0:	00c00274 	movhi	r3,9
   86bc4:	18ce9c04 	addi	r3,r3,14960
   86bc8:	1805883a 	mov	r2,r3
   86bcc:	dfc00317 	ldw	ra,12(sp)
   86bd0:	dc800217 	ldw	r18,8(sp)
   86bd4:	dc400117 	ldw	r17,4(sp)
   86bd8:	dc000017 	ldw	r16,0(sp)
   86bdc:	dec00404 	addi	sp,sp,16
   86be0:	f800283a 	ret
   86be4:	00808280 	call	80828 <strcmp>
   86be8:	0007883a 	mov	r3,zero
   86bec:	103ff226 	beq	r2,zero,86bb8 <_setlocale_r+0x48>
   86bf0:	003ff506 	br	86bc8 <_setlocale_r+0x58>

00086bf4 <setlocale>:
   86bf4:	01800274 	movhi	r6,9
   86bf8:	31963a04 	addi	r6,r6,22760
   86bfc:	2007883a 	mov	r3,r4
   86c00:	31000017 	ldw	r4,0(r6)
   86c04:	280d883a 	mov	r6,r5
   86c08:	180b883a 	mov	r5,r3
   86c0c:	0086b701 	jmpi	86b70 <_setlocale_r>

00086c10 <__smakebuf_r>:
   86c10:	2880030b 	ldhu	r2,12(r5)
   86c14:	deffed04 	addi	sp,sp,-76
   86c18:	dc401015 	stw	r17,64(sp)
   86c1c:	1080008c 	andi	r2,r2,2
   86c20:	dc000f15 	stw	r16,60(sp)
   86c24:	dfc01215 	stw	ra,72(sp)
   86c28:	dc801115 	stw	r18,68(sp)
   86c2c:	2821883a 	mov	r16,r5
   86c30:	2023883a 	mov	r17,r4
   86c34:	10000b26 	beq	r2,zero,86c64 <__smakebuf_r+0x54>
   86c38:	28c010c4 	addi	r3,r5,67
   86c3c:	00800044 	movi	r2,1
   86c40:	28800515 	stw	r2,20(r5)
   86c44:	28c00415 	stw	r3,16(r5)
   86c48:	28c00015 	stw	r3,0(r5)
   86c4c:	dfc01217 	ldw	ra,72(sp)
   86c50:	dc801117 	ldw	r18,68(sp)
   86c54:	dc401017 	ldw	r17,64(sp)
   86c58:	dc000f17 	ldw	r16,60(sp)
   86c5c:	dec01304 	addi	sp,sp,76
   86c60:	f800283a 	ret
   86c64:	2940038f 	ldh	r5,14(r5)
   86c68:	28002116 	blt	r5,zero,86cf0 <__smakebuf_r+0xe0>
   86c6c:	d80d883a 	mov	r6,sp
   86c70:	008bfdc0 	call	8bfdc <_fstat_r>
   86c74:	10001e16 	blt	r2,zero,86cf0 <__smakebuf_r+0xe0>
   86c78:	d8800117 	ldw	r2,4(sp)
   86c7c:	00e00014 	movui	r3,32768
   86c80:	113c000c 	andi	r4,r2,61440
   86c84:	20c03126 	beq	r4,r3,86d4c <__smakebuf_r+0x13c>
   86c88:	8080030b 	ldhu	r2,12(r16)
   86c8c:	00c80004 	movi	r3,8192
   86c90:	10820014 	ori	r2,r2,2048
   86c94:	8080030d 	sth	r2,12(r16)
   86c98:	20c01e26 	beq	r4,r3,86d14 <__smakebuf_r+0x104>
   86c9c:	04810004 	movi	r18,1024
   86ca0:	8809883a 	mov	r4,r17
   86ca4:	900b883a 	mov	r5,r18
   86ca8:	0086da40 	call	86da4 <_malloc_r>
   86cac:	1009883a 	mov	r4,r2
   86cb0:	10003126 	beq	r2,zero,86d78 <__smakebuf_r+0x168>
   86cb4:	80c0030b 	ldhu	r3,12(r16)
   86cb8:	00800234 	movhi	r2,8
   86cbc:	10973404 	addi	r2,r2,23760
   86cc0:	88800f15 	stw	r2,60(r17)
   86cc4:	18c02014 	ori	r3,r3,128
   86cc8:	84800515 	stw	r18,20(r16)
   86ccc:	80c0030d 	sth	r3,12(r16)
   86cd0:	81000415 	stw	r4,16(r16)
   86cd4:	81000015 	stw	r4,0(r16)
   86cd8:	dfc01217 	ldw	ra,72(sp)
   86cdc:	dc801117 	ldw	r18,68(sp)
   86ce0:	dc401017 	ldw	r17,64(sp)
   86ce4:	dc000f17 	ldw	r16,60(sp)
   86ce8:	dec01304 	addi	sp,sp,76
   86cec:	f800283a 	ret
   86cf0:	80c0030b 	ldhu	r3,12(r16)
   86cf4:	1880200c 	andi	r2,r3,128
   86cf8:	10000426 	beq	r2,zero,86d0c <__smakebuf_r+0xfc>
   86cfc:	04801004 	movi	r18,64
   86d00:	18820014 	ori	r2,r3,2048
   86d04:	8080030d 	sth	r2,12(r16)
   86d08:	003fe506 	br	86ca0 <__smakebuf_r+0x90>
   86d0c:	04810004 	movi	r18,1024
   86d10:	003ffb06 	br	86d00 <__smakebuf_r+0xf0>
   86d14:	8140038f 	ldh	r5,14(r16)
   86d18:	8809883a 	mov	r4,r17
   86d1c:	008cc1c0 	call	8cc1c <_isatty_r>
   86d20:	103fde26 	beq	r2,zero,86c9c <__smakebuf_r+0x8c>
   86d24:	8080030b 	ldhu	r2,12(r16)
   86d28:	80c010c4 	addi	r3,r16,67
   86d2c:	04810004 	movi	r18,1024
   86d30:	10800054 	ori	r2,r2,1
   86d34:	8080030d 	sth	r2,12(r16)
   86d38:	00800044 	movi	r2,1
   86d3c:	80c00415 	stw	r3,16(r16)
   86d40:	80800515 	stw	r2,20(r16)
   86d44:	80c00015 	stw	r3,0(r16)
   86d48:	003fd506 	br	86ca0 <__smakebuf_r+0x90>
   86d4c:	80c00a17 	ldw	r3,40(r16)
   86d50:	00800274 	movhi	r2,9
   86d54:	10a56c04 	addi	r2,r2,-27216
   86d58:	18bfcb1e 	bne	r3,r2,86c88 <__smakebuf_r+0x78>
   86d5c:	8080030b 	ldhu	r2,12(r16)
   86d60:	00c10004 	movi	r3,1024
   86d64:	1825883a 	mov	r18,r3
   86d68:	10c4b03a 	or	r2,r2,r3
   86d6c:	8080030d 	sth	r2,12(r16)
   86d70:	80c01315 	stw	r3,76(r16)
   86d74:	003fca06 	br	86ca0 <__smakebuf_r+0x90>
   86d78:	8100030b 	ldhu	r4,12(r16)
   86d7c:	2080800c 	andi	r2,r4,512
   86d80:	103fb21e 	bne	r2,zero,86c4c <__smakebuf_r+0x3c>
   86d84:	80c010c4 	addi	r3,r16,67
   86d88:	21000094 	ori	r4,r4,2
   86d8c:	00800044 	movi	r2,1
   86d90:	80800515 	stw	r2,20(r16)
   86d94:	8100030d 	sth	r4,12(r16)
   86d98:	80c00415 	stw	r3,16(r16)
   86d9c:	80c00015 	stw	r3,0(r16)
   86da0:	003faa06 	br	86c4c <__smakebuf_r+0x3c>

00086da4 <_malloc_r>:
   86da4:	defff604 	addi	sp,sp,-40
   86da8:	28c002c4 	addi	r3,r5,11
   86dac:	00800584 	movi	r2,22
   86db0:	dc800215 	stw	r18,8(sp)
   86db4:	dfc00915 	stw	ra,36(sp)
   86db8:	df000815 	stw	fp,32(sp)
   86dbc:	ddc00715 	stw	r23,28(sp)
   86dc0:	dd800615 	stw	r22,24(sp)
   86dc4:	dd400515 	stw	r21,20(sp)
   86dc8:	dd000415 	stw	r20,16(sp)
   86dcc:	dcc00315 	stw	r19,12(sp)
   86dd0:	dc400115 	stw	r17,4(sp)
   86dd4:	dc000015 	stw	r16,0(sp)
   86dd8:	2025883a 	mov	r18,r4
   86ddc:	10c01236 	bltu	r2,r3,86e28 <_malloc_r+0x84>
   86de0:	04400404 	movi	r17,16
   86de4:	8940142e 	bgeu	r17,r5,86e38 <_malloc_r+0x94>
   86de8:	00800304 	movi	r2,12
   86dec:	0007883a 	mov	r3,zero
   86df0:	90800015 	stw	r2,0(r18)
   86df4:	1805883a 	mov	r2,r3
   86df8:	dfc00917 	ldw	ra,36(sp)
   86dfc:	df000817 	ldw	fp,32(sp)
   86e00:	ddc00717 	ldw	r23,28(sp)
   86e04:	dd800617 	ldw	r22,24(sp)
   86e08:	dd400517 	ldw	r21,20(sp)
   86e0c:	dd000417 	ldw	r20,16(sp)
   86e10:	dcc00317 	ldw	r19,12(sp)
   86e14:	dc800217 	ldw	r18,8(sp)
   86e18:	dc400117 	ldw	r17,4(sp)
   86e1c:	dc000017 	ldw	r16,0(sp)
   86e20:	dec00a04 	addi	sp,sp,40
   86e24:	f800283a 	ret
   86e28:	00bffe04 	movi	r2,-8
   86e2c:	18a2703a 	and	r17,r3,r2
   86e30:	883fed16 	blt	r17,zero,86de8 <_malloc_r+0x44>
   86e34:	897fec36 	bltu	r17,r5,86de8 <_malloc_r+0x44>
   86e38:	9009883a 	mov	r4,r18
   86e3c:	00900100 	call	90010 <__malloc_lock>
   86e40:	00807dc4 	movi	r2,503
   86e44:	14402b2e 	bgeu	r2,r17,86ef4 <_malloc_r+0x150>
   86e48:	8806d27a 	srli	r3,r17,9
   86e4c:	18003f1e 	bne	r3,zero,86f4c <_malloc_r+0x1a8>
   86e50:	880cd0fa 	srli	r6,r17,3
   86e54:	300490fa 	slli	r2,r6,3
   86e58:	02c00274 	movhi	r11,9
   86e5c:	5ad06304 	addi	r11,r11,16780
   86e60:	12cb883a 	add	r5,r2,r11
   86e64:	2c000317 	ldw	r16,12(r5)
   86e68:	580f883a 	mov	r7,r11
   86e6c:	2c00041e 	bne	r5,r16,86e80 <_malloc_r+0xdc>
   86e70:	00000a06 	br	86e9c <_malloc_r+0xf8>
   86e74:	1800860e 	bge	r3,zero,87090 <_malloc_r+0x2ec>
   86e78:	84000317 	ldw	r16,12(r16)
   86e7c:	2c000726 	beq	r5,r16,86e9c <_malloc_r+0xf8>
   86e80:	80800117 	ldw	r2,4(r16)
   86e84:	00ffff04 	movi	r3,-4
   86e88:	10c8703a 	and	r4,r2,r3
   86e8c:	2447c83a 	sub	r3,r4,r17
   86e90:	008003c4 	movi	r2,15
   86e94:	10fff70e 	bge	r2,r3,86e74 <_malloc_r+0xd0>
   86e98:	31bfffc4 	addi	r6,r6,-1
   86e9c:	32400044 	addi	r9,r6,1
   86ea0:	02800274 	movhi	r10,9
   86ea4:	52906504 	addi	r10,r10,16788
   86ea8:	54000217 	ldw	r16,8(r10)
   86eac:	8280a026 	beq	r16,r10,87130 <_malloc_r+0x38c>
   86eb0:	80800117 	ldw	r2,4(r16)
   86eb4:	00ffff04 	movi	r3,-4
   86eb8:	10ca703a 	and	r5,r2,r3
   86ebc:	2c4dc83a 	sub	r6,r5,r17
   86ec0:	008003c4 	movi	r2,15
   86ec4:	11808316 	blt	r2,r6,870d4 <_malloc_r+0x330>
   86ec8:	52800315 	stw	r10,12(r10)
   86ecc:	52800215 	stw	r10,8(r10)
   86ed0:	30002916 	blt	r6,zero,86f78 <_malloc_r+0x1d4>
   86ed4:	8147883a 	add	r3,r16,r5
   86ed8:	18800117 	ldw	r2,4(r3)
   86edc:	9009883a 	mov	r4,r18
   86ee0:	10800054 	ori	r2,r2,1
   86ee4:	18800115 	stw	r2,4(r3)
   86ee8:	00900300 	call	90030 <__malloc_unlock>
   86eec:	80c00204 	addi	r3,r16,8
   86ef0:	003fc006 	br	86df4 <_malloc_r+0x50>
   86ef4:	02c00274 	movhi	r11,9
   86ef8:	5ad06304 	addi	r11,r11,16780
   86efc:	8ac5883a 	add	r2,r17,r11
   86f00:	14000317 	ldw	r16,12(r2)
   86f04:	580f883a 	mov	r7,r11
   86f08:	8806d0fa 	srli	r3,r17,3
   86f0c:	14006c26 	beq	r2,r16,870c0 <_malloc_r+0x31c>
   86f10:	80c00117 	ldw	r3,4(r16)
   86f14:	00bfff04 	movi	r2,-4
   86f18:	81800317 	ldw	r6,12(r16)
   86f1c:	1886703a 	and	r3,r3,r2
   86f20:	80c7883a 	add	r3,r16,r3
   86f24:	18800117 	ldw	r2,4(r3)
   86f28:	81400217 	ldw	r5,8(r16)
   86f2c:	9009883a 	mov	r4,r18
   86f30:	10800054 	ori	r2,r2,1
   86f34:	18800115 	stw	r2,4(r3)
   86f38:	31400215 	stw	r5,8(r6)
   86f3c:	29800315 	stw	r6,12(r5)
   86f40:	00900300 	call	90030 <__malloc_unlock>
   86f44:	80c00204 	addi	r3,r16,8
   86f48:	003faa06 	br	86df4 <_malloc_r+0x50>
   86f4c:	00800104 	movi	r2,4
   86f50:	10c0052e 	bgeu	r2,r3,86f68 <_malloc_r+0x1c4>
   86f54:	00800504 	movi	r2,20
   86f58:	10c07836 	bltu	r2,r3,8713c <_malloc_r+0x398>
   86f5c:	198016c4 	addi	r6,r3,91
   86f60:	300490fa 	slli	r2,r6,3
   86f64:	003fbc06 	br	86e58 <_malloc_r+0xb4>
   86f68:	8804d1ba 	srli	r2,r17,6
   86f6c:	11800e04 	addi	r6,r2,56
   86f70:	300490fa 	slli	r2,r6,3
   86f74:	003fb806 	br	86e58 <_malloc_r+0xb4>
   86f78:	00807fc4 	movi	r2,511
   86f7c:	1140bb36 	bltu	r2,r5,8726c <_malloc_r+0x4c8>
   86f80:	2806d0fa 	srli	r3,r5,3
   86f84:	573ffe04 	addi	fp,r10,-8
   86f88:	00800044 	movi	r2,1
   86f8c:	180890fa 	slli	r4,r3,3
   86f90:	1807d0ba 	srai	r3,r3,2
   86f94:	e1c00117 	ldw	r7,4(fp)
   86f98:	5909883a 	add	r4,r11,r4
   86f9c:	21400217 	ldw	r5,8(r4)
   86fa0:	10c4983a 	sll	r2,r2,r3
   86fa4:	81000315 	stw	r4,12(r16)
   86fa8:	81400215 	stw	r5,8(r16)
   86fac:	388eb03a 	or	r7,r7,r2
   86fb0:	2c000315 	stw	r16,12(r5)
   86fb4:	24000215 	stw	r16,8(r4)
   86fb8:	e1c00115 	stw	r7,4(fp)
   86fbc:	4807883a 	mov	r3,r9
   86fc0:	4800cd16 	blt	r9,zero,872f8 <_malloc_r+0x554>
   86fc4:	1807d0ba 	srai	r3,r3,2
   86fc8:	00800044 	movi	r2,1
   86fcc:	10c8983a 	sll	r4,r2,r3
   86fd0:	39004436 	bltu	r7,r4,870e4 <_malloc_r+0x340>
   86fd4:	21c4703a 	and	r2,r4,r7
   86fd8:	10000a1e 	bne	r2,zero,87004 <_malloc_r+0x260>
   86fdc:	2109883a 	add	r4,r4,r4
   86fe0:	00bfff04 	movi	r2,-4
   86fe4:	4884703a 	and	r2,r9,r2
   86fe8:	3906703a 	and	r3,r7,r4
   86fec:	12400104 	addi	r9,r2,4
   86ff0:	1800041e 	bne	r3,zero,87004 <_malloc_r+0x260>
   86ff4:	2109883a 	add	r4,r4,r4
   86ff8:	3904703a 	and	r2,r7,r4
   86ffc:	4a400104 	addi	r9,r9,4
   87000:	103ffc26 	beq	r2,zero,86ff4 <_malloc_r+0x250>
   87004:	480490fa 	slli	r2,r9,3
   87008:	4819883a 	mov	r12,r9
   8700c:	023fff04 	movi	r8,-4
   87010:	589b883a 	add	r13,r11,r2
   87014:	6807883a 	mov	r3,r13
   87018:	014003c4 	movi	r5,15
   8701c:	1c000317 	ldw	r16,12(r3)
   87020:	1c00041e 	bne	r3,r16,87034 <_malloc_r+0x290>
   87024:	0000a706 	br	872c4 <_malloc_r+0x520>
   87028:	3000ab0e 	bge	r6,zero,872d8 <_malloc_r+0x534>
   8702c:	84000317 	ldw	r16,12(r16)
   87030:	1c00a426 	beq	r3,r16,872c4 <_malloc_r+0x520>
   87034:	80800117 	ldw	r2,4(r16)
   87038:	1204703a 	and	r2,r2,r8
   8703c:	144dc83a 	sub	r6,r2,r17
   87040:	29bff90e 	bge	r5,r6,87028 <_malloc_r+0x284>
   87044:	81000317 	ldw	r4,12(r16)
   87048:	80c00217 	ldw	r3,8(r16)
   8704c:	89400054 	ori	r5,r17,1
   87050:	8445883a 	add	r2,r16,r17
   87054:	20c00215 	stw	r3,8(r4)
   87058:	19000315 	stw	r4,12(r3)
   8705c:	81400115 	stw	r5,4(r16)
   87060:	1187883a 	add	r3,r2,r6
   87064:	31000054 	ori	r4,r6,1
   87068:	50800315 	stw	r2,12(r10)
   8706c:	50800215 	stw	r2,8(r10)
   87070:	19800015 	stw	r6,0(r3)
   87074:	11000115 	stw	r4,4(r2)
   87078:	12800215 	stw	r10,8(r2)
   8707c:	12800315 	stw	r10,12(r2)
   87080:	9009883a 	mov	r4,r18
   87084:	00900300 	call	90030 <__malloc_unlock>
   87088:	80c00204 	addi	r3,r16,8
   8708c:	003f5906 	br	86df4 <_malloc_r+0x50>
   87090:	8109883a 	add	r4,r16,r4
   87094:	20800117 	ldw	r2,4(r4)
   87098:	80c00217 	ldw	r3,8(r16)
   8709c:	81400317 	ldw	r5,12(r16)
   870a0:	10800054 	ori	r2,r2,1
   870a4:	20800115 	stw	r2,4(r4)
   870a8:	28c00215 	stw	r3,8(r5)
   870ac:	19400315 	stw	r5,12(r3)
   870b0:	9009883a 	mov	r4,r18
   870b4:	00900300 	call	90030 <__malloc_unlock>
   870b8:	80c00204 	addi	r3,r16,8
   870bc:	003f4d06 	br	86df4 <_malloc_r+0x50>
   870c0:	80800204 	addi	r2,r16,8
   870c4:	14000317 	ldw	r16,12(r2)
   870c8:	143f911e 	bne	r2,r16,86f10 <_malloc_r+0x16c>
   870cc:	1a400084 	addi	r9,r3,2
   870d0:	003f7306 	br	86ea0 <_malloc_r+0xfc>
   870d4:	88c00054 	ori	r3,r17,1
   870d8:	8445883a 	add	r2,r16,r17
   870dc:	80c00115 	stw	r3,4(r16)
   870e0:	003fdf06 	br	87060 <_malloc_r+0x2bc>
   870e4:	e4000217 	ldw	r16,8(fp)
   870e8:	00bfff04 	movi	r2,-4
   870ec:	80c00117 	ldw	r3,4(r16)
   870f0:	802d883a 	mov	r22,r16
   870f4:	18aa703a 	and	r21,r3,r2
   870f8:	ac401636 	bltu	r21,r17,87154 <_malloc_r+0x3b0>
   870fc:	ac49c83a 	sub	r4,r21,r17
   87100:	008003c4 	movi	r2,15
   87104:	1100130e 	bge	r2,r4,87154 <_malloc_r+0x3b0>
   87108:	88800054 	ori	r2,r17,1
   8710c:	8447883a 	add	r3,r16,r17
   87110:	80800115 	stw	r2,4(r16)
   87114:	20800054 	ori	r2,r4,1
   87118:	18800115 	stw	r2,4(r3)
   8711c:	e0c00215 	stw	r3,8(fp)
   87120:	9009883a 	mov	r4,r18
   87124:	00900300 	call	90030 <__malloc_unlock>
   87128:	80c00204 	addi	r3,r16,8
   8712c:	003f3106 	br	86df4 <_malloc_r+0x50>
   87130:	39c00117 	ldw	r7,4(r7)
   87134:	573ffe04 	addi	fp,r10,-8
   87138:	003fa006 	br	86fbc <_malloc_r+0x218>
   8713c:	00801504 	movi	r2,84
   87140:	10c06736 	bltu	r2,r3,872e0 <_malloc_r+0x53c>
   87144:	8804d33a 	srli	r2,r17,12
   87148:	11801b84 	addi	r6,r2,110
   8714c:	300490fa 	slli	r2,r6,3
   87150:	003f4106 	br	86e58 <_malloc_r+0xb4>
   87154:	d0a70017 	ldw	r2,-25600(gp)
   87158:	d0e00617 	ldw	r3,-32744(gp)
   8715c:	053fffc4 	movi	r20,-1
   87160:	10800404 	addi	r2,r2,16
   87164:	88a7883a 	add	r19,r17,r2
   87168:	1d000326 	beq	r3,r20,87178 <_malloc_r+0x3d4>
   8716c:	98c3ffc4 	addi	r3,r19,4095
   87170:	00bc0004 	movi	r2,-4096
   87174:	18a6703a 	and	r19,r3,r2
   87178:	9009883a 	mov	r4,r18
   8717c:	980b883a 	mov	r5,r19
   87180:	008939c0 	call	8939c <_sbrk_r>
   87184:	1009883a 	mov	r4,r2
   87188:	15000426 	beq	r2,r20,8719c <_malloc_r+0x3f8>
   8718c:	854b883a 	add	r5,r16,r21
   87190:	1029883a 	mov	r20,r2
   87194:	11405a2e 	bgeu	r2,r5,87300 <_malloc_r+0x55c>
   87198:	87000c26 	beq	r16,fp,871cc <_malloc_r+0x428>
   8719c:	e4000217 	ldw	r16,8(fp)
   871a0:	80c00117 	ldw	r3,4(r16)
   871a4:	00bfff04 	movi	r2,-4
   871a8:	1884703a 	and	r2,r3,r2
   871ac:	14400336 	bltu	r2,r17,871bc <_malloc_r+0x418>
   871b0:	1449c83a 	sub	r4,r2,r17
   871b4:	008003c4 	movi	r2,15
   871b8:	113fd316 	blt	r2,r4,87108 <_malloc_r+0x364>
   871bc:	9009883a 	mov	r4,r18
   871c0:	00900300 	call	90030 <__malloc_unlock>
   871c4:	0007883a 	mov	r3,zero
   871c8:	003f0a06 	br	86df4 <_malloc_r+0x50>
   871cc:	05c00274 	movhi	r23,9
   871d0:	bddd4504 	addi	r23,r23,29972
   871d4:	b8800017 	ldw	r2,0(r23)
   871d8:	988d883a 	add	r6,r19,r2
   871dc:	b9800015 	stw	r6,0(r23)
   871e0:	d0e00617 	ldw	r3,-32744(gp)
   871e4:	00bfffc4 	movi	r2,-1
   871e8:	18808e26 	beq	r3,r2,87424 <_malloc_r+0x680>
   871ec:	2145c83a 	sub	r2,r4,r5
   871f0:	3085883a 	add	r2,r6,r2
   871f4:	b8800015 	stw	r2,0(r23)
   871f8:	20c001cc 	andi	r3,r4,7
   871fc:	18005f1e 	bne	r3,zero,8737c <_malloc_r+0x5d8>
   87200:	000b883a 	mov	r5,zero
   87204:	a4c5883a 	add	r2,r20,r19
   87208:	1083ffcc 	andi	r2,r2,4095
   8720c:	00c40004 	movi	r3,4096
   87210:	1887c83a 	sub	r3,r3,r2
   87214:	28e7883a 	add	r19,r5,r3
   87218:	9009883a 	mov	r4,r18
   8721c:	980b883a 	mov	r5,r19
   87220:	008939c0 	call	8939c <_sbrk_r>
   87224:	1007883a 	mov	r3,r2
   87228:	00bfffc4 	movi	r2,-1
   8722c:	18807a26 	beq	r3,r2,87418 <_malloc_r+0x674>
   87230:	1d05c83a 	sub	r2,r3,r20
   87234:	9885883a 	add	r2,r19,r2
   87238:	10c00054 	ori	r3,r2,1
   8723c:	b8800017 	ldw	r2,0(r23)
   87240:	a021883a 	mov	r16,r20
   87244:	a0c00115 	stw	r3,4(r20)
   87248:	9885883a 	add	r2,r19,r2
   8724c:	b8800015 	stw	r2,0(r23)
   87250:	e5000215 	stw	r20,8(fp)
   87254:	b7003626 	beq	r22,fp,87330 <_malloc_r+0x58c>
   87258:	018003c4 	movi	r6,15
   8725c:	35404b36 	bltu	r6,r21,8738c <_malloc_r+0x5e8>
   87260:	00800044 	movi	r2,1
   87264:	a0800115 	stw	r2,4(r20)
   87268:	003fcd06 	br	871a0 <_malloc_r+0x3fc>
   8726c:	2808d27a 	srli	r4,r5,9
   87270:	2000371e 	bne	r4,zero,87350 <_malloc_r+0x5ac>
   87274:	2808d0fa 	srli	r4,r5,3
   87278:	200690fa 	slli	r3,r4,3
   8727c:	1ad1883a 	add	r8,r3,r11
   87280:	41800217 	ldw	r6,8(r8)
   87284:	41805b26 	beq	r8,r6,873f4 <_malloc_r+0x650>
   87288:	30800117 	ldw	r2,4(r6)
   8728c:	00ffff04 	movi	r3,-4
   87290:	10c4703a 	and	r2,r2,r3
   87294:	2880022e 	bgeu	r5,r2,872a0 <_malloc_r+0x4fc>
   87298:	31800217 	ldw	r6,8(r6)
   8729c:	41bffa1e 	bne	r8,r6,87288 <_malloc_r+0x4e4>
   872a0:	32000317 	ldw	r8,12(r6)
   872a4:	39c00117 	ldw	r7,4(r7)
   872a8:	82000315 	stw	r8,12(r16)
   872ac:	81800215 	stw	r6,8(r16)
   872b0:	07000274 	movhi	fp,9
   872b4:	e7106304 	addi	fp,fp,16780
   872b8:	34000315 	stw	r16,12(r6)
   872bc:	44000215 	stw	r16,8(r8)
   872c0:	003f3e06 	br	86fbc <_malloc_r+0x218>
   872c4:	63000044 	addi	r12,r12,1
   872c8:	608000cc 	andi	r2,r12,3
   872cc:	10005d26 	beq	r2,zero,87444 <_malloc_r+0x6a0>
   872d0:	18c00204 	addi	r3,r3,8
   872d4:	003f5106 	br	8701c <_malloc_r+0x278>
   872d8:	8089883a 	add	r4,r16,r2
   872dc:	003f6d06 	br	87094 <_malloc_r+0x2f0>
   872e0:	00805504 	movi	r2,340
   872e4:	10c02036 	bltu	r2,r3,87368 <_malloc_r+0x5c4>
   872e8:	8804d3fa 	srli	r2,r17,15
   872ec:	11801dc4 	addi	r6,r2,119
   872f0:	300490fa 	slli	r2,r6,3
   872f4:	003ed806 	br	86e58 <_malloc_r+0xb4>
   872f8:	48c000c4 	addi	r3,r9,3
   872fc:	003f3106 	br	86fc4 <_malloc_r+0x220>
   87300:	05c00274 	movhi	r23,9
   87304:	bddd4504 	addi	r23,r23,29972
   87308:	b8800017 	ldw	r2,0(r23)
   8730c:	988d883a 	add	r6,r19,r2
   87310:	b9800015 	stw	r6,0(r23)
   87314:	293fb21e 	bne	r5,r4,871e0 <_malloc_r+0x43c>
   87318:	2083ffcc 	andi	r2,r4,4095
   8731c:	103fb01e 	bne	r2,zero,871e0 <_malloc_r+0x43c>
   87320:	e4000217 	ldw	r16,8(fp)
   87324:	9d45883a 	add	r2,r19,r21
   87328:	10800054 	ori	r2,r2,1
   8732c:	80800115 	stw	r2,4(r16)
   87330:	b8c00017 	ldw	r3,0(r23)
   87334:	d0a70117 	ldw	r2,-25596(gp)
   87338:	10c0012e 	bgeu	r2,r3,87340 <_malloc_r+0x59c>
   8733c:	d0e70115 	stw	r3,-25596(gp)
   87340:	d0a70217 	ldw	r2,-25592(gp)
   87344:	10ff962e 	bgeu	r2,r3,871a0 <_malloc_r+0x3fc>
   87348:	d0e70215 	stw	r3,-25592(gp)
   8734c:	003f9406 	br	871a0 <_malloc_r+0x3fc>
   87350:	00800104 	movi	r2,4
   87354:	11001e36 	bltu	r2,r4,873d0 <_malloc_r+0x62c>
   87358:	2804d1ba 	srli	r2,r5,6
   8735c:	11000e04 	addi	r4,r2,56
   87360:	200690fa 	slli	r3,r4,3
   87364:	003fc506 	br	8727c <_malloc_r+0x4d8>
   87368:	00815504 	movi	r2,1364
   8736c:	10c01d2e 	bgeu	r2,r3,873e4 <_malloc_r+0x640>
   87370:	01801f84 	movi	r6,126
   87374:	0080fc04 	movi	r2,1008
   87378:	003eb706 	br	86e58 <_malloc_r+0xb4>
   8737c:	00800204 	movi	r2,8
   87380:	10cbc83a 	sub	r5,r2,r3
   87384:	2169883a 	add	r20,r4,r5
   87388:	003f9e06 	br	87204 <_malloc_r+0x460>
   8738c:	00bffe04 	movi	r2,-8
   87390:	a93ffd04 	addi	r4,r21,-12
   87394:	2088703a 	and	r4,r4,r2
   87398:	b10b883a 	add	r5,r22,r4
   8739c:	00c00144 	movi	r3,5
   873a0:	28c00215 	stw	r3,8(r5)
   873a4:	28c00115 	stw	r3,4(r5)
   873a8:	b0800117 	ldw	r2,4(r22)
   873ac:	1080004c 	andi	r2,r2,1
   873b0:	2084b03a 	or	r2,r4,r2
   873b4:	b0800115 	stw	r2,4(r22)
   873b8:	313fdd2e 	bgeu	r6,r4,87330 <_malloc_r+0x58c>
   873bc:	b1400204 	addi	r5,r22,8
   873c0:	9009883a 	mov	r4,r18
   873c4:	00861f00 	call	861f0 <_free_r>
   873c8:	e4000217 	ldw	r16,8(fp)
   873cc:	003fd806 	br	87330 <_malloc_r+0x58c>
   873d0:	00800504 	movi	r2,20
   873d4:	11001536 	bltu	r2,r4,8742c <_malloc_r+0x688>
   873d8:	210016c4 	addi	r4,r4,91
   873dc:	200690fa 	slli	r3,r4,3
   873e0:	003fa606 	br	8727c <_malloc_r+0x4d8>
   873e4:	8804d4ba 	srli	r2,r17,18
   873e8:	11801f04 	addi	r6,r2,124
   873ec:	300490fa 	slli	r2,r6,3
   873f0:	003e9906 	br	86e58 <_malloc_r+0xb4>
   873f4:	2009d0ba 	srai	r4,r4,2
   873f8:	01400274 	movhi	r5,9
   873fc:	29506304 	addi	r5,r5,16780
   87400:	00c00044 	movi	r3,1
   87404:	28800117 	ldw	r2,4(r5)
   87408:	1906983a 	sll	r3,r3,r4
   8740c:	10c4b03a 	or	r2,r2,r3
   87410:	28800115 	stw	r2,4(r5)
   87414:	003fa306 	br	872a4 <_malloc_r+0x500>
   87418:	0027883a 	mov	r19,zero
   8741c:	00c00044 	movi	r3,1
   87420:	003f8606 	br	8723c <_malloc_r+0x498>
   87424:	d1200615 	stw	r4,-32744(gp)
   87428:	003f7306 	br	871f8 <_malloc_r+0x454>
   8742c:	00801504 	movi	r2,84
   87430:	11001936 	bltu	r2,r4,87498 <_malloc_r+0x6f4>
   87434:	2804d33a 	srli	r2,r5,12
   87438:	11001b84 	addi	r4,r2,110
   8743c:	200690fa 	slli	r3,r4,3
   87440:	003f8e06 	br	8727c <_malloc_r+0x4d8>
   87444:	480b883a 	mov	r5,r9
   87448:	6807883a 	mov	r3,r13
   8744c:	288000cc 	andi	r2,r5,3
   87450:	18fffe04 	addi	r3,r3,-8
   87454:	297fffc4 	addi	r5,r5,-1
   87458:	10001526 	beq	r2,zero,874b0 <_malloc_r+0x70c>
   8745c:	18800217 	ldw	r2,8(r3)
   87460:	10fffa26 	beq	r2,r3,8744c <_malloc_r+0x6a8>
   87464:	2109883a 	add	r4,r4,r4
   87468:	393f1e36 	bltu	r7,r4,870e4 <_malloc_r+0x340>
   8746c:	203f1d26 	beq	r4,zero,870e4 <_malloc_r+0x340>
   87470:	21c4703a 	and	r2,r4,r7
   87474:	10000226 	beq	r2,zero,87480 <_malloc_r+0x6dc>
   87478:	6013883a 	mov	r9,r12
   8747c:	003ee106 	br	87004 <_malloc_r+0x260>
   87480:	2109883a 	add	r4,r4,r4
   87484:	3904703a 	and	r2,r7,r4
   87488:	63000104 	addi	r12,r12,4
   8748c:	103ffc26 	beq	r2,zero,87480 <_malloc_r+0x6dc>
   87490:	6013883a 	mov	r9,r12
   87494:	003edb06 	br	87004 <_malloc_r+0x260>
   87498:	00805504 	movi	r2,340
   8749c:	11000836 	bltu	r2,r4,874c0 <_malloc_r+0x71c>
   874a0:	2804d3fa 	srli	r2,r5,15
   874a4:	11001dc4 	addi	r4,r2,119
   874a8:	200690fa 	slli	r3,r4,3
   874ac:	003f7306 	br	8727c <_malloc_r+0x4d8>
   874b0:	0104303a 	nor	r2,zero,r4
   874b4:	388e703a 	and	r7,r7,r2
   874b8:	e1c00115 	stw	r7,4(fp)
   874bc:	003fe906 	br	87464 <_malloc_r+0x6c0>
   874c0:	00815504 	movi	r2,1364
   874c4:	1100032e 	bgeu	r2,r4,874d4 <_malloc_r+0x730>
   874c8:	01001f84 	movi	r4,126
   874cc:	00c0fc04 	movi	r3,1008
   874d0:	003f6a06 	br	8727c <_malloc_r+0x4d8>
   874d4:	2804d4ba 	srli	r2,r5,18
   874d8:	11001f04 	addi	r4,r2,124
   874dc:	200690fa 	slli	r3,r4,3
   874e0:	003f6606 	br	8727c <_malloc_r+0x4d8>

000874e4 <_mbrtowc_r>:
   874e4:	defffc04 	addi	sp,sp,-16
   874e8:	dc400215 	stw	r17,8(sp)
   874ec:	dc000115 	stw	r16,4(sp)
   874f0:	dfc00315 	stw	ra,12(sp)
   874f4:	dc000417 	ldw	r16,16(sp)
   874f8:	2023883a 	mov	r17,r4
   874fc:	30000f26 	beq	r6,zero,8753c <_mbrtowc_r+0x58>
   87500:	dc000015 	stw	r16,0(sp)
   87504:	00875a40 	call	875a4 <_mbtowc_r>
   87508:	1007883a 	mov	r3,r2
   8750c:	00bfffc4 	movi	r2,-1
   87510:	1809883a 	mov	r4,r3
   87514:	1880111e 	bne	r3,r2,8755c <_mbrtowc_r+0x78>
   87518:	80000015 	stw	zero,0(r16)
   8751c:	00802284 	movi	r2,138
   87520:	88800015 	stw	r2,0(r17)
   87524:	2005883a 	mov	r2,r4
   87528:	dfc00317 	ldw	ra,12(sp)
   8752c:	dc400217 	ldw	r17,8(sp)
   87530:	dc000117 	ldw	r16,4(sp)
   87534:	dec00404 	addi	sp,sp,16
   87538:	f800283a 	ret
   8753c:	000b883a 	mov	r5,zero
   87540:	01800274 	movhi	r6,9
   87544:	318ddc04 	addi	r6,r6,14192
   87548:	01c00044 	movi	r7,1
   8754c:	dc000015 	stw	r16,0(sp)
   87550:	00875a40 	call	875a4 <_mbtowc_r>
   87554:	1007883a 	mov	r3,r2
   87558:	003fec06 	br	8750c <_mbrtowc_r+0x28>
   8755c:	1809883a 	mov	r4,r3
   87560:	003ff006 	br	87524 <_mbrtowc_r+0x40>

00087564 <mbrtowc>:
   87564:	00800274 	movhi	r2,9
   87568:	10963a04 	addi	r2,r2,22760
   8756c:	2017883a 	mov	r11,r4
   87570:	11000017 	ldw	r4,0(r2)
   87574:	defffe04 	addi	sp,sp,-8
   87578:	3013883a 	mov	r9,r6
   8757c:	2805883a 	mov	r2,r5
   87580:	d9c00015 	stw	r7,0(sp)
   87584:	580b883a 	mov	r5,r11
   87588:	100d883a 	mov	r6,r2
   8758c:	480f883a 	mov	r7,r9
   87590:	dfc00115 	stw	ra,4(sp)
   87594:	00874e40 	call	874e4 <_mbrtowc_r>
   87598:	dfc00117 	ldw	ra,4(sp)
   8759c:	dec00204 	addi	sp,sp,8
   875a0:	f800283a 	ret

000875a4 <_mbtowc_r>:
   875a4:	deffff04 	addi	sp,sp,-4
   875a8:	0005883a 	mov	r2,zero
   875ac:	28000326 	beq	r5,zero,875bc <_mbtowc_r+0x18>
   875b0:	3000041e 	bne	r6,zero,875c4 <_mbtowc_r+0x20>
   875b4:	dec00104 	addi	sp,sp,4
   875b8:	f800283a 	ret
   875bc:	d80b883a 	mov	r5,sp
   875c0:	303ffc26 	beq	r6,zero,875b4 <_mbtowc_r+0x10>
   875c4:	00bfff84 	movi	r2,-2
   875c8:	383ffa26 	beq	r7,zero,875b4 <_mbtowc_r+0x10>
   875cc:	30800003 	ldbu	r2,0(r6)
   875d0:	28800015 	stw	r2,0(r5)
   875d4:	30c00003 	ldbu	r3,0(r6)
   875d8:	1804c03a 	cmpne	r2,r3,zero
   875dc:	dec00104 	addi	sp,sp,4
   875e0:	f800283a 	ret

000875e4 <memchr>:
   875e4:	008000c4 	movi	r2,3
   875e8:	29403fcc 	andi	r5,r5,255
   875ec:	2007883a 	mov	r3,r4
   875f0:	1180022e 	bgeu	r2,r6,875fc <memchr+0x18>
   875f4:	2084703a 	and	r2,r4,r2
   875f8:	10000b26 	beq	r2,zero,87628 <memchr+0x44>
   875fc:	313fffc4 	addi	r4,r6,-1
   87600:	3000051e 	bne	r6,zero,87618 <memchr+0x34>
   87604:	00002c06 	br	876b8 <memchr+0xd4>
   87608:	213fffc4 	addi	r4,r4,-1
   8760c:	00bfffc4 	movi	r2,-1
   87610:	18c00044 	addi	r3,r3,1
   87614:	20802826 	beq	r4,r2,876b8 <memchr+0xd4>
   87618:	18800003 	ldbu	r2,0(r3)
   8761c:	28bffa1e 	bne	r5,r2,87608 <memchr+0x24>
   87620:	1805883a 	mov	r2,r3
   87624:	f800283a 	ret
   87628:	0011883a 	mov	r8,zero
   8762c:	0007883a 	mov	r3,zero
   87630:	01c00104 	movi	r7,4
   87634:	4004923a 	slli	r2,r8,8
   87638:	18c00044 	addi	r3,r3,1
   8763c:	1151883a 	add	r8,r2,r5
   87640:	19fffc1e 	bne	r3,r7,87634 <memchr+0x50>
   87644:	02bfbff4 	movhi	r10,65279
   87648:	52bfbfc4 	addi	r10,r10,-257
   8764c:	02602074 	movhi	r9,32897
   87650:	4a602004 	addi	r9,r9,-32640
   87654:	02c000c4 	movi	r11,3
   87658:	20800017 	ldw	r2,0(r4)
   8765c:	31bfff04 	addi	r6,r6,-4
   87660:	200f883a 	mov	r7,r4
   87664:	1204f03a 	xor	r2,r2,r8
   87668:	1287883a 	add	r3,r2,r10
   8766c:	1a46703a 	and	r3,r3,r9
   87670:	0084303a 	nor	r2,zero,r2
   87674:	10c4703a 	and	r2,r2,r3
   87678:	10000b26 	beq	r2,zero,876a8 <memchr+0xc4>
   8767c:	20800003 	ldbu	r2,0(r4)
   87680:	28800f26 	beq	r5,r2,876c0 <memchr+0xdc>
   87684:	20800043 	ldbu	r2,1(r4)
   87688:	21c00044 	addi	r7,r4,1
   8768c:	28800c26 	beq	r5,r2,876c0 <memchr+0xdc>
   87690:	20800083 	ldbu	r2,2(r4)
   87694:	21c00084 	addi	r7,r4,2
   87698:	28800926 	beq	r5,r2,876c0 <memchr+0xdc>
   8769c:	208000c3 	ldbu	r2,3(r4)
   876a0:	21c000c4 	addi	r7,r4,3
   876a4:	28800626 	beq	r5,r2,876c0 <memchr+0xdc>
   876a8:	21000104 	addi	r4,r4,4
   876ac:	59bfea36 	bltu	r11,r6,87658 <memchr+0x74>
   876b0:	2007883a 	mov	r3,r4
   876b4:	003fd106 	br	875fc <memchr+0x18>
   876b8:	0005883a 	mov	r2,zero
   876bc:	f800283a 	ret
   876c0:	3805883a 	mov	r2,r7
   876c4:	f800283a 	ret

000876c8 <memcpy>:
   876c8:	01c003c4 	movi	r7,15
   876cc:	2007883a 	mov	r3,r4
   876d0:	3980032e 	bgeu	r7,r6,876e0 <memcpy+0x18>
   876d4:	2904b03a 	or	r2,r5,r4
   876d8:	108000cc 	andi	r2,r2,3
   876dc:	10000926 	beq	r2,zero,87704 <memcpy+0x3c>
   876e0:	30000626 	beq	r6,zero,876fc <memcpy+0x34>
   876e4:	30cd883a 	add	r6,r6,r3
   876e8:	28800003 	ldbu	r2,0(r5)
   876ec:	29400044 	addi	r5,r5,1
   876f0:	18800005 	stb	r2,0(r3)
   876f4:	18c00044 	addi	r3,r3,1
   876f8:	30fffb1e 	bne	r6,r3,876e8 <memcpy+0x20>
   876fc:	2005883a 	mov	r2,r4
   87700:	f800283a 	ret
   87704:	3811883a 	mov	r8,r7
   87708:	200f883a 	mov	r7,r4
   8770c:	28c00017 	ldw	r3,0(r5)
   87710:	31bffc04 	addi	r6,r6,-16
   87714:	38c00015 	stw	r3,0(r7)
   87718:	28800117 	ldw	r2,4(r5)
   8771c:	38800115 	stw	r2,4(r7)
   87720:	28c00217 	ldw	r3,8(r5)
   87724:	38c00215 	stw	r3,8(r7)
   87728:	28800317 	ldw	r2,12(r5)
   8772c:	29400404 	addi	r5,r5,16
   87730:	38800315 	stw	r2,12(r7)
   87734:	39c00404 	addi	r7,r7,16
   87738:	41bff436 	bltu	r8,r6,8770c <memcpy+0x44>
   8773c:	008000c4 	movi	r2,3
   87740:	1180072e 	bgeu	r2,r6,87760 <memcpy+0x98>
   87744:	1007883a 	mov	r3,r2
   87748:	28800017 	ldw	r2,0(r5)
   8774c:	31bfff04 	addi	r6,r6,-4
   87750:	29400104 	addi	r5,r5,4
   87754:	38800015 	stw	r2,0(r7)
   87758:	39c00104 	addi	r7,r7,4
   8775c:	19bffa36 	bltu	r3,r6,87748 <memcpy+0x80>
   87760:	3807883a 	mov	r3,r7
   87764:	003fde06 	br	876e0 <memcpy+0x18>

00087768 <memmove>:
   87768:	2807883a 	mov	r3,r5
   8776c:	2011883a 	mov	r8,r4
   87770:	29000c2e 	bgeu	r5,r4,877a4 <memmove+0x3c>
   87774:	298f883a 	add	r7,r5,r6
   87778:	21c00a2e 	bgeu	r4,r7,877a4 <memmove+0x3c>
   8777c:	30000726 	beq	r6,zero,8779c <memmove+0x34>
   87780:	2187883a 	add	r3,r4,r6
   87784:	198dc83a 	sub	r6,r3,r6
   87788:	39ffffc4 	addi	r7,r7,-1
   8778c:	38800003 	ldbu	r2,0(r7)
   87790:	18ffffc4 	addi	r3,r3,-1
   87794:	18800005 	stb	r2,0(r3)
   87798:	19bffb1e 	bne	r3,r6,87788 <memmove+0x20>
   8779c:	2005883a 	mov	r2,r4
   877a0:	f800283a 	ret
   877a4:	01c003c4 	movi	r7,15
   877a8:	39800a36 	bltu	r7,r6,877d4 <memmove+0x6c>
   877ac:	303ffb26 	beq	r6,zero,8779c <memmove+0x34>
   877b0:	400f883a 	mov	r7,r8
   877b4:	320d883a 	add	r6,r6,r8
   877b8:	28800003 	ldbu	r2,0(r5)
   877bc:	29400044 	addi	r5,r5,1
   877c0:	38800005 	stb	r2,0(r7)
   877c4:	39c00044 	addi	r7,r7,1
   877c8:	39bffb1e 	bne	r7,r6,877b8 <memmove+0x50>
   877cc:	2005883a 	mov	r2,r4
   877d0:	f800283a 	ret
   877d4:	1904b03a 	or	r2,r3,r4
   877d8:	108000cc 	andi	r2,r2,3
   877dc:	103ff31e 	bne	r2,zero,877ac <memmove+0x44>
   877e0:	3811883a 	mov	r8,r7
   877e4:	180b883a 	mov	r5,r3
   877e8:	200f883a 	mov	r7,r4
   877ec:	28c00017 	ldw	r3,0(r5)
   877f0:	31bffc04 	addi	r6,r6,-16
   877f4:	38c00015 	stw	r3,0(r7)
   877f8:	28800117 	ldw	r2,4(r5)
   877fc:	38800115 	stw	r2,4(r7)
   87800:	28c00217 	ldw	r3,8(r5)
   87804:	38c00215 	stw	r3,8(r7)
   87808:	28800317 	ldw	r2,12(r5)
   8780c:	29400404 	addi	r5,r5,16
   87810:	38800315 	stw	r2,12(r7)
   87814:	39c00404 	addi	r7,r7,16
   87818:	41bff436 	bltu	r8,r6,877ec <memmove+0x84>
   8781c:	008000c4 	movi	r2,3
   87820:	1180072e 	bgeu	r2,r6,87840 <memmove+0xd8>
   87824:	1007883a 	mov	r3,r2
   87828:	28800017 	ldw	r2,0(r5)
   8782c:	31bfff04 	addi	r6,r6,-4
   87830:	29400104 	addi	r5,r5,4
   87834:	38800015 	stw	r2,0(r7)
   87838:	39c00104 	addi	r7,r7,4
   8783c:	19bffa36 	bltu	r3,r6,87828 <memmove+0xc0>
   87840:	3811883a 	mov	r8,r7
   87844:	003fd906 	br	877ac <memmove+0x44>

00087848 <memset>:
   87848:	008000c4 	movi	r2,3
   8784c:	29403fcc 	andi	r5,r5,255
   87850:	2007883a 	mov	r3,r4
   87854:	1180022e 	bgeu	r2,r6,87860 <memset+0x18>
   87858:	2084703a 	and	r2,r4,r2
   8785c:	10000826 	beq	r2,zero,87880 <memset+0x38>
   87860:	30000526 	beq	r6,zero,87878 <memset+0x30>
   87864:	2805883a 	mov	r2,r5
   87868:	30cd883a 	add	r6,r6,r3
   8786c:	18800005 	stb	r2,0(r3)
   87870:	18c00044 	addi	r3,r3,1
   87874:	19bffd1e 	bne	r3,r6,8786c <memset+0x24>
   87878:	2005883a 	mov	r2,r4
   8787c:	f800283a 	ret
   87880:	2804923a 	slli	r2,r5,8
   87884:	020003c4 	movi	r8,15
   87888:	200f883a 	mov	r7,r4
   8788c:	2884b03a 	or	r2,r5,r2
   87890:	1006943a 	slli	r3,r2,16
   87894:	10c6b03a 	or	r3,r2,r3
   87898:	41800a2e 	bgeu	r8,r6,878c4 <memset+0x7c>
   8789c:	4005883a 	mov	r2,r8
   878a0:	31bffc04 	addi	r6,r6,-16
   878a4:	38c00015 	stw	r3,0(r7)
   878a8:	38c00115 	stw	r3,4(r7)
   878ac:	38c00215 	stw	r3,8(r7)
   878b0:	38c00315 	stw	r3,12(r7)
   878b4:	39c00404 	addi	r7,r7,16
   878b8:	11bff936 	bltu	r2,r6,878a0 <memset+0x58>
   878bc:	008000c4 	movi	r2,3
   878c0:	1180052e 	bgeu	r2,r6,878d8 <memset+0x90>
   878c4:	31bfff04 	addi	r6,r6,-4
   878c8:	008000c4 	movi	r2,3
   878cc:	38c00015 	stw	r3,0(r7)
   878d0:	39c00104 	addi	r7,r7,4
   878d4:	11bffb36 	bltu	r2,r6,878c4 <memset+0x7c>
   878d8:	3807883a 	mov	r3,r7
   878dc:	003fe006 	br	87860 <memset+0x18>

000878e0 <_Bfree>:
   878e0:	28000826 	beq	r5,zero,87904 <_Bfree+0x24>
   878e4:	28800117 	ldw	r2,4(r5)
   878e8:	21001317 	ldw	r4,76(r4)
   878ec:	1085883a 	add	r2,r2,r2
   878f0:	1085883a 	add	r2,r2,r2
   878f4:	1105883a 	add	r2,r2,r4
   878f8:	10c00017 	ldw	r3,0(r2)
   878fc:	28c00015 	stw	r3,0(r5)
   87900:	11400015 	stw	r5,0(r2)
   87904:	f800283a 	ret

00087908 <__hi0bits>:
   87908:	20bfffec 	andhi	r2,r4,65535
   8790c:	10001426 	beq	r2,zero,87960 <__hi0bits+0x58>
   87910:	0007883a 	mov	r3,zero
   87914:	20bfc02c 	andhi	r2,r4,65280
   87918:	1000021e 	bne	r2,zero,87924 <__hi0bits+0x1c>
   8791c:	2008923a 	slli	r4,r4,8
   87920:	18c00204 	addi	r3,r3,8
   87924:	20bc002c 	andhi	r2,r4,61440
   87928:	1000021e 	bne	r2,zero,87934 <__hi0bits+0x2c>
   8792c:	2008913a 	slli	r4,r4,4
   87930:	18c00104 	addi	r3,r3,4
   87934:	20b0002c 	andhi	r2,r4,49152
   87938:	1000031e 	bne	r2,zero,87948 <__hi0bits+0x40>
   8793c:	2105883a 	add	r2,r4,r4
   87940:	18c00084 	addi	r3,r3,2
   87944:	1089883a 	add	r4,r2,r2
   87948:	20000316 	blt	r4,zero,87958 <__hi0bits+0x50>
   8794c:	2090002c 	andhi	r2,r4,16384
   87950:	10000626 	beq	r2,zero,8796c <__hi0bits+0x64>
   87954:	18c00044 	addi	r3,r3,1
   87958:	1805883a 	mov	r2,r3
   8795c:	f800283a 	ret
   87960:	2008943a 	slli	r4,r4,16
   87964:	00c00404 	movi	r3,16
   87968:	003fea06 	br	87914 <__hi0bits+0xc>
   8796c:	00c00804 	movi	r3,32
   87970:	1805883a 	mov	r2,r3
   87974:	f800283a 	ret

00087978 <__lo0bits>:
   87978:	20c00017 	ldw	r3,0(r4)
   8797c:	188001cc 	andi	r2,r3,7
   87980:	10000a26 	beq	r2,zero,879ac <__lo0bits+0x34>
   87984:	1880004c 	andi	r2,r3,1
   87988:	1005003a 	cmpeq	r2,r2,zero
   8798c:	10002126 	beq	r2,zero,87a14 <__lo0bits+0x9c>
   87990:	1880008c 	andi	r2,r3,2
   87994:	1000251e 	bne	r2,zero,87a2c <__lo0bits+0xb4>
   87998:	1804d0ba 	srli	r2,r3,2
   8799c:	01400084 	movi	r5,2
   879a0:	20800015 	stw	r2,0(r4)
   879a4:	2805883a 	mov	r2,r5
   879a8:	f800283a 	ret
   879ac:	18bfffcc 	andi	r2,r3,65535
   879b0:	10001526 	beq	r2,zero,87a08 <__lo0bits+0x90>
   879b4:	000b883a 	mov	r5,zero
   879b8:	18803fcc 	andi	r2,r3,255
   879bc:	1000021e 	bne	r2,zero,879c8 <__lo0bits+0x50>
   879c0:	1806d23a 	srli	r3,r3,8
   879c4:	29400204 	addi	r5,r5,8
   879c8:	188003cc 	andi	r2,r3,15
   879cc:	1000021e 	bne	r2,zero,879d8 <__lo0bits+0x60>
   879d0:	1806d13a 	srli	r3,r3,4
   879d4:	29400104 	addi	r5,r5,4
   879d8:	188000cc 	andi	r2,r3,3
   879dc:	1000021e 	bne	r2,zero,879e8 <__lo0bits+0x70>
   879e0:	1806d0ba 	srli	r3,r3,2
   879e4:	29400084 	addi	r5,r5,2
   879e8:	1880004c 	andi	r2,r3,1
   879ec:	1000031e 	bne	r2,zero,879fc <__lo0bits+0x84>
   879f0:	1806d07a 	srli	r3,r3,1
   879f4:	18000a26 	beq	r3,zero,87a20 <__lo0bits+0xa8>
   879f8:	29400044 	addi	r5,r5,1
   879fc:	2805883a 	mov	r2,r5
   87a00:	20c00015 	stw	r3,0(r4)
   87a04:	f800283a 	ret
   87a08:	1806d43a 	srli	r3,r3,16
   87a0c:	01400404 	movi	r5,16
   87a10:	003fe906 	br	879b8 <__lo0bits+0x40>
   87a14:	000b883a 	mov	r5,zero
   87a18:	2805883a 	mov	r2,r5
   87a1c:	f800283a 	ret
   87a20:	01400804 	movi	r5,32
   87a24:	2805883a 	mov	r2,r5
   87a28:	f800283a 	ret
   87a2c:	1804d07a 	srli	r2,r3,1
   87a30:	01400044 	movi	r5,1
   87a34:	20800015 	stw	r2,0(r4)
   87a38:	003fda06 	br	879a4 <__lo0bits+0x2c>

00087a3c <__mcmp>:
   87a3c:	20800417 	ldw	r2,16(r4)
   87a40:	28c00417 	ldw	r3,16(r5)
   87a44:	10cfc83a 	sub	r7,r2,r3
   87a48:	38000c1e 	bne	r7,zero,87a7c <__mcmp+0x40>
   87a4c:	18c5883a 	add	r2,r3,r3
   87a50:	1085883a 	add	r2,r2,r2
   87a54:	10c00504 	addi	r3,r2,20
   87a58:	21000504 	addi	r4,r4,20
   87a5c:	28cb883a 	add	r5,r5,r3
   87a60:	2085883a 	add	r2,r4,r2
   87a64:	10bfff04 	addi	r2,r2,-4
   87a68:	297fff04 	addi	r5,r5,-4
   87a6c:	11800017 	ldw	r6,0(r2)
   87a70:	28c00017 	ldw	r3,0(r5)
   87a74:	30c0031e 	bne	r6,r3,87a84 <__mcmp+0x48>
   87a78:	20bffa36 	bltu	r4,r2,87a64 <__mcmp+0x28>
   87a7c:	3805883a 	mov	r2,r7
   87a80:	f800283a 	ret
   87a84:	30c00336 	bltu	r6,r3,87a94 <__mcmp+0x58>
   87a88:	01c00044 	movi	r7,1
   87a8c:	3805883a 	mov	r2,r7
   87a90:	f800283a 	ret
   87a94:	01ffffc4 	movi	r7,-1
   87a98:	003ff806 	br	87a7c <__mcmp+0x40>

00087a9c <__ulp>:
   87a9c:	295ffc2c 	andhi	r5,r5,32752
   87aa0:	013f3034 	movhi	r4,64704
   87aa4:	290b883a 	add	r5,r5,r4
   87aa8:	0145c83a 	sub	r2,zero,r5
   87aac:	1007d53a 	srai	r3,r2,20
   87ab0:	000d883a 	mov	r6,zero
   87ab4:	0140040e 	bge	zero,r5,87ac8 <__ulp+0x2c>
   87ab8:	280f883a 	mov	r7,r5
   87abc:	3807883a 	mov	r3,r7
   87ac0:	3005883a 	mov	r2,r6
   87ac4:	f800283a 	ret
   87ac8:	008004c4 	movi	r2,19
   87acc:	193ffb04 	addi	r4,r3,-20
   87ad0:	10c00c0e 	bge	r2,r3,87b04 <__ulp+0x68>
   87ad4:	008007c4 	movi	r2,31
   87ad8:	1107c83a 	sub	r3,r2,r4
   87adc:	00800784 	movi	r2,30
   87ae0:	01400044 	movi	r5,1
   87ae4:	11000216 	blt	r2,r4,87af0 <__ulp+0x54>
   87ae8:	00800044 	movi	r2,1
   87aec:	10ca983a 	sll	r5,r2,r3
   87af0:	000f883a 	mov	r7,zero
   87af4:	280d883a 	mov	r6,r5
   87af8:	3807883a 	mov	r3,r7
   87afc:	3005883a 	mov	r2,r6
   87b00:	f800283a 	ret
   87b04:	00800234 	movhi	r2,8
   87b08:	10cfd83a 	sra	r7,r2,r3
   87b0c:	000d883a 	mov	r6,zero
   87b10:	3005883a 	mov	r2,r6
   87b14:	3807883a 	mov	r3,r7
   87b18:	f800283a 	ret

00087b1c <__b2d>:
   87b1c:	20800417 	ldw	r2,16(r4)
   87b20:	defff904 	addi	sp,sp,-28
   87b24:	dd000415 	stw	r20,16(sp)
   87b28:	1085883a 	add	r2,r2,r2
   87b2c:	25000504 	addi	r20,r4,20
   87b30:	1085883a 	add	r2,r2,r2
   87b34:	dc000015 	stw	r16,0(sp)
   87b38:	a0a1883a 	add	r16,r20,r2
   87b3c:	dd400515 	stw	r21,20(sp)
   87b40:	857fff17 	ldw	r21,-4(r16)
   87b44:	dc400115 	stw	r17,4(sp)
   87b48:	dfc00615 	stw	ra,24(sp)
   87b4c:	a809883a 	mov	r4,r21
   87b50:	2823883a 	mov	r17,r5
   87b54:	dcc00315 	stw	r19,12(sp)
   87b58:	dc800215 	stw	r18,8(sp)
   87b5c:	00879080 	call	87908 <__hi0bits>
   87b60:	100b883a 	mov	r5,r2
   87b64:	00800804 	movi	r2,32
   87b68:	1145c83a 	sub	r2,r2,r5
   87b6c:	88800015 	stw	r2,0(r17)
   87b70:	00800284 	movi	r2,10
   87b74:	80ffff04 	addi	r3,r16,-4
   87b78:	11401416 	blt	r2,r5,87bcc <__b2d+0xb0>
   87b7c:	008002c4 	movi	r2,11
   87b80:	1149c83a 	sub	r4,r2,r5
   87b84:	a0c02736 	bltu	r20,r3,87c24 <__b2d+0x108>
   87b88:	000d883a 	mov	r6,zero
   87b8c:	28800544 	addi	r2,r5,21
   87b90:	a906d83a 	srl	r3,r21,r4
   87b94:	a884983a 	sll	r2,r21,r2
   87b98:	1ccffc34 	orhi	r19,r3,16368
   87b9c:	11a4b03a 	or	r18,r2,r6
   87ba0:	9005883a 	mov	r2,r18
   87ba4:	9807883a 	mov	r3,r19
   87ba8:	dfc00617 	ldw	ra,24(sp)
   87bac:	dd400517 	ldw	r21,20(sp)
   87bb0:	dd000417 	ldw	r20,16(sp)
   87bb4:	dcc00317 	ldw	r19,12(sp)
   87bb8:	dc800217 	ldw	r18,8(sp)
   87bbc:	dc400117 	ldw	r17,4(sp)
   87bc0:	dc000017 	ldw	r16,0(sp)
   87bc4:	dec00704 	addi	sp,sp,28
   87bc8:	f800283a 	ret
   87bcc:	a0c00e36 	bltu	r20,r3,87c08 <__b2d+0xec>
   87bd0:	293ffd44 	addi	r4,r5,-11
   87bd4:	000d883a 	mov	r6,zero
   87bd8:	20000f26 	beq	r4,zero,87c18 <__b2d+0xfc>
   87bdc:	00800804 	movi	r2,32
   87be0:	110bc83a 	sub	r5,r2,r4
   87be4:	a0c01236 	bltu	r20,r3,87c30 <__b2d+0x114>
   87be8:	000f883a 	mov	r7,zero
   87bec:	a904983a 	sll	r2,r21,r4
   87bf0:	3146d83a 	srl	r3,r6,r5
   87bf4:	3108983a 	sll	r4,r6,r4
   87bf8:	108ffc34 	orhi	r2,r2,16368
   87bfc:	18a6b03a 	or	r19,r3,r2
   87c00:	3924b03a 	or	r18,r7,r4
   87c04:	003fe606 	br	87ba0 <__b2d+0x84>
   87c08:	293ffd44 	addi	r4,r5,-11
   87c0c:	81bffe17 	ldw	r6,-8(r16)
   87c10:	80fffe04 	addi	r3,r16,-8
   87c14:	203ff11e 	bne	r4,zero,87bdc <__b2d+0xc0>
   87c18:	accffc34 	orhi	r19,r21,16368
   87c1c:	3025883a 	mov	r18,r6
   87c20:	003fdf06 	br	87ba0 <__b2d+0x84>
   87c24:	18bfff17 	ldw	r2,-4(r3)
   87c28:	110cd83a 	srl	r6,r2,r4
   87c2c:	003fd706 	br	87b8c <__b2d+0x70>
   87c30:	18bfff17 	ldw	r2,-4(r3)
   87c34:	114ed83a 	srl	r7,r2,r5
   87c38:	003fec06 	br	87bec <__b2d+0xd0>

00087c3c <__ratio>:
   87c3c:	defff904 	addi	sp,sp,-28
   87c40:	dc400215 	stw	r17,8(sp)
   87c44:	2823883a 	mov	r17,r5
   87c48:	d80b883a 	mov	r5,sp
   87c4c:	dfc00615 	stw	ra,24(sp)
   87c50:	dd000515 	stw	r20,20(sp)
   87c54:	dcc00415 	stw	r19,16(sp)
   87c58:	dc800315 	stw	r18,12(sp)
   87c5c:	2025883a 	mov	r18,r4
   87c60:	0087b1c0 	call	87b1c <__b2d>
   87c64:	8809883a 	mov	r4,r17
   87c68:	d9400104 	addi	r5,sp,4
   87c6c:	1027883a 	mov	r19,r2
   87c70:	1829883a 	mov	r20,r3
   87c74:	0087b1c0 	call	87b1c <__b2d>
   87c78:	89000417 	ldw	r4,16(r17)
   87c7c:	91c00417 	ldw	r7,16(r18)
   87c80:	d9800117 	ldw	r6,4(sp)
   87c84:	180b883a 	mov	r5,r3
   87c88:	390fc83a 	sub	r7,r7,r4
   87c8c:	1009883a 	mov	r4,r2
   87c90:	d8800017 	ldw	r2,0(sp)
   87c94:	380e917a 	slli	r7,r7,5
   87c98:	2011883a 	mov	r8,r4
   87c9c:	1185c83a 	sub	r2,r2,r6
   87ca0:	11c5883a 	add	r2,r2,r7
   87ca4:	1006953a 	slli	r3,r2,20
   87ca8:	2813883a 	mov	r9,r5
   87cac:	00800d0e 	bge	zero,r2,87ce4 <__ratio+0xa8>
   87cb0:	1d29883a 	add	r20,r3,r20
   87cb4:	a00b883a 	mov	r5,r20
   87cb8:	480f883a 	mov	r7,r9
   87cbc:	9809883a 	mov	r4,r19
   87cc0:	400d883a 	mov	r6,r8
   87cc4:	008e6400 	call	8e640 <__divdf3>
   87cc8:	dfc00617 	ldw	ra,24(sp)
   87ccc:	dd000517 	ldw	r20,20(sp)
   87cd0:	dcc00417 	ldw	r19,16(sp)
   87cd4:	dc800317 	ldw	r18,12(sp)
   87cd8:	dc400217 	ldw	r17,8(sp)
   87cdc:	dec00704 	addi	sp,sp,28
   87ce0:	f800283a 	ret
   87ce4:	28d3c83a 	sub	r9,r5,r3
   87ce8:	003ff206 	br	87cb4 <__ratio+0x78>

00087cec <_mprec_log10>:
   87cec:	defffe04 	addi	sp,sp,-8
   87cf0:	008005c4 	movi	r2,23
   87cf4:	dc000015 	stw	r16,0(sp)
   87cf8:	dfc00115 	stw	ra,4(sp)
   87cfc:	2021883a 	mov	r16,r4
   87d00:	11000c16 	blt	r2,r4,87d34 <_mprec_log10+0x48>
   87d04:	200490fa 	slli	r2,r4,3
   87d08:	00c00274 	movhi	r3,9
   87d0c:	18cead04 	addi	r3,r3,15028
   87d10:	10c5883a 	add	r2,r2,r3
   87d14:	12400117 	ldw	r9,4(r2)
   87d18:	12000017 	ldw	r8,0(r2)
   87d1c:	4807883a 	mov	r3,r9
   87d20:	4005883a 	mov	r2,r8
   87d24:	dfc00117 	ldw	ra,4(sp)
   87d28:	dc000017 	ldw	r16,0(sp)
   87d2c:	dec00204 	addi	sp,sp,8
   87d30:	f800283a 	ret
   87d34:	0011883a 	mov	r8,zero
   87d38:	024ffc34 	movhi	r9,16368
   87d3c:	0005883a 	mov	r2,zero
   87d40:	00d00934 	movhi	r3,16420
   87d44:	480b883a 	mov	r5,r9
   87d48:	4009883a 	mov	r4,r8
   87d4c:	180f883a 	mov	r7,r3
   87d50:	100d883a 	mov	r6,r2
   87d54:	008e27c0 	call	8e27c <__muldf3>
   87d58:	843fffc4 	addi	r16,r16,-1
   87d5c:	1011883a 	mov	r8,r2
   87d60:	1813883a 	mov	r9,r3
   87d64:	803ff51e 	bne	r16,zero,87d3c <_mprec_log10+0x50>
   87d68:	4005883a 	mov	r2,r8
   87d6c:	4807883a 	mov	r3,r9
   87d70:	dfc00117 	ldw	ra,4(sp)
   87d74:	dc000017 	ldw	r16,0(sp)
   87d78:	dec00204 	addi	sp,sp,8
   87d7c:	f800283a 	ret

00087d80 <__copybits>:
   87d80:	297fffc4 	addi	r5,r5,-1
   87d84:	30800417 	ldw	r2,16(r6)
   87d88:	280bd17a 	srai	r5,r5,5
   87d8c:	31800504 	addi	r6,r6,20
   87d90:	1085883a 	add	r2,r2,r2
   87d94:	294b883a 	add	r5,r5,r5
   87d98:	294b883a 	add	r5,r5,r5
   87d9c:	1085883a 	add	r2,r2,r2
   87da0:	290b883a 	add	r5,r5,r4
   87da4:	3087883a 	add	r3,r6,r2
   87da8:	29400104 	addi	r5,r5,4
   87dac:	30c0052e 	bgeu	r6,r3,87dc4 <__copybits+0x44>
   87db0:	30800017 	ldw	r2,0(r6)
   87db4:	31800104 	addi	r6,r6,4
   87db8:	20800015 	stw	r2,0(r4)
   87dbc:	21000104 	addi	r4,r4,4
   87dc0:	30fffb36 	bltu	r6,r3,87db0 <__copybits+0x30>
   87dc4:	2140032e 	bgeu	r4,r5,87dd4 <__copybits+0x54>
   87dc8:	20000015 	stw	zero,0(r4)
   87dcc:	21000104 	addi	r4,r4,4
   87dd0:	217ffd36 	bltu	r4,r5,87dc8 <__copybits+0x48>
   87dd4:	f800283a 	ret

00087dd8 <__any_on>:
   87dd8:	20800417 	ldw	r2,16(r4)
   87ddc:	2807d17a 	srai	r3,r5,5
   87de0:	21000504 	addi	r4,r4,20
   87de4:	10c00d0e 	bge	r2,r3,87e1c <__any_on+0x44>
   87de8:	1085883a 	add	r2,r2,r2
   87dec:	1085883a 	add	r2,r2,r2
   87df0:	208d883a 	add	r6,r4,r2
   87df4:	2180182e 	bgeu	r4,r6,87e58 <__any_on+0x80>
   87df8:	30bfff17 	ldw	r2,-4(r6)
   87dfc:	30ffff04 	addi	r3,r6,-4
   87e00:	1000041e 	bne	r2,zero,87e14 <__any_on+0x3c>
   87e04:	20c0142e 	bgeu	r4,r3,87e58 <__any_on+0x80>
   87e08:	18ffff04 	addi	r3,r3,-4
   87e0c:	18800017 	ldw	r2,0(r3)
   87e10:	103ffc26 	beq	r2,zero,87e04 <__any_on+0x2c>
   87e14:	00800044 	movi	r2,1
   87e18:	f800283a 	ret
   87e1c:	18800a0e 	bge	r3,r2,87e48 <__any_on+0x70>
   87e20:	294007cc 	andi	r5,r5,31
   87e24:	28000826 	beq	r5,zero,87e48 <__any_on+0x70>
   87e28:	18c5883a 	add	r2,r3,r3
   87e2c:	1085883a 	add	r2,r2,r2
   87e30:	208d883a 	add	r6,r4,r2
   87e34:	30c00017 	ldw	r3,0(r6)
   87e38:	1944d83a 	srl	r2,r3,r5
   87e3c:	1144983a 	sll	r2,r2,r5
   87e40:	18bff41e 	bne	r3,r2,87e14 <__any_on+0x3c>
   87e44:	003feb06 	br	87df4 <__any_on+0x1c>
   87e48:	18c5883a 	add	r2,r3,r3
   87e4c:	1085883a 	add	r2,r2,r2
   87e50:	208d883a 	add	r6,r4,r2
   87e54:	003fe706 	br	87df4 <__any_on+0x1c>
   87e58:	0005883a 	mov	r2,zero
   87e5c:	f800283a 	ret

00087e60 <_Balloc>:
   87e60:	20c01317 	ldw	r3,76(r4)
   87e64:	defffb04 	addi	sp,sp,-20
   87e68:	dcc00315 	stw	r19,12(sp)
   87e6c:	dc800215 	stw	r18,8(sp)
   87e70:	dfc00415 	stw	ra,16(sp)
   87e74:	2825883a 	mov	r18,r5
   87e78:	dc400115 	stw	r17,4(sp)
   87e7c:	dc000015 	stw	r16,0(sp)
   87e80:	2027883a 	mov	r19,r4
   87e84:	01800404 	movi	r6,16
   87e88:	01400104 	movi	r5,4
   87e8c:	18001726 	beq	r3,zero,87eec <_Balloc+0x8c>
   87e90:	01400044 	movi	r5,1
   87e94:	9485883a 	add	r2,r18,r18
   87e98:	2ca2983a 	sll	r17,r5,r18
   87e9c:	1085883a 	add	r2,r2,r2
   87ea0:	10c7883a 	add	r3,r2,r3
   87ea4:	1c000017 	ldw	r16,0(r3)
   87ea8:	8c4d883a 	add	r6,r17,r17
   87eac:	318d883a 	add	r6,r6,r6
   87eb0:	9809883a 	mov	r4,r19
   87eb4:	31800504 	addi	r6,r6,20
   87eb8:	80001226 	beq	r16,zero,87f04 <_Balloc+0xa4>
   87ebc:	80800017 	ldw	r2,0(r16)
   87ec0:	18800015 	stw	r2,0(r3)
   87ec4:	80000415 	stw	zero,16(r16)
   87ec8:	80000315 	stw	zero,12(r16)
   87ecc:	8005883a 	mov	r2,r16
   87ed0:	dfc00417 	ldw	ra,16(sp)
   87ed4:	dcc00317 	ldw	r19,12(sp)
   87ed8:	dc800217 	ldw	r18,8(sp)
   87edc:	dc400117 	ldw	r17,4(sp)
   87ee0:	dc000017 	ldw	r16,0(sp)
   87ee4:	dec00504 	addi	sp,sp,20
   87ee8:	f800283a 	ret
   87eec:	008bd800 	call	8bd80 <_calloc_r>
   87ef0:	1007883a 	mov	r3,r2
   87ef4:	0021883a 	mov	r16,zero
   87ef8:	98801315 	stw	r2,76(r19)
   87efc:	103fe41e 	bne	r2,zero,87e90 <_Balloc+0x30>
   87f00:	003ff206 	br	87ecc <_Balloc+0x6c>
   87f04:	008bd800 	call	8bd80 <_calloc_r>
   87f08:	103ff026 	beq	r2,zero,87ecc <_Balloc+0x6c>
   87f0c:	1021883a 	mov	r16,r2
   87f10:	14800115 	stw	r18,4(r2)
   87f14:	14400215 	stw	r17,8(r2)
   87f18:	003fea06 	br	87ec4 <_Balloc+0x64>

00087f1c <__d2b>:
   87f1c:	defff504 	addi	sp,sp,-44
   87f20:	dcc00515 	stw	r19,20(sp)
   87f24:	04c00044 	movi	r19,1
   87f28:	dc000215 	stw	r16,8(sp)
   87f2c:	2821883a 	mov	r16,r5
   87f30:	980b883a 	mov	r5,r19
   87f34:	ddc00915 	stw	r23,36(sp)
   87f38:	dd800815 	stw	r22,32(sp)
   87f3c:	dd400715 	stw	r21,28(sp)
   87f40:	dd000615 	stw	r20,24(sp)
   87f44:	dc800415 	stw	r18,16(sp)
   87f48:	dc400315 	stw	r17,12(sp)
   87f4c:	dfc00a15 	stw	ra,40(sp)
   87f50:	3023883a 	mov	r17,r6
   87f54:	382d883a 	mov	r22,r7
   87f58:	ddc00b17 	ldw	r23,44(sp)
   87f5c:	0087e600 	call	87e60 <_Balloc>
   87f60:	1025883a 	mov	r18,r2
   87f64:	00a00034 	movhi	r2,32768
   87f68:	10bfffc4 	addi	r2,r2,-1
   87f6c:	8888703a 	and	r4,r17,r2
   87f70:	202ad53a 	srli	r21,r4,20
   87f74:	00800434 	movhi	r2,16
   87f78:	10bfffc4 	addi	r2,r2,-1
   87f7c:	8886703a 	and	r3,r17,r2
   87f80:	a829003a 	cmpeq	r20,r21,zero
   87f84:	800b883a 	mov	r5,r16
   87f88:	d8c00115 	stw	r3,4(sp)
   87f8c:	94000504 	addi	r16,r18,20
   87f90:	a000021e 	bne	r20,zero,87f9c <__d2b+0x80>
   87f94:	18c00434 	orhi	r3,r3,16
   87f98:	d8c00115 	stw	r3,4(sp)
   87f9c:	28002726 	beq	r5,zero,8803c <__d2b+0x120>
   87fa0:	d809883a 	mov	r4,sp
   87fa4:	d9400015 	stw	r5,0(sp)
   87fa8:	00879780 	call	87978 <__lo0bits>
   87fac:	100d883a 	mov	r6,r2
   87fb0:	10003526 	beq	r2,zero,88088 <__d2b+0x16c>
   87fb4:	d8c00117 	ldw	r3,4(sp)
   87fb8:	00800804 	movi	r2,32
   87fbc:	1185c83a 	sub	r2,r2,r6
   87fc0:	d9000017 	ldw	r4,0(sp)
   87fc4:	1886983a 	sll	r3,r3,r2
   87fc8:	1906b03a 	or	r3,r3,r4
   87fcc:	90c00515 	stw	r3,20(r18)
   87fd0:	d8c00117 	ldw	r3,4(sp)
   87fd4:	1986d83a 	srl	r3,r3,r6
   87fd8:	d8c00115 	stw	r3,4(sp)
   87fdc:	180b003a 	cmpeq	r5,r3,zero
   87fe0:	00800084 	movi	r2,2
   87fe4:	114bc83a 	sub	r5,r2,r5
   87fe8:	80c00115 	stw	r3,4(r16)
   87fec:	91400415 	stw	r5,16(r18)
   87ff0:	a0001a1e 	bne	r20,zero,8805c <__d2b+0x140>
   87ff4:	3545883a 	add	r2,r6,r21
   87ff8:	10bef344 	addi	r2,r2,-1075
   87ffc:	00c00d44 	movi	r3,53
   88000:	b0800015 	stw	r2,0(r22)
   88004:	1987c83a 	sub	r3,r3,r6
   88008:	b8c00015 	stw	r3,0(r23)
   8800c:	9005883a 	mov	r2,r18
   88010:	dfc00a17 	ldw	ra,40(sp)
   88014:	ddc00917 	ldw	r23,36(sp)
   88018:	dd800817 	ldw	r22,32(sp)
   8801c:	dd400717 	ldw	r21,28(sp)
   88020:	dd000617 	ldw	r20,24(sp)
   88024:	dcc00517 	ldw	r19,20(sp)
   88028:	dc800417 	ldw	r18,16(sp)
   8802c:	dc400317 	ldw	r17,12(sp)
   88030:	dc000217 	ldw	r16,8(sp)
   88034:	dec00b04 	addi	sp,sp,44
   88038:	f800283a 	ret
   8803c:	d9000104 	addi	r4,sp,4
   88040:	00879780 	call	87978 <__lo0bits>
   88044:	11800804 	addi	r6,r2,32
   88048:	d8800117 	ldw	r2,4(sp)
   8804c:	94c00415 	stw	r19,16(r18)
   88050:	980b883a 	mov	r5,r19
   88054:	90800515 	stw	r2,20(r18)
   88058:	a03fe626 	beq	r20,zero,87ff4 <__d2b+0xd8>
   8805c:	2945883a 	add	r2,r5,r5
   88060:	1085883a 	add	r2,r2,r2
   88064:	1405883a 	add	r2,r2,r16
   88068:	113fff17 	ldw	r4,-4(r2)
   8806c:	30fef384 	addi	r3,r6,-1074
   88070:	2820917a 	slli	r16,r5,5
   88074:	b0c00015 	stw	r3,0(r22)
   88078:	00879080 	call	87908 <__hi0bits>
   8807c:	80a1c83a 	sub	r16,r16,r2
   88080:	bc000015 	stw	r16,0(r23)
   88084:	003fe106 	br	8800c <__d2b+0xf0>
   88088:	d8800017 	ldw	r2,0(sp)
   8808c:	90800515 	stw	r2,20(r18)
   88090:	d8c00117 	ldw	r3,4(sp)
   88094:	003fd106 	br	87fdc <__d2b+0xc0>

00088098 <__mdiff>:
   88098:	defffb04 	addi	sp,sp,-20
   8809c:	dc000015 	stw	r16,0(sp)
   880a0:	2821883a 	mov	r16,r5
   880a4:	dc800215 	stw	r18,8(sp)
   880a8:	300b883a 	mov	r5,r6
   880ac:	2025883a 	mov	r18,r4
   880b0:	8009883a 	mov	r4,r16
   880b4:	dc400115 	stw	r17,4(sp)
   880b8:	dfc00415 	stw	ra,16(sp)
   880bc:	dcc00315 	stw	r19,12(sp)
   880c0:	3023883a 	mov	r17,r6
   880c4:	0087a3c0 	call	87a3c <__mcmp>
   880c8:	10004226 	beq	r2,zero,881d4 <__mdiff+0x13c>
   880cc:	10005016 	blt	r2,zero,88210 <__mdiff+0x178>
   880d0:	0027883a 	mov	r19,zero
   880d4:	81400117 	ldw	r5,4(r16)
   880d8:	9009883a 	mov	r4,r18
   880dc:	0087e600 	call	87e60 <_Balloc>
   880e0:	1019883a 	mov	r12,r2
   880e4:	82800417 	ldw	r10,16(r16)
   880e8:	88800417 	ldw	r2,16(r17)
   880ec:	81800504 	addi	r6,r16,20
   880f0:	5287883a 	add	r3,r10,r10
   880f4:	1085883a 	add	r2,r2,r2
   880f8:	18c7883a 	add	r3,r3,r3
   880fc:	1085883a 	add	r2,r2,r2
   88100:	8a000504 	addi	r8,r17,20
   88104:	64c00315 	stw	r19,12(r12)
   88108:	30db883a 	add	r13,r6,r3
   8810c:	4097883a 	add	r11,r8,r2
   88110:	61c00504 	addi	r7,r12,20
   88114:	0013883a 	mov	r9,zero
   88118:	31000017 	ldw	r4,0(r6)
   8811c:	41400017 	ldw	r5,0(r8)
   88120:	42000104 	addi	r8,r8,4
   88124:	20bfffcc 	andi	r2,r4,65535
   88128:	28ffffcc 	andi	r3,r5,65535
   8812c:	10c5c83a 	sub	r2,r2,r3
   88130:	1245883a 	add	r2,r2,r9
   88134:	2008d43a 	srli	r4,r4,16
   88138:	280ad43a 	srli	r5,r5,16
   8813c:	1007d43a 	srai	r3,r2,16
   88140:	3880000d 	sth	r2,0(r7)
   88144:	2149c83a 	sub	r4,r4,r5
   88148:	20c9883a 	add	r4,r4,r3
   8814c:	3900008d 	sth	r4,2(r7)
   88150:	31800104 	addi	r6,r6,4
   88154:	39c00104 	addi	r7,r7,4
   88158:	2013d43a 	srai	r9,r4,16
   8815c:	42ffee36 	bltu	r8,r11,88118 <__mdiff+0x80>
   88160:	33400c2e 	bgeu	r6,r13,88194 <__mdiff+0xfc>
   88164:	30800017 	ldw	r2,0(r6)
   88168:	31800104 	addi	r6,r6,4
   8816c:	10ffffcc 	andi	r3,r2,65535
   88170:	1a47883a 	add	r3,r3,r9
   88174:	1004d43a 	srli	r2,r2,16
   88178:	1809d43a 	srai	r4,r3,16
   8817c:	38c0000d 	sth	r3,0(r7)
   88180:	1105883a 	add	r2,r2,r4
   88184:	3880008d 	sth	r2,2(r7)
   88188:	1013d43a 	srai	r9,r2,16
   8818c:	39c00104 	addi	r7,r7,4
   88190:	337ff436 	bltu	r6,r13,88164 <__mdiff+0xcc>
   88194:	38bfff17 	ldw	r2,-4(r7)
   88198:	38ffff04 	addi	r3,r7,-4
   8819c:	1000041e 	bne	r2,zero,881b0 <__mdiff+0x118>
   881a0:	18ffff04 	addi	r3,r3,-4
   881a4:	18800017 	ldw	r2,0(r3)
   881a8:	52bfffc4 	addi	r10,r10,-1
   881ac:	103ffc26 	beq	r2,zero,881a0 <__mdiff+0x108>
   881b0:	6005883a 	mov	r2,r12
   881b4:	62800415 	stw	r10,16(r12)
   881b8:	dfc00417 	ldw	ra,16(sp)
   881bc:	dcc00317 	ldw	r19,12(sp)
   881c0:	dc800217 	ldw	r18,8(sp)
   881c4:	dc400117 	ldw	r17,4(sp)
   881c8:	dc000017 	ldw	r16,0(sp)
   881cc:	dec00504 	addi	sp,sp,20
   881d0:	f800283a 	ret
   881d4:	9009883a 	mov	r4,r18
   881d8:	000b883a 	mov	r5,zero
   881dc:	0087e600 	call	87e60 <_Balloc>
   881e0:	1019883a 	mov	r12,r2
   881e4:	00800044 	movi	r2,1
   881e8:	60800415 	stw	r2,16(r12)
   881ec:	6005883a 	mov	r2,r12
   881f0:	60000515 	stw	zero,20(r12)
   881f4:	dfc00417 	ldw	ra,16(sp)
   881f8:	dcc00317 	ldw	r19,12(sp)
   881fc:	dc800217 	ldw	r18,8(sp)
   88200:	dc400117 	ldw	r17,4(sp)
   88204:	dc000017 	ldw	r16,0(sp)
   88208:	dec00504 	addi	sp,sp,20
   8820c:	f800283a 	ret
   88210:	880d883a 	mov	r6,r17
   88214:	04c00044 	movi	r19,1
   88218:	8023883a 	mov	r17,r16
   8821c:	3021883a 	mov	r16,r6
   88220:	003fac06 	br	880d4 <__mdiff+0x3c>

00088224 <__lshift>:
   88224:	defff904 	addi	sp,sp,-28
   88228:	28800417 	ldw	r2,16(r5)
   8822c:	dc000015 	stw	r16,0(sp)
   88230:	3021d17a 	srai	r16,r6,5
   88234:	28c00217 	ldw	r3,8(r5)
   88238:	10800044 	addi	r2,r2,1
   8823c:	dc400115 	stw	r17,4(sp)
   88240:	80a3883a 	add	r17,r16,r2
   88244:	dd400515 	stw	r21,20(sp)
   88248:	dd000415 	stw	r20,16(sp)
   8824c:	dc800215 	stw	r18,8(sp)
   88250:	dfc00615 	stw	ra,24(sp)
   88254:	2825883a 	mov	r18,r5
   88258:	dcc00315 	stw	r19,12(sp)
   8825c:	3029883a 	mov	r20,r6
   88260:	202b883a 	mov	r21,r4
   88264:	29400117 	ldw	r5,4(r5)
   88268:	1c40030e 	bge	r3,r17,88278 <__lshift+0x54>
   8826c:	18c7883a 	add	r3,r3,r3
   88270:	29400044 	addi	r5,r5,1
   88274:	1c7ffd16 	blt	r3,r17,8826c <__lshift+0x48>
   88278:	a809883a 	mov	r4,r21
   8827c:	0087e600 	call	87e60 <_Balloc>
   88280:	1027883a 	mov	r19,r2
   88284:	11400504 	addi	r5,r2,20
   88288:	0400090e 	bge	zero,r16,882b0 <__lshift+0x8c>
   8828c:	2805883a 	mov	r2,r5
   88290:	0007883a 	mov	r3,zero
   88294:	18c00044 	addi	r3,r3,1
   88298:	10000015 	stw	zero,0(r2)
   8829c:	10800104 	addi	r2,r2,4
   882a0:	80fffc1e 	bne	r16,r3,88294 <__lshift+0x70>
   882a4:	8405883a 	add	r2,r16,r16
   882a8:	1085883a 	add	r2,r2,r2
   882ac:	288b883a 	add	r5,r5,r2
   882b0:	90800417 	ldw	r2,16(r18)
   882b4:	91000504 	addi	r4,r18,20
   882b8:	a18007cc 	andi	r6,r20,31
   882bc:	1085883a 	add	r2,r2,r2
   882c0:	1085883a 	add	r2,r2,r2
   882c4:	208f883a 	add	r7,r4,r2
   882c8:	30001e26 	beq	r6,zero,88344 <__lshift+0x120>
   882cc:	00800804 	movi	r2,32
   882d0:	1191c83a 	sub	r8,r2,r6
   882d4:	0007883a 	mov	r3,zero
   882d8:	20800017 	ldw	r2,0(r4)
   882dc:	1184983a 	sll	r2,r2,r6
   882e0:	1884b03a 	or	r2,r3,r2
   882e4:	28800015 	stw	r2,0(r5)
   882e8:	20c00017 	ldw	r3,0(r4)
   882ec:	21000104 	addi	r4,r4,4
   882f0:	29400104 	addi	r5,r5,4
   882f4:	1a06d83a 	srl	r3,r3,r8
   882f8:	21fff736 	bltu	r4,r7,882d8 <__lshift+0xb4>
   882fc:	28c00015 	stw	r3,0(r5)
   88300:	18000126 	beq	r3,zero,88308 <__lshift+0xe4>
   88304:	8c400044 	addi	r17,r17,1
   88308:	88bfffc4 	addi	r2,r17,-1
   8830c:	98800415 	stw	r2,16(r19)
   88310:	a809883a 	mov	r4,r21
   88314:	900b883a 	mov	r5,r18
   88318:	00878e00 	call	878e0 <_Bfree>
   8831c:	9805883a 	mov	r2,r19
   88320:	dfc00617 	ldw	ra,24(sp)
   88324:	dd400517 	ldw	r21,20(sp)
   88328:	dd000417 	ldw	r20,16(sp)
   8832c:	dcc00317 	ldw	r19,12(sp)
   88330:	dc800217 	ldw	r18,8(sp)
   88334:	dc400117 	ldw	r17,4(sp)
   88338:	dc000017 	ldw	r16,0(sp)
   8833c:	dec00704 	addi	sp,sp,28
   88340:	f800283a 	ret
   88344:	20800017 	ldw	r2,0(r4)
   88348:	21000104 	addi	r4,r4,4
   8834c:	28800015 	stw	r2,0(r5)
   88350:	29400104 	addi	r5,r5,4
   88354:	21ffec2e 	bgeu	r4,r7,88308 <__lshift+0xe4>
   88358:	20800017 	ldw	r2,0(r4)
   8835c:	21000104 	addi	r4,r4,4
   88360:	28800015 	stw	r2,0(r5)
   88364:	29400104 	addi	r5,r5,4
   88368:	21fff636 	bltu	r4,r7,88344 <__lshift+0x120>
   8836c:	003fe606 	br	88308 <__lshift+0xe4>

00088370 <__multiply>:
   88370:	defff004 	addi	sp,sp,-64
   88374:	dc800815 	stw	r18,32(sp)
   88378:	dc400715 	stw	r17,28(sp)
   8837c:	2c800417 	ldw	r18,16(r5)
   88380:	34400417 	ldw	r17,16(r6)
   88384:	dcc00915 	stw	r19,36(sp)
   88388:	dc000615 	stw	r16,24(sp)
   8838c:	dfc00f15 	stw	ra,60(sp)
   88390:	df000e15 	stw	fp,56(sp)
   88394:	ddc00d15 	stw	r23,52(sp)
   88398:	dd800c15 	stw	r22,48(sp)
   8839c:	dd400b15 	stw	r21,44(sp)
   883a0:	dd000a15 	stw	r20,40(sp)
   883a4:	2821883a 	mov	r16,r5
   883a8:	3027883a 	mov	r19,r6
   883ac:	9440040e 	bge	r18,r17,883c0 <__multiply+0x50>
   883b0:	8825883a 	mov	r18,r17
   883b4:	2c400417 	ldw	r17,16(r5)
   883b8:	2827883a 	mov	r19,r5
   883bc:	3021883a 	mov	r16,r6
   883c0:	80800217 	ldw	r2,8(r16)
   883c4:	9447883a 	add	r3,r18,r17
   883c8:	d8c00415 	stw	r3,16(sp)
   883cc:	81400117 	ldw	r5,4(r16)
   883d0:	10c0010e 	bge	r2,r3,883d8 <__multiply+0x68>
   883d4:	29400044 	addi	r5,r5,1
   883d8:	0087e600 	call	87e60 <_Balloc>
   883dc:	d8800515 	stw	r2,20(sp)
   883e0:	d9000417 	ldw	r4,16(sp)
   883e4:	d8c00517 	ldw	r3,20(sp)
   883e8:	2105883a 	add	r2,r4,r4
   883ec:	1085883a 	add	r2,r2,r2
   883f0:	19000504 	addi	r4,r3,20
   883f4:	2085883a 	add	r2,r4,r2
   883f8:	d8800315 	stw	r2,12(sp)
   883fc:	2080052e 	bgeu	r4,r2,88414 <__multiply+0xa4>
   88400:	2005883a 	mov	r2,r4
   88404:	d8c00317 	ldw	r3,12(sp)
   88408:	10000015 	stw	zero,0(r2)
   8840c:	10800104 	addi	r2,r2,4
   88410:	10fffc36 	bltu	r2,r3,88404 <__multiply+0x94>
   88414:	8c45883a 	add	r2,r17,r17
   88418:	9487883a 	add	r3,r18,r18
   8841c:	9dc00504 	addi	r23,r19,20
   88420:	1085883a 	add	r2,r2,r2
   88424:	84000504 	addi	r16,r16,20
   88428:	18c7883a 	add	r3,r3,r3
   8842c:	b885883a 	add	r2,r23,r2
   88430:	dc000015 	stw	r16,0(sp)
   88434:	d8800215 	stw	r2,8(sp)
   88438:	80f9883a 	add	fp,r16,r3
   8843c:	b880432e 	bgeu	r23,r2,8854c <__multiply+0x1dc>
   88440:	d9000115 	stw	r4,4(sp)
   88444:	b9000017 	ldw	r4,0(r23)
   88448:	253fffcc 	andi	r20,r4,65535
   8844c:	a0001a26 	beq	r20,zero,884b8 <__multiply+0x148>
   88450:	dcc00017 	ldw	r19,0(sp)
   88454:	dc800117 	ldw	r18,4(sp)
   88458:	002b883a 	mov	r21,zero
   8845c:	9c400017 	ldw	r17,0(r19)
   88460:	94000017 	ldw	r16,0(r18)
   88464:	a009883a 	mov	r4,r20
   88468:	897fffcc 	andi	r5,r17,65535
   8846c:	00806240 	call	80624 <__mulsi3>
   88470:	880ad43a 	srli	r5,r17,16
   88474:	80ffffcc 	andi	r3,r16,65535
   88478:	a8c7883a 	add	r3,r21,r3
   8847c:	a009883a 	mov	r4,r20
   88480:	10e3883a 	add	r17,r2,r3
   88484:	8020d43a 	srli	r16,r16,16
   88488:	00806240 	call	80624 <__mulsi3>
   8848c:	8806d43a 	srli	r3,r17,16
   88490:	1405883a 	add	r2,r2,r16
   88494:	9cc00104 	addi	r19,r19,4
   88498:	1887883a 	add	r3,r3,r2
   8849c:	90c0008d 	sth	r3,2(r18)
   884a0:	9440000d 	sth	r17,0(r18)
   884a4:	182ad43a 	srli	r21,r3,16
   884a8:	94800104 	addi	r18,r18,4
   884ac:	9f3feb36 	bltu	r19,fp,8845c <__multiply+0xec>
   884b0:	95400015 	stw	r21,0(r18)
   884b4:	b9000017 	ldw	r4,0(r23)
   884b8:	202ad43a 	srli	r21,r4,16
   884bc:	a8001c26 	beq	r21,zero,88530 <__multiply+0x1c0>
   884c0:	d9000117 	ldw	r4,4(sp)
   884c4:	dd000017 	ldw	r20,0(sp)
   884c8:	002d883a 	mov	r22,zero
   884cc:	24c00017 	ldw	r19,0(r4)
   884d0:	2025883a 	mov	r18,r4
   884d4:	9823883a 	mov	r17,r19
   884d8:	a4000017 	ldw	r16,0(r20)
   884dc:	a809883a 	mov	r4,r21
   884e0:	a5000104 	addi	r20,r20,4
   884e4:	817fffcc 	andi	r5,r16,65535
   884e8:	00806240 	call	80624 <__mulsi3>
   884ec:	8806d43a 	srli	r3,r17,16
   884f0:	800ad43a 	srli	r5,r16,16
   884f4:	94c0000d 	sth	r19,0(r18)
   884f8:	b0c7883a 	add	r3,r22,r3
   884fc:	10e1883a 	add	r16,r2,r3
   88500:	9400008d 	sth	r16,2(r18)
   88504:	a809883a 	mov	r4,r21
   88508:	94800104 	addi	r18,r18,4
   8850c:	00806240 	call	80624 <__mulsi3>
   88510:	94400017 	ldw	r17,0(r18)
   88514:	8020d43a 	srli	r16,r16,16
   88518:	88ffffcc 	andi	r3,r17,65535
   8851c:	10c5883a 	add	r2,r2,r3
   88520:	80a7883a 	add	r19,r16,r2
   88524:	982cd43a 	srli	r22,r19,16
   88528:	a73feb36 	bltu	r20,fp,884d8 <__multiply+0x168>
   8852c:	94c00015 	stw	r19,0(r18)
   88530:	d8800217 	ldw	r2,8(sp)
   88534:	bdc00104 	addi	r23,r23,4
   88538:	b880042e 	bgeu	r23,r2,8854c <__multiply+0x1dc>
   8853c:	d8c00117 	ldw	r3,4(sp)
   88540:	18c00104 	addi	r3,r3,4
   88544:	d8c00115 	stw	r3,4(sp)
   88548:	003fbe06 	br	88444 <__multiply+0xd4>
   8854c:	d9000417 	ldw	r4,16(sp)
   88550:	01000c0e 	bge	zero,r4,88584 <__multiply+0x214>
   88554:	d8c00317 	ldw	r3,12(sp)
   88558:	18bfff17 	ldw	r2,-4(r3)
   8855c:	18ffff04 	addi	r3,r3,-4
   88560:	10000326 	beq	r2,zero,88570 <__multiply+0x200>
   88564:	00000706 	br	88584 <__multiply+0x214>
   88568:	18800017 	ldw	r2,0(r3)
   8856c:	1000051e 	bne	r2,zero,88584 <__multiply+0x214>
   88570:	d9000417 	ldw	r4,16(sp)
   88574:	18ffff04 	addi	r3,r3,-4
   88578:	213fffc4 	addi	r4,r4,-1
   8857c:	d9000415 	stw	r4,16(sp)
   88580:	203ff91e 	bne	r4,zero,88568 <__multiply+0x1f8>
   88584:	d8800417 	ldw	r2,16(sp)
   88588:	d8c00517 	ldw	r3,20(sp)
   8858c:	18800415 	stw	r2,16(r3)
   88590:	1805883a 	mov	r2,r3
   88594:	dfc00f17 	ldw	ra,60(sp)
   88598:	df000e17 	ldw	fp,56(sp)
   8859c:	ddc00d17 	ldw	r23,52(sp)
   885a0:	dd800c17 	ldw	r22,48(sp)
   885a4:	dd400b17 	ldw	r21,44(sp)
   885a8:	dd000a17 	ldw	r20,40(sp)
   885ac:	dcc00917 	ldw	r19,36(sp)
   885b0:	dc800817 	ldw	r18,32(sp)
   885b4:	dc400717 	ldw	r17,28(sp)
   885b8:	dc000617 	ldw	r16,24(sp)
   885bc:	dec01004 	addi	sp,sp,64
   885c0:	f800283a 	ret

000885c4 <__i2b>:
   885c4:	defffd04 	addi	sp,sp,-12
   885c8:	dc000015 	stw	r16,0(sp)
   885cc:	04000044 	movi	r16,1
   885d0:	dc800115 	stw	r18,4(sp)
   885d4:	2825883a 	mov	r18,r5
   885d8:	800b883a 	mov	r5,r16
   885dc:	dfc00215 	stw	ra,8(sp)
   885e0:	0087e600 	call	87e60 <_Balloc>
   885e4:	14000415 	stw	r16,16(r2)
   885e8:	14800515 	stw	r18,20(r2)
   885ec:	dfc00217 	ldw	ra,8(sp)
   885f0:	dc800117 	ldw	r18,4(sp)
   885f4:	dc000017 	ldw	r16,0(sp)
   885f8:	dec00304 	addi	sp,sp,12
   885fc:	f800283a 	ret

00088600 <__multadd>:
   88600:	defff604 	addi	sp,sp,-40
   88604:	dd800615 	stw	r22,24(sp)
   88608:	2d800417 	ldw	r22,16(r5)
   8860c:	df000815 	stw	fp,32(sp)
   88610:	ddc00715 	stw	r23,28(sp)
   88614:	dd400515 	stw	r21,20(sp)
   88618:	dd000415 	stw	r20,16(sp)
   8861c:	dcc00315 	stw	r19,12(sp)
   88620:	dc800215 	stw	r18,8(sp)
   88624:	dfc00915 	stw	ra,36(sp)
   88628:	dc400115 	stw	r17,4(sp)
   8862c:	dc000015 	stw	r16,0(sp)
   88630:	282f883a 	mov	r23,r5
   88634:	2039883a 	mov	fp,r4
   88638:	302b883a 	mov	r21,r6
   8863c:	3829883a 	mov	r20,r7
   88640:	2c800504 	addi	r18,r5,20
   88644:	0027883a 	mov	r19,zero
   88648:	94400017 	ldw	r17,0(r18)
   8864c:	a80b883a 	mov	r5,r21
   88650:	9cc00044 	addi	r19,r19,1
   88654:	893fffcc 	andi	r4,r17,65535
   88658:	00806240 	call	80624 <__mulsi3>
   8865c:	8808d43a 	srli	r4,r17,16
   88660:	1521883a 	add	r16,r2,r20
   88664:	a80b883a 	mov	r5,r21
   88668:	00806240 	call	80624 <__mulsi3>
   8866c:	8008d43a 	srli	r4,r16,16
   88670:	843fffcc 	andi	r16,r16,65535
   88674:	1105883a 	add	r2,r2,r4
   88678:	1006943a 	slli	r3,r2,16
   8867c:	1028d43a 	srli	r20,r2,16
   88680:	1c07883a 	add	r3,r3,r16
   88684:	90c00015 	stw	r3,0(r18)
   88688:	94800104 	addi	r18,r18,4
   8868c:	9dbfee16 	blt	r19,r22,88648 <__multadd+0x48>
   88690:	a0000826 	beq	r20,zero,886b4 <__multadd+0xb4>
   88694:	b8800217 	ldw	r2,8(r23)
   88698:	b080130e 	bge	r22,r2,886e8 <__multadd+0xe8>
   8869c:	b585883a 	add	r2,r22,r22
   886a0:	1085883a 	add	r2,r2,r2
   886a4:	15c5883a 	add	r2,r2,r23
   886a8:	b0c00044 	addi	r3,r22,1
   886ac:	15000515 	stw	r20,20(r2)
   886b0:	b8c00415 	stw	r3,16(r23)
   886b4:	b805883a 	mov	r2,r23
   886b8:	dfc00917 	ldw	ra,36(sp)
   886bc:	df000817 	ldw	fp,32(sp)
   886c0:	ddc00717 	ldw	r23,28(sp)
   886c4:	dd800617 	ldw	r22,24(sp)
   886c8:	dd400517 	ldw	r21,20(sp)
   886cc:	dd000417 	ldw	r20,16(sp)
   886d0:	dcc00317 	ldw	r19,12(sp)
   886d4:	dc800217 	ldw	r18,8(sp)
   886d8:	dc400117 	ldw	r17,4(sp)
   886dc:	dc000017 	ldw	r16,0(sp)
   886e0:	dec00a04 	addi	sp,sp,40
   886e4:	f800283a 	ret
   886e8:	b9400117 	ldw	r5,4(r23)
   886ec:	e009883a 	mov	r4,fp
   886f0:	29400044 	addi	r5,r5,1
   886f4:	0087e600 	call	87e60 <_Balloc>
   886f8:	b9800417 	ldw	r6,16(r23)
   886fc:	b9400304 	addi	r5,r23,12
   88700:	11000304 	addi	r4,r2,12
   88704:	318d883a 	add	r6,r6,r6
   88708:	318d883a 	add	r6,r6,r6
   8870c:	31800204 	addi	r6,r6,8
   88710:	1023883a 	mov	r17,r2
   88714:	00876c80 	call	876c8 <memcpy>
   88718:	b80b883a 	mov	r5,r23
   8871c:	e009883a 	mov	r4,fp
   88720:	00878e00 	call	878e0 <_Bfree>
   88724:	882f883a 	mov	r23,r17
   88728:	003fdc06 	br	8869c <__multadd+0x9c>

0008872c <__pow5mult>:
   8872c:	defffa04 	addi	sp,sp,-24
   88730:	308000cc 	andi	r2,r6,3
   88734:	dd000415 	stw	r20,16(sp)
   88738:	dcc00315 	stw	r19,12(sp)
   8873c:	dc000015 	stw	r16,0(sp)
   88740:	dfc00515 	stw	ra,20(sp)
   88744:	dc800215 	stw	r18,8(sp)
   88748:	dc400115 	stw	r17,4(sp)
   8874c:	3021883a 	mov	r16,r6
   88750:	2027883a 	mov	r19,r4
   88754:	2829883a 	mov	r20,r5
   88758:	10002b1e 	bne	r2,zero,88808 <__pow5mult+0xdc>
   8875c:	8025d0ba 	srai	r18,r16,2
   88760:	90001b26 	beq	r18,zero,887d0 <__pow5mult+0xa4>
   88764:	9c001217 	ldw	r16,72(r19)
   88768:	8000081e 	bne	r16,zero,8878c <__pow5mult+0x60>
   8876c:	00003006 	br	88830 <__pow5mult+0x104>
   88770:	800b883a 	mov	r5,r16
   88774:	800d883a 	mov	r6,r16
   88778:	9809883a 	mov	r4,r19
   8877c:	90001426 	beq	r18,zero,887d0 <__pow5mult+0xa4>
   88780:	80800017 	ldw	r2,0(r16)
   88784:	10001b26 	beq	r2,zero,887f4 <__pow5mult+0xc8>
   88788:	1021883a 	mov	r16,r2
   8878c:	9080004c 	andi	r2,r18,1
   88790:	1005003a 	cmpeq	r2,r2,zero
   88794:	9025d07a 	srai	r18,r18,1
   88798:	800d883a 	mov	r6,r16
   8879c:	9809883a 	mov	r4,r19
   887a0:	a00b883a 	mov	r5,r20
   887a4:	103ff21e 	bne	r2,zero,88770 <__pow5mult+0x44>
   887a8:	00883700 	call	88370 <__multiply>
   887ac:	a00b883a 	mov	r5,r20
   887b0:	9809883a 	mov	r4,r19
   887b4:	1023883a 	mov	r17,r2
   887b8:	00878e00 	call	878e0 <_Bfree>
   887bc:	8829883a 	mov	r20,r17
   887c0:	800b883a 	mov	r5,r16
   887c4:	800d883a 	mov	r6,r16
   887c8:	9809883a 	mov	r4,r19
   887cc:	903fec1e 	bne	r18,zero,88780 <__pow5mult+0x54>
   887d0:	a005883a 	mov	r2,r20
   887d4:	dfc00517 	ldw	ra,20(sp)
   887d8:	dd000417 	ldw	r20,16(sp)
   887dc:	dcc00317 	ldw	r19,12(sp)
   887e0:	dc800217 	ldw	r18,8(sp)
   887e4:	dc400117 	ldw	r17,4(sp)
   887e8:	dc000017 	ldw	r16,0(sp)
   887ec:	dec00604 	addi	sp,sp,24
   887f0:	f800283a 	ret
   887f4:	00883700 	call	88370 <__multiply>
   887f8:	80800015 	stw	r2,0(r16)
   887fc:	1021883a 	mov	r16,r2
   88800:	10000015 	stw	zero,0(r2)
   88804:	003fe106 	br	8878c <__pow5mult+0x60>
   88808:	1085883a 	add	r2,r2,r2
   8880c:	00c00274 	movhi	r3,9
   88810:	18cef304 	addi	r3,r3,15308
   88814:	1085883a 	add	r2,r2,r2
   88818:	10c5883a 	add	r2,r2,r3
   8881c:	11bfff17 	ldw	r6,-4(r2)
   88820:	000f883a 	mov	r7,zero
   88824:	00886000 	call	88600 <__multadd>
   88828:	1029883a 	mov	r20,r2
   8882c:	003fcb06 	br	8875c <__pow5mult+0x30>
   88830:	9809883a 	mov	r4,r19
   88834:	01409c44 	movi	r5,625
   88838:	00885c40 	call	885c4 <__i2b>
   8883c:	98801215 	stw	r2,72(r19)
   88840:	1021883a 	mov	r16,r2
   88844:	10000015 	stw	zero,0(r2)
   88848:	003fd006 	br	8878c <__pow5mult+0x60>

0008884c <__s2b>:
   8884c:	defff904 	addi	sp,sp,-28
   88850:	dcc00315 	stw	r19,12(sp)
   88854:	dc800215 	stw	r18,8(sp)
   88858:	2827883a 	mov	r19,r5
   8885c:	2025883a 	mov	r18,r4
   88860:	01400244 	movi	r5,9
   88864:	39000204 	addi	r4,r7,8
   88868:	dd000415 	stw	r20,16(sp)
   8886c:	dc400115 	stw	r17,4(sp)
   88870:	dfc00615 	stw	ra,24(sp)
   88874:	dd400515 	stw	r21,20(sp)
   88878:	dc000015 	stw	r16,0(sp)
   8887c:	3829883a 	mov	r20,r7
   88880:	3023883a 	mov	r17,r6
   88884:	008f01c0 	call	8f01c <__divsi3>
   88888:	00c00044 	movi	r3,1
   8888c:	1880350e 	bge	r3,r2,88964 <__s2b+0x118>
   88890:	000b883a 	mov	r5,zero
   88894:	18c7883a 	add	r3,r3,r3
   88898:	29400044 	addi	r5,r5,1
   8889c:	18bffd16 	blt	r3,r2,88894 <__s2b+0x48>
   888a0:	9009883a 	mov	r4,r18
   888a4:	0087e600 	call	87e60 <_Balloc>
   888a8:	1011883a 	mov	r8,r2
   888ac:	d8800717 	ldw	r2,28(sp)
   888b0:	00c00044 	movi	r3,1
   888b4:	01800244 	movi	r6,9
   888b8:	40800515 	stw	r2,20(r8)
   888bc:	40c00415 	stw	r3,16(r8)
   888c0:	3440260e 	bge	r6,r17,8895c <__s2b+0x110>
   888c4:	3021883a 	mov	r16,r6
   888c8:	99ab883a 	add	r21,r19,r6
   888cc:	9c05883a 	add	r2,r19,r16
   888d0:	11c00007 	ldb	r7,0(r2)
   888d4:	400b883a 	mov	r5,r8
   888d8:	9009883a 	mov	r4,r18
   888dc:	39fff404 	addi	r7,r7,-48
   888e0:	01800284 	movi	r6,10
   888e4:	00886000 	call	88600 <__multadd>
   888e8:	84000044 	addi	r16,r16,1
   888ec:	1011883a 	mov	r8,r2
   888f0:	8c3ff61e 	bne	r17,r16,888cc <__s2b+0x80>
   888f4:	ac45883a 	add	r2,r21,r17
   888f8:	117ffe04 	addi	r5,r2,-8
   888fc:	880d883a 	mov	r6,r17
   88900:	35000c0e 	bge	r6,r20,88934 <__s2b+0xe8>
   88904:	a185c83a 	sub	r2,r20,r6
   88908:	2821883a 	mov	r16,r5
   8890c:	28a3883a 	add	r17,r5,r2
   88910:	81c00007 	ldb	r7,0(r16)
   88914:	400b883a 	mov	r5,r8
   88918:	9009883a 	mov	r4,r18
   8891c:	39fff404 	addi	r7,r7,-48
   88920:	01800284 	movi	r6,10
   88924:	00886000 	call	88600 <__multadd>
   88928:	84000044 	addi	r16,r16,1
   8892c:	1011883a 	mov	r8,r2
   88930:	847ff71e 	bne	r16,r17,88910 <__s2b+0xc4>
   88934:	4005883a 	mov	r2,r8
   88938:	dfc00617 	ldw	ra,24(sp)
   8893c:	dd400517 	ldw	r21,20(sp)
   88940:	dd000417 	ldw	r20,16(sp)
   88944:	dcc00317 	ldw	r19,12(sp)
   88948:	dc800217 	ldw	r18,8(sp)
   8894c:	dc400117 	ldw	r17,4(sp)
   88950:	dc000017 	ldw	r16,0(sp)
   88954:	dec00704 	addi	sp,sp,28
   88958:	f800283a 	ret
   8895c:	99400284 	addi	r5,r19,10
   88960:	003fe706 	br	88900 <__s2b+0xb4>
   88964:	000b883a 	mov	r5,zero
   88968:	003fcd06 	br	888a0 <__s2b+0x54>

0008896c <putc>:
   8896c:	defffc04 	addi	sp,sp,-16
   88970:	dc800215 	stw	r18,8(sp)
   88974:	04800274 	movhi	r18,9
   88978:	94963a04 	addi	r18,r18,22760
   8897c:	90c00017 	ldw	r3,0(r18)
   88980:	dc400115 	stw	r17,4(sp)
   88984:	dc000015 	stw	r16,0(sp)
   88988:	dfc00315 	stw	ra,12(sp)
   8898c:	2023883a 	mov	r17,r4
   88990:	2821883a 	mov	r16,r5
   88994:	18000226 	beq	r3,zero,889a0 <putc+0x34>
   88998:	18800e17 	ldw	r2,56(r3)
   8899c:	10001126 	beq	r2,zero,889e4 <putc+0x78>
   889a0:	80800217 	ldw	r2,8(r16)
   889a4:	10ffffc4 	addi	r3,r2,-1
   889a8:	80c00215 	stw	r3,8(r16)
   889ac:	18001316 	blt	r3,zero,889fc <putc+0x90>
   889b0:	80800017 	ldw	r2,0(r16)
   889b4:	14400005 	stb	r17,0(r2)
   889b8:	80c00017 	ldw	r3,0(r16)
   889bc:	18800044 	addi	r2,r3,1
   889c0:	18c00003 	ldbu	r3,0(r3)
   889c4:	80800015 	stw	r2,0(r16)
   889c8:	1805883a 	mov	r2,r3
   889cc:	dfc00317 	ldw	ra,12(sp)
   889d0:	dc800217 	ldw	r18,8(sp)
   889d4:	dc400117 	ldw	r17,4(sp)
   889d8:	dc000017 	ldw	r16,0(sp)
   889dc:	dec00404 	addi	sp,sp,16
   889e0:	f800283a 	ret
   889e4:	1809883a 	mov	r4,r3
   889e8:	0085bec0 	call	85bec <__sinit>
   889ec:	80800217 	ldw	r2,8(r16)
   889f0:	10ffffc4 	addi	r3,r2,-1
   889f4:	80c00215 	stw	r3,8(r16)
   889f8:	183fed0e 	bge	r3,zero,889b0 <putc+0x44>
   889fc:	80800617 	ldw	r2,24(r16)
   88a00:	18800f16 	blt	r3,r2,88a40 <putc+0xd4>
   88a04:	80800017 	ldw	r2,0(r16)
   88a08:	14400005 	stb	r17,0(r2)
   88a0c:	81000017 	ldw	r4,0(r16)
   88a10:	00800284 	movi	r2,10
   88a14:	20c00003 	ldbu	r3,0(r4)
   88a18:	18801226 	beq	r3,r2,88a64 <putc+0xf8>
   88a1c:	20800044 	addi	r2,r4,1
   88a20:	80800015 	stw	r2,0(r16)
   88a24:	1805883a 	mov	r2,r3
   88a28:	dfc00317 	ldw	ra,12(sp)
   88a2c:	dc800217 	ldw	r18,8(sp)
   88a30:	dc400117 	ldw	r17,4(sp)
   88a34:	dc000017 	ldw	r16,0(sp)
   88a38:	dec00404 	addi	sp,sp,16
   88a3c:	f800283a 	ret
   88a40:	91000017 	ldw	r4,0(r18)
   88a44:	880b883a 	mov	r5,r17
   88a48:	800d883a 	mov	r6,r16
   88a4c:	dfc00317 	ldw	ra,12(sp)
   88a50:	dc800217 	ldw	r18,8(sp)
   88a54:	dc400117 	ldw	r17,4(sp)
   88a58:	dc000017 	ldw	r16,0(sp)
   88a5c:	dec00404 	addi	sp,sp,16
   88a60:	008bbbc1 	jmpi	8bbbc <__swbuf_r>
   88a64:	91000017 	ldw	r4,0(r18)
   88a68:	180b883a 	mov	r5,r3
   88a6c:	003ff606 	br	88a48 <putc+0xdc>

00088a70 <_putc_r>:
   88a70:	defffc04 	addi	sp,sp,-16
   88a74:	dc400215 	stw	r17,8(sp)
   88a78:	dc000115 	stw	r16,4(sp)
   88a7c:	dfc00315 	stw	ra,12(sp)
   88a80:	2021883a 	mov	r16,r4
   88a84:	2823883a 	mov	r17,r5
   88a88:	20000226 	beq	r4,zero,88a94 <_putc_r+0x24>
   88a8c:	20800e17 	ldw	r2,56(r4)
   88a90:	10001026 	beq	r2,zero,88ad4 <_putc_r+0x64>
   88a94:	30800217 	ldw	r2,8(r6)
   88a98:	10ffffc4 	addi	r3,r2,-1
   88a9c:	30c00215 	stw	r3,8(r6)
   88aa0:	18001316 	blt	r3,zero,88af0 <_putc_r+0x80>
   88aa4:	30800017 	ldw	r2,0(r6)
   88aa8:	14400005 	stb	r17,0(r2)
   88aac:	30c00017 	ldw	r3,0(r6)
   88ab0:	18800044 	addi	r2,r3,1
   88ab4:	18c00003 	ldbu	r3,0(r3)
   88ab8:	30800015 	stw	r2,0(r6)
   88abc:	1805883a 	mov	r2,r3
   88ac0:	dfc00317 	ldw	ra,12(sp)
   88ac4:	dc400217 	ldw	r17,8(sp)
   88ac8:	dc000117 	ldw	r16,4(sp)
   88acc:	dec00404 	addi	sp,sp,16
   88ad0:	f800283a 	ret
   88ad4:	d9800015 	stw	r6,0(sp)
   88ad8:	0085bec0 	call	85bec <__sinit>
   88adc:	d9800017 	ldw	r6,0(sp)
   88ae0:	30800217 	ldw	r2,8(r6)
   88ae4:	10ffffc4 	addi	r3,r2,-1
   88ae8:	30c00215 	stw	r3,8(r6)
   88aec:	183fed0e 	bge	r3,zero,88aa4 <_putc_r+0x34>
   88af0:	30800617 	ldw	r2,24(r6)
   88af4:	18800e16 	blt	r3,r2,88b30 <_putc_r+0xc0>
   88af8:	30800017 	ldw	r2,0(r6)
   88afc:	14400005 	stb	r17,0(r2)
   88b00:	31000017 	ldw	r4,0(r6)
   88b04:	00800284 	movi	r2,10
   88b08:	20c00003 	ldbu	r3,0(r4)
   88b0c:	18800f26 	beq	r3,r2,88b4c <_putc_r+0xdc>
   88b10:	20800044 	addi	r2,r4,1
   88b14:	30800015 	stw	r2,0(r6)
   88b18:	1805883a 	mov	r2,r3
   88b1c:	dfc00317 	ldw	ra,12(sp)
   88b20:	dc400217 	ldw	r17,8(sp)
   88b24:	dc000117 	ldw	r16,4(sp)
   88b28:	dec00404 	addi	sp,sp,16
   88b2c:	f800283a 	ret
   88b30:	8009883a 	mov	r4,r16
   88b34:	880b883a 	mov	r5,r17
   88b38:	dfc00317 	ldw	ra,12(sp)
   88b3c:	dc400217 	ldw	r17,8(sp)
   88b40:	dc000117 	ldw	r16,4(sp)
   88b44:	dec00404 	addi	sp,sp,16
   88b48:	008bbbc1 	jmpi	8bbbc <__swbuf_r>
   88b4c:	8009883a 	mov	r4,r16
   88b50:	180b883a 	mov	r5,r3
   88b54:	003ff806 	br	88b38 <_putc_r+0xc8>

00088b58 <_realloc_r>:
   88b58:	defff404 	addi	sp,sp,-48
   88b5c:	dd800815 	stw	r22,32(sp)
   88b60:	dc800415 	stw	r18,16(sp)
   88b64:	dc400315 	stw	r17,12(sp)
   88b68:	dfc00b15 	stw	ra,44(sp)
   88b6c:	df000a15 	stw	fp,40(sp)
   88b70:	ddc00915 	stw	r23,36(sp)
   88b74:	dd400715 	stw	r21,28(sp)
   88b78:	dd000615 	stw	r20,24(sp)
   88b7c:	dcc00515 	stw	r19,20(sp)
   88b80:	dc000215 	stw	r16,8(sp)
   88b84:	2825883a 	mov	r18,r5
   88b88:	3023883a 	mov	r17,r6
   88b8c:	202d883a 	mov	r22,r4
   88b90:	2800c926 	beq	r5,zero,88eb8 <_realloc_r+0x360>
   88b94:	00900100 	call	90010 <__malloc_lock>
   88b98:	943ffe04 	addi	r16,r18,-8
   88b9c:	88c002c4 	addi	r3,r17,11
   88ba0:	00800584 	movi	r2,22
   88ba4:	82000117 	ldw	r8,4(r16)
   88ba8:	10c01b2e 	bgeu	r2,r3,88c18 <_realloc_r+0xc0>
   88bac:	00bffe04 	movi	r2,-8
   88bb0:	188e703a 	and	r7,r3,r2
   88bb4:	3839883a 	mov	fp,r7
   88bb8:	38001a16 	blt	r7,zero,88c24 <_realloc_r+0xcc>
   88bbc:	e4401936 	bltu	fp,r17,88c24 <_realloc_r+0xcc>
   88bc0:	013fff04 	movi	r4,-4
   88bc4:	4126703a 	and	r19,r8,r4
   88bc8:	99c02616 	blt	r19,r7,88c64 <_realloc_r+0x10c>
   88bcc:	802b883a 	mov	r21,r16
   88bd0:	9829883a 	mov	r20,r19
   88bd4:	84000204 	addi	r16,r16,8
   88bd8:	a80f883a 	mov	r7,r21
   88bdc:	a70dc83a 	sub	r6,r20,fp
   88be0:	008003c4 	movi	r2,15
   88be4:	1180c136 	bltu	r2,r6,88eec <_realloc_r+0x394>
   88be8:	38800117 	ldw	r2,4(r7)
   88bec:	a549883a 	add	r4,r20,r21
   88bf0:	1080004c 	andi	r2,r2,1
   88bf4:	a084b03a 	or	r2,r20,r2
   88bf8:	38800115 	stw	r2,4(r7)
   88bfc:	20c00117 	ldw	r3,4(r4)
   88c00:	18c00054 	ori	r3,r3,1
   88c04:	20c00115 	stw	r3,4(r4)
   88c08:	b009883a 	mov	r4,r22
   88c0c:	00900300 	call	90030 <__malloc_unlock>
   88c10:	8023883a 	mov	r17,r16
   88c14:	00000606 	br	88c30 <_realloc_r+0xd8>
   88c18:	01c00404 	movi	r7,16
   88c1c:	3839883a 	mov	fp,r7
   88c20:	e47fe72e 	bgeu	fp,r17,88bc0 <_realloc_r+0x68>
   88c24:	00800304 	movi	r2,12
   88c28:	0023883a 	mov	r17,zero
   88c2c:	b0800015 	stw	r2,0(r22)
   88c30:	8805883a 	mov	r2,r17
   88c34:	dfc00b17 	ldw	ra,44(sp)
   88c38:	df000a17 	ldw	fp,40(sp)
   88c3c:	ddc00917 	ldw	r23,36(sp)
   88c40:	dd800817 	ldw	r22,32(sp)
   88c44:	dd400717 	ldw	r21,28(sp)
   88c48:	dd000617 	ldw	r20,24(sp)
   88c4c:	dcc00517 	ldw	r19,20(sp)
   88c50:	dc800417 	ldw	r18,16(sp)
   88c54:	dc400317 	ldw	r17,12(sp)
   88c58:	dc000217 	ldw	r16,8(sp)
   88c5c:	dec00c04 	addi	sp,sp,48
   88c60:	f800283a 	ret
   88c64:	00800274 	movhi	r2,9
   88c68:	10906304 	addi	r2,r2,16780
   88c6c:	12400217 	ldw	r9,8(r2)
   88c70:	84cd883a 	add	r6,r16,r19
   88c74:	802b883a 	mov	r21,r16
   88c78:	3240b926 	beq	r6,r9,88f60 <_realloc_r+0x408>
   88c7c:	31400117 	ldw	r5,4(r6)
   88c80:	00bfff84 	movi	r2,-2
   88c84:	2884703a 	and	r2,r5,r2
   88c88:	1185883a 	add	r2,r2,r6
   88c8c:	10c00117 	ldw	r3,4(r2)
   88c90:	18c0004c 	andi	r3,r3,1
   88c94:	1807003a 	cmpeq	r3,r3,zero
   88c98:	1800a326 	beq	r3,zero,88f28 <_realloc_r+0x3d0>
   88c9c:	2908703a 	and	r4,r5,r4
   88ca0:	9929883a 	add	r20,r19,r4
   88ca4:	a1c0a30e 	bge	r20,r7,88f34 <_realloc_r+0x3dc>
   88ca8:	4080004c 	andi	r2,r8,1
   88cac:	1000551e 	bne	r2,zero,88e04 <_realloc_r+0x2ac>
   88cb0:	80800017 	ldw	r2,0(r16)
   88cb4:	80afc83a 	sub	r23,r16,r2
   88cb8:	b8c00117 	ldw	r3,4(r23)
   88cbc:	00bfff04 	movi	r2,-4
   88cc0:	1884703a 	and	r2,r3,r2
   88cc4:	30002e26 	beq	r6,zero,88d80 <_realloc_r+0x228>
   88cc8:	3240b926 	beq	r6,r9,88fb0 <_realloc_r+0x458>
   88ccc:	98a9883a 	add	r20,r19,r2
   88cd0:	2509883a 	add	r4,r4,r20
   88cd4:	d9000015 	stw	r4,0(sp)
   88cd8:	21c02a16 	blt	r4,r7,88d84 <_realloc_r+0x22c>
   88cdc:	30800317 	ldw	r2,12(r6)
   88ce0:	30c00217 	ldw	r3,8(r6)
   88ce4:	01400904 	movi	r5,36
   88ce8:	99bfff04 	addi	r6,r19,-4
   88cec:	18800315 	stw	r2,12(r3)
   88cf0:	10c00215 	stw	r3,8(r2)
   88cf4:	b9000317 	ldw	r4,12(r23)
   88cf8:	b8800217 	ldw	r2,8(r23)
   88cfc:	b82b883a 	mov	r21,r23
   88d00:	bc000204 	addi	r16,r23,8
   88d04:	20800215 	stw	r2,8(r4)
   88d08:	11000315 	stw	r4,12(r2)
   88d0c:	2980e436 	bltu	r5,r6,890a0 <_realloc_r+0x548>
   88d10:	008004c4 	movi	r2,19
   88d14:	9009883a 	mov	r4,r18
   88d18:	8011883a 	mov	r8,r16
   88d1c:	11800f2e 	bgeu	r2,r6,88d5c <_realloc_r+0x204>
   88d20:	90800017 	ldw	r2,0(r18)
   88d24:	ba000404 	addi	r8,r23,16
   88d28:	91000204 	addi	r4,r18,8
   88d2c:	b8800215 	stw	r2,8(r23)
   88d30:	90c00117 	ldw	r3,4(r18)
   88d34:	008006c4 	movi	r2,27
   88d38:	b8c00315 	stw	r3,12(r23)
   88d3c:	1180072e 	bgeu	r2,r6,88d5c <_realloc_r+0x204>
   88d40:	90c00217 	ldw	r3,8(r18)
   88d44:	ba000604 	addi	r8,r23,24
   88d48:	91000404 	addi	r4,r18,16
   88d4c:	b8c00415 	stw	r3,16(r23)
   88d50:	90800317 	ldw	r2,12(r18)
   88d54:	b8800515 	stw	r2,20(r23)
   88d58:	3140e726 	beq	r6,r5,890f8 <_realloc_r+0x5a0>
   88d5c:	20800017 	ldw	r2,0(r4)
   88d60:	dd000017 	ldw	r20,0(sp)
   88d64:	b80f883a 	mov	r7,r23
   88d68:	40800015 	stw	r2,0(r8)
   88d6c:	20c00117 	ldw	r3,4(r4)
   88d70:	40c00115 	stw	r3,4(r8)
   88d74:	20800217 	ldw	r2,8(r4)
   88d78:	40800215 	stw	r2,8(r8)
   88d7c:	003f9706 	br	88bdc <_realloc_r+0x84>
   88d80:	98a9883a 	add	r20,r19,r2
   88d84:	a1c01f16 	blt	r20,r7,88e04 <_realloc_r+0x2ac>
   88d88:	b8c00317 	ldw	r3,12(r23)
   88d8c:	b8800217 	ldw	r2,8(r23)
   88d90:	99bfff04 	addi	r6,r19,-4
   88d94:	01400904 	movi	r5,36
   88d98:	b82b883a 	mov	r21,r23
   88d9c:	18800215 	stw	r2,8(r3)
   88da0:	10c00315 	stw	r3,12(r2)
   88da4:	bc000204 	addi	r16,r23,8
   88da8:	2980c336 	bltu	r5,r6,890b8 <_realloc_r+0x560>
   88dac:	008004c4 	movi	r2,19
   88db0:	9009883a 	mov	r4,r18
   88db4:	8011883a 	mov	r8,r16
   88db8:	11800f2e 	bgeu	r2,r6,88df8 <_realloc_r+0x2a0>
   88dbc:	90800017 	ldw	r2,0(r18)
   88dc0:	ba000404 	addi	r8,r23,16
   88dc4:	91000204 	addi	r4,r18,8
   88dc8:	b8800215 	stw	r2,8(r23)
   88dcc:	90c00117 	ldw	r3,4(r18)
   88dd0:	008006c4 	movi	r2,27
   88dd4:	b8c00315 	stw	r3,12(r23)
   88dd8:	1180072e 	bgeu	r2,r6,88df8 <_realloc_r+0x2a0>
   88ddc:	90c00217 	ldw	r3,8(r18)
   88de0:	ba000604 	addi	r8,r23,24
   88de4:	91000404 	addi	r4,r18,16
   88de8:	b8c00415 	stw	r3,16(r23)
   88dec:	90800317 	ldw	r2,12(r18)
   88df0:	b8800515 	stw	r2,20(r23)
   88df4:	3140c726 	beq	r6,r5,89114 <_realloc_r+0x5bc>
   88df8:	20800017 	ldw	r2,0(r4)
   88dfc:	b80f883a 	mov	r7,r23
   88e00:	003fd906 	br	88d68 <_realloc_r+0x210>
   88e04:	880b883a 	mov	r5,r17
   88e08:	b009883a 	mov	r4,r22
   88e0c:	0086da40 	call	86da4 <_malloc_r>
   88e10:	1023883a 	mov	r17,r2
   88e14:	10002526 	beq	r2,zero,88eac <_realloc_r+0x354>
   88e18:	80800117 	ldw	r2,4(r16)
   88e1c:	00ffff84 	movi	r3,-2
   88e20:	893ffe04 	addi	r4,r17,-8
   88e24:	10c4703a 	and	r2,r2,r3
   88e28:	8085883a 	add	r2,r16,r2
   88e2c:	20809526 	beq	r4,r2,89084 <_realloc_r+0x52c>
   88e30:	99bfff04 	addi	r6,r19,-4
   88e34:	01c00904 	movi	r7,36
   88e38:	39804536 	bltu	r7,r6,88f50 <_realloc_r+0x3f8>
   88e3c:	008004c4 	movi	r2,19
   88e40:	9009883a 	mov	r4,r18
   88e44:	880b883a 	mov	r5,r17
   88e48:	11800f2e 	bgeu	r2,r6,88e88 <_realloc_r+0x330>
   88e4c:	90800017 	ldw	r2,0(r18)
   88e50:	89400204 	addi	r5,r17,8
   88e54:	91000204 	addi	r4,r18,8
   88e58:	88800015 	stw	r2,0(r17)
   88e5c:	90c00117 	ldw	r3,4(r18)
   88e60:	008006c4 	movi	r2,27
   88e64:	88c00115 	stw	r3,4(r17)
   88e68:	1180072e 	bgeu	r2,r6,88e88 <_realloc_r+0x330>
   88e6c:	90c00217 	ldw	r3,8(r18)
   88e70:	89400404 	addi	r5,r17,16
   88e74:	91000404 	addi	r4,r18,16
   88e78:	88c00215 	stw	r3,8(r17)
   88e7c:	90800317 	ldw	r2,12(r18)
   88e80:	88800315 	stw	r2,12(r17)
   88e84:	31c09126 	beq	r6,r7,890cc <_realloc_r+0x574>
   88e88:	20800017 	ldw	r2,0(r4)
   88e8c:	28800015 	stw	r2,0(r5)
   88e90:	20c00117 	ldw	r3,4(r4)
   88e94:	28c00115 	stw	r3,4(r5)
   88e98:	20800217 	ldw	r2,8(r4)
   88e9c:	28800215 	stw	r2,8(r5)
   88ea0:	900b883a 	mov	r5,r18
   88ea4:	b009883a 	mov	r4,r22
   88ea8:	00861f00 	call	861f0 <_free_r>
   88eac:	b009883a 	mov	r4,r22
   88eb0:	00900300 	call	90030 <__malloc_unlock>
   88eb4:	003f5e06 	br	88c30 <_realloc_r+0xd8>
   88eb8:	300b883a 	mov	r5,r6
   88ebc:	dfc00b17 	ldw	ra,44(sp)
   88ec0:	df000a17 	ldw	fp,40(sp)
   88ec4:	ddc00917 	ldw	r23,36(sp)
   88ec8:	dd800817 	ldw	r22,32(sp)
   88ecc:	dd400717 	ldw	r21,28(sp)
   88ed0:	dd000617 	ldw	r20,24(sp)
   88ed4:	dcc00517 	ldw	r19,20(sp)
   88ed8:	dc800417 	ldw	r18,16(sp)
   88edc:	dc400317 	ldw	r17,12(sp)
   88ee0:	dc000217 	ldw	r16,8(sp)
   88ee4:	dec00c04 	addi	sp,sp,48
   88ee8:	0086da41 	jmpi	86da4 <_malloc_r>
   88eec:	38800117 	ldw	r2,4(r7)
   88ef0:	e54b883a 	add	r5,fp,r21
   88ef4:	31000054 	ori	r4,r6,1
   88ef8:	1080004c 	andi	r2,r2,1
   88efc:	1704b03a 	or	r2,r2,fp
   88f00:	38800115 	stw	r2,4(r7)
   88f04:	29000115 	stw	r4,4(r5)
   88f08:	2987883a 	add	r3,r5,r6
   88f0c:	18800117 	ldw	r2,4(r3)
   88f10:	29400204 	addi	r5,r5,8
   88f14:	b009883a 	mov	r4,r22
   88f18:	10800054 	ori	r2,r2,1
   88f1c:	18800115 	stw	r2,4(r3)
   88f20:	00861f00 	call	861f0 <_free_r>
   88f24:	003f3806 	br	88c08 <_realloc_r+0xb0>
   88f28:	000d883a 	mov	r6,zero
   88f2c:	0009883a 	mov	r4,zero
   88f30:	003f5d06 	br	88ca8 <_realloc_r+0x150>
   88f34:	30c00217 	ldw	r3,8(r6)
   88f38:	30800317 	ldw	r2,12(r6)
   88f3c:	800f883a 	mov	r7,r16
   88f40:	84000204 	addi	r16,r16,8
   88f44:	10c00215 	stw	r3,8(r2)
   88f48:	18800315 	stw	r2,12(r3)
   88f4c:	003f2306 	br	88bdc <_realloc_r+0x84>
   88f50:	8809883a 	mov	r4,r17
   88f54:	900b883a 	mov	r5,r18
   88f58:	00877680 	call	87768 <memmove>
   88f5c:	003fd006 	br	88ea0 <_realloc_r+0x348>
   88f60:	30800117 	ldw	r2,4(r6)
   88f64:	e0c00404 	addi	r3,fp,16
   88f68:	1108703a 	and	r4,r2,r4
   88f6c:	9905883a 	add	r2,r19,r4
   88f70:	10ff4d16 	blt	r2,r3,88ca8 <_realloc_r+0x150>
   88f74:	1705c83a 	sub	r2,r2,fp
   88f78:	870b883a 	add	r5,r16,fp
   88f7c:	10800054 	ori	r2,r2,1
   88f80:	28800115 	stw	r2,4(r5)
   88f84:	80c00117 	ldw	r3,4(r16)
   88f88:	00800274 	movhi	r2,9
   88f8c:	10906304 	addi	r2,r2,16780
   88f90:	b009883a 	mov	r4,r22
   88f94:	18c0004c 	andi	r3,r3,1
   88f98:	e0c6b03a 	or	r3,fp,r3
   88f9c:	11400215 	stw	r5,8(r2)
   88fa0:	80c00115 	stw	r3,4(r16)
   88fa4:	00900300 	call	90030 <__malloc_unlock>
   88fa8:	84400204 	addi	r17,r16,8
   88fac:	003f2006 	br	88c30 <_realloc_r+0xd8>
   88fb0:	98a9883a 	add	r20,r19,r2
   88fb4:	2509883a 	add	r4,r4,r20
   88fb8:	e0800404 	addi	r2,fp,16
   88fbc:	d9000115 	stw	r4,4(sp)
   88fc0:	20bf7016 	blt	r4,r2,88d84 <_realloc_r+0x22c>
   88fc4:	b8c00317 	ldw	r3,12(r23)
   88fc8:	b8800217 	ldw	r2,8(r23)
   88fcc:	99bfff04 	addi	r6,r19,-4
   88fd0:	01400904 	movi	r5,36
   88fd4:	18800215 	stw	r2,8(r3)
   88fd8:	10c00315 	stw	r3,12(r2)
   88fdc:	bc400204 	addi	r17,r23,8
   88fe0:	29804136 	bltu	r5,r6,890e8 <_realloc_r+0x590>
   88fe4:	008004c4 	movi	r2,19
   88fe8:	9009883a 	mov	r4,r18
   88fec:	880f883a 	mov	r7,r17
   88ff0:	11800f2e 	bgeu	r2,r6,89030 <_realloc_r+0x4d8>
   88ff4:	90800017 	ldw	r2,0(r18)
   88ff8:	b9c00404 	addi	r7,r23,16
   88ffc:	91000204 	addi	r4,r18,8
   89000:	b8800215 	stw	r2,8(r23)
   89004:	90c00117 	ldw	r3,4(r18)
   89008:	008006c4 	movi	r2,27
   8900c:	b8c00315 	stw	r3,12(r23)
   89010:	1180072e 	bgeu	r2,r6,89030 <_realloc_r+0x4d8>
   89014:	90c00217 	ldw	r3,8(r18)
   89018:	b9c00604 	addi	r7,r23,24
   8901c:	91000404 	addi	r4,r18,16
   89020:	b8c00415 	stw	r3,16(r23)
   89024:	90800317 	ldw	r2,12(r18)
   89028:	b8800515 	stw	r2,20(r23)
   8902c:	31404026 	beq	r6,r5,89130 <_realloc_r+0x5d8>
   89030:	20800017 	ldw	r2,0(r4)
   89034:	38800015 	stw	r2,0(r7)
   89038:	20c00117 	ldw	r3,4(r4)
   8903c:	38c00115 	stw	r3,4(r7)
   89040:	20800217 	ldw	r2,8(r4)
   89044:	38800215 	stw	r2,8(r7)
   89048:	d8c00117 	ldw	r3,4(sp)
   8904c:	bf0b883a 	add	r5,r23,fp
   89050:	b009883a 	mov	r4,r22
   89054:	1f05c83a 	sub	r2,r3,fp
   89058:	10800054 	ori	r2,r2,1
   8905c:	28800115 	stw	r2,4(r5)
   89060:	b8c00117 	ldw	r3,4(r23)
   89064:	00800274 	movhi	r2,9
   89068:	10906304 	addi	r2,r2,16780
   8906c:	11400215 	stw	r5,8(r2)
   89070:	18c0004c 	andi	r3,r3,1
   89074:	e0c6b03a 	or	r3,fp,r3
   89078:	b8c00115 	stw	r3,4(r23)
   8907c:	00900300 	call	90030 <__malloc_unlock>
   89080:	003eeb06 	br	88c30 <_realloc_r+0xd8>
   89084:	20800117 	ldw	r2,4(r4)
   89088:	00ffff04 	movi	r3,-4
   8908c:	800f883a 	mov	r7,r16
   89090:	10c4703a 	and	r2,r2,r3
   89094:	98a9883a 	add	r20,r19,r2
   89098:	84000204 	addi	r16,r16,8
   8909c:	003ecf06 	br	88bdc <_realloc_r+0x84>
   890a0:	900b883a 	mov	r5,r18
   890a4:	8009883a 	mov	r4,r16
   890a8:	00877680 	call	87768 <memmove>
   890ac:	dd000017 	ldw	r20,0(sp)
   890b0:	b80f883a 	mov	r7,r23
   890b4:	003ec906 	br	88bdc <_realloc_r+0x84>
   890b8:	900b883a 	mov	r5,r18
   890bc:	8009883a 	mov	r4,r16
   890c0:	00877680 	call	87768 <memmove>
   890c4:	b80f883a 	mov	r7,r23
   890c8:	003ec406 	br	88bdc <_realloc_r+0x84>
   890cc:	90c00417 	ldw	r3,16(r18)
   890d0:	89400604 	addi	r5,r17,24
   890d4:	91000604 	addi	r4,r18,24
   890d8:	88c00415 	stw	r3,16(r17)
   890dc:	90800517 	ldw	r2,20(r18)
   890e0:	88800515 	stw	r2,20(r17)
   890e4:	003f6806 	br	88e88 <_realloc_r+0x330>
   890e8:	900b883a 	mov	r5,r18
   890ec:	8809883a 	mov	r4,r17
   890f0:	00877680 	call	87768 <memmove>
   890f4:	003fd406 	br	89048 <_realloc_r+0x4f0>
   890f8:	90c00417 	ldw	r3,16(r18)
   890fc:	91000604 	addi	r4,r18,24
   89100:	ba000804 	addi	r8,r23,32
   89104:	b8c00615 	stw	r3,24(r23)
   89108:	90800517 	ldw	r2,20(r18)
   8910c:	b8800715 	stw	r2,28(r23)
   89110:	003f1206 	br	88d5c <_realloc_r+0x204>
   89114:	90c00417 	ldw	r3,16(r18)
   89118:	91000604 	addi	r4,r18,24
   8911c:	ba000804 	addi	r8,r23,32
   89120:	b8c00615 	stw	r3,24(r23)
   89124:	90800517 	ldw	r2,20(r18)
   89128:	b8800715 	stw	r2,28(r23)
   8912c:	003f3206 	br	88df8 <_realloc_r+0x2a0>
   89130:	90c00417 	ldw	r3,16(r18)
   89134:	91000604 	addi	r4,r18,24
   89138:	b9c00804 	addi	r7,r23,32
   8913c:	b8c00615 	stw	r3,24(r23)
   89140:	90800517 	ldw	r2,20(r18)
   89144:	b8800715 	stw	r2,28(r23)
   89148:	003fb906 	br	89030 <_realloc_r+0x4d8>

0008914c <__srefill_r>:
   8914c:	defffd04 	addi	sp,sp,-12
   89150:	dc400115 	stw	r17,4(sp)
   89154:	dc000015 	stw	r16,0(sp)
   89158:	dfc00215 	stw	ra,8(sp)
   8915c:	2023883a 	mov	r17,r4
   89160:	2821883a 	mov	r16,r5
   89164:	20000226 	beq	r4,zero,89170 <__srefill_r+0x24>
   89168:	20800e17 	ldw	r2,56(r4)
   8916c:	10004126 	beq	r2,zero,89274 <__srefill_r+0x128>
   89170:	80c0030b 	ldhu	r3,12(r16)
   89174:	80000115 	stw	zero,4(r16)
   89178:	1880080c 	andi	r2,r3,32
   8917c:	1000361e 	bne	r2,zero,89258 <__srefill_r+0x10c>
   89180:	1880010c 	andi	r2,r3,4
   89184:	1000211e 	bne	r2,zero,8920c <__srefill_r+0xc0>
   89188:	1880040c 	andi	r2,r3,16
   8918c:	10005026 	beq	r2,zero,892d0 <__srefill_r+0x184>
   89190:	1880020c 	andi	r2,r3,8
   89194:	1000541e 	bne	r2,zero,892e8 <__srefill_r+0x19c>
   89198:	8080030b 	ldhu	r2,12(r16)
   8919c:	10800114 	ori	r2,r2,4
   891a0:	8080030d 	sth	r2,12(r16)
   891a4:	80800417 	ldw	r2,16(r16)
   891a8:	10004526 	beq	r2,zero,892c0 <__srefill_r+0x174>
   891ac:	8080030b 	ldhu	r2,12(r16)
   891b0:	108000cc 	andi	r2,r2,3
   891b4:	1000361e 	bne	r2,zero,89290 <__srefill_r+0x144>
   891b8:	81800417 	ldw	r6,16(r16)
   891bc:	80c00817 	ldw	r3,32(r16)
   891c0:	81400717 	ldw	r5,28(r16)
   891c4:	81c00517 	ldw	r7,20(r16)
   891c8:	8809883a 	mov	r4,r17
   891cc:	81800015 	stw	r6,0(r16)
   891d0:	183ee83a 	callr	r3
   891d4:	80c0030b 	ldhu	r3,12(r16)
   891d8:	1009883a 	mov	r4,r2
   891dc:	80800115 	stw	r2,4(r16)
   891e0:	00b7ffc4 	movi	r2,-8193
   891e4:	1884703a 	and	r2,r3,r2
   891e8:	8080030d 	sth	r2,12(r16)
   891ec:	0100230e 	bge	zero,r4,8927c <__srefill_r+0x130>
   891f0:	0009883a 	mov	r4,zero
   891f4:	2005883a 	mov	r2,r4
   891f8:	dfc00217 	ldw	ra,8(sp)
   891fc:	dc400117 	ldw	r17,4(sp)
   89200:	dc000017 	ldw	r16,0(sp)
   89204:	dec00304 	addi	sp,sp,12
   89208:	f800283a 	ret
   8920c:	81400c17 	ldw	r5,48(r16)
   89210:	283fe426 	beq	r5,zero,891a4 <__srefill_r+0x58>
   89214:	80801004 	addi	r2,r16,64
   89218:	28800226 	beq	r5,r2,89224 <__srefill_r+0xd8>
   8921c:	8809883a 	mov	r4,r17
   89220:	00861f00 	call	861f0 <_free_r>
   89224:	80800f17 	ldw	r2,60(r16)
   89228:	80000c15 	stw	zero,48(r16)
   8922c:	80800115 	stw	r2,4(r16)
   89230:	103fdc26 	beq	r2,zero,891a4 <__srefill_r+0x58>
   89234:	80800e17 	ldw	r2,56(r16)
   89238:	0009883a 	mov	r4,zero
   8923c:	80800015 	stw	r2,0(r16)
   89240:	2005883a 	mov	r2,r4
   89244:	dfc00217 	ldw	ra,8(sp)
   89248:	dc400117 	ldw	r17,4(sp)
   8924c:	dc000017 	ldw	r16,0(sp)
   89250:	dec00304 	addi	sp,sp,12
   89254:	f800283a 	ret
   89258:	013fffc4 	movi	r4,-1
   8925c:	2005883a 	mov	r2,r4
   89260:	dfc00217 	ldw	ra,8(sp)
   89264:	dc400117 	ldw	r17,4(sp)
   89268:	dc000017 	ldw	r16,0(sp)
   8926c:	dec00304 	addi	sp,sp,12
   89270:	f800283a 	ret
   89274:	0085bec0 	call	85bec <__sinit>
   89278:	003fbd06 	br	89170 <__srefill_r+0x24>
   8927c:	20000b1e 	bne	r4,zero,892ac <__srefill_r+0x160>
   89280:	10800814 	ori	r2,r2,32
   89284:	013fffc4 	movi	r4,-1
   89288:	8080030d 	sth	r2,12(r16)
   8928c:	003fd906 	br	891f4 <__srefill_r+0xa8>
   89290:	00800274 	movhi	r2,9
   89294:	10963b04 	addi	r2,r2,22764
   89298:	11000017 	ldw	r4,0(r2)
   8929c:	01400274 	movhi	r5,9
   892a0:	2964c404 	addi	r5,r5,-27888
   892a4:	0086a680 	call	86a68 <_fwalk>
   892a8:	003fc306 	br	891b8 <__srefill_r+0x6c>
   892ac:	10801014 	ori	r2,r2,64
   892b0:	013fffc4 	movi	r4,-1
   892b4:	8080030d 	sth	r2,12(r16)
   892b8:	80000115 	stw	zero,4(r16)
   892bc:	003fcd06 	br	891f4 <__srefill_r+0xa8>
   892c0:	8809883a 	mov	r4,r17
   892c4:	800b883a 	mov	r5,r16
   892c8:	0086c100 	call	86c10 <__smakebuf_r>
   892cc:	003fb706 	br	891ac <__srefill_r+0x60>
   892d0:	18c01014 	ori	r3,r3,64
   892d4:	00800244 	movi	r2,9
   892d8:	013fffc4 	movi	r4,-1
   892dc:	88800015 	stw	r2,0(r17)
   892e0:	80c0030d 	sth	r3,12(r16)
   892e4:	003fc306 	br	891f4 <__srefill_r+0xa8>
   892e8:	8809883a 	mov	r4,r17
   892ec:	800b883a 	mov	r5,r16
   892f0:	00859540 	call	85954 <_fflush_r>
   892f4:	103fd81e 	bne	r2,zero,89258 <__srefill_r+0x10c>
   892f8:	8080030b 	ldhu	r2,12(r16)
   892fc:	80000215 	stw	zero,8(r16)
   89300:	80000615 	stw	zero,24(r16)
   89304:	10bffdcc 	andi	r2,r2,65527
   89308:	8080030d 	sth	r2,12(r16)
   8930c:	003fa206 	br	89198 <__srefill_r+0x4c>

00089310 <lflush>:
   89310:	20c0030b 	ldhu	r3,12(r4)
   89314:	01400244 	movi	r5,9
   89318:	0005883a 	mov	r2,zero
   8931c:	18c0024c 	andi	r3,r3,9
   89320:	19400126 	beq	r3,r5,89328 <lflush+0x18>
   89324:	f800283a 	ret
   89328:	0085b501 	jmpi	85b50 <fflush>

0008932c <__isinfd>:
   8932c:	200d883a 	mov	r6,r4
   89330:	0109c83a 	sub	r4,zero,r4
   89334:	2188b03a 	or	r4,r4,r6
   89338:	2008d7fa 	srli	r4,r4,31
   8933c:	00a00034 	movhi	r2,32768
   89340:	10bfffc4 	addi	r2,r2,-1
   89344:	1144703a 	and	r2,r2,r5
   89348:	2088b03a 	or	r4,r4,r2
   8934c:	009ffc34 	movhi	r2,32752
   89350:	1105c83a 	sub	r2,r2,r4
   89354:	0087c83a 	sub	r3,zero,r2
   89358:	10c4b03a 	or	r2,r2,r3
   8935c:	1004d7fa 	srli	r2,r2,31
   89360:	00c00044 	movi	r3,1
   89364:	1885c83a 	sub	r2,r3,r2
   89368:	f800283a 	ret

0008936c <__isnand>:
   8936c:	200d883a 	mov	r6,r4
   89370:	0109c83a 	sub	r4,zero,r4
   89374:	2188b03a 	or	r4,r4,r6
   89378:	2008d7fa 	srli	r4,r4,31
   8937c:	00a00034 	movhi	r2,32768
   89380:	10bfffc4 	addi	r2,r2,-1
   89384:	1144703a 	and	r2,r2,r5
   89388:	2088b03a 	or	r4,r4,r2
   8938c:	009ffc34 	movhi	r2,32752
   89390:	1105c83a 	sub	r2,r2,r4
   89394:	1004d7fa 	srli	r2,r2,31
   89398:	f800283a 	ret

0008939c <_sbrk_r>:
   8939c:	defffd04 	addi	sp,sp,-12
   893a0:	dc000015 	stw	r16,0(sp)
   893a4:	04000274 	movhi	r16,9
   893a8:	841d3c04 	addi	r16,r16,29936
   893ac:	dc400115 	stw	r17,4(sp)
   893b0:	80000015 	stw	zero,0(r16)
   893b4:	2023883a 	mov	r17,r4
   893b8:	2809883a 	mov	r4,r5
   893bc:	dfc00215 	stw	ra,8(sp)
   893c0:	009024c0 	call	9024c <sbrk>
   893c4:	1007883a 	mov	r3,r2
   893c8:	00bfffc4 	movi	r2,-1
   893cc:	18800626 	beq	r3,r2,893e8 <_sbrk_r+0x4c>
   893d0:	1805883a 	mov	r2,r3
   893d4:	dfc00217 	ldw	ra,8(sp)
   893d8:	dc400117 	ldw	r17,4(sp)
   893dc:	dc000017 	ldw	r16,0(sp)
   893e0:	dec00304 	addi	sp,sp,12
   893e4:	f800283a 	ret
   893e8:	80800017 	ldw	r2,0(r16)
   893ec:	103ff826 	beq	r2,zero,893d0 <_sbrk_r+0x34>
   893f0:	88800015 	stw	r2,0(r17)
   893f4:	1805883a 	mov	r2,r3
   893f8:	dfc00217 	ldw	ra,8(sp)
   893fc:	dc400117 	ldw	r17,4(sp)
   89400:	dc000017 	ldw	r16,0(sp)
   89404:	dec00304 	addi	sp,sp,12
   89408:	f800283a 	ret

0008940c <__sccl>:
   8940c:	28c00003 	ldbu	r3,0(r5)
   89410:	00801784 	movi	r2,94
   89414:	2a000044 	addi	r8,r5,1
   89418:	18802526 	beq	r3,r2,894b0 <__sccl+0xa4>
   8941c:	180f883a 	mov	r7,r3
   89420:	0013883a 	mov	r9,zero
   89424:	000d883a 	mov	r6,zero
   89428:	0007883a 	mov	r3,zero
   8942c:	01404004 	movi	r5,256
   89430:	1905883a 	add	r2,r3,r4
   89434:	18c00044 	addi	r3,r3,1
   89438:	11800005 	stb	r6,0(r2)
   8943c:	197ffc1e 	bne	r3,r5,89430 <__sccl+0x24>
   89440:	38000c26 	beq	r7,zero,89474 <__sccl+0x68>
   89444:	00800044 	movi	r2,1
   89448:	124dc83a 	sub	r6,r2,r9
   8944c:	3905883a 	add	r2,r7,r4
   89450:	11800005 	stb	r6,0(r2)
   89454:	41400044 	addi	r5,r8,1
   89458:	02400b44 	movi	r9,45
   8945c:	02801744 	movi	r10,93
   89460:	28bfffc3 	ldbu	r2,-1(r5)
   89464:	2811883a 	mov	r8,r5
   89468:	12400726 	beq	r2,r9,89488 <__sccl+0x7c>
   8946c:	12800226 	beq	r2,r10,89478 <__sccl+0x6c>
   89470:	1000031e 	bne	r2,zero,89480 <__sccl+0x74>
   89474:	423fffc4 	addi	r8,r8,-1
   89478:	4005883a 	mov	r2,r8
   8947c:	f800283a 	ret
   89480:	100f883a 	mov	r7,r2
   89484:	003ff106 	br	8944c <__sccl+0x40>
   89488:	28c00003 	ldbu	r3,0(r5)
   8948c:	1a800d26 	beq	r3,r10,894c4 <__sccl+0xb8>
   89490:	19c00c16 	blt	r3,r7,894c4 <__sccl+0xb8>
   89494:	21c5883a 	add	r2,r4,r7
   89498:	39c00044 	addi	r7,r7,1
   8949c:	11800045 	stb	r6,1(r2)
   894a0:	10800044 	addi	r2,r2,1
   894a4:	38fffc16 	blt	r7,r3,89498 <__sccl+0x8c>
   894a8:	29400084 	addi	r5,r5,2
   894ac:	003fec06 	br	89460 <__sccl+0x54>
   894b0:	29c00043 	ldbu	r7,1(r5)
   894b4:	02400044 	movi	r9,1
   894b8:	2a000084 	addi	r8,r5,2
   894bc:	480d883a 	mov	r6,r9
   894c0:	003fd906 	br	89428 <__sccl+0x1c>
   894c4:	01c00b44 	movi	r7,45
   894c8:	003fe006 	br	8944c <__sccl+0x40>

000894cc <nanf>:
   894cc:	009ff034 	movhi	r2,32704
   894d0:	f800283a 	ret

000894d4 <sprintf>:
   894d4:	deffe504 	addi	sp,sp,-108
   894d8:	2013883a 	mov	r9,r4
   894dc:	dfc01815 	stw	ra,96(sp)
   894e0:	d9801915 	stw	r6,100(sp)
   894e4:	d9c01a15 	stw	r7,104(sp)
   894e8:	d8801904 	addi	r2,sp,100
   894ec:	d8800015 	stw	r2,0(sp)
   894f0:	00800274 	movhi	r2,9
   894f4:	10963a04 	addi	r2,r2,22760
   894f8:	11000017 	ldw	r4,0(r2)
   894fc:	d9c00017 	ldw	r7,0(sp)
   89500:	00808204 	movi	r2,520
   89504:	00e00034 	movhi	r3,32768
   89508:	18ffffc4 	addi	r3,r3,-1
   8950c:	280d883a 	mov	r6,r5
   89510:	d880040d 	sth	r2,16(sp)
   89514:	d9400104 	addi	r5,sp,4
   89518:	00bfffc4 	movi	r2,-1
   8951c:	d8c00615 	stw	r3,24(sp)
   89520:	d8c00315 	stw	r3,12(sp)
   89524:	da400515 	stw	r9,20(sp)
   89528:	d880048d 	sth	r2,18(sp)
   8952c:	da400115 	stw	r9,4(sp)
   89530:	00809b00 	call	809b0 <___vfprintf_internal_r>
   89534:	d8c00117 	ldw	r3,4(sp)
   89538:	18000005 	stb	zero,0(r3)
   8953c:	dfc01817 	ldw	ra,96(sp)
   89540:	dec01b04 	addi	sp,sp,108
   89544:	f800283a 	ret

00089548 <_sprintf_r>:
   89548:	deffe604 	addi	sp,sp,-104
   8954c:	2813883a 	mov	r9,r5
   89550:	dfc01815 	stw	ra,96(sp)
   89554:	d9c01915 	stw	r7,100(sp)
   89558:	d8801904 	addi	r2,sp,100
   8955c:	d8800015 	stw	r2,0(sp)
   89560:	100f883a 	mov	r7,r2
   89564:	00808204 	movi	r2,520
   89568:	00e00034 	movhi	r3,32768
   8956c:	18ffffc4 	addi	r3,r3,-1
   89570:	d880040d 	sth	r2,16(sp)
   89574:	d9400104 	addi	r5,sp,4
   89578:	00bfffc4 	movi	r2,-1
   8957c:	d8c00615 	stw	r3,24(sp)
   89580:	d8c00315 	stw	r3,12(sp)
   89584:	da400515 	stw	r9,20(sp)
   89588:	d880048d 	sth	r2,18(sp)
   8958c:	da400115 	stw	r9,4(sp)
   89590:	00809b00 	call	809b0 <___vfprintf_internal_r>
   89594:	d8c00117 	ldw	r3,4(sp)
   89598:	18000005 	stb	zero,0(r3)
   8959c:	dfc01817 	ldw	ra,96(sp)
   895a0:	dec01a04 	addi	sp,sp,104
   895a4:	f800283a 	ret

000895a8 <__sclose>:
   895a8:	2940038f 	ldh	r5,14(r5)
   895ac:	008be481 	jmpi	8be48 <_close_r>

000895b0 <__sseek>:
   895b0:	defffe04 	addi	sp,sp,-8
   895b4:	dc000015 	stw	r16,0(sp)
   895b8:	2821883a 	mov	r16,r5
   895bc:	2940038f 	ldh	r5,14(r5)
   895c0:	dfc00115 	stw	ra,4(sp)
   895c4:	008cc8c0 	call	8cc8c <_lseek_r>
   895c8:	1007883a 	mov	r3,r2
   895cc:	00bfffc4 	movi	r2,-1
   895d0:	18800926 	beq	r3,r2,895f8 <__sseek+0x48>
   895d4:	8080030b 	ldhu	r2,12(r16)
   895d8:	80c01415 	stw	r3,80(r16)
   895dc:	10840014 	ori	r2,r2,4096
   895e0:	8080030d 	sth	r2,12(r16)
   895e4:	1805883a 	mov	r2,r3
   895e8:	dfc00117 	ldw	ra,4(sp)
   895ec:	dc000017 	ldw	r16,0(sp)
   895f0:	dec00204 	addi	sp,sp,8
   895f4:	f800283a 	ret
   895f8:	8080030b 	ldhu	r2,12(r16)
   895fc:	10bbffcc 	andi	r2,r2,61439
   89600:	8080030d 	sth	r2,12(r16)
   89604:	1805883a 	mov	r2,r3
   89608:	dfc00117 	ldw	ra,4(sp)
   8960c:	dc000017 	ldw	r16,0(sp)
   89610:	dec00204 	addi	sp,sp,8
   89614:	f800283a 	ret

00089618 <__swrite>:
   89618:	2880030b 	ldhu	r2,12(r5)
   8961c:	defffb04 	addi	sp,sp,-20
   89620:	dcc00315 	stw	r19,12(sp)
   89624:	1080400c 	andi	r2,r2,256
   89628:	dc800215 	stw	r18,8(sp)
   8962c:	dc400115 	stw	r17,4(sp)
   89630:	dc000015 	stw	r16,0(sp)
   89634:	3027883a 	mov	r19,r6
   89638:	3825883a 	mov	r18,r7
   8963c:	dfc00415 	stw	ra,16(sp)
   89640:	2821883a 	mov	r16,r5
   89644:	000d883a 	mov	r6,zero
   89648:	01c00084 	movi	r7,2
   8964c:	2023883a 	mov	r17,r4
   89650:	10000226 	beq	r2,zero,8965c <__swrite+0x44>
   89654:	2940038f 	ldh	r5,14(r5)
   89658:	008cc8c0 	call	8cc8c <_lseek_r>
   8965c:	8080030b 	ldhu	r2,12(r16)
   89660:	8140038f 	ldh	r5,14(r16)
   89664:	8809883a 	mov	r4,r17
   89668:	10bbffcc 	andi	r2,r2,61439
   8966c:	980d883a 	mov	r6,r19
   89670:	900f883a 	mov	r7,r18
   89674:	8080030d 	sth	r2,12(r16)
   89678:	dfc00417 	ldw	ra,16(sp)
   8967c:	dcc00317 	ldw	r19,12(sp)
   89680:	dc800217 	ldw	r18,8(sp)
   89684:	dc400117 	ldw	r17,4(sp)
   89688:	dc000017 	ldw	r16,0(sp)
   8968c:	dec00504 	addi	sp,sp,20
   89690:	008bd081 	jmpi	8bd08 <_write_r>

00089694 <__sread>:
   89694:	defffe04 	addi	sp,sp,-8
   89698:	dc000015 	stw	r16,0(sp)
   8969c:	2821883a 	mov	r16,r5
   896a0:	2940038f 	ldh	r5,14(r5)
   896a4:	dfc00115 	stw	ra,4(sp)
   896a8:	008cd040 	call	8cd04 <_read_r>
   896ac:	1007883a 	mov	r3,r2
   896b0:	10000816 	blt	r2,zero,896d4 <__sread+0x40>
   896b4:	80801417 	ldw	r2,80(r16)
   896b8:	10c5883a 	add	r2,r2,r3
   896bc:	80801415 	stw	r2,80(r16)
   896c0:	1805883a 	mov	r2,r3
   896c4:	dfc00117 	ldw	ra,4(sp)
   896c8:	dc000017 	ldw	r16,0(sp)
   896cc:	dec00204 	addi	sp,sp,8
   896d0:	f800283a 	ret
   896d4:	8080030b 	ldhu	r2,12(r16)
   896d8:	10bbffcc 	andi	r2,r2,61439
   896dc:	8080030d 	sth	r2,12(r16)
   896e0:	1805883a 	mov	r2,r3
   896e4:	dfc00117 	ldw	ra,4(sp)
   896e8:	dc000017 	ldw	r16,0(sp)
   896ec:	dec00204 	addi	sp,sp,8
   896f0:	f800283a 	ret

000896f4 <match>:
   896f4:	21800017 	ldw	r6,0(r4)
   896f8:	01c01004 	movi	r7,64
   896fc:	02001684 	movi	r8,90
   89700:	28800007 	ldb	r2,0(r5)
   89704:	29400044 	addi	r5,r5,1
   89708:	10000826 	beq	r2,zero,8972c <match+0x38>
   8970c:	31800044 	addi	r6,r6,1
   89710:	30c00007 	ldb	r3,0(r6)
   89714:	38c0020e 	bge	r7,r3,89720 <match+0x2c>
   89718:	40c00116 	blt	r8,r3,89720 <match+0x2c>
   8971c:	18c00804 	addi	r3,r3,32
   89720:	18bff726 	beq	r3,r2,89700 <match+0xc>
   89724:	0005883a 	mov	r2,zero
   89728:	f800283a 	ret
   8972c:	30800044 	addi	r2,r6,1
   89730:	20800015 	stw	r2,0(r4)
   89734:	00800044 	movi	r2,1
   89738:	f800283a 	ret

0008973c <_strtod_r>:
   8973c:	deffd504 	addi	sp,sp,-172
   89740:	df002915 	stw	fp,164(sp)
   89744:	dd402615 	stw	r21,152(sp)
   89748:	dd002515 	stw	r20,148(sp)
   8974c:	dfc02a15 	stw	ra,168(sp)
   89750:	ddc02815 	stw	r23,160(sp)
   89754:	dd802715 	stw	r22,156(sp)
   89758:	dcc02415 	stw	r19,144(sp)
   8975c:	dc802315 	stw	r18,140(sp)
   89760:	dc402215 	stw	r17,136(sp)
   89764:	dc002115 	stw	r16,132(sp)
   89768:	2829883a 	mov	r20,r5
   8976c:	202b883a 	mov	r21,r4
   89770:	d9801d15 	stw	r6,116(sp)
   89774:	d8000915 	stw	zero,36(sp)
   89778:	d8000a15 	stw	zero,40(sp)
   8977c:	d9400415 	stw	r5,16(sp)
   89780:	df000904 	addi	fp,sp,36
   89784:	dc000417 	ldw	r16,16(sp)
   89788:	00800b44 	movi	r2,45
   8978c:	80c00003 	ldbu	r3,0(r16)
   89790:	10c03536 	bltu	r2,r3,89868 <_strtod_r+0x12c>
   89794:	18c5883a 	add	r2,r3,r3
   89798:	1085883a 	add	r2,r2,r2
   8979c:	00c00274 	movhi	r3,9
   897a0:	18e5ec04 	addi	r3,r3,-26704
   897a4:	10c5883a 	add	r2,r2,r3
   897a8:	11000017 	ldw	r4,0(r2)
   897ac:	2000683a 	jmp	r4
   897b0:	000899e8 	cmpgeui	zero,zero,8807
   897b4:	00089868 	cmpgeui	zero,zero,8801
   897b8:	00089868 	cmpgeui	zero,zero,8801
   897bc:	00089868 	cmpgeui	zero,zero,8801
   897c0:	00089868 	cmpgeui	zero,zero,8801
   897c4:	00089868 	cmpgeui	zero,zero,8801
   897c8:	00089868 	cmpgeui	zero,zero,8801
   897cc:	00089868 	cmpgeui	zero,zero,8801
   897d0:	00089868 	cmpgeui	zero,zero,8801
   897d4:	00089d30 	cmpltui	zero,zero,8820
   897d8:	00089d30 	cmpltui	zero,zero,8820
   897dc:	00089d30 	cmpltui	zero,zero,8820
   897e0:	00089d30 	cmpltui	zero,zero,8820
   897e4:	00089d30 	cmpltui	zero,zero,8820
   897e8:	00089868 	cmpgeui	zero,zero,8801
   897ec:	00089868 	cmpgeui	zero,zero,8801
   897f0:	00089868 	cmpgeui	zero,zero,8801
   897f4:	00089868 	cmpgeui	zero,zero,8801
   897f8:	00089868 	cmpgeui	zero,zero,8801
   897fc:	00089868 	cmpgeui	zero,zero,8801
   89800:	00089868 	cmpgeui	zero,zero,8801
   89804:	00089868 	cmpgeui	zero,zero,8801
   89808:	00089868 	cmpgeui	zero,zero,8801
   8980c:	00089868 	cmpgeui	zero,zero,8801
   89810:	00089868 	cmpgeui	zero,zero,8801
   89814:	00089868 	cmpgeui	zero,zero,8801
   89818:	00089868 	cmpgeui	zero,zero,8801
   8981c:	00089868 	cmpgeui	zero,zero,8801
   89820:	00089868 	cmpgeui	zero,zero,8801
   89824:	00089868 	cmpgeui	zero,zero,8801
   89828:	00089868 	cmpgeui	zero,zero,8801
   8982c:	00089868 	cmpgeui	zero,zero,8801
   89830:	00089d30 	cmpltui	zero,zero,8820
   89834:	00089868 	cmpgeui	zero,zero,8801
   89838:	00089868 	cmpgeui	zero,zero,8801
   8983c:	00089868 	cmpgeui	zero,zero,8801
   89840:	00089868 	cmpgeui	zero,zero,8801
   89844:	00089868 	cmpgeui	zero,zero,8801
   89848:	00089868 	cmpgeui	zero,zero,8801
   8984c:	00089868 	cmpgeui	zero,zero,8801
   89850:	00089868 	cmpgeui	zero,zero,8801
   89854:	00089868 	cmpgeui	zero,zero,8801
   89858:	00089868 	cmpgeui	zero,zero,8801
   8985c:	00089d10 	cmplti	zero,zero,8820
   89860:	00089868 	cmpgeui	zero,zero,8801
   89864:	00089d3c 	xorhi	zero,zero,8820
   89868:	d8001515 	stw	zero,84(sp)
   8986c:	80c00007 	ldb	r3,0(r16)
   89870:	00800c04 	movi	r2,48
   89874:	1880e926 	beq	r3,r2,89c1c <_strtod_r+0x4e0>
   89878:	d8001615 	stw	zero,88(sp)
   8987c:	dc001415 	stw	r16,80(sp)
   89880:	84400007 	ldb	r17,0(r16)
   89884:	00800bc4 	movi	r2,47
   89888:	1443760e 	bge	r2,r17,8a664 <_strtod_r+0xf28>
   8988c:	00800e44 	movi	r2,57
   89890:	14437416 	blt	r2,r17,8a664 <_strtod_r+0xf28>
   89894:	8025883a 	mov	r18,r16
   89898:	0027883a 	mov	r19,zero
   8989c:	d8001215 	stw	zero,72(sp)
   898a0:	d8001115 	stw	zero,68(sp)
   898a4:	00000f06 	br	898e4 <_strtod_r+0x1a8>
   898a8:	d9001217 	ldw	r4,72(sp)
   898ac:	01400284 	movi	r5,10
   898b0:	00806240 	call	80624 <__mulsi3>
   898b4:	1445883a 	add	r2,r2,r17
   898b8:	10bff404 	addi	r2,r2,-48
   898bc:	d8801215 	stw	r2,72(sp)
   898c0:	94000044 	addi	r16,r18,1
   898c4:	dc000415 	stw	r16,16(sp)
   898c8:	84400007 	ldb	r17,0(r16)
   898cc:	00800bc4 	movi	r2,47
   898d0:	9cc00044 	addi	r19,r19,1
   898d4:	8025883a 	mov	r18,r16
   898d8:	1440130e 	bge	r2,r17,89928 <_strtod_r+0x1ec>
   898dc:	00800e44 	movi	r2,57
   898e0:	14401116 	blt	r2,r17,89928 <_strtod_r+0x1ec>
   898e4:	00800204 	movi	r2,8
   898e8:	14ffef0e 	bge	r2,r19,898a8 <_strtod_r+0x16c>
   898ec:	008003c4 	movi	r2,15
   898f0:	14fff316 	blt	r2,r19,898c0 <_strtod_r+0x184>
   898f4:	d9001117 	ldw	r4,68(sp)
   898f8:	01400284 	movi	r5,10
   898fc:	94000044 	addi	r16,r18,1
   89900:	00806240 	call	80624 <__mulsi3>
   89904:	1445883a 	add	r2,r2,r17
   89908:	10bff404 	addi	r2,r2,-48
   8990c:	d8801115 	stw	r2,68(sp)
   89910:	dc000415 	stw	r16,16(sp)
   89914:	84400007 	ldb	r17,0(r16)
   89918:	00800bc4 	movi	r2,47
   8991c:	9cc00044 	addi	r19,r19,1
   89920:	8025883a 	mov	r18,r16
   89924:	147fed16 	blt	r2,r17,898dc <_strtod_r+0x1a0>
   89928:	00800b84 	movi	r2,46
   8992c:	8880c926 	beq	r17,r2,89c54 <_strtod_r+0x518>
   89930:	dcc01815 	stw	r19,96(sp)
   89934:	d8001b15 	stw	zero,108(sp)
   89938:	d8001715 	stw	zero,92(sp)
   8993c:	000d883a 	mov	r6,zero
   89940:	00801944 	movi	r2,101
   89944:	88802126 	beq	r17,r2,899cc <_strtod_r+0x290>
   89948:	00801144 	movi	r2,69
   8994c:	88801f26 	beq	r17,r2,899cc <_strtod_r+0x290>
   89950:	d9001817 	ldw	r4,96(sp)
   89954:	2024c03a 	cmpne	r18,r4,zero
   89958:	0009883a 	mov	r4,zero
   8995c:	9000651e 	bne	r18,zero,89af4 <_strtod_r+0x3b8>
   89960:	3000c926 	beq	r6,zero,89c88 <_strtod_r+0x54c>
   89964:	d8801d17 	ldw	r2,116(sp)
   89968:	10000326 	beq	r2,zero,89978 <_strtod_r+0x23c>
   8996c:	d8800417 	ldw	r2,16(sp)
   89970:	d8c01d17 	ldw	r3,116(sp)
   89974:	18800015 	stw	r2,0(r3)
   89978:	d9001517 	ldw	r4,84(sp)
   8997c:	2005003a 	cmpeq	r2,r4,zero
   89980:	10001c1e 	bne	r2,zero,899f4 <_strtod_r+0x2b8>
   89984:	e0800017 	ldw	r2,0(fp)
   89988:	e0c00117 	ldw	r3,4(fp)
   8998c:	1009883a 	mov	r4,r2
   89990:	1960003c 	xorhi	r5,r3,32768
   89994:	2005883a 	mov	r2,r4
   89998:	2807883a 	mov	r3,r5
   8999c:	dfc02a17 	ldw	ra,168(sp)
   899a0:	df002917 	ldw	fp,164(sp)
   899a4:	ddc02817 	ldw	r23,160(sp)
   899a8:	dd802717 	ldw	r22,156(sp)
   899ac:	dd402617 	ldw	r21,152(sp)
   899b0:	dd002517 	ldw	r20,148(sp)
   899b4:	dcc02417 	ldw	r19,144(sp)
   899b8:	dc802317 	ldw	r18,140(sp)
   899bc:	dc402217 	ldw	r17,136(sp)
   899c0:	dc002117 	ldw	r16,132(sp)
   899c4:	dec02b04 	addi	sp,sp,172
   899c8:	f800283a 	ret
   899cc:	d8801817 	ldw	r2,96(sp)
   899d0:	1024c03a 	cmpne	r18,r2,zero
   899d4:	90000a1e 	bne	r18,zero,89a00 <_strtod_r+0x2c4>
   899d8:	3000091e 	bne	r6,zero,89a00 <_strtod_r+0x2c4>
   899dc:	d8c01617 	ldw	r3,88(sp)
   899e0:	1805003a 	cmpeq	r2,r3,zero
   899e4:	10000626 	beq	r2,zero,89a00 <_strtod_r+0x2c4>
   899e8:	d8001515 	stw	zero,84(sp)
   899ec:	dd000415 	stw	r20,16(sp)
   899f0:	003fdc06 	br	89964 <_strtod_r+0x228>
   899f4:	e1000017 	ldw	r4,0(fp)
   899f8:	e1400117 	ldw	r5,4(fp)
   899fc:	003fe506 	br	89994 <_strtod_r+0x258>
   89a00:	dd000417 	ldw	r20,16(sp)
   89a04:	00800ac4 	movi	r2,43
   89a08:	a4000044 	addi	r16,r20,1
   89a0c:	dc000415 	stw	r16,16(sp)
   89a10:	a0c00047 	ldb	r3,1(r20)
   89a14:	8009883a 	mov	r4,r16
   89a18:	1880cb26 	beq	r3,r2,89d48 <_strtod_r+0x60c>
   89a1c:	00800b44 	movi	r2,45
   89a20:	18838326 	beq	r3,r2,8a830 <_strtod_r+0x10f4>
   89a24:	1823883a 	mov	r17,r3
   89a28:	88fff404 	addi	r3,r17,-48
   89a2c:	00800244 	movi	r2,9
   89a30:	d8001915 	stw	zero,100(sp)
   89a34:	10c0cb36 	bltu	r2,r3,89d64 <_strtod_r+0x628>
   89a38:	00800c04 	movi	r2,48
   89a3c:	8880061e 	bne	r17,r2,89a58 <_strtod_r+0x31c>
   89a40:	dc000417 	ldw	r16,16(sp)
   89a44:	8805883a 	mov	r2,r17
   89a48:	84000044 	addi	r16,r16,1
   89a4c:	dc000415 	stw	r16,16(sp)
   89a50:	84400007 	ldb	r17,0(r16)
   89a54:	88bffc26 	beq	r17,r2,89a48 <_strtod_r+0x30c>
   89a58:	88fff3c4 	addi	r3,r17,-49
   89a5c:	00800204 	movi	r2,8
   89a60:	10ffbd36 	bltu	r2,r3,89958 <_strtod_r+0x21c>
   89a64:	dc000417 	ldw	r16,16(sp)
   89a68:	893ff404 	addi	r4,r17,-48
   89a6c:	00c00bc4 	movi	r3,47
   89a70:	dc001315 	stw	r16,76(sp)
   89a74:	84000044 	addi	r16,r16,1
   89a78:	dc000415 	stw	r16,16(sp)
   89a7c:	84400007 	ldb	r17,0(r16)
   89a80:	1c40100e 	bge	r3,r17,89ac4 <_strtod_r+0x388>
   89a84:	00800e44 	movi	r2,57
   89a88:	14400e16 	blt	r2,r17,89ac4 <_strtod_r+0x388>
   89a8c:	182f883a 	mov	r23,r3
   89a90:	102d883a 	mov	r22,r2
   89a94:	00000106 	br	89a9c <_strtod_r+0x360>
   89a98:	b4400a16 	blt	r22,r17,89ac4 <_strtod_r+0x388>
   89a9c:	84000044 	addi	r16,r16,1
   89aa0:	01400284 	movi	r5,10
   89aa4:	d9802015 	stw	r6,128(sp)
   89aa8:	00806240 	call	80624 <__mulsi3>
   89aac:	dc000415 	stw	r16,16(sp)
   89ab0:	8885883a 	add	r2,r17,r2
   89ab4:	84400007 	ldb	r17,0(r16)
   89ab8:	113ff404 	addi	r4,r2,-48
   89abc:	d9802017 	ldw	r6,128(sp)
   89ac0:	bc7ff516 	blt	r23,r17,89a98 <_strtod_r+0x35c>
   89ac4:	d8801317 	ldw	r2,76(sp)
   89ac8:	8087c83a 	sub	r3,r16,r2
   89acc:	00800204 	movi	r2,8
   89ad0:	10c2ff16 	blt	r2,r3,8a6d0 <_strtod_r+0xf94>
   89ad4:	009387c4 	movi	r2,19999
   89ad8:	1100010e 	bge	r2,r4,89ae0 <_strtod_r+0x3a4>
   89adc:	1009883a 	mov	r4,r2
   89ae0:	d8c01917 	ldw	r3,100(sp)
   89ae4:	1805003a 	cmpeq	r2,r3,zero
   89ae8:	103f9c1e 	bne	r2,zero,8995c <_strtod_r+0x220>
   89aec:	0109c83a 	sub	r4,zero,r4
   89af0:	903f9b26 	beq	r18,zero,89960 <_strtod_r+0x224>
   89af4:	d8801717 	ldw	r2,92(sp)
   89af8:	2089c83a 	sub	r4,r4,r2
   89afc:	d9000f15 	stw	r4,60(sp)
   89b00:	9800811e 	bne	r19,zero,89d08 <_strtod_r+0x5cc>
   89b04:	dd001817 	ldw	r20,96(sp)
   89b08:	dc801817 	ldw	r18,96(sp)
   89b0c:	00800404 	movi	r2,16
   89b10:	1480010e 	bge	r2,r18,89b18 <_strtod_r+0x3dc>
   89b14:	1025883a 	mov	r18,r2
   89b18:	d9001217 	ldw	r4,72(sp)
   89b1c:	008ee0c0 	call	8ee0c <__floatunsidf>
   89b20:	100f883a 	mov	r7,r2
   89b24:	e0800015 	stw	r2,0(fp)
   89b28:	00800244 	movi	r2,9
   89b2c:	e0c00115 	stw	r3,4(fp)
   89b30:	1480160e 	bge	r2,r18,89b8c <_strtod_r+0x450>
   89b34:	900c90fa 	slli	r6,r18,3
   89b38:	01000274 	movhi	r4,9
   89b3c:	210ead04 	addi	r4,r4,15028
   89b40:	180b883a 	mov	r5,r3
   89b44:	310d883a 	add	r6,r6,r4
   89b48:	30ffef17 	ldw	r3,-68(r6)
   89b4c:	30bfee17 	ldw	r2,-72(r6)
   89b50:	3809883a 	mov	r4,r7
   89b54:	180f883a 	mov	r7,r3
   89b58:	100d883a 	mov	r6,r2
   89b5c:	008e27c0 	call	8e27c <__muldf3>
   89b60:	d9001117 	ldw	r4,68(sp)
   89b64:	1021883a 	mov	r16,r2
   89b68:	1823883a 	mov	r17,r3
   89b6c:	008ee0c0 	call	8ee0c <__floatunsidf>
   89b70:	880b883a 	mov	r5,r17
   89b74:	180f883a 	mov	r7,r3
   89b78:	8009883a 	mov	r4,r16
   89b7c:	100d883a 	mov	r6,r2
   89b80:	008e2080 	call	8e208 <__adddf3>
   89b84:	e0c00115 	stw	r3,4(fp)
   89b88:	e0800015 	stw	r2,0(fp)
   89b8c:	d8c01817 	ldw	r3,96(sp)
   89b90:	010003c4 	movi	r4,15
   89b94:	20c09e16 	blt	r4,r3,89e10 <_strtod_r+0x6d4>
   89b98:	d8800f17 	ldw	r2,60(sp)
   89b9c:	103f7126 	beq	r2,zero,89964 <_strtod_r+0x228>
   89ba0:	0083d90e 	bge	zero,r2,8ab08 <_strtod_r+0x13cc>
   89ba4:	d8c00f17 	ldw	r3,60(sp)
   89ba8:	00800584 	movi	r2,22
   89bac:	10c2ca0e 	bge	r2,r3,8a6d8 <_strtod_r+0xf9c>
   89bb0:	d8801817 	ldw	r2,96(sp)
   89bb4:	d8c00f17 	ldw	r3,60(sp)
   89bb8:	20a3c83a 	sub	r17,r4,r2
   89bbc:	88800584 	addi	r2,r17,22
   89bc0:	10c09316 	blt	r2,r3,89e10 <_strtod_r+0x6d4>
   89bc4:	880890fa 	slli	r4,r17,3
   89bc8:	04000274 	movhi	r16,9
   89bcc:	840ead04 	addi	r16,r16,15028
   89bd0:	e0800017 	ldw	r2,0(fp)
   89bd4:	2409883a 	add	r4,r4,r16
   89bd8:	22000017 	ldw	r8,0(r4)
   89bdc:	22400117 	ldw	r9,4(r4)
   89be0:	e0c00117 	ldw	r3,4(fp)
   89be4:	1009883a 	mov	r4,r2
   89be8:	480f883a 	mov	r7,r9
   89bec:	180b883a 	mov	r5,r3
   89bf0:	400d883a 	mov	r6,r8
   89bf4:	008e27c0 	call	8e27c <__muldf3>
   89bf8:	d9000f17 	ldw	r4,60(sp)
   89bfc:	180b883a 	mov	r5,r3
   89c00:	2455c83a 	sub	r10,r4,r17
   89c04:	501490fa 	slli	r10,r10,3
   89c08:	1009883a 	mov	r4,r2
   89c0c:	5415883a 	add	r10,r10,r16
   89c10:	52000017 	ldw	r8,0(r10)
   89c14:	52400117 	ldw	r9,4(r10)
   89c18:	0002b906 	br	8a700 <_strtod_r+0xfc4>
   89c1c:	80c00047 	ldb	r3,1(r16)
   89c20:	00801604 	movi	r2,88
   89c24:	18805226 	beq	r3,r2,89d70 <_strtod_r+0x634>
   89c28:	00801e04 	movi	r2,120
   89c2c:	18805026 	beq	r3,r2,89d70 <_strtod_r+0x634>
   89c30:	84000044 	addi	r16,r16,1
   89c34:	dc000415 	stw	r16,16(sp)
   89c38:	80c00007 	ldb	r3,0(r16)
   89c3c:	00800c04 	movi	r2,48
   89c40:	18bffb26 	beq	r3,r2,89c30 <_strtod_r+0x4f4>
   89c44:	183f4726 	beq	r3,zero,89964 <_strtod_r+0x228>
   89c48:	01000044 	movi	r4,1
   89c4c:	d9001615 	stw	r4,88(sp)
   89c50:	003f0a06 	br	8987c <_strtod_r+0x140>
   89c54:	84000044 	addi	r16,r16,1
   89c58:	dc000415 	stw	r16,16(sp)
   89c5c:	94400047 	ldb	r17,1(r18)
   89c60:	9800ba26 	beq	r19,zero,89f4c <_strtod_r+0x810>
   89c64:	dcc01815 	stw	r19,96(sp)
   89c68:	d8001715 	stw	zero,92(sp)
   89c6c:	000d883a 	mov	r6,zero
   89c70:	8dbff404 	addi	r22,r17,-48
   89c74:	00800244 	movi	r2,9
   89c78:	15826e2e 	bgeu	r2,r22,8a634 <_strtod_r+0xef8>
   89c7c:	01000044 	movi	r4,1
   89c80:	d9001b15 	stw	r4,108(sp)
   89c84:	003f2e06 	br	89940 <_strtod_r+0x204>
   89c88:	d8c01617 	ldw	r3,88(sp)
   89c8c:	1804c03a 	cmpne	r2,r3,zero
   89c90:	103f341e 	bne	r2,zero,89964 <_strtod_r+0x228>
   89c94:	d9001b17 	ldw	r4,108(sp)
   89c98:	2004c03a 	cmpne	r2,r4,zero
   89c9c:	103f521e 	bne	r2,zero,899e8 <_strtod_r+0x2ac>
   89ca0:	00801384 	movi	r2,78
   89ca4:	8883b526 	beq	r17,r2,8ab7c <_strtod_r+0x1440>
   89ca8:	1443b016 	blt	r2,r17,8ab6c <_strtod_r+0x1430>
   89cac:	00801244 	movi	r2,73
   89cb0:	88bf4d1e 	bne	r17,r2,899e8 <_strtod_r+0x2ac>
   89cb4:	dc000404 	addi	r16,sp,16
   89cb8:	8009883a 	mov	r4,r16
   89cbc:	01400274 	movhi	r5,9
   89cc0:	294ef604 	addi	r5,r5,15320
   89cc4:	00896f40 	call	896f4 <match>
   89cc8:	103f4726 	beq	r2,zero,899e8 <_strtod_r+0x2ac>
   89ccc:	d8800417 	ldw	r2,16(sp)
   89cd0:	8009883a 	mov	r4,r16
   89cd4:	01400274 	movhi	r5,9
   89cd8:	294ef704 	addi	r5,r5,15324
   89cdc:	143fffc4 	addi	r16,r2,-1
   89ce0:	dc000415 	stw	r16,16(sp)
   89ce4:	00896f40 	call	896f4 <match>
   89ce8:	1000031e 	bne	r2,zero,89cf8 <_strtod_r+0x5bc>
   89cec:	d8800417 	ldw	r2,16(sp)
   89cf0:	14000044 	addi	r16,r2,1
   89cf4:	dc000415 	stw	r16,16(sp)
   89cf8:	019ffc34 	movhi	r6,32752
   89cfc:	e1800115 	stw	r6,4(fp)
   89d00:	e0000015 	stw	zero,0(fp)
   89d04:	003f1706 	br	89964 <_strtod_r+0x228>
   89d08:	9829883a 	mov	r20,r19
   89d0c:	003f7e06 	br	89b08 <_strtod_r+0x3cc>
   89d10:	d8001515 	stw	zero,84(sp)
   89d14:	84000044 	addi	r16,r16,1
   89d18:	dc000415 	stw	r16,16(sp)
   89d1c:	80800007 	ldb	r2,0(r16)
   89d20:	103ed21e 	bne	r2,zero,8986c <_strtod_r+0x130>
   89d24:	d8001515 	stw	zero,84(sp)
   89d28:	dd000415 	stw	r20,16(sp)
   89d2c:	003f0d06 	br	89964 <_strtod_r+0x228>
   89d30:	84000044 	addi	r16,r16,1
   89d34:	dc000415 	stw	r16,16(sp)
   89d38:	003e9206 	br	89784 <_strtod_r+0x48>
   89d3c:	00800044 	movi	r2,1
   89d40:	d8801515 	stw	r2,84(sp)
   89d44:	003ff306 	br	89d14 <_strtod_r+0x5d8>
   89d48:	d8001915 	stw	zero,100(sp)
   89d4c:	84000044 	addi	r16,r16,1
   89d50:	dc000415 	stw	r16,16(sp)
   89d54:	24400047 	ldb	r17,1(r4)
   89d58:	00800244 	movi	r2,9
   89d5c:	88fff404 	addi	r3,r17,-48
   89d60:	10ff352e 	bgeu	r2,r3,89a38 <_strtod_r+0x2fc>
   89d64:	0009883a 	mov	r4,zero
   89d68:	dd000415 	stw	r20,16(sp)
   89d6c:	003efb06 	br	8995c <_strtod_r+0x220>
   89d70:	d8c01517 	ldw	r3,84(sp)
   89d74:	04400274 	movhi	r17,9
   89d78:	8c516a04 	addi	r17,r17,17832
   89d7c:	d8800504 	addi	r2,sp,20
   89d80:	a809883a 	mov	r4,r21
   89d84:	d9400404 	addi	r5,sp,16
   89d88:	880d883a 	mov	r6,r17
   89d8c:	d9c00604 	addi	r7,sp,24
   89d90:	d8800015 	stw	r2,0(sp)
   89d94:	d8c00115 	stw	r3,4(sp)
   89d98:	008c18c0 	call	8c18c <__gethex>
   89d9c:	140001cc 	andi	r16,r2,7
   89da0:	1025883a 	mov	r18,r2
   89da4:	803eef26 	beq	r16,zero,89964 <_strtod_r+0x228>
   89da8:	04c00184 	movi	r19,6
   89dac:	84ff0e26 	beq	r16,r19,899e8 <_strtod_r+0x2ac>
   89db0:	d9800517 	ldw	r6,20(sp)
   89db4:	30000626 	beq	r6,zero,89dd0 <_strtod_r+0x694>
   89db8:	89400017 	ldw	r5,0(r17)
   89dbc:	d9000d04 	addi	r4,sp,52
   89dc0:	0087d800 	call	87d80 <__copybits>
   89dc4:	d9400517 	ldw	r5,20(sp)
   89dc8:	a809883a 	mov	r4,r21
   89dcc:	00878e00 	call	878e0 <_Bfree>
   89dd0:	d9400617 	ldw	r5,24(sp)
   89dd4:	9c025436 	bltu	r19,r16,8a728 <_strtod_r+0xfec>
   89dd8:	8405883a 	add	r2,r16,r16
   89ddc:	1085883a 	add	r2,r2,r2
   89de0:	00c00274 	movhi	r3,9
   89de4:	18e77d04 	addi	r3,r3,-25100
   89de8:	10c5883a 	add	r2,r2,r3
   89dec:	11000017 	ldw	r4,0(r2)
   89df0:	2000683a 	jmp	r4
   89df4:	0008a768 	cmpgeui	zero,zero,8861
   89df8:	0008a774 	movhi	zero,8861
   89dfc:	0008a718 	cmpnei	zero,zero,8860
   89e00:	0008a740 	call	8a74 <__alt_mem_sram_0-0x7758c>
   89e04:	0008a750 	cmplti	zero,zero,8861
   89e08:	0008a774 	movhi	zero,8861
   89e0c:	0008a768 	cmpgeui	zero,zero,8861
   89e10:	d9001817 	ldw	r4,96(sp)
   89e14:	d8c00f17 	ldw	r3,60(sp)
   89e18:	2485c83a 	sub	r2,r4,r18
   89e1c:	18a1883a 	add	r16,r3,r2
   89e20:	0402e80e 	bge	zero,r16,8a9c4 <_strtod_r+0x1288>
   89e24:	814003cc 	andi	r5,r16,15
   89e28:	28000f26 	beq	r5,zero,89e68 <_strtod_r+0x72c>
   89e2c:	280a90fa 	slli	r5,r5,3
   89e30:	01000274 	movhi	r4,9
   89e34:	210ead04 	addi	r4,r4,15028
   89e38:	e0800017 	ldw	r2,0(fp)
   89e3c:	290b883a 	add	r5,r5,r4
   89e40:	2a000017 	ldw	r8,0(r5)
   89e44:	e0c00117 	ldw	r3,4(fp)
   89e48:	2a400117 	ldw	r9,4(r5)
   89e4c:	1009883a 	mov	r4,r2
   89e50:	180b883a 	mov	r5,r3
   89e54:	480f883a 	mov	r7,r9
   89e58:	400d883a 	mov	r6,r8
   89e5c:	008e27c0 	call	8e27c <__muldf3>
   89e60:	e0c00115 	stw	r3,4(fp)
   89e64:	e0800015 	stw	r2,0(fp)
   89e68:	00bffc04 	movi	r2,-16
   89e6c:	808c703a 	and	r6,r16,r2
   89e70:	30006726 	beq	r6,zero,8a010 <_strtod_r+0x8d4>
   89e74:	00804d04 	movi	r2,308
   89e78:	11820f16 	blt	r2,r6,8a6b8 <_strtod_r+0xf7c>
   89e7c:	3021d13a 	srai	r16,r6,4
   89e80:	00800044 	movi	r2,1
   89e84:	14037f0e 	bge	r2,r16,8ac84 <_strtod_r+0x1548>
   89e88:	05800274 	movhi	r22,9
   89e8c:	b58edf04 	addi	r22,r22,15228
   89e90:	1027883a 	mov	r19,r2
   89e94:	0025883a 	mov	r18,zero
   89e98:	b023883a 	mov	r17,r22
   89e9c:	8080004c 	andi	r2,r16,1
   89ea0:	1005003a 	cmpeq	r2,r2,zero
   89ea4:	1000091e 	bne	r2,zero,89ecc <_strtod_r+0x790>
   89ea8:	e0800017 	ldw	r2,0(fp)
   89eac:	e0c00117 	ldw	r3,4(fp)
   89eb0:	89800017 	ldw	r6,0(r17)
   89eb4:	89c00117 	ldw	r7,4(r17)
   89eb8:	180b883a 	mov	r5,r3
   89ebc:	1009883a 	mov	r4,r2
   89ec0:	008e27c0 	call	8e27c <__muldf3>
   89ec4:	e0c00115 	stw	r3,4(fp)
   89ec8:	e0800015 	stw	r2,0(fp)
   89ecc:	8021d07a 	srai	r16,r16,1
   89ed0:	94800044 	addi	r18,r18,1
   89ed4:	8c400204 	addi	r17,r17,8
   89ed8:	9c3ff016 	blt	r19,r16,89e9c <_strtod_r+0x760>
   89edc:	900e90fa 	slli	r7,r18,3
   89ee0:	e2000117 	ldw	r8,4(fp)
   89ee4:	e1000017 	ldw	r4,0(fp)
   89ee8:	3d8f883a 	add	r7,r7,r22
   89eec:	38800017 	ldw	r2,0(r7)
   89ef0:	38c00117 	ldw	r3,4(r7)
   89ef4:	01bf2c34 	movhi	r6,64688
   89ef8:	418d883a 	add	r6,r8,r6
   89efc:	300b883a 	mov	r5,r6
   89f00:	180f883a 	mov	r7,r3
   89f04:	100d883a 	mov	r6,r2
   89f08:	008e27c0 	call	8e27c <__muldf3>
   89f0c:	1009883a 	mov	r4,r2
   89f10:	180b883a 	mov	r5,r3
   89f14:	199ffc2c 	andhi	r6,r3,32752
   89f18:	009f2834 	movhi	r2,31904
   89f1c:	e1000015 	stw	r4,0(fp)
   89f20:	e1400115 	stw	r5,4(fp)
   89f24:	1181e436 	bltu	r2,r6,8a6b8 <_strtod_r+0xf7c>
   89f28:	009f2434 	movhi	r2,31888
   89f2c:	11833f2e 	bgeu	r2,r6,8ac2c <_strtod_r+0x14f0>
   89f30:	d8001c15 	stw	zero,112(sp)
   89f34:	019ffc34 	movhi	r6,32752
   89f38:	31bfffc4 	addi	r6,r6,-1
   89f3c:	01ffffc4 	movi	r7,-1
   89f40:	e1800115 	stw	r6,4(fp)
   89f44:	e1c00015 	stw	r7,0(fp)
   89f48:	00003206 	br	8a014 <_strtod_r+0x8d8>
   89f4c:	00800c04 	movi	r2,48
   89f50:	8883221e 	bne	r17,r2,8abdc <_strtod_r+0x14a0>
   89f54:	8805883a 	mov	r2,r17
   89f58:	000d883a 	mov	r6,zero
   89f5c:	84000044 	addi	r16,r16,1
   89f60:	dc000415 	stw	r16,16(sp)
   89f64:	84400007 	ldb	r17,0(r16)
   89f68:	31800044 	addi	r6,r6,1
   89f6c:	88bffb26 	beq	r17,r2,89f5c <_strtod_r+0x820>
   89f70:	88fff3c4 	addi	r3,r17,-49
   89f74:	00800204 	movi	r2,8
   89f78:	10c1ca36 	bltu	r2,r3,8a6a4 <_strtod_r+0xf68>
   89f7c:	d8c00417 	ldw	r3,16(sp)
   89f80:	d9801715 	stw	r6,92(sp)
   89f84:	8dbff404 	addi	r22,r17,-48
   89f88:	d8c01415 	stw	r3,80(sp)
   89f8c:	1821883a 	mov	r16,r3
   89f90:	d8001815 	stw	zero,96(sp)
   89f94:	01800044 	movi	r6,1
   89f98:	b0023526 	beq	r22,zero,8a870 <_strtod_r+0x1134>
   89f9c:	d9001717 	ldw	r4,92(sp)
   89fa0:	00800044 	movi	r2,1
   89fa4:	2189883a 	add	r4,r4,r6
   89fa8:	d9001715 	stw	r4,92(sp)
   89fac:	1183390e 	bge	r2,r6,8ac94 <_strtod_r+0x1558>
   89fb0:	dc401817 	ldw	r17,96(sp)
   89fb4:	1025883a 	mov	r18,r2
   89fb8:	05c00204 	movi	r23,8
   89fbc:	00000806 	br	89fe0 <_strtod_r+0x8a4>
   89fc0:	d9001217 	ldw	r4,72(sp)
   89fc4:	01400284 	movi	r5,10
   89fc8:	d9802015 	stw	r6,128(sp)
   89fcc:	00806240 	call	80624 <__mulsi3>
   89fd0:	d9802017 	ldw	r6,128(sp)
   89fd4:	d8801215 	stw	r2,72(sp)
   89fd8:	94800044 	addi	r18,r18,1
   89fdc:	91821726 	beq	r18,r6,8a83c <_strtod_r+0x1100>
   89fe0:	8c400044 	addi	r17,r17,1
   89fe4:	88bfffc4 	addi	r2,r17,-1
   89fe8:	b8bff50e 	bge	r23,r2,89fc0 <_strtod_r+0x884>
   89fec:	00800404 	movi	r2,16
   89ff0:	147ff916 	blt	r2,r17,89fd8 <_strtod_r+0x89c>
   89ff4:	d9001117 	ldw	r4,68(sp)
   89ff8:	01400284 	movi	r5,10
   89ffc:	d9802015 	stw	r6,128(sp)
   8a000:	00806240 	call	80624 <__mulsi3>
   8a004:	d9802017 	ldw	r6,128(sp)
   8a008:	d8801115 	stw	r2,68(sp)
   8a00c:	003ff206 	br	89fd8 <_strtod_r+0x89c>
   8a010:	d8001c15 	stw	zero,112(sp)
   8a014:	d8c01217 	ldw	r3,72(sp)
   8a018:	d9401417 	ldw	r5,80(sp)
   8a01c:	d9c01817 	ldw	r7,96(sp)
   8a020:	a809883a 	mov	r4,r21
   8a024:	a00d883a 	mov	r6,r20
   8a028:	d8c00015 	stw	r3,0(sp)
   8a02c:	008884c0 	call	8884c <__s2b>
   8a030:	11000304 	addi	r4,r2,12
   8a034:	d8801015 	stw	r2,64(sp)
   8a038:	d8800f17 	ldw	r2,60(sp)
   8a03c:	d9001f15 	stw	r4,124(sp)
   8a040:	1004803a 	cmplt	r2,r2,zero
   8a044:	d8801e15 	stw	r2,120(sp)
   8a048:	d8c01017 	ldw	r3,64(sp)
   8a04c:	a809883a 	mov	r4,r21
   8a050:	19400117 	ldw	r5,4(r3)
   8a054:	0087e600 	call	87e60 <_Balloc>
   8a058:	d9001017 	ldw	r4,64(sp)
   8a05c:	d9401f17 	ldw	r5,124(sp)
   8a060:	102f883a 	mov	r23,r2
   8a064:	21800417 	ldw	r6,16(r4)
   8a068:	11000304 	addi	r4,r2,12
   8a06c:	318d883a 	add	r6,r6,r6
   8a070:	318d883a 	add	r6,r6,r6
   8a074:	31800204 	addi	r6,r6,8
   8a078:	00876c80 	call	876c8 <memcpy>
   8a07c:	e2000017 	ldw	r8,0(fp)
   8a080:	e2400117 	ldw	r9,4(fp)
   8a084:	a809883a 	mov	r4,r21
   8a088:	400b883a 	mov	r5,r8
   8a08c:	d9c00204 	addi	r7,sp,8
   8a090:	d8800304 	addi	r2,sp,12
   8a094:	480d883a 	mov	r6,r9
   8a098:	d8800015 	stw	r2,0(sp)
   8a09c:	0087f1c0 	call	87f1c <__d2b>
   8a0a0:	a809883a 	mov	r4,r21
   8a0a4:	01400044 	movi	r5,1
   8a0a8:	d8800515 	stw	r2,20(sp)
   8a0ac:	00885c40 	call	885c4 <__i2b>
   8a0b0:	d8c01e17 	ldw	r3,120(sp)
   8a0b4:	102d883a 	mov	r22,r2
   8a0b8:	1801091e 	bne	r3,zero,8a4e0 <_strtod_r+0xda4>
   8a0bc:	dd000f17 	ldw	r20,60(sp)
   8a0c0:	000f883a 	mov	r7,zero
   8a0c4:	0013883a 	mov	r9,zero
   8a0c8:	a011883a 	mov	r8,r20
   8a0cc:	d8800217 	ldw	r2,8(sp)
   8a0d0:	10010116 	blt	r2,zero,8a4d8 <_strtod_r+0xd9c>
   8a0d4:	388f883a 	add	r7,r7,r2
   8a0d8:	d8c01c17 	ldw	r3,112(sp)
   8a0dc:	d9400317 	ldw	r5,12(sp)
   8a0e0:	10c9c83a 	sub	r4,r2,r3
   8a0e4:	2145883a 	add	r2,r4,r5
   8a0e8:	10bfffc4 	addi	r2,r2,-1
   8a0ec:	00ff0084 	movi	r3,-1022
   8a0f0:	10c09f0e 	bge	r2,r3,8a370 <_strtod_r+0xc34>
   8a0f4:	21810cc4 	addi	r6,r4,1075
   8a0f8:	d9001c17 	ldw	r4,112(sp)
   8a0fc:	4185883a 	add	r2,r8,r6
   8a100:	39a1883a 	add	r16,r7,r6
   8a104:	20a5883a 	add	r18,r4,r2
   8a108:	3807883a 	mov	r3,r7
   8a10c:	81c0010e 	bge	r16,r7,8a114 <_strtod_r+0x9d8>
   8a110:	8007883a 	mov	r3,r16
   8a114:	9005883a 	mov	r2,r18
   8a118:	1c80010e 	bge	r3,r18,8a120 <_strtod_r+0x9e4>
   8a11c:	1805883a 	mov	r2,r3
   8a120:	0080eb0e 	bge	zero,r2,8a4d0 <_strtod_r+0xd94>
   8a124:	38a7c83a 	sub	r19,r7,r2
   8a128:	80a1c83a 	sub	r16,r16,r2
   8a12c:	90a5c83a 	sub	r18,r18,r2
   8a130:	02400e0e 	bge	zero,r9,8a16c <_strtod_r+0xa30>
   8a134:	480d883a 	mov	r6,r9
   8a138:	b00b883a 	mov	r5,r22
   8a13c:	a809883a 	mov	r4,r21
   8a140:	008872c0 	call	8872c <__pow5mult>
   8a144:	d9800517 	ldw	r6,20(sp)
   8a148:	a809883a 	mov	r4,r21
   8a14c:	100b883a 	mov	r5,r2
   8a150:	102d883a 	mov	r22,r2
   8a154:	00883700 	call	88370 <__multiply>
   8a158:	d9400517 	ldw	r5,20(sp)
   8a15c:	1023883a 	mov	r17,r2
   8a160:	a809883a 	mov	r4,r21
   8a164:	00878e00 	call	878e0 <_Bfree>
   8a168:	dc400515 	stw	r17,20(sp)
   8a16c:	0400050e 	bge	zero,r16,8a184 <_strtod_r+0xa48>
   8a170:	d9400517 	ldw	r5,20(sp)
   8a174:	800d883a 	mov	r6,r16
   8a178:	a809883a 	mov	r4,r21
   8a17c:	00882240 	call	88224 <__lshift>
   8a180:	d8800515 	stw	r2,20(sp)
   8a184:	a000741e 	bne	r20,zero,8a358 <_strtod_r+0xc1c>
   8a188:	0480050e 	bge	zero,r18,8a1a0 <_strtod_r+0xa64>
   8a18c:	b80b883a 	mov	r5,r23
   8a190:	900d883a 	mov	r6,r18
   8a194:	a809883a 	mov	r4,r21
   8a198:	00882240 	call	88224 <__lshift>
   8a19c:	102f883a 	mov	r23,r2
   8a1a0:	04c0050e 	bge	zero,r19,8a1b8 <_strtod_r+0xa7c>
   8a1a4:	b00b883a 	mov	r5,r22
   8a1a8:	980d883a 	mov	r6,r19
   8a1ac:	a809883a 	mov	r4,r21
   8a1b0:	00882240 	call	88224 <__lshift>
   8a1b4:	102d883a 	mov	r22,r2
   8a1b8:	d9400517 	ldw	r5,20(sp)
   8a1bc:	a809883a 	mov	r4,r21
   8a1c0:	b80d883a 	mov	r6,r23
   8a1c4:	00880980 	call	88098 <__mdiff>
   8a1c8:	1029883a 	mov	r20,r2
   8a1cc:	10800317 	ldw	r2,12(r2)
   8a1d0:	a009883a 	mov	r4,r20
   8a1d4:	a0000315 	stw	zero,12(r20)
   8a1d8:	b00b883a 	mov	r5,r22
   8a1dc:	d8801a15 	stw	r2,104(sp)
   8a1e0:	0087a3c0 	call	87a3c <__mcmp>
   8a1e4:	1001a616 	blt	r2,zero,8a880 <_strtod_r+0x1144>
   8a1e8:	10016d26 	beq	r2,zero,8a7a0 <_strtod_r+0x1064>
   8a1ec:	a009883a 	mov	r4,r20
   8a1f0:	b00b883a 	mov	r5,r22
   8a1f4:	0087c3c0 	call	87c3c <__ratio>
   8a1f8:	0011883a 	mov	r8,zero
   8a1fc:	02500034 	movhi	r9,16384
   8a200:	480f883a 	mov	r7,r9
   8a204:	1009883a 	mov	r4,r2
   8a208:	180b883a 	mov	r5,r3
   8a20c:	400d883a 	mov	r6,r8
   8a210:	1021883a 	mov	r16,r2
   8a214:	1823883a 	mov	r17,r3
   8a218:	008eb400 	call	8eb40 <__ledf2>
   8a21c:	00805716 	blt	zero,r2,8a37c <_strtod_r+0xc40>
   8a220:	d8801a17 	ldw	r2,104(sp)
   8a224:	1025003a 	cmpeq	r18,r2,zero
   8a228:	90008c1e 	bne	r18,zero,8a45c <_strtod_r+0xd20>
   8a22c:	008ffc34 	movhi	r2,16368
   8a230:	0021883a 	mov	r16,zero
   8a234:	1023883a 	mov	r17,r2
   8a238:	d8000715 	stw	zero,28(sp)
   8a23c:	d8800815 	stw	r2,32(sp)
   8a240:	e1c00117 	ldw	r7,4(fp)
   8a244:	009ff834 	movhi	r2,32736
   8a248:	3cdffc2c 	andhi	r19,r7,32752
   8a24c:	98805f26 	beq	r19,r2,8a3cc <_strtod_r+0xc90>
   8a250:	d8c01c17 	ldw	r3,112(sp)
   8a254:	18001b26 	beq	r3,zero,8a2c4 <_strtod_r+0xb88>
   8a258:	0081a834 	movhi	r2,1696
   8a25c:	14c01936 	bltu	r2,r19,8a2c4 <_strtod_r+0xb88>
   8a260:	00bff034 	movhi	r2,65472
   8a264:	00d07834 	movhi	r3,16864
   8a268:	18ffffc4 	addi	r3,r3,-1
   8a26c:	180f883a 	mov	r7,r3
   8a270:	8009883a 	mov	r4,r16
   8a274:	880b883a 	mov	r5,r17
   8a278:	100d883a 	mov	r6,r2
   8a27c:	008eb400 	call	8eb40 <__ledf2>
   8a280:	00800b16 	blt	zero,r2,8a2b0 <_strtod_r+0xb74>
   8a284:	880b883a 	mov	r5,r17
   8a288:	8009883a 	mov	r4,r16
   8a28c:	008cea00 	call	8cea0 <__fixunsdfsi>
   8a290:	1000e31e 	bne	r2,zero,8a620 <_strtod_r+0xee4>
   8a294:	0021883a 	mov	r16,zero
   8a298:	044ffc34 	movhi	r17,16368
   8a29c:	9000dd1e 	bne	r18,zero,8a614 <_strtod_r+0xed8>
   8a2a0:	8005883a 	mov	r2,r16
   8a2a4:	8807883a 	mov	r3,r17
   8a2a8:	d8c00815 	stw	r3,32(sp)
   8a2ac:	d8800715 	stw	r2,28(sp)
   8a2b0:	d8800817 	ldw	r2,32(sp)
   8a2b4:	00c1ac34 	movhi	r3,1712
   8a2b8:	14c5c83a 	sub	r2,r2,r19
   8a2bc:	10c5883a 	add	r2,r2,r3
   8a2c0:	d8800815 	stw	r2,32(sp)
   8a2c4:	e0800017 	ldw	r2,0(fp)
   8a2c8:	e0c00117 	ldw	r3,4(fp)
   8a2cc:	1009883a 	mov	r4,r2
   8a2d0:	180b883a 	mov	r5,r3
   8a2d4:	0087a9c0 	call	87a9c <__ulp>
   8a2d8:	d9800717 	ldw	r6,28(sp)
   8a2dc:	d9c00817 	ldw	r7,32(sp)
   8a2e0:	180b883a 	mov	r5,r3
   8a2e4:	1009883a 	mov	r4,r2
   8a2e8:	008e27c0 	call	8e27c <__muldf3>
   8a2ec:	e2000017 	ldw	r8,0(fp)
   8a2f0:	e2400117 	ldw	r9,4(fp)
   8a2f4:	180b883a 	mov	r5,r3
   8a2f8:	1009883a 	mov	r4,r2
   8a2fc:	480f883a 	mov	r7,r9
   8a300:	400d883a 	mov	r6,r8
   8a304:	008e2080 	call	8e208 <__adddf3>
   8a308:	e0c00115 	stw	r3,4(fp)
   8a30c:	e0800015 	stw	r2,0(fp)
   8a310:	d9001c17 	ldw	r4,112(sp)
   8a314:	e4800117 	ldw	r18,4(fp)
   8a318:	2000021e 	bne	r4,zero,8a324 <_strtod_r+0xbe8>
   8a31c:	909ffc2c 	andhi	r2,r18,32752
   8a320:	98807f26 	beq	r19,r2,8a520 <_strtod_r+0xde4>
   8a324:	d9400517 	ldw	r5,20(sp)
   8a328:	a809883a 	mov	r4,r21
   8a32c:	00878e00 	call	878e0 <_Bfree>
   8a330:	a809883a 	mov	r4,r21
   8a334:	b80b883a 	mov	r5,r23
   8a338:	00878e00 	call	878e0 <_Bfree>
   8a33c:	a809883a 	mov	r4,r21
   8a340:	b00b883a 	mov	r5,r22
   8a344:	00878e00 	call	878e0 <_Bfree>
   8a348:	a809883a 	mov	r4,r21
   8a34c:	a00b883a 	mov	r5,r20
   8a350:	00878e00 	call	878e0 <_Bfree>
   8a354:	003f3c06 	br	8a048 <_strtod_r+0x90c>
   8a358:	b80b883a 	mov	r5,r23
   8a35c:	a00d883a 	mov	r6,r20
   8a360:	a809883a 	mov	r4,r21
   8a364:	008872c0 	call	8872c <__pow5mult>
   8a368:	102f883a 	mov	r23,r2
   8a36c:	003f8606 	br	8a188 <_strtod_r+0xa4c>
   8a370:	00800d84 	movi	r2,54
   8a374:	114dc83a 	sub	r6,r2,r5
   8a378:	003f5f06 	br	8a0f8 <_strtod_r+0x9bc>
   8a37c:	0005883a 	mov	r2,zero
   8a380:	00cff834 	movhi	r3,16352
   8a384:	8009883a 	mov	r4,r16
   8a388:	880b883a 	mov	r5,r17
   8a38c:	180f883a 	mov	r7,r3
   8a390:	100d883a 	mov	r6,r2
   8a394:	008e27c0 	call	8e27c <__muldf3>
   8a398:	1009883a 	mov	r4,r2
   8a39c:	d8801a17 	ldw	r2,104(sp)
   8a3a0:	2021883a 	mov	r16,r4
   8a3a4:	1823883a 	mov	r17,r3
   8a3a8:	1025003a 	cmpeq	r18,r2,zero
   8a3ac:	9000451e 	bne	r18,zero,8a4c4 <_strtod_r+0xd88>
   8a3b0:	2005883a 	mov	r2,r4
   8a3b4:	d8800715 	stw	r2,28(sp)
   8a3b8:	d8c00815 	stw	r3,32(sp)
   8a3bc:	e1c00117 	ldw	r7,4(fp)
   8a3c0:	009ff834 	movhi	r2,32736
   8a3c4:	3cdffc2c 	andhi	r19,r7,32752
   8a3c8:	98bfa11e 	bne	r19,r2,8a250 <_strtod_r+0xb14>
   8a3cc:	e1000017 	ldw	r4,0(fp)
   8a3d0:	01bf2c34 	movhi	r6,64688
   8a3d4:	398d883a 	add	r6,r7,r6
   8a3d8:	d9000b15 	stw	r4,44(sp)
   8a3dc:	d9c00c15 	stw	r7,48(sp)
   8a3e0:	300b883a 	mov	r5,r6
   8a3e4:	e1800115 	stw	r6,4(fp)
   8a3e8:	0087a9c0 	call	87a9c <__ulp>
   8a3ec:	d9800717 	ldw	r6,28(sp)
   8a3f0:	d9c00817 	ldw	r7,32(sp)
   8a3f4:	180b883a 	mov	r5,r3
   8a3f8:	1009883a 	mov	r4,r2
   8a3fc:	008e27c0 	call	8e27c <__muldf3>
   8a400:	e2000017 	ldw	r8,0(fp)
   8a404:	e2400117 	ldw	r9,4(fp)
   8a408:	180b883a 	mov	r5,r3
   8a40c:	1009883a 	mov	r4,r2
   8a410:	480f883a 	mov	r7,r9
   8a414:	400d883a 	mov	r6,r8
   8a418:	008e2080 	call	8e208 <__adddf3>
   8a41c:	1009883a 	mov	r4,r2
   8a420:	180b883a 	mov	r5,r3
   8a424:	009f2834 	movhi	r2,31904
   8a428:	10bfffc4 	addi	r2,r2,-1
   8a42c:	18dffc2c 	andhi	r3,r3,32752
   8a430:	e1000015 	stw	r4,0(fp)
   8a434:	e1400115 	stw	r5,4(fp)
   8a438:	10c0722e 	bgeu	r2,r3,8a604 <_strtod_r+0xec8>
   8a43c:	d8800c17 	ldw	r2,48(sp)
   8a440:	011ffc34 	movhi	r4,32752
   8a444:	213fffc4 	addi	r4,r4,-1
   8a448:	11007d26 	beq	r2,r4,8a640 <_strtod_r+0xf04>
   8a44c:	01ffffc4 	movi	r7,-1
   8a450:	e1000115 	stw	r4,4(fp)
   8a454:	e1c00015 	stw	r7,0(fp)
   8a458:	003fb206 	br	8a324 <_strtod_r+0xbe8>
   8a45c:	e0c00017 	ldw	r3,0(fp)
   8a460:	1800251e 	bne	r3,zero,8a4f8 <_strtod_r+0xdbc>
   8a464:	e0800117 	ldw	r2,4(fp)
   8a468:	00c00434 	movhi	r3,16
   8a46c:	18ffffc4 	addi	r3,r3,-1
   8a470:	10c4703a 	and	r2,r2,r3
   8a474:	1000241e 	bne	r2,zero,8a508 <_strtod_r+0xdcc>
   8a478:	0005883a 	mov	r2,zero
   8a47c:	00cffc34 	movhi	r3,16368
   8a480:	180f883a 	mov	r7,r3
   8a484:	8009883a 	mov	r4,r16
   8a488:	880b883a 	mov	r5,r17
   8a48c:	100d883a 	mov	r6,r2
   8a490:	008eab80 	call	8eab8 <__ltdf2>
   8a494:	10014616 	blt	r2,zero,8a9b0 <_strtod_r+0x1274>
   8a498:	0005883a 	mov	r2,zero
   8a49c:	00cff834 	movhi	r3,16352
   8a4a0:	880b883a 	mov	r5,r17
   8a4a4:	8009883a 	mov	r4,r16
   8a4a8:	180f883a 	mov	r7,r3
   8a4ac:	100d883a 	mov	r6,r2
   8a4b0:	008e27c0 	call	8e27c <__muldf3>
   8a4b4:	1823883a 	mov	r17,r3
   8a4b8:	1021883a 	mov	r16,r2
   8a4bc:	18e0003c 	xorhi	r3,r3,32768
   8a4c0:	003fbc06 	br	8a3b4 <_strtod_r+0xc78>
   8a4c4:	2005883a 	mov	r2,r4
   8a4c8:	18e0003c 	xorhi	r3,r3,32768
   8a4cc:	003fb906 	br	8a3b4 <_strtod_r+0xc78>
   8a4d0:	3827883a 	mov	r19,r7
   8a4d4:	003f1606 	br	8a130 <_strtod_r+0x9f4>
   8a4d8:	4091c83a 	sub	r8,r8,r2
   8a4dc:	003efe06 	br	8a0d8 <_strtod_r+0x99c>
   8a4e0:	d9000f17 	ldw	r4,60(sp)
   8a4e4:	0011883a 	mov	r8,zero
   8a4e8:	0029883a 	mov	r20,zero
   8a4ec:	0113c83a 	sub	r9,zero,r4
   8a4f0:	480f883a 	mov	r7,r9
   8a4f4:	003ef506 	br	8a0cc <_strtod_r+0x990>
   8a4f8:	00800044 	movi	r2,1
   8a4fc:	1880021e 	bne	r3,r2,8a508 <_strtod_r+0xdcc>
   8a500:	e0800117 	ldw	r2,4(fp)
   8a504:	1000c526 	beq	r2,zero,8a81c <_strtod_r+0x10e0>
   8a508:	00affc34 	movhi	r2,49136
   8a50c:	0021883a 	mov	r16,zero
   8a510:	044ffc34 	movhi	r17,16368
   8a514:	d8800815 	stw	r2,32(sp)
   8a518:	d8000715 	stw	zero,28(sp)
   8a51c:	003f4806 	br	8a240 <_strtod_r+0xb04>
   8a520:	880b883a 	mov	r5,r17
   8a524:	8009883a 	mov	r4,r16
   8a528:	008ecc00 	call	8ecc0 <__fixdfsi>
   8a52c:	1009883a 	mov	r4,r2
   8a530:	008ebc80 	call	8ebc8 <__floatsidf>
   8a534:	880b883a 	mov	r5,r17
   8a538:	8009883a 	mov	r4,r16
   8a53c:	100d883a 	mov	r6,r2
   8a540:	180f883a 	mov	r7,r3
   8a544:	008e1880 	call	8e188 <__subdf3>
   8a548:	100b883a 	mov	r5,r2
   8a54c:	1021883a 	mov	r16,r2
   8a550:	d8801a17 	ldw	r2,104(sp)
   8a554:	180d883a 	mov	r6,r3
   8a558:	1823883a 	mov	r17,r3
   8a55c:	1000061e 	bne	r2,zero,8a578 <_strtod_r+0xe3c>
   8a560:	e0800017 	ldw	r2,0(fp)
   8a564:	1000041e 	bne	r2,zero,8a578 <_strtod_r+0xe3c>
   8a568:	00c00434 	movhi	r3,16
   8a56c:	18ffffc4 	addi	r3,r3,-1
   8a570:	90c4703a 	and	r2,r18,r3
   8a574:	10004026 	beq	r2,zero,8a678 <_strtod_r+0xf3c>
   8a578:	00a52834 	movhi	r2,38048
   8a57c:	108d6544 	addi	r2,r2,13717
   8a580:	00cff834 	movhi	r3,16352
   8a584:	18ffffc4 	addi	r3,r3,-1
   8a588:	180f883a 	mov	r7,r3
   8a58c:	8009883a 	mov	r4,r16
   8a590:	880b883a 	mov	r5,r17
   8a594:	100d883a 	mov	r6,r2
   8a598:	008eab80 	call	8eab8 <__ltdf2>
   8a59c:	10000916 	blt	r2,zero,8a5c4 <_strtod_r+0xe88>
   8a5a0:	008d6c34 	movhi	r2,13744
   8a5a4:	10b94d44 	addi	r2,r2,-6859
   8a5a8:	00cff834 	movhi	r3,16352
   8a5ac:	880b883a 	mov	r5,r17
   8a5b0:	180f883a 	mov	r7,r3
   8a5b4:	8009883a 	mov	r4,r16
   8a5b8:	100d883a 	mov	r6,r2
   8a5bc:	008e9a80 	call	8e9a8 <__gtdf2>
   8a5c0:	00bf580e 	bge	zero,r2,8a324 <_strtod_r+0xbe8>
   8a5c4:	d9400517 	ldw	r5,20(sp)
   8a5c8:	a809883a 	mov	r4,r21
   8a5cc:	00878e00 	call	878e0 <_Bfree>
   8a5d0:	a809883a 	mov	r4,r21
   8a5d4:	b80b883a 	mov	r5,r23
   8a5d8:	00878e00 	call	878e0 <_Bfree>
   8a5dc:	a809883a 	mov	r4,r21
   8a5e0:	b00b883a 	mov	r5,r22
   8a5e4:	00878e00 	call	878e0 <_Bfree>
   8a5e8:	d9401017 	ldw	r5,64(sp)
   8a5ec:	a809883a 	mov	r4,r21
   8a5f0:	00878e00 	call	878e0 <_Bfree>
   8a5f4:	a809883a 	mov	r4,r21
   8a5f8:	a00b883a 	mov	r5,r20
   8a5fc:	00878e00 	call	878e0 <_Bfree>
   8a600:	003cd806 	br	89964 <_strtod_r+0x228>
   8a604:	0080d434 	movhi	r2,848
   8a608:	288d883a 	add	r6,r5,r2
   8a60c:	e1800115 	stw	r6,4(fp)
   8a610:	003f3f06 	br	8a310 <_strtod_r+0xbd4>
   8a614:	8005883a 	mov	r2,r16
   8a618:	88e0003c 	xorhi	r3,r17,32768
   8a61c:	003f2206 	br	8a2a8 <_strtod_r+0xb6c>
   8a620:	1009883a 	mov	r4,r2
   8a624:	008ee0c0 	call	8ee0c <__floatunsidf>
   8a628:	1021883a 	mov	r16,r2
   8a62c:	1823883a 	mov	r17,r3
   8a630:	003f1a06 	br	8a29c <_strtod_r+0xb60>
   8a634:	dc000417 	ldw	r16,16(sp)
   8a638:	31800044 	addi	r6,r6,1
   8a63c:	003e5606 	br	89f98 <_strtod_r+0x85c>
   8a640:	d8c00b17 	ldw	r3,44(sp)
   8a644:	00bfffc4 	movi	r2,-1
   8a648:	18bf801e 	bne	r3,r2,8a44c <_strtod_r+0xd10>
   8a64c:	00c00884 	movi	r3,34
   8a650:	a8c00015 	stw	r3,0(r21)
   8a654:	009ffc34 	movhi	r2,32752
   8a658:	e0800115 	stw	r2,4(fp)
   8a65c:	e0000015 	stw	zero,0(fp)
   8a660:	003fd806 	br	8a5c4 <_strtod_r+0xe88>
   8a664:	8025883a 	mov	r18,r16
   8a668:	0027883a 	mov	r19,zero
   8a66c:	d8001215 	stw	zero,72(sp)
   8a670:	d8001115 	stw	zero,68(sp)
   8a674:	003cac06 	br	89928 <_strtod_r+0x1ec>
   8a678:	00a52834 	movhi	r2,38048
   8a67c:	108d6544 	addi	r2,r2,13717
   8a680:	00cff434 	movhi	r3,16336
   8a684:	18ffffc4 	addi	r3,r3,-1
   8a688:	2809883a 	mov	r4,r5
   8a68c:	180f883a 	mov	r7,r3
   8a690:	300b883a 	mov	r5,r6
   8a694:	100d883a 	mov	r6,r2
   8a698:	008eab80 	call	8eab8 <__ltdf2>
   8a69c:	103f210e 	bge	r2,zero,8a324 <_strtod_r+0xbe8>
   8a6a0:	003fc806 	br	8a5c4 <_strtod_r+0xe88>
   8a6a4:	00800044 	movi	r2,1
   8a6a8:	d8001815 	stw	zero,96(sp)
   8a6ac:	d8801b15 	stw	r2,108(sp)
   8a6b0:	d8001715 	stw	zero,92(sp)
   8a6b4:	003ca206 	br	89940 <_strtod_r+0x204>
   8a6b8:	00800884 	movi	r2,34
   8a6bc:	a8800015 	stw	r2,0(r21)
   8a6c0:	019ffc34 	movhi	r6,32752
   8a6c4:	e1800115 	stw	r6,4(fp)
   8a6c8:	e0000015 	stw	zero,0(fp)
   8a6cc:	003ca506 	br	89964 <_strtod_r+0x228>
   8a6d0:	011387c4 	movi	r4,19999
   8a6d4:	003d0206 	br	89ae0 <_strtod_r+0x3a4>
   8a6d8:	180a90fa 	slli	r5,r3,3
   8a6dc:	e0800017 	ldw	r2,0(fp)
   8a6e0:	e0c00117 	ldw	r3,4(fp)
   8a6e4:	01000274 	movhi	r4,9
   8a6e8:	210ead04 	addi	r4,r4,15028
   8a6ec:	290b883a 	add	r5,r5,r4
   8a6f0:	2a000017 	ldw	r8,0(r5)
   8a6f4:	2a400117 	ldw	r9,4(r5)
   8a6f8:	1009883a 	mov	r4,r2
   8a6fc:	180b883a 	mov	r5,r3
   8a700:	480f883a 	mov	r7,r9
   8a704:	400d883a 	mov	r6,r8
   8a708:	008e27c0 	call	8e27c <__muldf3>
   8a70c:	e0c00115 	stw	r3,4(fp)
   8a710:	e0800015 	stw	r2,0(fp)
   8a714:	003c9306 	br	89964 <_strtod_r+0x228>
   8a718:	d8800d17 	ldw	r2,52(sp)
   8a71c:	e0800015 	stw	r2,0(fp)
   8a720:	d8c00e17 	ldw	r3,56(sp)
   8a724:	e0c00115 	stw	r3,4(fp)
   8a728:	9080020c 	andi	r2,r18,8
   8a72c:	103c8d26 	beq	r2,zero,89964 <_strtod_r+0x228>
   8a730:	e0800117 	ldw	r2,4(fp)
   8a734:	10a00034 	orhi	r2,r2,32768
   8a738:	e0800115 	stw	r2,4(fp)
   8a73c:	003c8906 	br	89964 <_strtod_r+0x228>
   8a740:	009ffc34 	movhi	r2,32752
   8a744:	e0800115 	stw	r2,4(fp)
   8a748:	e0000015 	stw	zero,0(fp)
   8a74c:	003ff606 	br	8a728 <_strtod_r+0xfec>
   8a750:	00a00034 	movhi	r2,32768
   8a754:	10bfffc4 	addi	r2,r2,-1
   8a758:	00ffffc4 	movi	r3,-1
   8a75c:	e0800115 	stw	r2,4(fp)
   8a760:	e0c00015 	stw	r3,0(fp)
   8a764:	003ff006 	br	8a728 <_strtod_r+0xfec>
   8a768:	e0000115 	stw	zero,4(fp)
   8a76c:	e0000015 	stw	zero,0(fp)
   8a770:	003fed06 	br	8a728 <_strtod_r+0xfec>
   8a774:	d8800e17 	ldw	r2,56(sp)
   8a778:	29010cc4 	addi	r4,r5,1075
   8a77c:	00fffc34 	movhi	r3,65520
   8a780:	18ffffc4 	addi	r3,r3,-1
   8a784:	2008953a 	slli	r4,r4,20
   8a788:	10c4703a 	and	r2,r2,r3
   8a78c:	d8c00d17 	ldw	r3,52(sp)
   8a790:	1104b03a 	or	r2,r2,r4
   8a794:	e0800115 	stw	r2,4(fp)
   8a798:	e0c00015 	stw	r3,0(fp)
   8a79c:	003fe206 	br	8a728 <_strtod_r+0xfec>
   8a7a0:	d8c01a17 	ldw	r3,104(sp)
   8a7a4:	1825003a 	cmpeq	r18,r3,zero
   8a7a8:	9000cf1e 	bne	r18,zero,8aae8 <_strtod_r+0x13ac>
   8a7ac:	e1400117 	ldw	r5,4(fp)
   8a7b0:	01000434 	movhi	r4,16
   8a7b4:	213fffc4 	addi	r4,r4,-1
   8a7b8:	2904703a 	and	r2,r5,r4
   8a7bc:	11006826 	beq	r2,r4,8a960 <_strtod_r+0x1224>
   8a7c0:	e1c00017 	ldw	r7,0(fp)
   8a7c4:	3880004c 	andi	r2,r7,1
   8a7c8:	1005003a 	cmpeq	r2,r2,zero
   8a7cc:	1000601e 	bne	r2,zero,8a950 <_strtod_r+0x1214>
   8a7d0:	90010426 	beq	r18,zero,8abe4 <_strtod_r+0x14a8>
   8a7d4:	e4400117 	ldw	r17,4(fp)
   8a7d8:	3809883a 	mov	r4,r7
   8a7dc:	3821883a 	mov	r16,r7
   8a7e0:	880b883a 	mov	r5,r17
   8a7e4:	0087a9c0 	call	87a9c <__ulp>
   8a7e8:	180f883a 	mov	r7,r3
   8a7ec:	880b883a 	mov	r5,r17
   8a7f0:	8009883a 	mov	r4,r16
   8a7f4:	100d883a 	mov	r6,r2
   8a7f8:	008e1880 	call	8e188 <__subdf3>
   8a7fc:	1009883a 	mov	r4,r2
   8a800:	000d883a 	mov	r6,zero
   8a804:	000f883a 	mov	r7,zero
   8a808:	180b883a 	mov	r5,r3
   8a80c:	e0800015 	stw	r2,0(fp)
   8a810:	e0c00115 	stw	r3,4(fp)
   8a814:	008e9200 	call	8e920 <__nedf2>
   8a818:	10004d1e 	bne	r2,zero,8a950 <_strtod_r+0x1214>
   8a81c:	00800884 	movi	r2,34
   8a820:	a8800015 	stw	r2,0(r21)
   8a824:	e0000015 	stw	zero,0(fp)
   8a828:	e0000115 	stw	zero,4(fp)
   8a82c:	003f6506 	br	8a5c4 <_strtod_r+0xe88>
   8a830:	00800044 	movi	r2,1
   8a834:	d8801915 	stw	r2,100(sp)
   8a838:	003d4406 	br	89d4c <_strtod_r+0x610>
   8a83c:	d8c01817 	ldw	r3,96(sp)
   8a840:	1985883a 	add	r2,r3,r6
   8a844:	11ffffc4 	addi	r7,r2,-1
   8a848:	39000044 	addi	r4,r7,1
   8a84c:	00800204 	movi	r2,8
   8a850:	d9001815 	stw	r4,96(sp)
   8a854:	11c0d716 	blt	r2,r7,8abb4 <_strtod_r+0x1478>
   8a858:	d9001217 	ldw	r4,72(sp)
   8a85c:	01400284 	movi	r5,10
   8a860:	00806240 	call	80624 <__mulsi3>
   8a864:	1585883a 	add	r2,r2,r22
   8a868:	d8801215 	stw	r2,72(sp)
   8a86c:	000d883a 	mov	r6,zero
   8a870:	84000044 	addi	r16,r16,1
   8a874:	dc000415 	stw	r16,16(sp)
   8a878:	84400007 	ldb	r17,0(r16)
   8a87c:	003cfc06 	br	89c70 <_strtod_r+0x534>
   8a880:	d8c01a17 	ldw	r3,104(sp)
   8a884:	1800321e 	bne	r3,zero,8a950 <_strtod_r+0x1214>
   8a888:	e0800017 	ldw	r2,0(fp)
   8a88c:	1000b31e 	bne	r2,zero,8ab5c <_strtod_r+0x1420>
   8a890:	e0c00117 	ldw	r3,4(fp)
   8a894:	01000434 	movhi	r4,16
   8a898:	213fffc4 	addi	r4,r4,-1
   8a89c:	1904703a 	and	r2,r3,r4
   8a8a0:	1000e71e 	bne	r2,zero,8ac40 <_strtod_r+0x1504>
   8a8a4:	18dffc2c 	andhi	r3,r3,32752
   8a8a8:	0081ac34 	movhi	r2,1712
   8a8ac:	10c0282e 	bgeu	r2,r3,8a950 <_strtod_r+0x1214>
   8a8b0:	a0800517 	ldw	r2,20(r20)
   8a8b4:	1000031e 	bne	r2,zero,8a8c4 <_strtod_r+0x1188>
   8a8b8:	a0c00417 	ldw	r3,16(r20)
   8a8bc:	00800044 	movi	r2,1
   8a8c0:	10c0a60e 	bge	r2,r3,8ab5c <_strtod_r+0x1420>
   8a8c4:	a00b883a 	mov	r5,r20
   8a8c8:	a809883a 	mov	r4,r21
   8a8cc:	01800044 	movi	r6,1
   8a8d0:	00882240 	call	88224 <__lshift>
   8a8d4:	1009883a 	mov	r4,r2
   8a8d8:	b00b883a 	mov	r5,r22
   8a8dc:	1029883a 	mov	r20,r2
   8a8e0:	0087a3c0 	call	87a3c <__mcmp>
   8a8e4:	00809d0e 	bge	zero,r2,8ab5c <_strtod_r+0x1420>
   8a8e8:	e1800117 	ldw	r6,4(fp)
   8a8ec:	d9001c17 	ldw	r4,112(sp)
   8a8f0:	2013003a 	cmpeq	r9,r4,zero
   8a8f4:	4800d61e 	bne	r9,zero,8ac50 <_strtod_r+0x1514>
   8a8f8:	30dffc2c 	andhi	r3,r6,32752
   8a8fc:	0081ac34 	movhi	r2,1712
   8a900:	10c0d336 	bltu	r2,r3,8ac50 <_strtod_r+0x1514>
   8a904:	0080dc34 	movhi	r2,880
   8a908:	10ffc42e 	bgeu	r2,r3,8a81c <_strtod_r+0x10e0>
   8a90c:	e0800017 	ldw	r2,0(fp)
   8a910:	e0c00117 	ldw	r3,4(fp)
   8a914:	020e5434 	movhi	r8,14672
   8a918:	000d883a 	mov	r6,zero
   8a91c:	400f883a 	mov	r7,r8
   8a920:	180b883a 	mov	r5,r3
   8a924:	1009883a 	mov	r4,r2
   8a928:	da000c15 	stw	r8,48(sp)
   8a92c:	d8000b15 	stw	zero,44(sp)
   8a930:	008e27c0 	call	8e27c <__muldf3>
   8a934:	e0800015 	stw	r2,0(fp)
   8a938:	e0c00115 	stw	r3,4(fp)
   8a93c:	183f211e 	bne	r3,zero,8a5c4 <_strtod_r+0xe88>
   8a940:	103f201e 	bne	r2,zero,8a5c4 <_strtod_r+0xe88>
   8a944:	00800884 	movi	r2,34
   8a948:	a8800015 	stw	r2,0(r21)
   8a94c:	003f1d06 	br	8a5c4 <_strtod_r+0xe88>
   8a950:	d9001c17 	ldw	r4,112(sp)
   8a954:	2013003a 	cmpeq	r9,r4,zero
   8a958:	483f1a1e 	bne	r9,zero,8a5c4 <_strtod_r+0xe88>
   8a95c:	003feb06 	br	8a90c <_strtod_r+0x11d0>
   8a960:	d8801c17 	ldw	r2,112(sp)
   8a964:	e1c00017 	ldw	r7,0(fp)
   8a968:	1013003a 	cmpeq	r9,r2,zero
   8a96c:	4800c31e 	bne	r9,zero,8ac7c <_strtod_r+0x1540>
   8a970:	28dffc2c 	andhi	r3,r5,32752
   8a974:	0081a834 	movhi	r2,1696
   8a978:	10c0c036 	bltu	r2,r3,8ac7c <_strtod_r+0x1540>
   8a97c:	1804d53a 	srli	r2,r3,20
   8a980:	00c01ac4 	movi	r3,107
   8a984:	013fffc4 	movi	r4,-1
   8a988:	1887c83a 	sub	r3,r3,r2
   8a98c:	20c4983a 	sll	r2,r4,r3
   8a990:	11ff8c1e 	bne	r2,r7,8a7c4 <_strtod_r+0x1088>
   8a994:	28dffc2c 	andhi	r3,r5,32752
   8a998:	00800434 	movhi	r2,16
   8a99c:	188d883a 	add	r6,r3,r2
   8a9a0:	e1800115 	stw	r6,4(fp)
   8a9a4:	e0000015 	stw	zero,0(fp)
   8a9a8:	483f061e 	bne	r9,zero,8a5c4 <_strtod_r+0xe88>
   8a9ac:	003fd706 	br	8a90c <_strtod_r+0x11d0>
   8a9b0:	0021883a 	mov	r16,zero
   8a9b4:	0005883a 	mov	r2,zero
   8a9b8:	044ff834 	movhi	r17,16352
   8a9bc:	00eff834 	movhi	r3,49120
   8a9c0:	003e7c06 	br	8a3b4 <_strtod_r+0xc78>
   8a9c4:	803d9226 	beq	r16,zero,8a010 <_strtod_r+0x8d4>
   8a9c8:	0421c83a 	sub	r16,zero,r16
   8a9cc:	814003cc 	andi	r5,r16,15
   8a9d0:	28000f26 	beq	r5,zero,8aa10 <_strtod_r+0x12d4>
   8a9d4:	280a90fa 	slli	r5,r5,3
   8a9d8:	01000274 	movhi	r4,9
   8a9dc:	210ead04 	addi	r4,r4,15028
   8a9e0:	e0800017 	ldw	r2,0(fp)
   8a9e4:	290b883a 	add	r5,r5,r4
   8a9e8:	2a000017 	ldw	r8,0(r5)
   8a9ec:	e0c00117 	ldw	r3,4(fp)
   8a9f0:	2a400117 	ldw	r9,4(r5)
   8a9f4:	1009883a 	mov	r4,r2
   8a9f8:	180b883a 	mov	r5,r3
   8a9fc:	480f883a 	mov	r7,r9
   8aa00:	400d883a 	mov	r6,r8
   8aa04:	008e6400 	call	8e640 <__divdf3>
   8aa08:	e0c00115 	stw	r3,4(fp)
   8aa0c:	e0800015 	stw	r2,0(fp)
   8aa10:	8021d13a 	srai	r16,r16,4
   8aa14:	803d7e26 	beq	r16,zero,8a010 <_strtod_r+0x8d4>
   8aa18:	008007c4 	movi	r2,31
   8aa1c:	14002d16 	blt	r2,r16,8aad4 <_strtod_r+0x1398>
   8aa20:	8080040c 	andi	r2,r16,16
   8aa24:	10009d26 	beq	r2,zero,8ac9c <_strtod_r+0x1560>
   8aa28:	01001a84 	movi	r4,106
   8aa2c:	d9001c15 	stw	r4,112(sp)
   8aa30:	0400110e 	bge	zero,r16,8aa78 <_strtod_r+0x133c>
   8aa34:	04400274 	movhi	r17,9
   8aa38:	8c4efa04 	addi	r17,r17,15336
   8aa3c:	8080004c 	andi	r2,r16,1
   8aa40:	1005003a 	cmpeq	r2,r2,zero
   8aa44:	1000091e 	bne	r2,zero,8aa6c <_strtod_r+0x1330>
   8aa48:	e0800017 	ldw	r2,0(fp)
   8aa4c:	e0c00117 	ldw	r3,4(fp)
   8aa50:	89800017 	ldw	r6,0(r17)
   8aa54:	89c00117 	ldw	r7,4(r17)
   8aa58:	180b883a 	mov	r5,r3
   8aa5c:	1009883a 	mov	r4,r2
   8aa60:	008e27c0 	call	8e27c <__muldf3>
   8aa64:	e0c00115 	stw	r3,4(fp)
   8aa68:	e0800015 	stw	r2,0(fp)
   8aa6c:	8021d07a 	srai	r16,r16,1
   8aa70:	8c400204 	addi	r17,r17,8
   8aa74:	043ff116 	blt	zero,r16,8aa3c <_strtod_r+0x1300>
   8aa78:	d8801c17 	ldw	r2,112(sp)
   8aa7c:	10000d26 	beq	r2,zero,8aab4 <_strtod_r+0x1378>
   8aa80:	e1000117 	ldw	r4,4(fp)
   8aa84:	00c01ac4 	movi	r3,107
   8aa88:	209ffc2c 	andhi	r2,r4,32752
   8aa8c:	1004d53a 	srli	r2,r2,20
   8aa90:	1887c83a 	sub	r3,r3,r2
   8aa94:	00c0070e 	bge	zero,r3,8aab4 <_strtod_r+0x1378>
   8aa98:	008007c4 	movi	r2,31
   8aa9c:	10c0940e 	bge	r2,r3,8acf0 <_strtod_r+0x15b4>
   8aaa0:	00800d04 	movi	r2,52
   8aaa4:	e0000015 	stw	zero,0(fp)
   8aaa8:	10c08b0e 	bge	r2,r3,8acd8 <_strtod_r+0x159c>
   8aaac:	0180dc34 	movhi	r6,880
   8aab0:	e1800115 	stw	r6,4(fp)
   8aab4:	e0800017 	ldw	r2,0(fp)
   8aab8:	e0c00117 	ldw	r3,4(fp)
   8aabc:	000d883a 	mov	r6,zero
   8aac0:	000f883a 	mov	r7,zero
   8aac4:	180b883a 	mov	r5,r3
   8aac8:	1009883a 	mov	r4,r2
   8aacc:	008e9200 	call	8e920 <__nedf2>
   8aad0:	103d501e 	bne	r2,zero,8a014 <_strtod_r+0x8d8>
   8aad4:	00800884 	movi	r2,34
   8aad8:	a8800015 	stw	r2,0(r21)
   8aadc:	e0000015 	stw	zero,0(fp)
   8aae0:	e0000115 	stw	zero,4(fp)
   8aae4:	003b9f06 	br	89964 <_strtod_r+0x228>
   8aae8:	e1800117 	ldw	r6,4(fp)
   8aaec:	00c00434 	movhi	r3,16
   8aaf0:	18ffffc4 	addi	r3,r3,-1
   8aaf4:	30c4703a 	and	r2,r6,r3
   8aaf8:	103f311e 	bne	r2,zero,8a7c0 <_strtod_r+0x1084>
   8aafc:	e1c00017 	ldw	r7,0(fp)
   8ab00:	383f301e 	bne	r7,zero,8a7c4 <_strtod_r+0x1088>
   8ab04:	003f7906 	br	8a8ec <_strtod_r+0x11b0>
   8ab08:	d8c00f17 	ldw	r3,60(sp)
   8ab0c:	00bffa84 	movi	r2,-22
   8ab10:	18bcbf16 	blt	r3,r2,89e10 <_strtod_r+0x6d4>
   8ab14:	1809883a 	mov	r4,r3
   8ab18:	017ffe04 	movi	r5,-8
   8ab1c:	00806240 	call	80624 <__mulsi3>
   8ab20:	00c00274 	movhi	r3,9
   8ab24:	18cead04 	addi	r3,r3,15028
   8ab28:	10c5883a 	add	r2,r2,r3
   8ab2c:	e2000017 	ldw	r8,0(fp)
   8ab30:	e2400117 	ldw	r9,4(fp)
   8ab34:	12800017 	ldw	r10,0(r2)
   8ab38:	12c00117 	ldw	r11,4(r2)
   8ab3c:	480b883a 	mov	r5,r9
   8ab40:	4009883a 	mov	r4,r8
   8ab44:	580f883a 	mov	r7,r11
   8ab48:	500d883a 	mov	r6,r10
   8ab4c:	008e6400 	call	8e640 <__divdf3>
   8ab50:	e0c00115 	stw	r3,4(fp)
   8ab54:	e0800015 	stw	r2,0(fp)
   8ab58:	003b8206 	br	89964 <_strtod_r+0x228>
   8ab5c:	d8801c17 	ldw	r2,112(sp)
   8ab60:	1013003a 	cmpeq	r9,r2,zero
   8ab64:	483e971e 	bne	r9,zero,8a5c4 <_strtod_r+0xe88>
   8ab68:	003f6806 	br	8a90c <_strtod_r+0x11d0>
   8ab6c:	00801a44 	movi	r2,105
   8ab70:	88bc5026 	beq	r17,r2,89cb4 <_strtod_r+0x578>
   8ab74:	00801b84 	movi	r2,110
   8ab78:	88bb9b1e 	bne	r17,r2,899e8 <_strtod_r+0x2ac>
   8ab7c:	dc000404 	addi	r16,sp,16
   8ab80:	8009883a 	mov	r4,r16
   8ab84:	01400274 	movhi	r5,9
   8ab88:	294ef904 	addi	r5,r5,15332
   8ab8c:	00896f40 	call	896f4 <match>
   8ab90:	103b9526 	beq	r2,zero,899e8 <_strtod_r+0x2ac>
   8ab94:	d8800417 	ldw	r2,16(sp)
   8ab98:	00c00a04 	movi	r3,40
   8ab9c:	11000007 	ldb	r4,0(r2)
   8aba0:	20c04026 	beq	r4,r3,8aca4 <_strtod_r+0x1568>
   8aba4:	01bffe34 	movhi	r6,65528
   8aba8:	e1800115 	stw	r6,4(fp)
   8abac:	e0000015 	stw	zero,0(fp)
   8abb0:	003b6c06 	br	89964 <_strtod_r+0x228>
   8abb4:	d8c01817 	ldw	r3,96(sp)
   8abb8:	00800404 	movi	r2,16
   8abbc:	10c00516 	blt	r2,r3,8abd4 <_strtod_r+0x1498>
   8abc0:	d9001117 	ldw	r4,68(sp)
   8abc4:	01400284 	movi	r5,10
   8abc8:	00806240 	call	80624 <__mulsi3>
   8abcc:	1585883a 	add	r2,r2,r22
   8abd0:	d8801115 	stw	r2,68(sp)
   8abd4:	000d883a 	mov	r6,zero
   8abd8:	003f2506 	br	8a870 <_strtod_r+0x1134>
   8abdc:	000d883a 	mov	r6,zero
   8abe0:	003ce306 	br	89f70 <_strtod_r+0x834>
   8abe4:	e4400117 	ldw	r17,4(fp)
   8abe8:	3809883a 	mov	r4,r7
   8abec:	3821883a 	mov	r16,r7
   8abf0:	880b883a 	mov	r5,r17
   8abf4:	0087a9c0 	call	87a9c <__ulp>
   8abf8:	180f883a 	mov	r7,r3
   8abfc:	880b883a 	mov	r5,r17
   8ac00:	8009883a 	mov	r4,r16
   8ac04:	100d883a 	mov	r6,r2
   8ac08:	008e2080 	call	8e208 <__adddf3>
   8ac0c:	180b883a 	mov	r5,r3
   8ac10:	d8c01c17 	ldw	r3,112(sp)
   8ac14:	1009883a 	mov	r4,r2
   8ac18:	e1400115 	stw	r5,4(fp)
   8ac1c:	1813003a 	cmpeq	r9,r3,zero
   8ac20:	e1000015 	stw	r4,0(fp)
   8ac24:	483e671e 	bne	r9,zero,8a5c4 <_strtod_r+0xe88>
   8ac28:	003f3806 	br	8a90c <_strtod_r+0x11d0>
   8ac2c:	0080d434 	movhi	r2,848
   8ac30:	188d883a 	add	r6,r3,r2
   8ac34:	d8001c15 	stw	zero,112(sp)
   8ac38:	e1800115 	stw	r6,4(fp)
   8ac3c:	003cf506 	br	8a014 <_strtod_r+0x8d8>
   8ac40:	d8c01c17 	ldw	r3,112(sp)
   8ac44:	1813003a 	cmpeq	r9,r3,zero
   8ac48:	483e5e1e 	bne	r9,zero,8a5c4 <_strtod_r+0xe88>
   8ac4c:	003f2f06 	br	8a90c <_strtod_r+0x11d0>
   8ac50:	309ffc2c 	andhi	r2,r6,32752
   8ac54:	00fffc34 	movhi	r3,65520
   8ac58:	10c5883a 	add	r2,r2,r3
   8ac5c:	00c00434 	movhi	r3,16
   8ac60:	18ffffc4 	addi	r3,r3,-1
   8ac64:	10ccb03a 	or	r6,r2,r3
   8ac68:	01ffffc4 	movi	r7,-1
   8ac6c:	e1800115 	stw	r6,4(fp)
   8ac70:	e1c00015 	stw	r7,0(fp)
   8ac74:	483e531e 	bne	r9,zero,8a5c4 <_strtod_r+0xe88>
   8ac78:	003f2406 	br	8a90c <_strtod_r+0x11d0>
   8ac7c:	00bfffc4 	movi	r2,-1
   8ac80:	003f4306 	br	8a990 <_strtod_r+0x1254>
   8ac84:	0025883a 	mov	r18,zero
   8ac88:	05800274 	movhi	r22,9
   8ac8c:	b58edf04 	addi	r22,r22,15228
   8ac90:	003c9206 	br	89edc <_strtod_r+0x7a0>
   8ac94:	d9c01817 	ldw	r7,96(sp)
   8ac98:	003eeb06 	br	8a848 <_strtod_r+0x110c>
   8ac9c:	d8001c15 	stw	zero,112(sp)
   8aca0:	003f6306 	br	8aa30 <_strtod_r+0x12f4>
   8aca4:	8009883a 	mov	r4,r16
   8aca8:	01400274 	movhi	r5,9
   8acac:	29516504 	addi	r5,r5,17812
   8acb0:	d9800d04 	addi	r6,sp,52
   8acb4:	008c9d40 	call	8c9d4 <__hexnan>
   8acb8:	00c00144 	movi	r3,5
   8acbc:	10ffb91e 	bne	r2,r3,8aba4 <_strtod_r+0x1468>
   8acc0:	d8800e17 	ldw	r2,56(sp)
   8acc4:	d9c00d17 	ldw	r7,52(sp)
   8acc8:	119ffc34 	orhi	r6,r2,32752
   8accc:	e1800115 	stw	r6,4(fp)
   8acd0:	e1c00015 	stw	r7,0(fp)
   8acd4:	003b2306 	br	89964 <_strtod_r+0x228>
   8acd8:	18fff804 	addi	r3,r3,-32
   8acdc:	00bfffc4 	movi	r2,-1
   8ace0:	10c4983a 	sll	r2,r2,r3
   8ace4:	208c703a 	and	r6,r4,r2
   8ace8:	e1800115 	stw	r6,4(fp)
   8acec:	003f7106 	br	8aab4 <_strtod_r+0x1378>
   8acf0:	00bfffc4 	movi	r2,-1
   8acf4:	10c4983a 	sll	r2,r2,r3
   8acf8:	e0c00017 	ldw	r3,0(fp)
   8acfc:	188e703a 	and	r7,r3,r2
   8ad00:	e1c00015 	stw	r7,0(fp)
   8ad04:	003f6b06 	br	8aab4 <_strtod_r+0x1378>

0008ad08 <strtof>:
   8ad08:	defffa04 	addi	sp,sp,-24
   8ad0c:	dd000415 	stw	r20,16(sp)
   8ad10:	05000274 	movhi	r20,9
   8ad14:	a5163a04 	addi	r20,r20,22760
   8ad18:	2007883a 	mov	r3,r4
   8ad1c:	a1000017 	ldw	r4,0(r20)
   8ad20:	280d883a 	mov	r6,r5
   8ad24:	180b883a 	mov	r5,r3
   8ad28:	dfc00515 	stw	ra,20(sp)
   8ad2c:	dcc00315 	stw	r19,12(sp)
   8ad30:	dc800215 	stw	r18,8(sp)
   8ad34:	dc400115 	stw	r17,4(sp)
   8ad38:	dc000015 	stw	r16,0(sp)
   8ad3c:	008973c0 	call	8973c <_strtod_r>
   8ad40:	180b883a 	mov	r5,r3
   8ad44:	1009883a 	mov	r4,r2
   8ad48:	1823883a 	mov	r17,r3
   8ad4c:	1021883a 	mov	r16,r2
   8ad50:	008ed980 	call	8ed98 <__truncdfsf2>
   8ad54:	1009883a 	mov	r4,r2
   8ad58:	000b883a 	mov	r5,zero
   8ad5c:	1025883a 	mov	r18,r2
   8ad60:	1027883a 	mov	r19,r2
   8ad64:	008dc100 	call	8dc10 <__nesf2>
   8ad68:	000d883a 	mov	r6,zero
   8ad6c:	000f883a 	mov	r7,zero
   8ad70:	8009883a 	mov	r4,r16
   8ad74:	880b883a 	mov	r5,r17
   8ad78:	10000e1e 	bne	r2,zero,8adb4 <strtof+0xac>
   8ad7c:	008e9200 	call	8e920 <__nedf2>
   8ad80:	10000c26 	beq	r2,zero,8adb4 <strtof+0xac>
   8ad84:	a0c00017 	ldw	r3,0(r20)
   8ad88:	00800884 	movi	r2,34
   8ad8c:	18800015 	stw	r2,0(r3)
   8ad90:	9805883a 	mov	r2,r19
   8ad94:	dfc00517 	ldw	ra,20(sp)
   8ad98:	dd000417 	ldw	r20,16(sp)
   8ad9c:	dcc00317 	ldw	r19,12(sp)
   8ada0:	dc800217 	ldw	r18,8(sp)
   8ada4:	dc400117 	ldw	r17,4(sp)
   8ada8:	dc000017 	ldw	r16,0(sp)
   8adac:	dec00604 	addi	sp,sp,24
   8adb0:	f800283a 	ret
   8adb4:	9009883a 	mov	r4,r18
   8adb8:	015fe034 	movhi	r5,32640
   8adbc:	297fffc4 	addi	r5,r5,-1
   8adc0:	008dc880 	call	8dc88 <__gtsf2>
   8adc4:	00ffffc4 	movi	r3,-1
   8adc8:	011ffc34 	movhi	r4,32752
   8adcc:	213fffc4 	addi	r4,r4,-1
   8add0:	200f883a 	mov	r7,r4
   8add4:	180d883a 	mov	r6,r3
   8add8:	8009883a 	mov	r4,r16
   8addc:	880b883a 	mov	r5,r17
   8ade0:	00800f16 	blt	zero,r2,8ae20 <strtof+0x118>
   8ade4:	9009883a 	mov	r4,r18
   8ade8:	017fe034 	movhi	r5,65408
   8adec:	297fffc4 	addi	r5,r5,-1
   8adf0:	008dd000 	call	8dd00 <__ltsf2>
   8adf4:	023fffc4 	movi	r8,-1
   8adf8:	027ffc34 	movhi	r9,65520
   8adfc:	4a7fffc4 	addi	r9,r9,-1
   8ae00:	880b883a 	mov	r5,r17
   8ae04:	480f883a 	mov	r7,r9
   8ae08:	8009883a 	mov	r4,r16
   8ae0c:	400d883a 	mov	r6,r8
   8ae10:	103fdf0e 	bge	r2,zero,8ad90 <strtof+0x88>
   8ae14:	008eab80 	call	8eab8 <__ltdf2>
   8ae18:	103fda0e 	bge	r2,zero,8ad84 <strtof+0x7c>
   8ae1c:	003fdc06 	br	8ad90 <strtof+0x88>
   8ae20:	008e9a80 	call	8e9a8 <__gtdf2>
   8ae24:	00bfd70e 	bge	zero,r2,8ad84 <strtof+0x7c>
   8ae28:	003fee06 	br	8ade4 <strtof+0xdc>

0008ae2c <strtod>:
   8ae2c:	01800274 	movhi	r6,9
   8ae30:	31963a04 	addi	r6,r6,22760
   8ae34:	2007883a 	mov	r3,r4
   8ae38:	31000017 	ldw	r4,0(r6)
   8ae3c:	280d883a 	mov	r6,r5
   8ae40:	180b883a 	mov	r5,r3
   8ae44:	008973c1 	jmpi	8973c <_strtod_r>

0008ae48 <_strtol_r>:
   8ae48:	defff304 	addi	sp,sp,-52
   8ae4c:	00800274 	movhi	r2,9
   8ae50:	10963904 	addi	r2,r2,22756
   8ae54:	dd000715 	stw	r20,28(sp)
   8ae58:	15000017 	ldw	r20,0(r2)
   8ae5c:	ddc00a15 	stw	r23,40(sp)
   8ae60:	dc800515 	stw	r18,20(sp)
   8ae64:	dc400415 	stw	r17,16(sp)
   8ae68:	dfc00c15 	stw	ra,48(sp)
   8ae6c:	df000b15 	stw	fp,44(sp)
   8ae70:	dd800915 	stw	r22,36(sp)
   8ae74:	dd400815 	stw	r21,32(sp)
   8ae78:	dcc00615 	stw	r19,24(sp)
   8ae7c:	dc000315 	stw	r16,12(sp)
   8ae80:	282f883a 	mov	r23,r5
   8ae84:	d9000115 	stw	r4,4(sp)
   8ae88:	d9800215 	stw	r6,8(sp)
   8ae8c:	3825883a 	mov	r18,r7
   8ae90:	2823883a 	mov	r17,r5
   8ae94:	8c000007 	ldb	r16,0(r17)
   8ae98:	8c400044 	addi	r17,r17,1
   8ae9c:	a407883a 	add	r3,r20,r16
   8aea0:	18800003 	ldbu	r2,0(r3)
   8aea4:	1080020c 	andi	r2,r2,8
   8aea8:	103ffa1e 	bne	r2,zero,8ae94 <_strtol_r+0x4c>
   8aeac:	00800b44 	movi	r2,45
   8aeb0:	80805c26 	beq	r16,r2,8b024 <_strtol_r+0x1dc>
   8aeb4:	00800ac4 	movi	r2,43
   8aeb8:	80805726 	beq	r16,r2,8b018 <_strtol_r+0x1d0>
   8aebc:	d8000015 	stw	zero,0(sp)
   8aec0:	9007003a 	cmpeq	r3,r18,zero
   8aec4:	1800431e 	bne	r3,zero,8afd4 <_strtol_r+0x18c>
   8aec8:	00800404 	movi	r2,16
   8aecc:	90804126 	beq	r18,r2,8afd4 <_strtol_r+0x18c>
   8aed0:	902b883a 	mov	r21,r18
   8aed4:	d8c00017 	ldw	r3,0(sp)
   8aed8:	1838c03a 	cmpne	fp,r3,zero
   8aedc:	e0004a1e 	bne	fp,zero,8b008 <_strtol_r+0x1c0>
   8aee0:	04e00034 	movhi	r19,32768
   8aee4:	9cffffc4 	addi	r19,r19,-1
   8aee8:	9809883a 	mov	r4,r19
   8aeec:	a80b883a 	mov	r5,r21
   8aef0:	008f0e40 	call	8f0e4 <__umodsi3>
   8aef4:	9809883a 	mov	r4,r19
   8aef8:	a80b883a 	mov	r5,r21
   8aefc:	102d883a 	mov	r22,r2
   8af00:	008f0dc0 	call	8f0dc <__udivsi3>
   8af04:	1027883a 	mov	r19,r2
   8af08:	a405883a 	add	r2,r20,r16
   8af0c:	11400003 	ldbu	r5,0(r2)
   8af10:	0009883a 	mov	r4,zero
   8af14:	000d883a 	mov	r6,zero
   8af18:	28c0010c 	andi	r3,r5,4
   8af1c:	18000f26 	beq	r3,zero,8af5c <_strtol_r+0x114>
   8af20:	843ff404 	addi	r16,r16,-48
   8af24:	8480150e 	bge	r16,r18,8af7c <_strtol_r+0x134>
   8af28:	30003216 	blt	r6,zero,8aff4 <_strtol_r+0x1ac>
   8af2c:	99003136 	bltu	r19,r4,8aff4 <_strtol_r+0x1ac>
   8af30:	24c02f26 	beq	r4,r19,8aff0 <_strtol_r+0x1a8>
   8af34:	a80b883a 	mov	r5,r21
   8af38:	00806240 	call	80624 <__mulsi3>
   8af3c:	1409883a 	add	r4,r2,r16
   8af40:	01800044 	movi	r6,1
   8af44:	8c000007 	ldb	r16,0(r17)
   8af48:	8c400044 	addi	r17,r17,1
   8af4c:	a405883a 	add	r2,r20,r16
   8af50:	11400003 	ldbu	r5,0(r2)
   8af54:	28c0010c 	andi	r3,r5,4
   8af58:	183ff11e 	bne	r3,zero,8af20 <_strtol_r+0xd8>
   8af5c:	288000cc 	andi	r2,r5,3
   8af60:	10000626 	beq	r2,zero,8af7c <_strtol_r+0x134>
   8af64:	2880004c 	andi	r2,r5,1
   8af68:	1005003a 	cmpeq	r2,r2,zero
   8af6c:	1000231e 	bne	r2,zero,8affc <_strtol_r+0x1b4>
   8af70:	00800dc4 	movi	r2,55
   8af74:	80a1c83a 	sub	r16,r16,r2
   8af78:	84bfeb16 	blt	r16,r18,8af28 <_strtol_r+0xe0>
   8af7c:	30002e16 	blt	r6,zero,8b038 <_strtol_r+0x1f0>
   8af80:	e000231e 	bne	fp,zero,8b010 <_strtol_r+0x1c8>
   8af84:	2007883a 	mov	r3,r4
   8af88:	d8800217 	ldw	r2,8(sp)
   8af8c:	10000426 	beq	r2,zero,8afa0 <_strtol_r+0x158>
   8af90:	30000126 	beq	r6,zero,8af98 <_strtol_r+0x150>
   8af94:	8dffffc4 	addi	r23,r17,-1
   8af98:	d9000217 	ldw	r4,8(sp)
   8af9c:	25c00015 	stw	r23,0(r4)
   8afa0:	1805883a 	mov	r2,r3
   8afa4:	dfc00c17 	ldw	ra,48(sp)
   8afa8:	df000b17 	ldw	fp,44(sp)
   8afac:	ddc00a17 	ldw	r23,40(sp)
   8afb0:	dd800917 	ldw	r22,36(sp)
   8afb4:	dd400817 	ldw	r21,32(sp)
   8afb8:	dd000717 	ldw	r20,28(sp)
   8afbc:	dcc00617 	ldw	r19,24(sp)
   8afc0:	dc800517 	ldw	r18,20(sp)
   8afc4:	dc400417 	ldw	r17,16(sp)
   8afc8:	dc000317 	ldw	r16,12(sp)
   8afcc:	dec00d04 	addi	sp,sp,52
   8afd0:	f800283a 	ret
   8afd4:	00800c04 	movi	r2,48
   8afd8:	80801f26 	beq	r16,r2,8b058 <_strtol_r+0x210>
   8afdc:	183fbc26 	beq	r3,zero,8aed0 <_strtol_r+0x88>
   8afe0:	00800c04 	movi	r2,48
   8afe4:	80802926 	beq	r16,r2,8b08c <_strtol_r+0x244>
   8afe8:	04800284 	movi	r18,10
   8afec:	003fb806 	br	8aed0 <_strtol_r+0x88>
   8aff0:	b43fd00e 	bge	r22,r16,8af34 <_strtol_r+0xec>
   8aff4:	01bfffc4 	movi	r6,-1
   8aff8:	003fd206 	br	8af44 <_strtol_r+0xfc>
   8affc:	008015c4 	movi	r2,87
   8b000:	80a1c83a 	sub	r16,r16,r2
   8b004:	003fdc06 	br	8af78 <_strtol_r+0x130>
   8b008:	04e00034 	movhi	r19,32768
   8b00c:	003fb606 	br	8aee8 <_strtol_r+0xa0>
   8b010:	0107c83a 	sub	r3,zero,r4
   8b014:	003fdc06 	br	8af88 <_strtol_r+0x140>
   8b018:	8c000007 	ldb	r16,0(r17)
   8b01c:	8c400044 	addi	r17,r17,1
   8b020:	003fa606 	br	8aebc <_strtol_r+0x74>
   8b024:	8c000007 	ldb	r16,0(r17)
   8b028:	00800044 	movi	r2,1
   8b02c:	8c400044 	addi	r17,r17,1
   8b030:	d8800015 	stw	r2,0(sp)
   8b034:	003fa206 	br	8aec0 <_strtol_r+0x78>
   8b038:	d9000017 	ldw	r4,0(sp)
   8b03c:	2005003a 	cmpeq	r2,r4,zero
   8b040:	10000f1e 	bne	r2,zero,8b080 <_strtol_r+0x238>
   8b044:	00e00034 	movhi	r3,32768
   8b048:	d9000117 	ldw	r4,4(sp)
   8b04c:	00800884 	movi	r2,34
   8b050:	20800015 	stw	r2,0(r4)
   8b054:	003fcc06 	br	8af88 <_strtol_r+0x140>
   8b058:	89000007 	ldb	r4,0(r17)
   8b05c:	00801e04 	movi	r2,120
   8b060:	20800226 	beq	r4,r2,8b06c <_strtol_r+0x224>
   8b064:	00801604 	movi	r2,88
   8b068:	20bfdc1e 	bne	r4,r2,8afdc <_strtol_r+0x194>
   8b06c:	8c000047 	ldb	r16,1(r17)
   8b070:	04800404 	movi	r18,16
   8b074:	8c400084 	addi	r17,r17,2
   8b078:	902b883a 	mov	r21,r18
   8b07c:	003f9506 	br	8aed4 <_strtol_r+0x8c>
   8b080:	00e00034 	movhi	r3,32768
   8b084:	18ffffc4 	addi	r3,r3,-1
   8b088:	003fef06 	br	8b048 <_strtol_r+0x200>
   8b08c:	04800204 	movi	r18,8
   8b090:	902b883a 	mov	r21,r18
   8b094:	003f8f06 	br	8aed4 <_strtol_r+0x8c>

0008b098 <strtol>:
   8b098:	00800274 	movhi	r2,9
   8b09c:	10963a04 	addi	r2,r2,22760
   8b0a0:	2013883a 	mov	r9,r4
   8b0a4:	11000017 	ldw	r4,0(r2)
   8b0a8:	2805883a 	mov	r2,r5
   8b0ac:	300f883a 	mov	r7,r6
   8b0b0:	480b883a 	mov	r5,r9
   8b0b4:	100d883a 	mov	r6,r2
   8b0b8:	008ae481 	jmpi	8ae48 <_strtol_r>

0008b0bc <_strtoll_r>:
   8b0bc:	defff004 	addi	sp,sp,-64
   8b0c0:	00800274 	movhi	r2,9
   8b0c4:	10963904 	addi	r2,r2,22756
   8b0c8:	df000e15 	stw	fp,56(sp)
   8b0cc:	17000017 	ldw	fp,0(r2)
   8b0d0:	ddc00d15 	stw	r23,52(sp)
   8b0d4:	dd000a15 	stw	r20,40(sp)
   8b0d8:	dfc00f15 	stw	ra,60(sp)
   8b0dc:	dd800c15 	stw	r22,48(sp)
   8b0e0:	dd400b15 	stw	r21,44(sp)
   8b0e4:	dcc00915 	stw	r19,36(sp)
   8b0e8:	dc800815 	stw	r18,32(sp)
   8b0ec:	dc400715 	stw	r17,28(sp)
   8b0f0:	dc000615 	stw	r16,24(sp)
   8b0f4:	d9400315 	stw	r5,12(sp)
   8b0f8:	d9000215 	stw	r4,8(sp)
   8b0fc:	d9800415 	stw	r6,16(sp)
   8b100:	382f883a 	mov	r23,r7
   8b104:	2829883a 	mov	r20,r5
   8b108:	a4c00007 	ldb	r19,0(r20)
   8b10c:	a5000044 	addi	r20,r20,1
   8b110:	e4c7883a 	add	r3,fp,r19
   8b114:	18800003 	ldbu	r2,0(r3)
   8b118:	1080020c 	andi	r2,r2,8
   8b11c:	103ffa1e 	bne	r2,zero,8b108 <_strtoll_r+0x4c>
   8b120:	00800b44 	movi	r2,45
   8b124:	98808826 	beq	r19,r2,8b348 <_strtoll_r+0x28c>
   8b128:	00800ac4 	movi	r2,43
   8b12c:	98808326 	beq	r19,r2,8b33c <_strtoll_r+0x280>
   8b130:	d8000115 	stw	zero,4(sp)
   8b134:	b807003a 	cmpeq	r3,r23,zero
   8b138:	18005f1e 	bne	r3,zero,8b2b8 <_strtoll_r+0x1fc>
   8b13c:	00800404 	movi	r2,16
   8b140:	b8805d26 	beq	r23,r2,8b2b8 <_strtoll_r+0x1fc>
   8b144:	b82dd7fa 	srai	r22,r23,31
   8b148:	b82b883a 	mov	r21,r23
   8b14c:	d8c00117 	ldw	r3,4(sp)
   8b150:	1806c03a 	cmpne	r3,r3,zero
   8b154:	d8c00515 	stw	r3,20(sp)
   8b158:	1800631e 	bne	r3,zero,8b2e8 <_strtoll_r+0x22c>
   8b15c:	043fffc4 	movi	r16,-1
   8b160:	04600034 	movhi	r17,32768
   8b164:	8c7fffc4 	addi	r17,r17,-1
   8b168:	880b883a 	mov	r5,r17
   8b16c:	8009883a 	mov	r4,r16
   8b170:	a80d883a 	mov	r6,r21
   8b174:	b00f883a 	mov	r7,r22
   8b178:	008d5b00 	call	8d5b0 <__umoddi3>
   8b17c:	880b883a 	mov	r5,r17
   8b180:	8009883a 	mov	r4,r16
   8b184:	b00f883a 	mov	r7,r22
   8b188:	a80d883a 	mov	r6,r21
   8b18c:	d8800015 	stw	r2,0(sp)
   8b190:	008cf440 	call	8cf44 <__udivdi3>
   8b194:	1023883a 	mov	r17,r2
   8b198:	e4c5883a 	add	r2,fp,r19
   8b19c:	11000003 	ldbu	r4,0(r2)
   8b1a0:	1825883a 	mov	r18,r3
   8b1a4:	0015883a 	mov	r10,zero
   8b1a8:	20c0010c 	andi	r3,r4,4
   8b1ac:	0017883a 	mov	r11,zero
   8b1b0:	000f883a 	mov	r7,zero
   8b1b4:	18001a26 	beq	r3,zero,8b220 <_strtoll_r+0x164>
   8b1b8:	9c3ff404 	addi	r16,r19,-48
   8b1bc:	85c0200e 	bge	r16,r23,8b240 <_strtoll_r+0x184>
   8b1c0:	38003b16 	blt	r7,zero,8b2b0 <_strtoll_r+0x1f4>
   8b1c4:	92c03a36 	bltu	r18,r11,8b2b0 <_strtoll_r+0x1f4>
   8b1c8:	5c803826 	beq	r11,r18,8b2ac <_strtoll_r+0x1f0>
   8b1cc:	54404c26 	beq	r10,r17,8b300 <_strtoll_r+0x244>
   8b1d0:	580b883a 	mov	r5,r11
   8b1d4:	5009883a 	mov	r4,r10
   8b1d8:	a80d883a 	mov	r6,r21
   8b1dc:	b00f883a 	mov	r7,r22
   8b1e0:	008cd7c0 	call	8cd7c <__muldi3>
   8b1e4:	8013d7fa 	srai	r9,r16,31
   8b1e8:	100d883a 	mov	r6,r2
   8b1ec:	1405883a 	add	r2,r2,r16
   8b1f0:	118d803a 	cmpltu	r6,r2,r6
   8b1f4:	1a47883a 	add	r3,r3,r9
   8b1f8:	30cd883a 	add	r6,r6,r3
   8b1fc:	1015883a 	mov	r10,r2
   8b200:	3017883a 	mov	r11,r6
   8b204:	01c00044 	movi	r7,1
   8b208:	a4c00007 	ldb	r19,0(r20)
   8b20c:	a5000044 	addi	r20,r20,1
   8b210:	e4c5883a 	add	r2,fp,r19
   8b214:	11000003 	ldbu	r4,0(r2)
   8b218:	20c0010c 	andi	r3,r4,4
   8b21c:	183fe61e 	bne	r3,zero,8b1b8 <_strtoll_r+0xfc>
   8b220:	208000cc 	andi	r2,r4,3
   8b224:	10000626 	beq	r2,zero,8b240 <_strtoll_r+0x184>
   8b228:	2080004c 	andi	r2,r4,1
   8b22c:	1005003a 	cmpeq	r2,r2,zero
   8b230:	1000301e 	bne	r2,zero,8b2f4 <_strtoll_r+0x238>
   8b234:	02000dc4 	movi	r8,55
   8b238:	9a21c83a 	sub	r16,r19,r8
   8b23c:	85ffe016 	blt	r16,r23,8b1c0 <_strtoll_r+0x104>
   8b240:	38004616 	blt	r7,zero,8b35c <_strtoll_r+0x2a0>
   8b244:	d8800517 	ldw	r2,20(sp)
   8b248:	1000341e 	bne	r2,zero,8b31c <_strtoll_r+0x260>
   8b24c:	500b883a 	mov	r5,r10
   8b250:	580d883a 	mov	r6,r11
   8b254:	d8c00417 	ldw	r3,16(sp)
   8b258:	18000626 	beq	r3,zero,8b274 <_strtoll_r+0x1b8>
   8b25c:	38000226 	beq	r7,zero,8b268 <_strtoll_r+0x1ac>
   8b260:	a53fffc4 	addi	r20,r20,-1
   8b264:	dd000315 	stw	r20,12(sp)
   8b268:	d8c00317 	ldw	r3,12(sp)
   8b26c:	d8800417 	ldw	r2,16(sp)
   8b270:	10c00015 	stw	r3,0(r2)
   8b274:	2805883a 	mov	r2,r5
   8b278:	3007883a 	mov	r3,r6
   8b27c:	dfc00f17 	ldw	ra,60(sp)
   8b280:	df000e17 	ldw	fp,56(sp)
   8b284:	ddc00d17 	ldw	r23,52(sp)
   8b288:	dd800c17 	ldw	r22,48(sp)
   8b28c:	dd400b17 	ldw	r21,44(sp)
   8b290:	dd000a17 	ldw	r20,40(sp)
   8b294:	dcc00917 	ldw	r19,36(sp)
   8b298:	dc800817 	ldw	r18,32(sp)
   8b29c:	dc400717 	ldw	r17,28(sp)
   8b2a0:	dc000617 	ldw	r16,24(sp)
   8b2a4:	dec01004 	addi	sp,sp,64
   8b2a8:	f800283a 	ret
   8b2ac:	8abfc72e 	bgeu	r17,r10,8b1cc <_strtoll_r+0x110>
   8b2b0:	01ffffc4 	movi	r7,-1
   8b2b4:	003fd406 	br	8b208 <_strtoll_r+0x14c>
   8b2b8:	00800c04 	movi	r2,48
   8b2bc:	98803226 	beq	r19,r2,8b388 <_strtoll_r+0x2cc>
   8b2c0:	183fa026 	beq	r3,zero,8b144 <_strtoll_r+0x88>
   8b2c4:	00800c04 	movi	r2,48
   8b2c8:	98803e26 	beq	r19,r2,8b3c4 <_strtoll_r+0x308>
   8b2cc:	d8c00117 	ldw	r3,4(sp)
   8b2d0:	05c00284 	movi	r23,10
   8b2d4:	b82b883a 	mov	r21,r23
   8b2d8:	1806c03a 	cmpne	r3,r3,zero
   8b2dc:	002d883a 	mov	r22,zero
   8b2e0:	d8c00515 	stw	r3,20(sp)
   8b2e4:	183f9d26 	beq	r3,zero,8b15c <_strtoll_r+0xa0>
   8b2e8:	0021883a 	mov	r16,zero
   8b2ec:	04600034 	movhi	r17,32768
   8b2f0:	003f9d06 	br	8b168 <_strtoll_r+0xac>
   8b2f4:	020015c4 	movi	r8,87
   8b2f8:	9a21c83a 	sub	r16,r19,r8
   8b2fc:	003fcf06 	br	8b23c <_strtoll_r+0x180>
   8b300:	5cbfb31e 	bne	r11,r18,8b1d0 <_strtoll_r+0x114>
   8b304:	d8800017 	ldw	r2,0(sp)
   8b308:	143fb10e 	bge	r2,r16,8b1d0 <_strtoll_r+0x114>
   8b30c:	8815883a 	mov	r10,r17
   8b310:	9017883a 	mov	r11,r18
   8b314:	01ffffc4 	movi	r7,-1
   8b318:	003fbb06 	br	8b208 <_strtoll_r+0x14c>
   8b31c:	0009883a 	mov	r4,zero
   8b320:	2285c83a 	sub	r2,r4,r10
   8b324:	2089803a 	cmpltu	r4,r4,r2
   8b328:	02c7c83a 	sub	r3,zero,r11
   8b32c:	1909c83a 	sub	r4,r3,r4
   8b330:	100b883a 	mov	r5,r2
   8b334:	200d883a 	mov	r6,r4
   8b338:	003fc606 	br	8b254 <_strtoll_r+0x198>
   8b33c:	a4c00007 	ldb	r19,0(r20)
   8b340:	a5000044 	addi	r20,r20,1
   8b344:	003f7a06 	br	8b130 <_strtoll_r+0x74>
   8b348:	a4c00007 	ldb	r19,0(r20)
   8b34c:	00800044 	movi	r2,1
   8b350:	a5000044 	addi	r20,r20,1
   8b354:	d8800115 	stw	r2,4(sp)
   8b358:	003f7606 	br	8b134 <_strtoll_r+0x78>
   8b35c:	d8c00117 	ldw	r3,4(sp)
   8b360:	1805003a 	cmpeq	r2,r3,zero
   8b364:	1000131e 	bne	r2,zero,8b3b4 <_strtoll_r+0x2f8>
   8b368:	0005883a 	mov	r2,zero
   8b36c:	00e00034 	movhi	r3,32768
   8b370:	100b883a 	mov	r5,r2
   8b374:	180d883a 	mov	r6,r3
   8b378:	d8c00217 	ldw	r3,8(sp)
   8b37c:	00800884 	movi	r2,34
   8b380:	18800015 	stw	r2,0(r3)
   8b384:	003fb306 	br	8b254 <_strtoll_r+0x198>
   8b388:	a1000007 	ldb	r4,0(r20)
   8b38c:	00801e04 	movi	r2,120
   8b390:	20800226 	beq	r4,r2,8b39c <_strtoll_r+0x2e0>
   8b394:	00801604 	movi	r2,88
   8b398:	20bfc91e 	bne	r4,r2,8b2c0 <_strtoll_r+0x204>
   8b39c:	a4c00047 	ldb	r19,1(r20)
   8b3a0:	05c00404 	movi	r23,16
   8b3a4:	b82b883a 	mov	r21,r23
   8b3a8:	a5000084 	addi	r20,r20,2
   8b3ac:	002d883a 	mov	r22,zero
   8b3b0:	003f6606 	br	8b14c <_strtoll_r+0x90>
   8b3b4:	017fffc4 	movi	r5,-1
   8b3b8:	01a00034 	movhi	r6,32768
   8b3bc:	31bfffc4 	addi	r6,r6,-1
   8b3c0:	003fed06 	br	8b378 <_strtoll_r+0x2bc>
   8b3c4:	05c00204 	movi	r23,8
   8b3c8:	b82b883a 	mov	r21,r23
   8b3cc:	002d883a 	mov	r22,zero
   8b3d0:	003f5e06 	br	8b14c <_strtoll_r+0x90>

0008b3d4 <_strtoul_r>:
   8b3d4:	defff404 	addi	sp,sp,-48
   8b3d8:	00800274 	movhi	r2,9
   8b3dc:	10963904 	addi	r2,r2,22756
   8b3e0:	dd000615 	stw	r20,24(sp)
   8b3e4:	15000017 	ldw	r20,0(r2)
   8b3e8:	df000a15 	stw	fp,40(sp)
   8b3ec:	ddc00915 	stw	r23,36(sp)
   8b3f0:	dc800415 	stw	r18,16(sp)
   8b3f4:	dc400315 	stw	r17,12(sp)
   8b3f8:	dfc00b15 	stw	ra,44(sp)
   8b3fc:	dd800815 	stw	r22,32(sp)
   8b400:	dd400715 	stw	r21,28(sp)
   8b404:	dcc00515 	stw	r19,20(sp)
   8b408:	dc000215 	stw	r16,8(sp)
   8b40c:	282f883a 	mov	r23,r5
   8b410:	d9000115 	stw	r4,4(sp)
   8b414:	3039883a 	mov	fp,r6
   8b418:	3825883a 	mov	r18,r7
   8b41c:	2823883a 	mov	r17,r5
   8b420:	8c000007 	ldb	r16,0(r17)
   8b424:	8c400044 	addi	r17,r17,1
   8b428:	a407883a 	add	r3,r20,r16
   8b42c:	18800003 	ldbu	r2,0(r3)
   8b430:	1080020c 	andi	r2,r2,8
   8b434:	103ffa1e 	bne	r2,zero,8b420 <_strtoul_r+0x4c>
   8b438:	00800b44 	movi	r2,45
   8b43c:	80805826 	beq	r16,r2,8b5a0 <_strtoul_r+0x1cc>
   8b440:	00800ac4 	movi	r2,43
   8b444:	80805326 	beq	r16,r2,8b594 <_strtoul_r+0x1c0>
   8b448:	d8000015 	stw	zero,0(sp)
   8b44c:	9007003a 	cmpeq	r3,r18,zero
   8b450:	18003d1e 	bne	r3,zero,8b548 <_strtoul_r+0x174>
   8b454:	00800404 	movi	r2,16
   8b458:	90803b26 	beq	r18,r2,8b548 <_strtoul_r+0x174>
   8b45c:	013fffc4 	movi	r4,-1
   8b460:	900b883a 	mov	r5,r18
   8b464:	008f0dc0 	call	8f0dc <__udivsi3>
   8b468:	013fffc4 	movi	r4,-1
   8b46c:	900b883a 	mov	r5,r18
   8b470:	1027883a 	mov	r19,r2
   8b474:	008f0e40 	call	8f0e4 <__umodsi3>
   8b478:	102d883a 	mov	r22,r2
   8b47c:	902b883a 	mov	r21,r18
   8b480:	a405883a 	add	r2,r20,r16
   8b484:	11400003 	ldbu	r5,0(r2)
   8b488:	0009883a 	mov	r4,zero
   8b48c:	000d883a 	mov	r6,zero
   8b490:	28c0010c 	andi	r3,r5,4
   8b494:	18000f26 	beq	r3,zero,8b4d4 <_strtoul_r+0x100>
   8b498:	843ff404 	addi	r16,r16,-48
   8b49c:	8480150e 	bge	r16,r18,8b4f4 <_strtoul_r+0x120>
   8b4a0:	30003516 	blt	r6,zero,8b578 <_strtoul_r+0x1a4>
   8b4a4:	99003436 	bltu	r19,r4,8b578 <_strtoul_r+0x1a4>
   8b4a8:	24c03226 	beq	r4,r19,8b574 <_strtoul_r+0x1a0>
   8b4ac:	a80b883a 	mov	r5,r21
   8b4b0:	00806240 	call	80624 <__mulsi3>
   8b4b4:	1409883a 	add	r4,r2,r16
   8b4b8:	01800044 	movi	r6,1
   8b4bc:	8c000007 	ldb	r16,0(r17)
   8b4c0:	8c400044 	addi	r17,r17,1
   8b4c4:	a405883a 	add	r2,r20,r16
   8b4c8:	11400003 	ldbu	r5,0(r2)
   8b4cc:	28c0010c 	andi	r3,r5,4
   8b4d0:	183ff11e 	bne	r3,zero,8b498 <_strtoul_r+0xc4>
   8b4d4:	288000cc 	andi	r2,r5,3
   8b4d8:	10000626 	beq	r2,zero,8b4f4 <_strtoul_r+0x120>
   8b4dc:	2880004c 	andi	r2,r5,1
   8b4e0:	1005003a 	cmpeq	r2,r2,zero
   8b4e4:	1000261e 	bne	r2,zero,8b580 <_strtoul_r+0x1ac>
   8b4e8:	00800dc4 	movi	r2,55
   8b4ec:	80a1c83a 	sub	r16,r16,r2
   8b4f0:	84bfeb16 	blt	r16,r18,8b4a0 <_strtoul_r+0xcc>
   8b4f4:	3000420e 	bge	r6,zero,8b600 <_strtoul_r+0x22c>
   8b4f8:	d8c00117 	ldw	r3,4(sp)
   8b4fc:	00800884 	movi	r2,34
   8b500:	013fffc4 	movi	r4,-1
   8b504:	18800015 	stw	r2,0(r3)
   8b508:	e0000226 	beq	fp,zero,8b514 <_strtoul_r+0x140>
   8b50c:	30001f1e 	bne	r6,zero,8b58c <_strtoul_r+0x1b8>
   8b510:	e5c00015 	stw	r23,0(fp)
   8b514:	2005883a 	mov	r2,r4
   8b518:	dfc00b17 	ldw	ra,44(sp)
   8b51c:	df000a17 	ldw	fp,40(sp)
   8b520:	ddc00917 	ldw	r23,36(sp)
   8b524:	dd800817 	ldw	r22,32(sp)
   8b528:	dd400717 	ldw	r21,28(sp)
   8b52c:	dd000617 	ldw	r20,24(sp)
   8b530:	dcc00517 	ldw	r19,20(sp)
   8b534:	dc800417 	ldw	r18,16(sp)
   8b538:	dc400317 	ldw	r17,12(sp)
   8b53c:	dc000217 	ldw	r16,8(sp)
   8b540:	dec00c04 	addi	sp,sp,48
   8b544:	f800283a 	ret
   8b548:	00800c04 	movi	r2,48
   8b54c:	80801926 	beq	r16,r2,8b5b4 <_strtoul_r+0x1e0>
   8b550:	183fc226 	beq	r3,zero,8b45c <_strtoul_r+0x88>
   8b554:	00800c04 	movi	r2,48
   8b558:	80802326 	beq	r16,r2,8b5e8 <_strtoul_r+0x214>
   8b55c:	04800284 	movi	r18,10
   8b560:	902b883a 	mov	r21,r18
   8b564:	04c666b4 	movhi	r19,6554
   8b568:	9ce66644 	addi	r19,r19,-26215
   8b56c:	05800144 	movi	r22,5
   8b570:	003fc306 	br	8b480 <_strtoul_r+0xac>
   8b574:	b43fcd0e 	bge	r22,r16,8b4ac <_strtoul_r+0xd8>
   8b578:	01bfffc4 	movi	r6,-1
   8b57c:	003fcf06 	br	8b4bc <_strtoul_r+0xe8>
   8b580:	008015c4 	movi	r2,87
   8b584:	80a1c83a 	sub	r16,r16,r2
   8b588:	003fd906 	br	8b4f0 <_strtoul_r+0x11c>
   8b58c:	8dffffc4 	addi	r23,r17,-1
   8b590:	003fdf06 	br	8b510 <_strtoul_r+0x13c>
   8b594:	8c000007 	ldb	r16,0(r17)
   8b598:	8c400044 	addi	r17,r17,1
   8b59c:	003faa06 	br	8b448 <_strtoul_r+0x74>
   8b5a0:	8c000007 	ldb	r16,0(r17)
   8b5a4:	00800044 	movi	r2,1
   8b5a8:	8c400044 	addi	r17,r17,1
   8b5ac:	d8800015 	stw	r2,0(sp)
   8b5b0:	003fa606 	br	8b44c <_strtoul_r+0x78>
   8b5b4:	89000007 	ldb	r4,0(r17)
   8b5b8:	00801e04 	movi	r2,120
   8b5bc:	20800226 	beq	r4,r2,8b5c8 <_strtoul_r+0x1f4>
   8b5c0:	00801604 	movi	r2,88
   8b5c4:	20bfe21e 	bne	r4,r2,8b550 <_strtoul_r+0x17c>
   8b5c8:	8c000047 	ldb	r16,1(r17)
   8b5cc:	04800404 	movi	r18,16
   8b5d0:	8c400084 	addi	r17,r17,2
   8b5d4:	902b883a 	mov	r21,r18
   8b5d8:	04c40034 	movhi	r19,4096
   8b5dc:	9cffffc4 	addi	r19,r19,-1
   8b5e0:	058003c4 	movi	r22,15
   8b5e4:	003fa606 	br	8b480 <_strtoul_r+0xac>
   8b5e8:	04800204 	movi	r18,8
   8b5ec:	902b883a 	mov	r21,r18
   8b5f0:	04c80034 	movhi	r19,8192
   8b5f4:	9cffffc4 	addi	r19,r19,-1
   8b5f8:	058001c4 	movi	r22,7
   8b5fc:	003fa006 	br	8b480 <_strtoul_r+0xac>
   8b600:	d8c00017 	ldw	r3,0(sp)
   8b604:	1805003a 	cmpeq	r2,r3,zero
   8b608:	103fbf1e 	bne	r2,zero,8b508 <_strtoul_r+0x134>
   8b60c:	0109c83a 	sub	r4,zero,r4
   8b610:	003fbd06 	br	8b508 <_strtoul_r+0x134>

0008b614 <strtoul>:
   8b614:	00800274 	movhi	r2,9
   8b618:	10963a04 	addi	r2,r2,22760
   8b61c:	2013883a 	mov	r9,r4
   8b620:	11000017 	ldw	r4,0(r2)
   8b624:	2805883a 	mov	r2,r5
   8b628:	300f883a 	mov	r7,r6
   8b62c:	480b883a 	mov	r5,r9
   8b630:	100d883a 	mov	r6,r2
   8b634:	008b3d41 	jmpi	8b3d4 <_strtoul_r>

0008b638 <_strtoull_r>:
   8b638:	defff104 	addi	sp,sp,-60
   8b63c:	00800274 	movhi	r2,9
   8b640:	10963904 	addi	r2,r2,22756
   8b644:	df000d15 	stw	fp,52(sp)
   8b648:	17000017 	ldw	fp,0(r2)
   8b64c:	ddc00c15 	stw	r23,48(sp)
   8b650:	dcc00815 	stw	r19,32(sp)
   8b654:	dfc00e15 	stw	ra,56(sp)
   8b658:	dd800b15 	stw	r22,44(sp)
   8b65c:	dd400a15 	stw	r21,40(sp)
   8b660:	dd000915 	stw	r20,36(sp)
   8b664:	dc800715 	stw	r18,28(sp)
   8b668:	dc400615 	stw	r17,24(sp)
   8b66c:	dc000515 	stw	r16,20(sp)
   8b670:	d9400215 	stw	r5,8(sp)
   8b674:	d9000115 	stw	r4,4(sp)
   8b678:	d9800315 	stw	r6,12(sp)
   8b67c:	382f883a 	mov	r23,r7
   8b680:	2827883a 	mov	r19,r5
   8b684:	9d000007 	ldb	r20,0(r19)
   8b688:	9cc00044 	addi	r19,r19,1
   8b68c:	e507883a 	add	r3,fp,r20
   8b690:	18800003 	ldbu	r2,0(r3)
   8b694:	1080020c 	andi	r2,r2,8
   8b698:	103ffa1e 	bne	r2,zero,8b684 <_strtoull_r+0x4c>
   8b69c:	00800b44 	movi	r2,45
   8b6a0:	a0807a26 	beq	r20,r2,8b88c <_strtoull_r+0x254>
   8b6a4:	00800ac4 	movi	r2,43
   8b6a8:	a0807526 	beq	r20,r2,8b880 <_strtoull_r+0x248>
   8b6ac:	d8000015 	stw	zero,0(sp)
   8b6b0:	b807003a 	cmpeq	r3,r23,zero
   8b6b4:	18005a1e 	bne	r3,zero,8b820 <_strtoull_r+0x1e8>
   8b6b8:	00800404 	movi	r2,16
   8b6bc:	b8805826 	beq	r23,r2,8b820 <_strtoull_r+0x1e8>
   8b6c0:	b82dd7fa 	srai	r22,r23,31
   8b6c4:	043fffc4 	movi	r16,-1
   8b6c8:	8009883a 	mov	r4,r16
   8b6cc:	800b883a 	mov	r5,r16
   8b6d0:	b80d883a 	mov	r6,r23
   8b6d4:	b00f883a 	mov	r7,r22
   8b6d8:	008cf440 	call	8cf44 <__udivdi3>
   8b6dc:	8009883a 	mov	r4,r16
   8b6e0:	800b883a 	mov	r5,r16
   8b6e4:	b80d883a 	mov	r6,r23
   8b6e8:	b00f883a 	mov	r7,r22
   8b6ec:	1023883a 	mov	r17,r2
   8b6f0:	1825883a 	mov	r18,r3
   8b6f4:	008d5b00 	call	8d5b0 <__umoddi3>
   8b6f8:	b82b883a 	mov	r21,r23
   8b6fc:	1019883a 	mov	r12,r2
   8b700:	e505883a 	add	r2,fp,r20
   8b704:	11000003 	ldbu	r4,0(r2)
   8b708:	0015883a 	mov	r10,zero
   8b70c:	0017883a 	mov	r11,zero
   8b710:	20c0010c 	andi	r3,r4,4
   8b714:	000d883a 	mov	r6,zero
   8b718:	18001c26 	beq	r3,zero,8b78c <_strtoull_r+0x154>
   8b71c:	a43ff404 	addi	r16,r20,-48
   8b720:	85c0220e 	bge	r16,r23,8b7ac <_strtoull_r+0x174>
   8b724:	30003c16 	blt	r6,zero,8b818 <_strtoull_r+0x1e0>
   8b728:	92c03b36 	bltu	r18,r11,8b818 <_strtoull_r+0x1e0>
   8b72c:	5c803926 	beq	r11,r18,8b814 <_strtoull_r+0x1dc>
   8b730:	54404c26 	beq	r10,r17,8b864 <_strtoull_r+0x22c>
   8b734:	580b883a 	mov	r5,r11
   8b738:	5009883a 	mov	r4,r10
   8b73c:	a80d883a 	mov	r6,r21
   8b740:	b00f883a 	mov	r7,r22
   8b744:	db000415 	stw	r12,16(sp)
   8b748:	008cd7c0 	call	8cd7c <__muldi3>
   8b74c:	8013d7fa 	srai	r9,r16,31
   8b750:	100d883a 	mov	r6,r2
   8b754:	1405883a 	add	r2,r2,r16
   8b758:	118d803a 	cmpltu	r6,r2,r6
   8b75c:	1a47883a 	add	r3,r3,r9
   8b760:	db000417 	ldw	r12,16(sp)
   8b764:	30cd883a 	add	r6,r6,r3
   8b768:	3017883a 	mov	r11,r6
   8b76c:	1015883a 	mov	r10,r2
   8b770:	01800044 	movi	r6,1
   8b774:	9d000007 	ldb	r20,0(r19)
   8b778:	9cc00044 	addi	r19,r19,1
   8b77c:	e505883a 	add	r2,fp,r20
   8b780:	11000003 	ldbu	r4,0(r2)
   8b784:	20c0010c 	andi	r3,r4,4
   8b788:	183fe41e 	bne	r3,zero,8b71c <_strtoull_r+0xe4>
   8b78c:	208000cc 	andi	r2,r4,3
   8b790:	10000626 	beq	r2,zero,8b7ac <_strtoull_r+0x174>
   8b794:	2080004c 	andi	r2,r4,1
   8b798:	1005003a 	cmpeq	r2,r2,zero
   8b79c:	10002e1e 	bne	r2,zero,8b858 <_strtoull_r+0x220>
   8b7a0:	02000dc4 	movi	r8,55
   8b7a4:	a221c83a 	sub	r16,r20,r8
   8b7a8:	85ffde16 	blt	r16,r23,8b724 <_strtoull_r+0xec>
   8b7ac:	3000530e 	bge	r6,zero,8b8fc <_strtoull_r+0x2c4>
   8b7b0:	d8c00117 	ldw	r3,4(sp)
   8b7b4:	02bfffc4 	movi	r10,-1
   8b7b8:	00800884 	movi	r2,34
   8b7bc:	5017883a 	mov	r11,r10
   8b7c0:	18800015 	stw	r2,0(r3)
   8b7c4:	d8800317 	ldw	r2,12(sp)
   8b7c8:	10000426 	beq	r2,zero,8b7dc <_strtoull_r+0x1a4>
   8b7cc:	3000291e 	bne	r6,zero,8b874 <_strtoull_r+0x23c>
   8b7d0:	d8800217 	ldw	r2,8(sp)
   8b7d4:	d8c00317 	ldw	r3,12(sp)
   8b7d8:	18800015 	stw	r2,0(r3)
   8b7dc:	5005883a 	mov	r2,r10
   8b7e0:	5807883a 	mov	r3,r11
   8b7e4:	dfc00e17 	ldw	ra,56(sp)
   8b7e8:	df000d17 	ldw	fp,52(sp)
   8b7ec:	ddc00c17 	ldw	r23,48(sp)
   8b7f0:	dd800b17 	ldw	r22,44(sp)
   8b7f4:	dd400a17 	ldw	r21,40(sp)
   8b7f8:	dd000917 	ldw	r20,36(sp)
   8b7fc:	dcc00817 	ldw	r19,32(sp)
   8b800:	dc800717 	ldw	r18,28(sp)
   8b804:	dc400617 	ldw	r17,24(sp)
   8b808:	dc000517 	ldw	r16,20(sp)
   8b80c:	dec00f04 	addi	sp,sp,60
   8b810:	f800283a 	ret
   8b814:	8abfc62e 	bgeu	r17,r10,8b730 <_strtoull_r+0xf8>
   8b818:	01bfffc4 	movi	r6,-1
   8b81c:	003fd506 	br	8b774 <_strtoull_r+0x13c>
   8b820:	00800c04 	movi	r2,48
   8b824:	a0801e26 	beq	r20,r2,8b8a0 <_strtoull_r+0x268>
   8b828:	183fa526 	beq	r3,zero,8b6c0 <_strtoull_r+0x88>
   8b82c:	00800c04 	movi	r2,48
   8b830:	a0802a26 	beq	r20,r2,8b8dc <_strtoull_r+0x2a4>
   8b834:	05c00284 	movi	r23,10
   8b838:	b82b883a 	mov	r21,r23
   8b83c:	046666b4 	movhi	r17,39322
   8b840:	8c666644 	addi	r17,r17,-26215
   8b844:	002d883a 	mov	r22,zero
   8b848:	048666b4 	movhi	r18,6554
   8b84c:	94a66644 	addi	r18,r18,-26215
   8b850:	03000144 	movi	r12,5
   8b854:	003faa06 	br	8b700 <_strtoull_r+0xc8>
   8b858:	020015c4 	movi	r8,87
   8b85c:	a221c83a 	sub	r16,r20,r8
   8b860:	003fd106 	br	8b7a8 <_strtoull_r+0x170>
   8b864:	5cbfb31e 	bne	r11,r18,8b734 <_strtoull_r+0xfc>
   8b868:	643fb20e 	bge	r12,r16,8b734 <_strtoull_r+0xfc>
   8b86c:	01bfffc4 	movi	r6,-1
   8b870:	003fc006 	br	8b774 <_strtoull_r+0x13c>
   8b874:	9cffffc4 	addi	r19,r19,-1
   8b878:	dcc00215 	stw	r19,8(sp)
   8b87c:	003fd406 	br	8b7d0 <_strtoull_r+0x198>
   8b880:	9d000007 	ldb	r20,0(r19)
   8b884:	9cc00044 	addi	r19,r19,1
   8b888:	003f8806 	br	8b6ac <_strtoull_r+0x74>
   8b88c:	9d000007 	ldb	r20,0(r19)
   8b890:	00800044 	movi	r2,1
   8b894:	9cc00044 	addi	r19,r19,1
   8b898:	d8800015 	stw	r2,0(sp)
   8b89c:	003f8406 	br	8b6b0 <_strtoull_r+0x78>
   8b8a0:	99000007 	ldb	r4,0(r19)
   8b8a4:	00801e04 	movi	r2,120
   8b8a8:	20800226 	beq	r4,r2,8b8b4 <_strtoull_r+0x27c>
   8b8ac:	00801604 	movi	r2,88
   8b8b0:	20bfdd1e 	bne	r4,r2,8b828 <_strtoull_r+0x1f0>
   8b8b4:	9d000047 	ldb	r20,1(r19)
   8b8b8:	05c00404 	movi	r23,16
   8b8bc:	b82b883a 	mov	r21,r23
   8b8c0:	047fffc4 	movi	r17,-1
   8b8c4:	9cc00084 	addi	r19,r19,2
   8b8c8:	002d883a 	mov	r22,zero
   8b8cc:	04840034 	movhi	r18,4096
   8b8d0:	94bfffc4 	addi	r18,r18,-1
   8b8d4:	030003c4 	movi	r12,15
   8b8d8:	003f8906 	br	8b700 <_strtoull_r+0xc8>
   8b8dc:	05c00204 	movi	r23,8
   8b8e0:	b82b883a 	mov	r21,r23
   8b8e4:	047fffc4 	movi	r17,-1
   8b8e8:	002d883a 	mov	r22,zero
   8b8ec:	04880034 	movhi	r18,8192
   8b8f0:	94bfffc4 	addi	r18,r18,-1
   8b8f4:	030001c4 	movi	r12,7
   8b8f8:	003f8106 	br	8b700 <_strtoull_r+0xc8>
   8b8fc:	d8c00017 	ldw	r3,0(sp)
   8b900:	1805003a 	cmpeq	r2,r3,zero
   8b904:	103faf1e 	bne	r2,zero,8b7c4 <_strtoull_r+0x18c>
   8b908:	0009883a 	mov	r4,zero
   8b90c:	2285c83a 	sub	r2,r4,r10
   8b910:	02c7c83a 	sub	r3,zero,r11
   8b914:	2089803a 	cmpltu	r4,r4,r2
   8b918:	1909c83a 	sub	r4,r3,r4
   8b91c:	1015883a 	mov	r10,r2
   8b920:	2017883a 	mov	r11,r4
   8b924:	003fa706 	br	8b7c4 <_strtoull_r+0x18c>

0008b928 <__submore>:
   8b928:	defffa04 	addi	sp,sp,-24
   8b92c:	28c00c17 	ldw	r3,48(r5)
   8b930:	dc800215 	stw	r18,8(sp)
   8b934:	2825883a 	mov	r18,r5
   8b938:	dc000015 	stw	r16,0(sp)
   8b93c:	90801004 	addi	r2,r18,64
   8b940:	04010004 	movi	r16,1024
   8b944:	dfc00515 	stw	ra,20(sp)
   8b948:	dd000415 	stw	r20,16(sp)
   8b94c:	dcc00315 	stw	r19,12(sp)
   8b950:	dc400115 	stw	r17,4(sp)
   8b954:	800b883a 	mov	r5,r16
   8b958:	18801b26 	beq	r3,r2,8b9c8 <__submore+0xa0>
   8b95c:	94400d17 	ldw	r17,52(r18)
   8b960:	180b883a 	mov	r5,r3
   8b964:	8c69883a 	add	r20,r17,r17
   8b968:	a00d883a 	mov	r6,r20
   8b96c:	0088b580 	call	88b58 <_realloc_r>
   8b970:	1467883a 	add	r19,r2,r17
   8b974:	1021883a 	mov	r16,r2
   8b978:	880d883a 	mov	r6,r17
   8b97c:	9809883a 	mov	r4,r19
   8b980:	100b883a 	mov	r5,r2
   8b984:	10000e26 	beq	r2,zero,8b9c0 <__submore+0x98>
   8b988:	00876c80 	call	876c8 <memcpy>
   8b98c:	000d883a 	mov	r6,zero
   8b990:	95000d15 	stw	r20,52(r18)
   8b994:	94c00015 	stw	r19,0(r18)
   8b998:	94000c15 	stw	r16,48(r18)
   8b99c:	3005883a 	mov	r2,r6
   8b9a0:	dfc00517 	ldw	ra,20(sp)
   8b9a4:	dd000417 	ldw	r20,16(sp)
   8b9a8:	dcc00317 	ldw	r19,12(sp)
   8b9ac:	dc800217 	ldw	r18,8(sp)
   8b9b0:	dc400117 	ldw	r17,4(sp)
   8b9b4:	dc000017 	ldw	r16,0(sp)
   8b9b8:	dec00604 	addi	sp,sp,24
   8b9bc:	f800283a 	ret
   8b9c0:	01bfffc4 	movi	r6,-1
   8b9c4:	003ff506 	br	8b99c <__submore+0x74>
   8b9c8:	0086da40 	call	86da4 <_malloc_r>
   8b9cc:	1009883a 	mov	r4,r2
   8b9d0:	1140ff44 	addi	r5,r2,1021
   8b9d4:	000d883a 	mov	r6,zero
   8b9d8:	103ff926 	beq	r2,zero,8b9c0 <__submore+0x98>
   8b9dc:	90801083 	ldbu	r2,66(r18)
   8b9e0:	94000d15 	stw	r16,52(r18)
   8b9e4:	91000c15 	stw	r4,48(r18)
   8b9e8:	28800085 	stb	r2,2(r5)
   8b9ec:	90c01043 	ldbu	r3,65(r18)
   8b9f0:	28c00045 	stb	r3,1(r5)
   8b9f4:	90801003 	ldbu	r2,64(r18)
   8b9f8:	2080ff45 	stb	r2,1021(r4)
   8b9fc:	91400015 	stw	r5,0(r18)
   8ba00:	003fe606 	br	8b99c <__submore+0x74>

0008ba04 <_ungetc_r>:
   8ba04:	defffc04 	addi	sp,sp,-16
   8ba08:	00bfffc4 	movi	r2,-1
   8ba0c:	dc400215 	stw	r17,8(sp)
   8ba10:	dc000115 	stw	r16,4(sp)
   8ba14:	dfc00315 	stw	ra,12(sp)
   8ba18:	2821883a 	mov	r16,r5
   8ba1c:	2023883a 	mov	r17,r4
   8ba20:	28801826 	beq	r5,r2,8ba84 <_ungetc_r+0x80>
   8ba24:	20000226 	beq	r4,zero,8ba30 <_ungetc_r+0x2c>
   8ba28:	20800e17 	ldw	r2,56(r4)
   8ba2c:	10001b26 	beq	r2,zero,8ba9c <_ungetc_r+0x98>
   8ba30:	3100030b 	ldhu	r4,12(r6)
   8ba34:	00bff7c4 	movi	r2,-33
   8ba38:	2084703a 	and	r2,r4,r2
   8ba3c:	117fffcc 	andi	r5,r2,65535
   8ba40:	28c0010c 	andi	r3,r5,4
   8ba44:	1009883a 	mov	r4,r2
   8ba48:	3080030d 	sth	r2,12(r6)
   8ba4c:	18003526 	beq	r3,zero,8bb24 <_ungetc_r+0x120>
   8ba50:	30800c17 	ldw	r2,48(r6)
   8ba54:	84003fcc 	andi	r16,r16,255
   8ba58:	10001426 	beq	r2,zero,8baac <_ungetc_r+0xa8>
   8ba5c:	30c00117 	ldw	r3,4(r6)
   8ba60:	30800d17 	ldw	r2,52(r6)
   8ba64:	1880380e 	bge	r3,r2,8bb48 <_ungetc_r+0x144>
   8ba68:	30c00017 	ldw	r3,0(r6)
   8ba6c:	19ffffc4 	addi	r7,r3,-1
   8ba70:	31c00015 	stw	r7,0(r6)
   8ba74:	1c3fffc5 	stb	r16,-1(r3)
   8ba78:	30800117 	ldw	r2,4(r6)
   8ba7c:	10800044 	addi	r2,r2,1
   8ba80:	30800115 	stw	r2,4(r6)
   8ba84:	8005883a 	mov	r2,r16
   8ba88:	dfc00317 	ldw	ra,12(sp)
   8ba8c:	dc400217 	ldw	r17,8(sp)
   8ba90:	dc000117 	ldw	r16,4(sp)
   8ba94:	dec00404 	addi	sp,sp,16
   8ba98:	f800283a 	ret
   8ba9c:	d9800015 	stw	r6,0(sp)
   8baa0:	0085bec0 	call	85bec <__sinit>
   8baa4:	d9800017 	ldw	r6,0(sp)
   8baa8:	003fe106 	br	8ba30 <_ungetc_r+0x2c>
   8baac:	30800417 	ldw	r2,16(r6)
   8bab0:	10002326 	beq	r2,zero,8bb40 <_ungetc_r+0x13c>
   8bab4:	31c00017 	ldw	r7,0(r6)
   8bab8:	11c0022e 	bgeu	r2,r7,8bac4 <_ungetc_r+0xc0>
   8babc:	38bfffc3 	ldbu	r2,-1(r7)
   8bac0:	80801226 	beq	r16,r2,8bb0c <_ungetc_r+0x108>
   8bac4:	30c00117 	ldw	r3,4(r6)
   8bac8:	00800044 	movi	r2,1
   8bacc:	30800115 	stw	r2,4(r6)
   8bad0:	008000c4 	movi	r2,3
   8bad4:	31001004 	addi	r4,r6,64
   8bad8:	31401084 	addi	r5,r6,66
   8badc:	30800d15 	stw	r2,52(r6)
   8bae0:	8005883a 	mov	r2,r16
   8bae4:	30c00f15 	stw	r3,60(r6)
   8bae8:	31c00e15 	stw	r7,56(r6)
   8baec:	31000c15 	stw	r4,48(r6)
   8baf0:	31400015 	stw	r5,0(r6)
   8baf4:	34001085 	stb	r16,66(r6)
   8baf8:	dfc00317 	ldw	ra,12(sp)
   8bafc:	dc400217 	ldw	r17,8(sp)
   8bb00:	dc000117 	ldw	r16,4(sp)
   8bb04:	dec00404 	addi	sp,sp,16
   8bb08:	f800283a 	ret
   8bb0c:	30800117 	ldw	r2,4(r6)
   8bb10:	39ffffc4 	addi	r7,r7,-1
   8bb14:	31c00015 	stw	r7,0(r6)
   8bb18:	10800044 	addi	r2,r2,1
   8bb1c:	30800115 	stw	r2,4(r6)
   8bb20:	003fd806 	br	8ba84 <_ungetc_r+0x80>
   8bb24:	2880040c 	andi	r2,r5,16
   8bb28:	10000d26 	beq	r2,zero,8bb60 <_ungetc_r+0x15c>
   8bb2c:	2880020c 	andi	r2,r5,8
   8bb30:	10000d1e 	bne	r2,zero,8bb68 <_ungetc_r+0x164>
   8bb34:	20800114 	ori	r2,r4,4
   8bb38:	3080030d 	sth	r2,12(r6)
   8bb3c:	003fc406 	br	8ba50 <_ungetc_r+0x4c>
   8bb40:	31c00017 	ldw	r7,0(r6)
   8bb44:	003fdf06 	br	8bac4 <_ungetc_r+0xc0>
   8bb48:	300b883a 	mov	r5,r6
   8bb4c:	8809883a 	mov	r4,r17
   8bb50:	d9800015 	stw	r6,0(sp)
   8bb54:	008b9280 	call	8b928 <__submore>
   8bb58:	d9800017 	ldw	r6,0(sp)
   8bb5c:	103fc226 	beq	r2,zero,8ba68 <_ungetc_r+0x64>
   8bb60:	043fffc4 	movi	r16,-1
   8bb64:	003fc706 	br	8ba84 <_ungetc_r+0x80>
   8bb68:	300b883a 	mov	r5,r6
   8bb6c:	8809883a 	mov	r4,r17
   8bb70:	d9800015 	stw	r6,0(sp)
   8bb74:	00859540 	call	85954 <_fflush_r>
   8bb78:	d9800017 	ldw	r6,0(sp)
   8bb7c:	103ff81e 	bne	r2,zero,8bb60 <_ungetc_r+0x15c>
   8bb80:	3100030b 	ldhu	r4,12(r6)
   8bb84:	00bffdc4 	movi	r2,-9
   8bb88:	30000215 	stw	zero,8(r6)
   8bb8c:	2084703a 	and	r2,r4,r2
   8bb90:	1009883a 	mov	r4,r2
   8bb94:	3080030d 	sth	r2,12(r6)
   8bb98:	30000615 	stw	zero,24(r6)
   8bb9c:	003fe506 	br	8bb34 <_ungetc_r+0x130>

0008bba0 <ungetc>:
   8bba0:	01800274 	movhi	r6,9
   8bba4:	31963a04 	addi	r6,r6,22760
   8bba8:	2007883a 	mov	r3,r4
   8bbac:	31000017 	ldw	r4,0(r6)
   8bbb0:	280d883a 	mov	r6,r5
   8bbb4:	180b883a 	mov	r5,r3
   8bbb8:	008ba041 	jmpi	8ba04 <_ungetc_r>

0008bbbc <__swbuf_r>:
   8bbbc:	defffc04 	addi	sp,sp,-16
   8bbc0:	dc400215 	stw	r17,8(sp)
   8bbc4:	dc000115 	stw	r16,4(sp)
   8bbc8:	dfc00315 	stw	ra,12(sp)
   8bbcc:	2023883a 	mov	r17,r4
   8bbd0:	2821883a 	mov	r16,r5
   8bbd4:	20000226 	beq	r4,zero,8bbe0 <__swbuf_r+0x24>
   8bbd8:	20800e17 	ldw	r2,56(r4)
   8bbdc:	10002f26 	beq	r2,zero,8bc9c <__swbuf_r+0xe0>
   8bbe0:	3080030b 	ldhu	r2,12(r6)
   8bbe4:	30c00617 	ldw	r3,24(r6)
   8bbe8:	1080020c 	andi	r2,r2,8
   8bbec:	30c00215 	stw	r3,8(r6)
   8bbf0:	10002226 	beq	r2,zero,8bc7c <__swbuf_r+0xc0>
   8bbf4:	30c00417 	ldw	r3,16(r6)
   8bbf8:	18002026 	beq	r3,zero,8bc7c <__swbuf_r+0xc0>
   8bbfc:	31000017 	ldw	r4,0(r6)
   8bc00:	30800517 	ldw	r2,20(r6)
   8bc04:	20c7c83a 	sub	r3,r4,r3
   8bc08:	18802f0e 	bge	r3,r2,8bcc8 <__swbuf_r+0x10c>
   8bc0c:	19400044 	addi	r5,r3,1
   8bc10:	30800217 	ldw	r2,8(r6)
   8bc14:	84003fcc 	andi	r16,r16,255
   8bc18:	20c00044 	addi	r3,r4,1
   8bc1c:	10bfffc4 	addi	r2,r2,-1
   8bc20:	30800215 	stw	r2,8(r6)
   8bc24:	24000005 	stb	r16,0(r4)
   8bc28:	30800517 	ldw	r2,20(r6)
   8bc2c:	30c00015 	stw	r3,0(r6)
   8bc30:	11400c26 	beq	r2,r5,8bc64 <__swbuf_r+0xa8>
   8bc34:	3080030b 	ldhu	r2,12(r6)
   8bc38:	1080004c 	andi	r2,r2,1
   8bc3c:	1005003a 	cmpeq	r2,r2,zero
   8bc40:	10000626 	beq	r2,zero,8bc5c <__swbuf_r+0xa0>
   8bc44:	8005883a 	mov	r2,r16
   8bc48:	dfc00317 	ldw	ra,12(sp)
   8bc4c:	dc400217 	ldw	r17,8(sp)
   8bc50:	dc000117 	ldw	r16,4(sp)
   8bc54:	dec00404 	addi	sp,sp,16
   8bc58:	f800283a 	ret
   8bc5c:	00800284 	movi	r2,10
   8bc60:	80bff81e 	bne	r16,r2,8bc44 <__swbuf_r+0x88>
   8bc64:	8809883a 	mov	r4,r17
   8bc68:	300b883a 	mov	r5,r6
   8bc6c:	00859540 	call	85954 <_fflush_r>
   8bc70:	103ff426 	beq	r2,zero,8bc44 <__swbuf_r+0x88>
   8bc74:	043fffc4 	movi	r16,-1
   8bc78:	003ff206 	br	8bc44 <__swbuf_r+0x88>
   8bc7c:	300b883a 	mov	r5,r6
   8bc80:	8809883a 	mov	r4,r17
   8bc84:	d9800015 	stw	r6,0(sp)
   8bc88:	00840200 	call	84020 <__swsetup_r>
   8bc8c:	d9800017 	ldw	r6,0(sp)
   8bc90:	1000061e 	bne	r2,zero,8bcac <__swbuf_r+0xf0>
   8bc94:	30c00417 	ldw	r3,16(r6)
   8bc98:	003fd806 	br	8bbfc <__swbuf_r+0x40>
   8bc9c:	d9800015 	stw	r6,0(sp)
   8bca0:	0085bec0 	call	85bec <__sinit>
   8bca4:	d9800017 	ldw	r6,0(sp)
   8bca8:	003fcd06 	br	8bbe0 <__swbuf_r+0x24>
   8bcac:	3080030b 	ldhu	r2,12(r6)
   8bcb0:	00c00244 	movi	r3,9
   8bcb4:	043fffc4 	movi	r16,-1
   8bcb8:	10801014 	ori	r2,r2,64
   8bcbc:	3080030d 	sth	r2,12(r6)
   8bcc0:	88c00015 	stw	r3,0(r17)
   8bcc4:	003fdf06 	br	8bc44 <__swbuf_r+0x88>
   8bcc8:	300b883a 	mov	r5,r6
   8bccc:	8809883a 	mov	r4,r17
   8bcd0:	d9800015 	stw	r6,0(sp)
   8bcd4:	00859540 	call	85954 <_fflush_r>
   8bcd8:	d9800017 	ldw	r6,0(sp)
   8bcdc:	103fe51e 	bne	r2,zero,8bc74 <__swbuf_r+0xb8>
   8bce0:	31000017 	ldw	r4,0(r6)
   8bce4:	01400044 	movi	r5,1
   8bce8:	003fc906 	br	8bc10 <__swbuf_r+0x54>

0008bcec <__swbuf>:
   8bcec:	01800274 	movhi	r6,9
   8bcf0:	31963a04 	addi	r6,r6,22760
   8bcf4:	2007883a 	mov	r3,r4
   8bcf8:	31000017 	ldw	r4,0(r6)
   8bcfc:	280d883a 	mov	r6,r5
   8bd00:	180b883a 	mov	r5,r3
   8bd04:	008bbbc1 	jmpi	8bbbc <__swbuf_r>

0008bd08 <_write_r>:
   8bd08:	defffd04 	addi	sp,sp,-12
   8bd0c:	dc000015 	stw	r16,0(sp)
   8bd10:	04000274 	movhi	r16,9
   8bd14:	841d3c04 	addi	r16,r16,29936
   8bd18:	dc400115 	stw	r17,4(sp)
   8bd1c:	80000015 	stw	zero,0(r16)
   8bd20:	2023883a 	mov	r17,r4
   8bd24:	2809883a 	mov	r4,r5
   8bd28:	300b883a 	mov	r5,r6
   8bd2c:	380d883a 	mov	r6,r7
   8bd30:	dfc00215 	stw	ra,8(sp)
   8bd34:	00903080 	call	90308 <write>
   8bd38:	1007883a 	mov	r3,r2
   8bd3c:	00bfffc4 	movi	r2,-1
   8bd40:	18800626 	beq	r3,r2,8bd5c <_write_r+0x54>
   8bd44:	1805883a 	mov	r2,r3
   8bd48:	dfc00217 	ldw	ra,8(sp)
   8bd4c:	dc400117 	ldw	r17,4(sp)
   8bd50:	dc000017 	ldw	r16,0(sp)
   8bd54:	dec00304 	addi	sp,sp,12
   8bd58:	f800283a 	ret
   8bd5c:	80800017 	ldw	r2,0(r16)
   8bd60:	103ff826 	beq	r2,zero,8bd44 <_write_r+0x3c>
   8bd64:	88800015 	stw	r2,0(r17)
   8bd68:	1805883a 	mov	r2,r3
   8bd6c:	dfc00217 	ldw	ra,8(sp)
   8bd70:	dc400117 	ldw	r17,4(sp)
   8bd74:	dc000017 	ldw	r16,0(sp)
   8bd78:	dec00304 	addi	sp,sp,12
   8bd7c:	f800283a 	ret

0008bd80 <_calloc_r>:
   8bd80:	defffe04 	addi	sp,sp,-8
   8bd84:	dc400015 	stw	r17,0(sp)
   8bd88:	2023883a 	mov	r17,r4
   8bd8c:	2809883a 	mov	r4,r5
   8bd90:	300b883a 	mov	r5,r6
   8bd94:	dfc00115 	stw	ra,4(sp)
   8bd98:	00806240 	call	80624 <__mulsi3>
   8bd9c:	100b883a 	mov	r5,r2
   8bda0:	8809883a 	mov	r4,r17
   8bda4:	0086da40 	call	86da4 <_malloc_r>
   8bda8:	1023883a 	mov	r17,r2
   8bdac:	01c00904 	movi	r7,36
   8bdb0:	10000d26 	beq	r2,zero,8bde8 <_calloc_r+0x68>
   8bdb4:	10ffff17 	ldw	r3,-4(r2)
   8bdb8:	1009883a 	mov	r4,r2
   8bdbc:	00bfff04 	movi	r2,-4
   8bdc0:	1886703a 	and	r3,r3,r2
   8bdc4:	1887883a 	add	r3,r3,r2
   8bdc8:	180d883a 	mov	r6,r3
   8bdcc:	000b883a 	mov	r5,zero
   8bdd0:	38c01736 	bltu	r7,r3,8be30 <_calloc_r+0xb0>
   8bdd4:	008004c4 	movi	r2,19
   8bdd8:	10c00836 	bltu	r2,r3,8bdfc <_calloc_r+0x7c>
   8bddc:	20000215 	stw	zero,8(r4)
   8bde0:	20000015 	stw	zero,0(r4)
   8bde4:	20000115 	stw	zero,4(r4)
   8bde8:	8805883a 	mov	r2,r17
   8bdec:	dfc00117 	ldw	ra,4(sp)
   8bdf0:	dc400017 	ldw	r17,0(sp)
   8bdf4:	dec00204 	addi	sp,sp,8
   8bdf8:	f800283a 	ret
   8bdfc:	008006c4 	movi	r2,27
   8be00:	88000015 	stw	zero,0(r17)
   8be04:	88000115 	stw	zero,4(r17)
   8be08:	89000204 	addi	r4,r17,8
   8be0c:	10fff32e 	bgeu	r2,r3,8bddc <_calloc_r+0x5c>
   8be10:	88000215 	stw	zero,8(r17)
   8be14:	88000315 	stw	zero,12(r17)
   8be18:	89000404 	addi	r4,r17,16
   8be1c:	19ffef1e 	bne	r3,r7,8bddc <_calloc_r+0x5c>
   8be20:	89000604 	addi	r4,r17,24
   8be24:	88000415 	stw	zero,16(r17)
   8be28:	88000515 	stw	zero,20(r17)
   8be2c:	003feb06 	br	8bddc <_calloc_r+0x5c>
   8be30:	00878480 	call	87848 <memset>
   8be34:	8805883a 	mov	r2,r17
   8be38:	dfc00117 	ldw	ra,4(sp)
   8be3c:	dc400017 	ldw	r17,0(sp)
   8be40:	dec00204 	addi	sp,sp,8
   8be44:	f800283a 	ret

0008be48 <_close_r>:
   8be48:	defffd04 	addi	sp,sp,-12
   8be4c:	dc000015 	stw	r16,0(sp)
   8be50:	04000274 	movhi	r16,9
   8be54:	841d3c04 	addi	r16,r16,29936
   8be58:	dc400115 	stw	r17,4(sp)
   8be5c:	80000015 	stw	zero,0(r16)
   8be60:	2023883a 	mov	r17,r4
   8be64:	2809883a 	mov	r4,r5
   8be68:	dfc00215 	stw	ra,8(sp)
   8be6c:	008f97c0 	call	8f97c <close>
   8be70:	1007883a 	mov	r3,r2
   8be74:	00bfffc4 	movi	r2,-1
   8be78:	18800626 	beq	r3,r2,8be94 <_close_r+0x4c>
   8be7c:	1805883a 	mov	r2,r3
   8be80:	dfc00217 	ldw	ra,8(sp)
   8be84:	dc400117 	ldw	r17,4(sp)
   8be88:	dc000017 	ldw	r16,0(sp)
   8be8c:	dec00304 	addi	sp,sp,12
   8be90:	f800283a 	ret
   8be94:	80800017 	ldw	r2,0(r16)
   8be98:	103ff826 	beq	r2,zero,8be7c <_close_r+0x34>
   8be9c:	88800015 	stw	r2,0(r17)
   8bea0:	1805883a 	mov	r2,r3
   8bea4:	dfc00217 	ldw	ra,8(sp)
   8bea8:	dc400117 	ldw	r17,4(sp)
   8beac:	dc000017 	ldw	r16,0(sp)
   8beb0:	dec00304 	addi	sp,sp,12
   8beb4:	f800283a 	ret

0008beb8 <_fclose_r>:
   8beb8:	defffc04 	addi	sp,sp,-16
   8bebc:	dc400115 	stw	r17,4(sp)
   8bec0:	dc000015 	stw	r16,0(sp)
   8bec4:	dfc00315 	stw	ra,12(sp)
   8bec8:	dc800215 	stw	r18,8(sp)
   8becc:	2821883a 	mov	r16,r5
   8bed0:	2023883a 	mov	r17,r4
   8bed4:	28002926 	beq	r5,zero,8bf7c <_fclose_r+0xc4>
   8bed8:	0085bdc0 	call	85bdc <__sfp_lock_acquire>
   8bedc:	88000226 	beq	r17,zero,8bee8 <_fclose_r+0x30>
   8bee0:	88800e17 	ldw	r2,56(r17)
   8bee4:	10002d26 	beq	r2,zero,8bf9c <_fclose_r+0xe4>
   8bee8:	8080030f 	ldh	r2,12(r16)
   8beec:	10002226 	beq	r2,zero,8bf78 <_fclose_r+0xc0>
   8bef0:	8809883a 	mov	r4,r17
   8bef4:	800b883a 	mov	r5,r16
   8bef8:	00859540 	call	85954 <_fflush_r>
   8befc:	1025883a 	mov	r18,r2
   8bf00:	80800b17 	ldw	r2,44(r16)
   8bf04:	10000426 	beq	r2,zero,8bf18 <_fclose_r+0x60>
   8bf08:	81400717 	ldw	r5,28(r16)
   8bf0c:	8809883a 	mov	r4,r17
   8bf10:	103ee83a 	callr	r2
   8bf14:	10002a16 	blt	r2,zero,8bfc0 <_fclose_r+0x108>
   8bf18:	8080030b 	ldhu	r2,12(r16)
   8bf1c:	1080200c 	andi	r2,r2,128
   8bf20:	1000231e 	bne	r2,zero,8bfb0 <_fclose_r+0xf8>
   8bf24:	81400c17 	ldw	r5,48(r16)
   8bf28:	28000526 	beq	r5,zero,8bf40 <_fclose_r+0x88>
   8bf2c:	80801004 	addi	r2,r16,64
   8bf30:	28800226 	beq	r5,r2,8bf3c <_fclose_r+0x84>
   8bf34:	8809883a 	mov	r4,r17
   8bf38:	00861f00 	call	861f0 <_free_r>
   8bf3c:	80000c15 	stw	zero,48(r16)
   8bf40:	81401117 	ldw	r5,68(r16)
   8bf44:	28000326 	beq	r5,zero,8bf54 <_fclose_r+0x9c>
   8bf48:	8809883a 	mov	r4,r17
   8bf4c:	00861f00 	call	861f0 <_free_r>
   8bf50:	80001115 	stw	zero,68(r16)
   8bf54:	8000030d 	sth	zero,12(r16)
   8bf58:	0085be00 	call	85be0 <__sfp_lock_release>
   8bf5c:	9005883a 	mov	r2,r18
   8bf60:	dfc00317 	ldw	ra,12(sp)
   8bf64:	dc800217 	ldw	r18,8(sp)
   8bf68:	dc400117 	ldw	r17,4(sp)
   8bf6c:	dc000017 	ldw	r16,0(sp)
   8bf70:	dec00404 	addi	sp,sp,16
   8bf74:	f800283a 	ret
   8bf78:	0085be00 	call	85be0 <__sfp_lock_release>
   8bf7c:	0025883a 	mov	r18,zero
   8bf80:	9005883a 	mov	r2,r18
   8bf84:	dfc00317 	ldw	ra,12(sp)
   8bf88:	dc800217 	ldw	r18,8(sp)
   8bf8c:	dc400117 	ldw	r17,4(sp)
   8bf90:	dc000017 	ldw	r16,0(sp)
   8bf94:	dec00404 	addi	sp,sp,16
   8bf98:	f800283a 	ret
   8bf9c:	8809883a 	mov	r4,r17
   8bfa0:	0085bec0 	call	85bec <__sinit>
   8bfa4:	8080030f 	ldh	r2,12(r16)
   8bfa8:	103fd11e 	bne	r2,zero,8bef0 <_fclose_r+0x38>
   8bfac:	003ff206 	br	8bf78 <_fclose_r+0xc0>
   8bfb0:	81400417 	ldw	r5,16(r16)
   8bfb4:	8809883a 	mov	r4,r17
   8bfb8:	00861f00 	call	861f0 <_free_r>
   8bfbc:	003fd906 	br	8bf24 <_fclose_r+0x6c>
   8bfc0:	04bfffc4 	movi	r18,-1
   8bfc4:	003fd406 	br	8bf18 <_fclose_r+0x60>

0008bfc8 <fclose>:
   8bfc8:	00800274 	movhi	r2,9
   8bfcc:	10963a04 	addi	r2,r2,22760
   8bfd0:	200b883a 	mov	r5,r4
   8bfd4:	11000017 	ldw	r4,0(r2)
   8bfd8:	008beb81 	jmpi	8beb8 <_fclose_r>

0008bfdc <_fstat_r>:
   8bfdc:	defffd04 	addi	sp,sp,-12
   8bfe0:	dc000015 	stw	r16,0(sp)
   8bfe4:	04000274 	movhi	r16,9
   8bfe8:	841d3c04 	addi	r16,r16,29936
   8bfec:	dc400115 	stw	r17,4(sp)
   8bff0:	80000015 	stw	zero,0(r16)
   8bff4:	2023883a 	mov	r17,r4
   8bff8:	2809883a 	mov	r4,r5
   8bffc:	300b883a 	mov	r5,r6
   8c000:	dfc00215 	stw	ra,8(sp)
   8c004:	008fb080 	call	8fb08 <fstat>
   8c008:	1007883a 	mov	r3,r2
   8c00c:	00bfffc4 	movi	r2,-1
   8c010:	18800626 	beq	r3,r2,8c02c <_fstat_r+0x50>
   8c014:	1805883a 	mov	r2,r3
   8c018:	dfc00217 	ldw	ra,8(sp)
   8c01c:	dc400117 	ldw	r17,4(sp)
   8c020:	dc000017 	ldw	r16,0(sp)
   8c024:	dec00304 	addi	sp,sp,12
   8c028:	f800283a 	ret
   8c02c:	80800017 	ldw	r2,0(r16)
   8c030:	103ff826 	beq	r2,zero,8c014 <_fstat_r+0x38>
   8c034:	88800015 	stw	r2,0(r17)
   8c038:	1805883a 	mov	r2,r3
   8c03c:	dfc00217 	ldw	ra,8(sp)
   8c040:	dc400117 	ldw	r17,4(sp)
   8c044:	dc000017 	ldw	r16,0(sp)
   8c048:	dec00304 	addi	sp,sp,12
   8c04c:	f800283a 	ret

0008c050 <htinit>:
   8c050:	28800003 	ldbu	r2,0(r5)
   8c054:	10000626 	beq	r2,zero,8c070 <htinit+0x20>
   8c058:	1105883a 	add	r2,r2,r4
   8c05c:	11800005 	stb	r6,0(r2)
   8c060:	28800043 	ldbu	r2,1(r5)
   8c064:	31800044 	addi	r6,r6,1
   8c068:	29400044 	addi	r5,r5,1
   8c06c:	103ffa1e 	bne	r2,zero,8c058 <htinit+0x8>
   8c070:	f800283a 	ret

0008c074 <__hexdig_init>:
   8c074:	defffd04 	addi	sp,sp,-12
   8c078:	dc400015 	stw	r17,0(sp)
   8c07c:	04400274 	movhi	r17,9
   8c080:	8c5d4f04 	addi	r17,r17,30012
   8c084:	dcc00115 	stw	r19,4(sp)
   8c088:	8809883a 	mov	r4,r17
   8c08c:	04c00684 	movi	r19,26
   8c090:	01400274 	movhi	r5,9
   8c094:	294f0404 	addi	r5,r5,15376
   8c098:	01800404 	movi	r6,16
   8c09c:	dfc00215 	stw	ra,8(sp)
   8c0a0:	008c0500 	call	8c050 <htinit>
   8c0a4:	980d883a 	mov	r6,r19
   8c0a8:	8809883a 	mov	r4,r17
   8c0ac:	01400274 	movhi	r5,9
   8c0b0:	294f0704 	addi	r5,r5,15388
   8c0b4:	008c0500 	call	8c050 <htinit>
   8c0b8:	8809883a 	mov	r4,r17
   8c0bc:	980d883a 	mov	r6,r19
   8c0c0:	01400274 	movhi	r5,9
   8c0c4:	294f0904 	addi	r5,r5,15396
   8c0c8:	dfc00217 	ldw	ra,8(sp)
   8c0cc:	dcc00117 	ldw	r19,4(sp)
   8c0d0:	dc400017 	ldw	r17,0(sp)
   8c0d4:	dec00304 	addi	sp,sp,12
   8c0d8:	008c0501 	jmpi	8c050 <htinit>

0008c0dc <rshift>:
   8c0dc:	2807d17a 	srai	r3,r5,5
   8c0e0:	20800417 	ldw	r2,16(r4)
   8c0e4:	22400504 	addi	r9,r4,20
   8c0e8:	480f883a 	mov	r7,r9
   8c0ec:	1880190e 	bge	r3,r2,8c154 <rshift+0x78>
   8c0f0:	1085883a 	add	r2,r2,r2
   8c0f4:	18c7883a 	add	r3,r3,r3
   8c0f8:	1085883a 	add	r2,r2,r2
   8c0fc:	18c7883a 	add	r3,r3,r3
   8c100:	294007cc 	andi	r5,r5,31
   8c104:	4891883a 	add	r8,r9,r2
   8c108:	48cd883a 	add	r6,r9,r3
   8c10c:	28001726 	beq	r5,zero,8c16c <rshift+0x90>
   8c110:	30c00017 	ldw	r3,0(r6)
   8c114:	00800804 	movi	r2,32
   8c118:	31800104 	addi	r6,r6,4
   8c11c:	1155c83a 	sub	r10,r2,r5
   8c120:	1946d83a 	srl	r3,r3,r5
   8c124:	3200092e 	bgeu	r6,r8,8c14c <rshift+0x70>
   8c128:	30800017 	ldw	r2,0(r6)
   8c12c:	1284983a 	sll	r2,r2,r10
   8c130:	10c4b03a 	or	r2,r2,r3
   8c134:	38800015 	stw	r2,0(r7)
   8c138:	30c00017 	ldw	r3,0(r6)
   8c13c:	31800104 	addi	r6,r6,4
   8c140:	39c00104 	addi	r7,r7,4
   8c144:	1946d83a 	srl	r3,r3,r5
   8c148:	323ff736 	bltu	r6,r8,8c128 <rshift+0x4c>
   8c14c:	38c00015 	stw	r3,0(r7)
   8c150:	18000c1e 	bne	r3,zero,8c184 <rshift+0xa8>
   8c154:	3a45c83a 	sub	r2,r7,r9
   8c158:	1005d0ba 	srai	r2,r2,2
   8c15c:	20800415 	stw	r2,16(r4)
   8c160:	1000011e 	bne	r2,zero,8c168 <rshift+0x8c>
   8c164:	20000515 	stw	zero,20(r4)
   8c168:	f800283a 	ret
   8c16c:	323ff92e 	bgeu	r6,r8,8c154 <rshift+0x78>
   8c170:	30800017 	ldw	r2,0(r6)
   8c174:	31800104 	addi	r6,r6,4
   8c178:	38800015 	stw	r2,0(r7)
   8c17c:	39c00104 	addi	r7,r7,4
   8c180:	003ffa06 	br	8c16c <rshift+0x90>
   8c184:	39c00104 	addi	r7,r7,4
   8c188:	003ff206 	br	8c154 <rshift+0x78>

0008c18c <__gethex>:
   8c18c:	defff104 	addi	sp,sp,-60
   8c190:	df000d15 	stw	fp,52(sp)
   8c194:	dcc00815 	stw	r19,32(sp)
   8c198:	dfc00e15 	stw	ra,56(sp)
   8c19c:	ddc00c15 	stw	r23,48(sp)
   8c1a0:	dd800b15 	stw	r22,44(sp)
   8c1a4:	dd400a15 	stw	r21,40(sp)
   8c1a8:	dd000915 	stw	r20,36(sp)
   8c1ac:	dc800715 	stw	r18,28(sp)
   8c1b0:	dc400615 	stw	r17,24(sp)
   8c1b4:	dc000515 	stw	r16,20(sp)
   8c1b8:	04c00274 	movhi	r19,9
   8c1bc:	9cdd4f04 	addi	r19,r19,30012
   8c1c0:	98800c03 	ldbu	r2,48(r19)
   8c1c4:	d9000115 	stw	r4,4(sp)
   8c1c8:	2839883a 	mov	fp,r5
   8c1cc:	d9800215 	stw	r6,8(sp)
   8c1d0:	d9c00315 	stw	r7,12(sp)
   8c1d4:	10007526 	beq	r2,zero,8c3ac <__gethex+0x220>
   8c1d8:	e1800017 	ldw	r6,0(fp)
   8c1dc:	00800c04 	movi	r2,48
   8c1e0:	31000083 	ldbu	r4,2(r6)
   8c1e4:	30c00084 	addi	r3,r6,2
   8c1e8:	2080761e 	bne	r4,r2,8c3c4 <__gethex+0x238>
   8c1ec:	200b883a 	mov	r5,r4
   8c1f0:	3007883a 	mov	r3,r6
   8c1f4:	188000c3 	ldbu	r2,3(r3)
   8c1f8:	18c00044 	addi	r3,r3,1
   8c1fc:	1009883a 	mov	r4,r2
   8c200:	117ffc26 	beq	r2,r5,8c1f4 <__gethex+0x68>
   8c204:	198fc83a 	sub	r7,r3,r6
   8c208:	19400084 	addi	r5,r3,2
   8c20c:	24c5883a 	add	r2,r4,r19
   8c210:	10c00003 	ldbu	r3,0(r2)
   8c214:	18002e26 	beq	r3,zero,8c2d0 <__gethex+0x144>
   8c218:	29000003 	ldbu	r4,0(r5)
   8c21c:	282b883a 	mov	r21,r5
   8c220:	000d883a 	mov	r6,zero
   8c224:	002d883a 	mov	r22,zero
   8c228:	21003fcc 	andi	r4,r4,255
   8c22c:	24c5883a 	add	r2,r4,r19
   8c230:	10c00003 	ldbu	r3,0(r2)
   8c234:	18000526 	beq	r3,zero,8c24c <__gethex+0xc0>
   8c238:	29400044 	addi	r5,r5,1
   8c23c:	29000003 	ldbu	r4,0(r5)
   8c240:	24c5883a 	add	r2,r4,r19
   8c244:	10c00003 	ldbu	r3,0(r2)
   8c248:	183ffb1e 	bne	r3,zero,8c238 <__gethex+0xac>
   8c24c:	00800b84 	movi	r2,46
   8c250:	20805f26 	beq	r4,r2,8c3d0 <__gethex+0x244>
   8c254:	30008226 	beq	r6,zero,8c460 <__gethex+0x2d4>
   8c258:	2985c83a 	sub	r2,r5,r6
   8c25c:	1085883a 	add	r2,r2,r2
   8c260:	1085883a 	add	r2,r2,r2
   8c264:	0085c83a 	sub	r2,zero,r2
   8c268:	d8800015 	stw	r2,0(sp)
   8c26c:	2825883a 	mov	r18,r5
   8c270:	90c00003 	ldbu	r3,0(r18)
   8c274:	00801404 	movi	r2,80
   8c278:	18801e26 	beq	r3,r2,8c2f4 <__gethex+0x168>
   8c27c:	00801c04 	movi	r2,112
   8c280:	18801c26 	beq	r3,r2,8c2f4 <__gethex+0x168>
   8c284:	9023883a 	mov	r17,r18
   8c288:	b005003a 	cmpeq	r2,r22,zero
   8c28c:	e4400015 	stw	r17,0(fp)
   8c290:	10008d1e 	bne	r2,zero,8c4c8 <__gethex+0x33c>
   8c294:	38004326 	beq	r7,zero,8c3a4 <__gethex+0x218>
   8c298:	0025883a 	mov	r18,zero
   8c29c:	9005883a 	mov	r2,r18
   8c2a0:	dfc00e17 	ldw	ra,56(sp)
   8c2a4:	df000d17 	ldw	fp,52(sp)
   8c2a8:	ddc00c17 	ldw	r23,48(sp)
   8c2ac:	dd800b17 	ldw	r22,44(sp)
   8c2b0:	dd400a17 	ldw	r21,40(sp)
   8c2b4:	dd000917 	ldw	r20,36(sp)
   8c2b8:	dcc00817 	ldw	r19,32(sp)
   8c2bc:	dc800717 	ldw	r18,28(sp)
   8c2c0:	dc400617 	ldw	r17,24(sp)
   8c2c4:	dc000517 	ldw	r16,20(sp)
   8c2c8:	dec00f04 	addi	sp,sp,60
   8c2cc:	f800283a 	ret
   8c2d0:	00800b84 	movi	r2,46
   8c2d4:	20805126 	beq	r4,r2,8c41c <__gethex+0x290>
   8c2d8:	2825883a 	mov	r18,r5
   8c2dc:	d8000015 	stw	zero,0(sp)
   8c2e0:	90c00003 	ldbu	r3,0(r18)
   8c2e4:	00801404 	movi	r2,80
   8c2e8:	282b883a 	mov	r21,r5
   8c2ec:	05800044 	movi	r22,1
   8c2f0:	18bfe21e 	bne	r3,r2,8c27c <__gethex+0xf0>
   8c2f4:	90c00043 	ldbu	r3,1(r18)
   8c2f8:	00800ac4 	movi	r2,43
   8c2fc:	91400044 	addi	r5,r18,1
   8c300:	18805126 	beq	r3,r2,8c448 <__gethex+0x2bc>
   8c304:	00800b44 	movi	r2,45
   8c308:	18805326 	beq	r3,r2,8c458 <__gethex+0x2cc>
   8c30c:	002f883a 	mov	r23,zero
   8c310:	1cc5883a 	add	r2,r3,r19
   8c314:	10800003 	ldbu	r2,0(r2)
   8c318:	103fda26 	beq	r2,zero,8c284 <__gethex+0xf8>
   8c31c:	01800644 	movi	r6,25
   8c320:	30bfd816 	blt	r6,r2,8c284 <__gethex+0xf8>
   8c324:	28c00043 	ldbu	r3,1(r5)
   8c328:	113ffc04 	addi	r4,r2,-16
   8c32c:	00800274 	movhi	r2,9
   8c330:	109d4f04 	addi	r2,r2,30012
   8c334:	1887883a 	add	r3,r3,r2
   8c338:	18800003 	ldbu	r2,0(r3)
   8c33c:	2c400044 	addi	r17,r5,1
   8c340:	10001126 	beq	r2,zero,8c388 <__gethex+0x1fc>
   8c344:	1021883a 	mov	r16,r2
   8c348:	30800f16 	blt	r6,r2,8c388 <__gethex+0x1fc>
   8c34c:	3029883a 	mov	r20,r6
   8c350:	00000106 	br	8c358 <__gethex+0x1cc>
   8c354:	a0800c16 	blt	r20,r2,8c388 <__gethex+0x1fc>
   8c358:	8c400044 	addi	r17,r17,1
   8c35c:	01400284 	movi	r5,10
   8c360:	d9c00415 	stw	r7,16(sp)
   8c364:	00806240 	call	80624 <__mulsi3>
   8c368:	88c00003 	ldbu	r3,0(r17)
   8c36c:	1405883a 	add	r2,r2,r16
   8c370:	113ffc04 	addi	r4,r2,-16
   8c374:	1cc7883a 	add	r3,r3,r19
   8c378:	18800003 	ldbu	r2,0(r3)
   8c37c:	d9c00417 	ldw	r7,16(sp)
   8c380:	1021883a 	mov	r16,r2
   8c384:	103ff31e 	bne	r2,zero,8c354 <__gethex+0x1c8>
   8c388:	b805003a 	cmpeq	r2,r23,zero
   8c38c:	1000011e 	bne	r2,zero,8c394 <__gethex+0x208>
   8c390:	0109c83a 	sub	r4,zero,r4
   8c394:	d8800017 	ldw	r2,0(sp)
   8c398:	1105883a 	add	r2,r2,r4
   8c39c:	d8800015 	stw	r2,0(sp)
   8c3a0:	003fb906 	br	8c288 <__gethex+0xfc>
   8c3a4:	04800184 	movi	r18,6
   8c3a8:	003fbc06 	br	8c29c <__gethex+0x110>
   8c3ac:	008c0740 	call	8c074 <__hexdig_init>
   8c3b0:	e1800017 	ldw	r6,0(fp)
   8c3b4:	00800c04 	movi	r2,48
   8c3b8:	31000083 	ldbu	r4,2(r6)
   8c3bc:	30c00084 	addi	r3,r6,2
   8c3c0:	20bf8a26 	beq	r4,r2,8c1ec <__gethex+0x60>
   8c3c4:	180b883a 	mov	r5,r3
   8c3c8:	000f883a 	mov	r7,zero
   8c3cc:	003f8f06 	br	8c20c <__gethex+0x80>
   8c3d0:	303fa11e 	bne	r6,zero,8c258 <__gethex+0xcc>
   8c3d4:	29400044 	addi	r5,r5,1
   8c3d8:	28800003 	ldbu	r2,0(r5)
   8c3dc:	14c5883a 	add	r2,r2,r19
   8c3e0:	10c00003 	ldbu	r3,0(r2)
   8c3e4:	1800b526 	beq	r3,zero,8c6bc <__gethex+0x530>
   8c3e8:	2809883a 	mov	r4,r5
   8c3ec:	21000044 	addi	r4,r4,1
   8c3f0:	20800003 	ldbu	r2,0(r4)
   8c3f4:	14c5883a 	add	r2,r2,r19
   8c3f8:	10c00003 	ldbu	r3,0(r2)
   8c3fc:	183ffb1e 	bne	r3,zero,8c3ec <__gethex+0x260>
   8c400:	2145c83a 	sub	r2,r4,r5
   8c404:	1085883a 	add	r2,r2,r2
   8c408:	1085883a 	add	r2,r2,r2
   8c40c:	0085c83a 	sub	r2,zero,r2
   8c410:	200b883a 	mov	r5,r4
   8c414:	d8800015 	stw	r2,0(sp)
   8c418:	003f9406 	br	8c26c <__gethex+0xe0>
   8c41c:	29000043 	ldbu	r4,1(r5)
   8c420:	00800274 	movhi	r2,9
   8c424:	109d4f04 	addi	r2,r2,30012
   8c428:	2c800044 	addi	r18,r5,1
   8c42c:	2085883a 	add	r2,r4,r2
   8c430:	10c00003 	ldbu	r3,0(r2)
   8c434:	18000d1e 	bne	r3,zero,8c46c <__gethex+0x2e0>
   8c438:	282b883a 	mov	r21,r5
   8c43c:	05800044 	movi	r22,1
   8c440:	d8000015 	stw	zero,0(sp)
   8c444:	003f8a06 	br	8c270 <__gethex+0xe4>
   8c448:	002f883a 	mov	r23,zero
   8c44c:	29400044 	addi	r5,r5,1
   8c450:	28c00003 	ldbu	r3,0(r5)
   8c454:	003fae06 	br	8c310 <__gethex+0x184>
   8c458:	05c00044 	movi	r23,1
   8c45c:	003ffb06 	br	8c44c <__gethex+0x2c0>
   8c460:	2825883a 	mov	r18,r5
   8c464:	d8000015 	stw	zero,0(sp)
   8c468:	003f8106 	br	8c270 <__gethex+0xe4>
   8c46c:	00800c04 	movi	r2,48
   8c470:	20800e1e 	bne	r4,r2,8c4ac <__gethex+0x320>
   8c474:	2007883a 	mov	r3,r4
   8c478:	900b883a 	mov	r5,r18
   8c47c:	29400044 	addi	r5,r5,1
   8c480:	29000003 	ldbu	r4,0(r5)
   8c484:	20803fcc 	andi	r2,r4,255
   8c488:	10fffc26 	beq	r2,r3,8c47c <__gethex+0x2f0>
   8c48c:	14c5883a 	add	r2,r2,r19
   8c490:	10c00003 	ldbu	r3,0(r2)
   8c494:	1800071e 	bne	r3,zero,8c4b4 <__gethex+0x328>
   8c498:	01c00044 	movi	r7,1
   8c49c:	900d883a 	mov	r6,r18
   8c4a0:	282b883a 	mov	r21,r5
   8c4a4:	382d883a 	mov	r22,r7
   8c4a8:	003f5f06 	br	8c228 <__gethex+0x9c>
   8c4ac:	91000003 	ldbu	r4,0(r18)
   8c4b0:	900b883a 	mov	r5,r18
   8c4b4:	900d883a 	mov	r6,r18
   8c4b8:	282b883a 	mov	r21,r5
   8c4bc:	01c00044 	movi	r7,1
   8c4c0:	002d883a 	mov	r22,zero
   8c4c4:	003f5806 	br	8c228 <__gethex+0x9c>
   8c4c8:	9545c83a 	sub	r2,r18,r21
   8c4cc:	10bfffc4 	addi	r2,r2,-1
   8c4d0:	00c001c4 	movi	r3,7
   8c4d4:	1880770e 	bge	r3,r2,8c6b4 <__gethex+0x528>
   8c4d8:	000b883a 	mov	r5,zero
   8c4dc:	1005d07a 	srai	r2,r2,1
   8c4e0:	29400044 	addi	r5,r5,1
   8c4e4:	18bffd16 	blt	r3,r2,8c4dc <__gethex+0x350>
   8c4e8:	d9000117 	ldw	r4,4(sp)
   8c4ec:	0087e600 	call	87e60 <_Balloc>
   8c4f0:	1029883a 	mov	r20,r2
   8c4f4:	15800504 	addi	r22,r2,20
   8c4f8:	ac80562e 	bgeu	r21,r18,8c654 <__gethex+0x4c8>
   8c4fc:	900b883a 	mov	r5,r18
   8c500:	b011883a 	mov	r8,r22
   8c504:	000f883a 	mov	r7,zero
   8c508:	0009883a 	mov	r4,zero
   8c50c:	02400b84 	movi	r9,46
   8c510:	02800804 	movi	r10,32
   8c514:	297fffc4 	addi	r5,r5,-1
   8c518:	28c00003 	ldbu	r3,0(r5)
   8c51c:	1a400826 	beq	r3,r9,8c540 <__gethex+0x3b4>
   8c520:	380d883a 	mov	r6,r7
   8c524:	3a802a26 	beq	r7,r10,8c5d0 <__gethex+0x444>
   8c528:	39c00104 	addi	r7,r7,4
   8c52c:	1cc7883a 	add	r3,r3,r19
   8c530:	18800003 	ldbu	r2,0(r3)
   8c534:	108003cc 	andi	r2,r2,15
   8c538:	1184983a 	sll	r2,r2,r6
   8c53c:	2088b03a 	or	r4,r4,r2
   8c540:	a97ff436 	bltu	r21,r5,8c514 <__gethex+0x388>
   8c544:	40800104 	addi	r2,r8,4
   8c548:	1585c83a 	sub	r2,r2,r22
   8c54c:	1021d0ba 	srai	r16,r2,2
   8c550:	41000015 	stw	r4,0(r8)
   8c554:	a4000415 	stw	r16,16(r20)
   8c558:	00879080 	call	87908 <__hi0bits>
   8c55c:	d9000217 	ldw	r4,8(sp)
   8c560:	8006917a 	slli	r3,r16,5
   8c564:	24c00017 	ldw	r19,0(r4)
   8c568:	1885c83a 	sub	r2,r3,r2
   8c56c:	98801f16 	blt	r19,r2,8c5ec <__gethex+0x460>
   8c570:	14c00c16 	blt	r2,r19,8c5a4 <__gethex+0x418>
   8c574:	002b883a 	mov	r21,zero
   8c578:	d9000217 	ldw	r4,8(sp)
   8c57c:	d8c00017 	ldw	r3,0(sp)
   8c580:	20800217 	ldw	r2,8(r4)
   8c584:	10c0360e 	bge	r2,r3,8c660 <__gethex+0x4d4>
   8c588:	d9000117 	ldw	r4,4(sp)
   8c58c:	a00b883a 	mov	r5,r20
   8c590:	048028c4 	movi	r18,163
   8c594:	00878e00 	call	878e0 <_Bfree>
   8c598:	d9000f17 	ldw	r4,60(sp)
   8c59c:	20000015 	stw	zero,0(r4)
   8c5a0:	003f3e06 	br	8c29c <__gethex+0x110>
   8c5a4:	d9000117 	ldw	r4,4(sp)
   8c5a8:	98a1c83a 	sub	r16,r19,r2
   8c5ac:	a00b883a 	mov	r5,r20
   8c5b0:	800d883a 	mov	r6,r16
   8c5b4:	00882240 	call	88224 <__lshift>
   8c5b8:	d8c00017 	ldw	r3,0(sp)
   8c5bc:	1029883a 	mov	r20,r2
   8c5c0:	15800504 	addi	r22,r2,20
   8c5c4:	1c07c83a 	sub	r3,r3,r16
   8c5c8:	d8c00015 	stw	r3,0(sp)
   8c5cc:	003fe906 	br	8c574 <__gethex+0x3e8>
   8c5d0:	41000015 	stw	r4,0(r8)
   8c5d4:	28c00003 	ldbu	r3,0(r5)
   8c5d8:	01c00104 	movi	r7,4
   8c5dc:	000d883a 	mov	r6,zero
   8c5e0:	41d1883a 	add	r8,r8,r7
   8c5e4:	0009883a 	mov	r4,zero
   8c5e8:	003fd006 	br	8c52c <__gethex+0x3a0>
   8c5ec:	14e1c83a 	sub	r16,r2,r19
   8c5f0:	a009883a 	mov	r4,r20
   8c5f4:	800b883a 	mov	r5,r16
   8c5f8:	0087dd80 	call	87dd8 <__any_on>
   8c5fc:	1000081e 	bne	r2,zero,8c620 <__gethex+0x494>
   8c600:	002b883a 	mov	r21,zero
   8c604:	a009883a 	mov	r4,r20
   8c608:	800b883a 	mov	r5,r16
   8c60c:	008c0dc0 	call	8c0dc <rshift>
   8c610:	d8800017 	ldw	r2,0(sp)
   8c614:	1405883a 	add	r2,r2,r16
   8c618:	d8800015 	stw	r2,0(sp)
   8c61c:	003fd606 	br	8c578 <__gethex+0x3ec>
   8c620:	817fffc4 	addi	r5,r16,-1
   8c624:	2805d17a 	srai	r2,r5,5
   8c628:	290007cc 	andi	r4,r5,31
   8c62c:	01800044 	movi	r6,1
   8c630:	1085883a 	add	r2,r2,r2
   8c634:	1085883a 	add	r2,r2,r2
   8c638:	1585883a 	add	r2,r2,r22
   8c63c:	3108983a 	sll	r4,r6,r4
   8c640:	10c00017 	ldw	r3,0(r2)
   8c644:	20c8703a 	and	r4,r4,r3
   8c648:	20001e1e 	bne	r4,zero,8c6c4 <__gethex+0x538>
   8c64c:	302b883a 	mov	r21,r6
   8c650:	003fec06 	br	8c604 <__gethex+0x478>
   8c654:	b011883a 	mov	r8,r22
   8c658:	0009883a 	mov	r4,zero
   8c65c:	003fb906 	br	8c544 <__gethex+0x3b8>
   8c660:	d8800217 	ldw	r2,8(sp)
   8c664:	d8c00017 	ldw	r3,0(sp)
   8c668:	11000117 	ldw	r4,4(r2)
   8c66c:	19001c16 	blt	r3,r4,8c6e0 <__gethex+0x554>
   8c670:	04800044 	movi	r18,1
   8c674:	a8000926 	beq	r21,zero,8c69c <__gethex+0x510>
   8c678:	d8c00217 	ldw	r3,8(sp)
   8c67c:	00800084 	movi	r2,2
   8c680:	19000317 	ldw	r4,12(r3)
   8c684:	20809826 	beq	r4,r2,8c8e8 <__gethex+0x75c>
   8c688:	008000c4 	movi	r2,3
   8c68c:	20805b26 	beq	r4,r2,8c7fc <__gethex+0x670>
   8c690:	00800044 	movi	r2,1
   8c694:	20804326 	beq	r4,r2,8c7a4 <__gethex+0x618>
   8c698:	94800414 	ori	r18,r18,16
   8c69c:	d9000f17 	ldw	r4,60(sp)
   8c6a0:	d8800017 	ldw	r2,0(sp)
   8c6a4:	d8c00317 	ldw	r3,12(sp)
   8c6a8:	25000015 	stw	r20,0(r4)
   8c6ac:	18800015 	stw	r2,0(r3)
   8c6b0:	003efa06 	br	8c29c <__gethex+0x110>
   8c6b4:	000b883a 	mov	r5,zero
   8c6b8:	003f8b06 	br	8c4e8 <__gethex+0x35c>
   8c6bc:	d8000015 	stw	zero,0(sp)
   8c6c0:	003eea06 	br	8c26c <__gethex+0xe0>
   8c6c4:	3140180e 	bge	r6,r5,8c728 <__gethex+0x59c>
   8c6c8:	a009883a 	mov	r4,r20
   8c6cc:	817fff84 	addi	r5,r16,-2
   8c6d0:	0087dd80 	call	87dd8 <__any_on>
   8c6d4:	10001426 	beq	r2,zero,8c728 <__gethex+0x59c>
   8c6d8:	054000c4 	movi	r21,3
   8c6dc:	003fc906 	br	8c604 <__gethex+0x478>
   8c6e0:	d8800017 	ldw	r2,0(sp)
   8c6e4:	20a3c83a 	sub	r17,r4,r2
   8c6e8:	8cc01116 	blt	r17,r19,8c730 <__gethex+0x5a4>
   8c6ec:	d8800217 	ldw	r2,8(sp)
   8c6f0:	10c00317 	ldw	r3,12(r2)
   8c6f4:	00800084 	movi	r2,2
   8c6f8:	18809426 	beq	r3,r2,8c94c <__gethex+0x7c0>
   8c6fc:	008000c4 	movi	r2,3
   8c700:	18808f26 	beq	r3,r2,8c940 <__gethex+0x7b4>
   8c704:	00800044 	movi	r2,1
   8c708:	18807c26 	beq	r3,r2,8c8fc <__gethex+0x770>
   8c70c:	d9000117 	ldw	r4,4(sp)
   8c710:	a00b883a 	mov	r5,r20
   8c714:	04801404 	movi	r18,80
   8c718:	00878e00 	call	878e0 <_Bfree>
   8c71c:	d9000f17 	ldw	r4,60(sp)
   8c720:	20000015 	stw	zero,0(r4)
   8c724:	003edd06 	br	8c29c <__gethex+0x110>
   8c728:	05400084 	movi	r21,2
   8c72c:	003fb506 	br	8c604 <__gethex+0x478>
   8c730:	8c3fffc4 	addi	r16,r17,-1
   8c734:	a8001526 	beq	r21,zero,8c78c <__gethex+0x600>
   8c738:	05400044 	movi	r21,1
   8c73c:	8005d17a 	srai	r2,r16,5
   8c740:	814007cc 	andi	r5,r16,31
   8c744:	00c00044 	movi	r3,1
   8c748:	1085883a 	add	r2,r2,r2
   8c74c:	1085883a 	add	r2,r2,r2
   8c750:	1585883a 	add	r2,r2,r22
   8c754:	1946983a 	sll	r3,r3,r5
   8c758:	11000017 	ldw	r4,0(r2)
   8c75c:	1906703a 	and	r3,r3,r4
   8c760:	18000126 	beq	r3,zero,8c768 <__gethex+0x5dc>
   8c764:	ad400094 	ori	r21,r21,2
   8c768:	880b883a 	mov	r5,r17
   8c76c:	a009883a 	mov	r4,r20
   8c770:	008c0dc0 	call	8c0dc <rshift>
   8c774:	d8800217 	ldw	r2,8(sp)
   8c778:	9c67c83a 	sub	r19,r19,r17
   8c77c:	04800084 	movi	r18,2
   8c780:	10800117 	ldw	r2,4(r2)
   8c784:	d8800015 	stw	r2,0(sp)
   8c788:	003fba06 	br	8c674 <__gethex+0x4e8>
   8c78c:	043feb0e 	bge	zero,r16,8c73c <__gethex+0x5b0>
   8c790:	a009883a 	mov	r4,r20
   8c794:	800b883a 	mov	r5,r16
   8c798:	0087dd80 	call	87dd8 <__any_on>
   8c79c:	102b883a 	mov	r21,r2
   8c7a0:	003fe606 	br	8c73c <__gethex+0x5b0>
   8c7a4:	a880008c 	andi	r2,r21,2
   8c7a8:	103fbb26 	beq	r2,zero,8c698 <__gethex+0x50c>
   8c7ac:	b0800017 	ldw	r2,0(r22)
   8c7b0:	a884b03a 	or	r2,r21,r2
   8c7b4:	1104703a 	and	r2,r2,r4
   8c7b8:	103fb726 	beq	r2,zero,8c698 <__gethex+0x50c>
   8c7bc:	a4000417 	ldw	r16,16(r20)
   8c7c0:	b007883a 	mov	r3,r22
   8c7c4:	017fffc4 	movi	r5,-1
   8c7c8:	8405883a 	add	r2,r16,r16
   8c7cc:	10ab883a 	add	r21,r2,r2
   8c7d0:	802f883a 	mov	r23,r16
   8c7d4:	b549883a 	add	r4,r22,r21
   8c7d8:	00000306 	br	8c7e8 <__gethex+0x65c>
   8c7dc:	18000015 	stw	zero,0(r3)
   8c7e0:	18c00104 	addi	r3,r3,4
   8c7e4:	1900082e 	bgeu	r3,r4,8c808 <__gethex+0x67c>
   8c7e8:	18800017 	ldw	r2,0(r3)
   8c7ec:	117ffb26 	beq	r2,r5,8c7dc <__gethex+0x650>
   8c7f0:	10800044 	addi	r2,r2,1
   8c7f4:	18800015 	stw	r2,0(r3)
   8c7f8:	00001e06 	br	8c874 <__gethex+0x6e8>
   8c7fc:	d8801017 	ldw	r2,64(sp)
   8c800:	103fa526 	beq	r2,zero,8c698 <__gethex+0x50c>
   8c804:	003fed06 	br	8c7bc <__gethex+0x630>
   8c808:	a0800217 	ldw	r2,8(r20)
   8c80c:	80801216 	blt	r16,r2,8c858 <__gethex+0x6cc>
   8c810:	a1400117 	ldw	r5,4(r20)
   8c814:	d9000117 	ldw	r4,4(sp)
   8c818:	29400044 	addi	r5,r5,1
   8c81c:	0087e600 	call	87e60 <_Balloc>
   8c820:	a1800417 	ldw	r6,16(r20)
   8c824:	a1400304 	addi	r5,r20,12
   8c828:	11000304 	addi	r4,r2,12
   8c82c:	318d883a 	add	r6,r6,r6
   8c830:	318d883a 	add	r6,r6,r6
   8c834:	31800204 	addi	r6,r6,8
   8c838:	1023883a 	mov	r17,r2
   8c83c:	00876c80 	call	876c8 <memcpy>
   8c840:	d9000117 	ldw	r4,4(sp)
   8c844:	a00b883a 	mov	r5,r20
   8c848:	8d800504 	addi	r22,r17,20
   8c84c:	00878e00 	call	878e0 <_Bfree>
   8c850:	8c000417 	ldw	r16,16(r17)
   8c854:	8829883a 	mov	r20,r17
   8c858:	8405883a 	add	r2,r16,r16
   8c85c:	1085883a 	add	r2,r2,r2
   8c860:	1505883a 	add	r2,r2,r20
   8c864:	84000044 	addi	r16,r16,1
   8c868:	00c00044 	movi	r3,1
   8c86c:	10c00515 	stw	r3,20(r2)
   8c870:	a4000415 	stw	r16,16(r20)
   8c874:	00800084 	movi	r2,2
   8c878:	90801526 	beq	r18,r2,8c8d0 <__gethex+0x744>
   8c87c:	bc000a16 	blt	r23,r16,8c8a8 <__gethex+0x71c>
   8c880:	9c0007cc 	andi	r16,r19,31
   8c884:	8000021e 	bne	r16,zero,8c890 <__gethex+0x704>
   8c888:	94800814 	ori	r18,r18,32
   8c88c:	003f8306 	br	8c69c <__gethex+0x510>
   8c890:	b545883a 	add	r2,r22,r21
   8c894:	113fff17 	ldw	r4,-4(r2)
   8c898:	00879080 	call	87908 <__hi0bits>
   8c89c:	00c00804 	movi	r3,32
   8c8a0:	1c07c83a 	sub	r3,r3,r16
   8c8a4:	10fff80e 	bge	r2,r3,8c888 <__gethex+0x6fc>
   8c8a8:	a009883a 	mov	r4,r20
   8c8ac:	01400044 	movi	r5,1
   8c8b0:	008c0dc0 	call	8c0dc <rshift>
   8c8b4:	d9000217 	ldw	r4,8(sp)
   8c8b8:	d8c00017 	ldw	r3,0(sp)
   8c8bc:	20800217 	ldw	r2,8(r4)
   8c8c0:	18c00044 	addi	r3,r3,1
   8c8c4:	d8c00015 	stw	r3,0(sp)
   8c8c8:	10ff2f16 	blt	r2,r3,8c588 <__gethex+0x3fc>
   8c8cc:	003fee06 	br	8c888 <__gethex+0x6fc>
   8c8d0:	d8c00217 	ldw	r3,8(sp)
   8c8d4:	18800017 	ldw	r2,0(r3)
   8c8d8:	10bfffc4 	addi	r2,r2,-1
   8c8dc:	98801e26 	beq	r19,r2,8c958 <__gethex+0x7cc>
   8c8e0:	04800884 	movi	r18,34
   8c8e4:	003f6d06 	br	8c69c <__gethex+0x510>
   8c8e8:	d9001017 	ldw	r4,64(sp)
   8c8ec:	00800044 	movi	r2,1
   8c8f0:	1105c83a 	sub	r2,r2,r4
   8c8f4:	103f6826 	beq	r2,zero,8c698 <__gethex+0x50c>
   8c8f8:	003fb006 	br	8c7bc <__gethex+0x630>
   8c8fc:	9c7f831e 	bne	r19,r17,8c70c <__gethex+0x580>
   8c900:	1cc0060e 	bge	r3,r19,8c91c <__gethex+0x790>
   8c904:	98cbc83a 	sub	r5,r19,r3
   8c908:	a009883a 	mov	r4,r20
   8c90c:	0087dd80 	call	87dd8 <__any_on>
   8c910:	103f7e26 	beq	r2,zero,8c70c <__gethex+0x580>
   8c914:	d8c00217 	ldw	r3,8(sp)
   8c918:	19000117 	ldw	r4,4(r3)
   8c91c:	d8800317 	ldw	r2,12(sp)
   8c920:	d8c00f17 	ldw	r3,60(sp)
   8c924:	04000044 	movi	r16,1
   8c928:	11000015 	stw	r4,0(r2)
   8c92c:	04801884 	movi	r18,98
   8c930:	b4000015 	stw	r16,0(r22)
   8c934:	1d000015 	stw	r20,0(r3)
   8c938:	a4000415 	stw	r16,16(r20)
   8c93c:	003e5706 	br	8c29c <__gethex+0x110>
   8c940:	d8801017 	ldw	r2,64(sp)
   8c944:	103f7126 	beq	r2,zero,8c70c <__gethex+0x580>
   8c948:	003ff406 	br	8c91c <__gethex+0x790>
   8c94c:	d8c01017 	ldw	r3,64(sp)
   8c950:	183ff226 	beq	r3,zero,8c91c <__gethex+0x790>
   8c954:	003f6d06 	br	8c70c <__gethex+0x580>
   8c958:	9805d17a 	srai	r2,r19,5
   8c95c:	994007cc 	andi	r5,r19,31
   8c960:	00c00044 	movi	r3,1
   8c964:	1085883a 	add	r2,r2,r2
   8c968:	1085883a 	add	r2,r2,r2
   8c96c:	1585883a 	add	r2,r2,r22
   8c970:	1946983a 	sll	r3,r3,r5
   8c974:	11000017 	ldw	r4,0(r2)
   8c978:	1906703a 	and	r3,r3,r4
   8c97c:	183fd826 	beq	r3,zero,8c8e0 <__gethex+0x754>
   8c980:	04800844 	movi	r18,33
   8c984:	003f4506 	br	8c69c <__gethex+0x510>

0008c988 <L_shift>:
   8c988:	00800204 	movi	r2,8
   8c98c:	1185c83a 	sub	r2,r2,r6
   8c990:	1085883a 	add	r2,r2,r2
   8c994:	21c00017 	ldw	r7,0(r4)
   8c998:	1093883a 	add	r9,r2,r2
   8c99c:	00800804 	movi	r2,32
   8c9a0:	200d883a 	mov	r6,r4
   8c9a4:	1251c83a 	sub	r8,r2,r9
   8c9a8:	31800104 	addi	r6,r6,4
   8c9ac:	3805883a 	mov	r2,r7
   8c9b0:	31c00017 	ldw	r7,0(r6)
   8c9b4:	3a08983a 	sll	r4,r7,r8
   8c9b8:	3a46d83a 	srl	r3,r7,r9
   8c9bc:	1104b03a 	or	r2,r2,r4
   8c9c0:	180f883a 	mov	r7,r3
   8c9c4:	30bfff15 	stw	r2,-4(r6)
   8c9c8:	30c00015 	stw	r3,0(r6)
   8c9cc:	317ff636 	bltu	r6,r5,8c9a8 <L_shift+0x20>
   8c9d0:	f800283a 	ret

0008c9d4 <__hexnan>:
   8c9d4:	defff404 	addi	sp,sp,-48
   8c9d8:	dd800815 	stw	r22,32(sp)
   8c9dc:	05800274 	movhi	r22,9
   8c9e0:	b59d4f04 	addi	r22,r22,30012
   8c9e4:	b0800c03 	ldbu	r2,48(r22)
   8c9e8:	dcc00515 	stw	r19,20(sp)
   8c9ec:	dc000215 	stw	r16,8(sp)
   8c9f0:	dfc00b15 	stw	ra,44(sp)
   8c9f4:	df000a15 	stw	fp,40(sp)
   8c9f8:	ddc00915 	stw	r23,36(sp)
   8c9fc:	dd400715 	stw	r21,28(sp)
   8ca00:	dd000615 	stw	r20,24(sp)
   8ca04:	dc800415 	stw	r18,16(sp)
   8ca08:	dc400315 	stw	r17,12(sp)
   8ca0c:	d9000115 	stw	r4,4(sp)
   8ca10:	2821883a 	mov	r16,r5
   8ca14:	3027883a 	mov	r19,r6
   8ca18:	10007426 	beq	r2,zero,8cbec <__hexnan+0x218>
   8ca1c:	80c00017 	ldw	r3,0(r16)
   8ca20:	1805d17a 	srai	r2,r3,5
   8ca24:	18c007cc 	andi	r3,r3,31
   8ca28:	1839003a 	cmpeq	fp,r3,zero
   8ca2c:	1085883a 	add	r2,r2,r2
   8ca30:	1085883a 	add	r2,r2,r2
   8ca34:	d8c00015 	stw	r3,0(sp)
   8ca38:	14c5883a 	add	r2,r2,r19
   8ca3c:	e000011e 	bne	fp,zero,8ca44 <__hexnan+0x70>
   8ca40:	10800104 	addi	r2,r2,4
   8ca44:	d8c00117 	ldw	r3,4(sp)
   8ca48:	153fff04 	addi	r20,r2,-4
   8ca4c:	a021883a 	mov	r16,r20
   8ca50:	1c400017 	ldw	r17,0(r3)
   8ca54:	a02b883a 	mov	r21,r20
   8ca58:	0025883a 	mov	r18,zero
   8ca5c:	002f883a 	mov	r23,zero
   8ca60:	000d883a 	mov	r6,zero
   8ca64:	103fff15 	stw	zero,-4(r2)
   8ca68:	8c400044 	addi	r17,r17,1
   8ca6c:	89000003 	ldbu	r4,0(r17)
   8ca70:	20000e26 	beq	r4,zero,8caac <__hexnan+0xd8>
   8ca74:	2585883a 	add	r2,r4,r22
   8ca78:	10c00003 	ldbu	r3,0(r2)
   8ca7c:	18002e1e 	bne	r3,zero,8cb38 <__hexnan+0x164>
   8ca80:	00800804 	movi	r2,32
   8ca84:	11005536 	bltu	r2,r4,8cbdc <__hexnan+0x208>
   8ca88:	bcbff70e 	bge	r23,r18,8ca68 <__hexnan+0x94>
   8ca8c:	8540022e 	bgeu	r16,r21,8ca98 <__hexnan+0xc4>
   8ca90:	008001c4 	movi	r2,7
   8ca94:	11803c0e 	bge	r2,r6,8cb88 <__hexnan+0x1b4>
   8ca98:	9c003536 	bltu	r19,r16,8cb70 <__hexnan+0x19c>
   8ca9c:	8c400044 	addi	r17,r17,1
   8caa0:	89000003 	ldbu	r4,0(r17)
   8caa4:	01800204 	movi	r6,8
   8caa8:	203ff21e 	bne	r4,zero,8ca74 <__hexnan+0xa0>
   8caac:	90004d26 	beq	r18,zero,8cbe4 <__hexnan+0x210>
   8cab0:	85404336 	bltu	r16,r21,8cbc0 <__hexnan+0x1ec>
   8cab4:	9c00382e 	bgeu	r19,r16,8cb98 <__hexnan+0x1c4>
   8cab8:	9807883a 	mov	r3,r19
   8cabc:	80800017 	ldw	r2,0(r16)
   8cac0:	84000104 	addi	r16,r16,4
   8cac4:	18800015 	stw	r2,0(r3)
   8cac8:	18c00104 	addi	r3,r3,4
   8cacc:	a43ffb2e 	bgeu	r20,r16,8cabc <__hexnan+0xe8>
   8cad0:	18000015 	stw	zero,0(r3)
   8cad4:	18c00104 	addi	r3,r3,4
   8cad8:	a0fffd2e 	bgeu	r20,r3,8cad0 <__hexnan+0xfc>
   8cadc:	a0800017 	ldw	r2,0(r20)
   8cae0:	1000071e 	bne	r2,zero,8cb00 <__hexnan+0x12c>
   8cae4:	9d004326 	beq	r19,r20,8cbf4 <__hexnan+0x220>
   8cae8:	a007883a 	mov	r3,r20
   8caec:	00000106 	br	8caf4 <__hexnan+0x120>
   8caf0:	98c04026 	beq	r19,r3,8cbf4 <__hexnan+0x220>
   8caf4:	18ffff04 	addi	r3,r3,-4
   8caf8:	18800017 	ldw	r2,0(r3)
   8cafc:	103ffc26 	beq	r2,zero,8caf0 <__hexnan+0x11c>
   8cb00:	00c00144 	movi	r3,5
   8cb04:	1805883a 	mov	r2,r3
   8cb08:	dfc00b17 	ldw	ra,44(sp)
   8cb0c:	df000a17 	ldw	fp,40(sp)
   8cb10:	ddc00917 	ldw	r23,36(sp)
   8cb14:	dd800817 	ldw	r22,32(sp)
   8cb18:	dd400717 	ldw	r21,28(sp)
   8cb1c:	dd000617 	ldw	r20,24(sp)
   8cb20:	dcc00517 	ldw	r19,20(sp)
   8cb24:	dc800417 	ldw	r18,16(sp)
   8cb28:	dc400317 	ldw	r17,12(sp)
   8cb2c:	dc000217 	ldw	r16,8(sp)
   8cb30:	dec00c04 	addi	sp,sp,48
   8cb34:	f800283a 	ret
   8cb38:	31800044 	addi	r6,r6,1
   8cb3c:	00800204 	movi	r2,8
   8cb40:	94800044 	addi	r18,r18,1
   8cb44:	1180040e 	bge	r2,r6,8cb58 <__hexnan+0x184>
   8cb48:	9c3fc72e 	bgeu	r19,r16,8ca68 <__hexnan+0x94>
   8cb4c:	843fff04 	addi	r16,r16,-4
   8cb50:	80000015 	stw	zero,0(r16)
   8cb54:	01800044 	movi	r6,1
   8cb58:	80800017 	ldw	r2,0(r16)
   8cb5c:	18c003cc 	andi	r3,r3,15
   8cb60:	1004913a 	slli	r2,r2,4
   8cb64:	10c4b03a 	or	r2,r2,r3
   8cb68:	80800015 	stw	r2,0(r16)
   8cb6c:	003fbe06 	br	8ca68 <__hexnan+0x94>
   8cb70:	843fff04 	addi	r16,r16,-4
   8cb74:	802b883a 	mov	r21,r16
   8cb78:	902f883a 	mov	r23,r18
   8cb7c:	000d883a 	mov	r6,zero
   8cb80:	80000015 	stw	zero,0(r16)
   8cb84:	003fb806 	br	8ca68 <__hexnan+0x94>
   8cb88:	8009883a 	mov	r4,r16
   8cb8c:	a80b883a 	mov	r5,r21
   8cb90:	008c9880 	call	8c988 <L_shift>
   8cb94:	003fc006 	br	8ca98 <__hexnan+0xc4>
   8cb98:	e03fd01e 	bne	fp,zero,8cadc <__hexnan+0x108>
   8cb9c:	d8c00017 	ldw	r3,0(sp)
   8cba0:	00800804 	movi	r2,32
   8cba4:	10c5c83a 	sub	r2,r2,r3
   8cba8:	00ffffc4 	movi	r3,-1
   8cbac:	1886d83a 	srl	r3,r3,r2
   8cbb0:	a0800017 	ldw	r2,0(r20)
   8cbb4:	10c4703a 	and	r2,r2,r3
   8cbb8:	a0800015 	stw	r2,0(r20)
   8cbbc:	003fc806 	br	8cae0 <__hexnan+0x10c>
   8cbc0:	008001c4 	movi	r2,7
   8cbc4:	11bfbb16 	blt	r2,r6,8cab4 <__hexnan+0xe0>
   8cbc8:	a80b883a 	mov	r5,r21
   8cbcc:	8009883a 	mov	r4,r16
   8cbd0:	008c9880 	call	8c988 <L_shift>
   8cbd4:	9c3ff02e 	bgeu	r19,r16,8cb98 <__hexnan+0x1c4>
   8cbd8:	003fb706 	br	8cab8 <__hexnan+0xe4>
   8cbdc:	00800a44 	movi	r2,41
   8cbe0:	20800826 	beq	r4,r2,8cc04 <__hexnan+0x230>
   8cbe4:	00c00104 	movi	r3,4
   8cbe8:	003fc606 	br	8cb04 <__hexnan+0x130>
   8cbec:	008c0740 	call	8c074 <__hexdig_init>
   8cbf0:	003f8a06 	br	8ca1c <__hexnan+0x48>
   8cbf4:	00800044 	movi	r2,1
   8cbf8:	00c00144 	movi	r3,5
   8cbfc:	98800015 	stw	r2,0(r19)
   8cc00:	003fc006 	br	8cb04 <__hexnan+0x130>
   8cc04:	903ff726 	beq	r18,zero,8cbe4 <__hexnan+0x210>
   8cc08:	d8c00117 	ldw	r3,4(sp)
   8cc0c:	88800044 	addi	r2,r17,1
   8cc10:	18800015 	stw	r2,0(r3)
   8cc14:	857fa72e 	bgeu	r16,r21,8cab4 <__hexnan+0xe0>
   8cc18:	003fe906 	br	8cbc0 <__hexnan+0x1ec>

0008cc1c <_isatty_r>:
   8cc1c:	defffd04 	addi	sp,sp,-12
   8cc20:	dc000015 	stw	r16,0(sp)
   8cc24:	04000274 	movhi	r16,9
   8cc28:	841d3c04 	addi	r16,r16,29936
   8cc2c:	dc400115 	stw	r17,4(sp)
   8cc30:	80000015 	stw	zero,0(r16)
   8cc34:	2023883a 	mov	r17,r4
   8cc38:	2809883a 	mov	r4,r5
   8cc3c:	dfc00215 	stw	ra,8(sp)
   8cc40:	008fc400 	call	8fc40 <isatty>
   8cc44:	1007883a 	mov	r3,r2
   8cc48:	00bfffc4 	movi	r2,-1
   8cc4c:	18800626 	beq	r3,r2,8cc68 <_isatty_r+0x4c>
   8cc50:	1805883a 	mov	r2,r3
   8cc54:	dfc00217 	ldw	ra,8(sp)
   8cc58:	dc400117 	ldw	r17,4(sp)
   8cc5c:	dc000017 	ldw	r16,0(sp)
   8cc60:	dec00304 	addi	sp,sp,12
   8cc64:	f800283a 	ret
   8cc68:	80800017 	ldw	r2,0(r16)
   8cc6c:	103ff826 	beq	r2,zero,8cc50 <_isatty_r+0x34>
   8cc70:	88800015 	stw	r2,0(r17)
   8cc74:	1805883a 	mov	r2,r3
   8cc78:	dfc00217 	ldw	ra,8(sp)
   8cc7c:	dc400117 	ldw	r17,4(sp)
   8cc80:	dc000017 	ldw	r16,0(sp)
   8cc84:	dec00304 	addi	sp,sp,12
   8cc88:	f800283a 	ret

0008cc8c <_lseek_r>:
   8cc8c:	defffd04 	addi	sp,sp,-12
   8cc90:	dc000015 	stw	r16,0(sp)
   8cc94:	04000274 	movhi	r16,9
   8cc98:	841d3c04 	addi	r16,r16,29936
   8cc9c:	dc400115 	stw	r17,4(sp)
   8cca0:	80000015 	stw	zero,0(r16)
   8cca4:	2023883a 	mov	r17,r4
   8cca8:	2809883a 	mov	r4,r5
   8ccac:	300b883a 	mov	r5,r6
   8ccb0:	380d883a 	mov	r6,r7
   8ccb4:	dfc00215 	stw	ra,8(sp)
   8ccb8:	008fe500 	call	8fe50 <lseek>
   8ccbc:	1007883a 	mov	r3,r2
   8ccc0:	00bfffc4 	movi	r2,-1
   8ccc4:	18800626 	beq	r3,r2,8cce0 <_lseek_r+0x54>
   8ccc8:	1805883a 	mov	r2,r3
   8cccc:	dfc00217 	ldw	ra,8(sp)
   8ccd0:	dc400117 	ldw	r17,4(sp)
   8ccd4:	dc000017 	ldw	r16,0(sp)
   8ccd8:	dec00304 	addi	sp,sp,12
   8ccdc:	f800283a 	ret
   8cce0:	80800017 	ldw	r2,0(r16)
   8cce4:	103ff826 	beq	r2,zero,8ccc8 <_lseek_r+0x3c>
   8cce8:	88800015 	stw	r2,0(r17)
   8ccec:	1805883a 	mov	r2,r3
   8ccf0:	dfc00217 	ldw	ra,8(sp)
   8ccf4:	dc400117 	ldw	r17,4(sp)
   8ccf8:	dc000017 	ldw	r16,0(sp)
   8ccfc:	dec00304 	addi	sp,sp,12
   8cd00:	f800283a 	ret

0008cd04 <_read_r>:
   8cd04:	defffd04 	addi	sp,sp,-12
   8cd08:	dc000015 	stw	r16,0(sp)
   8cd0c:	04000274 	movhi	r16,9
   8cd10:	841d3c04 	addi	r16,r16,29936
   8cd14:	dc400115 	stw	r17,4(sp)
   8cd18:	80000015 	stw	zero,0(r16)
   8cd1c:	2023883a 	mov	r17,r4
   8cd20:	2809883a 	mov	r4,r5
   8cd24:	300b883a 	mov	r5,r6
   8cd28:	380d883a 	mov	r6,r7
   8cd2c:	dfc00215 	stw	ra,8(sp)
   8cd30:	00900500 	call	90050 <read>
   8cd34:	1007883a 	mov	r3,r2
   8cd38:	00bfffc4 	movi	r2,-1
   8cd3c:	18800626 	beq	r3,r2,8cd58 <_read_r+0x54>
   8cd40:	1805883a 	mov	r2,r3
   8cd44:	dfc00217 	ldw	ra,8(sp)
   8cd48:	dc400117 	ldw	r17,4(sp)
   8cd4c:	dc000017 	ldw	r16,0(sp)
   8cd50:	dec00304 	addi	sp,sp,12
   8cd54:	f800283a 	ret
   8cd58:	80800017 	ldw	r2,0(r16)
   8cd5c:	103ff826 	beq	r2,zero,8cd40 <_read_r+0x3c>
   8cd60:	88800015 	stw	r2,0(r17)
   8cd64:	1805883a 	mov	r2,r3
   8cd68:	dfc00217 	ldw	ra,8(sp)
   8cd6c:	dc400117 	ldw	r17,4(sp)
   8cd70:	dc000017 	ldw	r16,0(sp)
   8cd74:	dec00304 	addi	sp,sp,12
   8cd78:	f800283a 	ret

0008cd7c <__muldi3>:
   8cd7c:	defff204 	addi	sp,sp,-56
   8cd80:	df000c15 	stw	fp,48(sp)
   8cd84:	3038d43a 	srli	fp,r6,16
   8cd88:	dd000815 	stw	r20,32(sp)
   8cd8c:	dc400515 	stw	r17,20(sp)
   8cd90:	2028d43a 	srli	r20,r4,16
   8cd94:	247fffcc 	andi	r17,r4,65535
   8cd98:	dc000415 	stw	r16,16(sp)
   8cd9c:	343fffcc 	andi	r16,r6,65535
   8cda0:	dcc00715 	stw	r19,28(sp)
   8cda4:	d9000015 	stw	r4,0(sp)
   8cda8:	2827883a 	mov	r19,r5
   8cdac:	8809883a 	mov	r4,r17
   8cdb0:	d9400115 	stw	r5,4(sp)
   8cdb4:	800b883a 	mov	r5,r16
   8cdb8:	d9800215 	stw	r6,8(sp)
   8cdbc:	dfc00d15 	stw	ra,52(sp)
   8cdc0:	d9c00315 	stw	r7,12(sp)
   8cdc4:	dd800a15 	stw	r22,40(sp)
   8cdc8:	dd400915 	stw	r21,36(sp)
   8cdcc:	302d883a 	mov	r22,r6
   8cdd0:	ddc00b15 	stw	r23,44(sp)
   8cdd4:	dc800615 	stw	r18,24(sp)
   8cdd8:	00806240 	call	80624 <__mulsi3>
   8cddc:	8809883a 	mov	r4,r17
   8cde0:	e00b883a 	mov	r5,fp
   8cde4:	102b883a 	mov	r21,r2
   8cde8:	00806240 	call	80624 <__mulsi3>
   8cdec:	800b883a 	mov	r5,r16
   8cdf0:	a009883a 	mov	r4,r20
   8cdf4:	1023883a 	mov	r17,r2
   8cdf8:	00806240 	call	80624 <__mulsi3>
   8cdfc:	a009883a 	mov	r4,r20
   8ce00:	e00b883a 	mov	r5,fp
   8ce04:	1021883a 	mov	r16,r2
   8ce08:	00806240 	call	80624 <__mulsi3>
   8ce0c:	a8ffffcc 	andi	r3,r21,65535
   8ce10:	a82ad43a 	srli	r21,r21,16
   8ce14:	8c23883a 	add	r17,r17,r16
   8ce18:	1011883a 	mov	r8,r2
   8ce1c:	ac6b883a 	add	r21,r21,r17
   8ce20:	a804943a 	slli	r2,r21,16
   8ce24:	b009883a 	mov	r4,r22
   8ce28:	980b883a 	mov	r5,r19
   8ce2c:	10c7883a 	add	r3,r2,r3
   8ce30:	a812d43a 	srli	r9,r21,16
   8ce34:	180d883a 	mov	r6,r3
   8ce38:	ac00022e 	bgeu	r21,r16,8ce44 <__muldi3+0xc8>
   8ce3c:	00800074 	movhi	r2,1
   8ce40:	4091883a 	add	r8,r8,r2
   8ce44:	4267883a 	add	r19,r8,r9
   8ce48:	302d883a 	mov	r22,r6
   8ce4c:	00806240 	call	80624 <__mulsi3>
   8ce50:	d9400317 	ldw	r5,12(sp)
   8ce54:	d9000017 	ldw	r4,0(sp)
   8ce58:	1023883a 	mov	r17,r2
   8ce5c:	00806240 	call	80624 <__mulsi3>
   8ce60:	14cb883a 	add	r5,r2,r19
   8ce64:	894b883a 	add	r5,r17,r5
   8ce68:	b005883a 	mov	r2,r22
   8ce6c:	2807883a 	mov	r3,r5
   8ce70:	dfc00d17 	ldw	ra,52(sp)
   8ce74:	df000c17 	ldw	fp,48(sp)
   8ce78:	ddc00b17 	ldw	r23,44(sp)
   8ce7c:	dd800a17 	ldw	r22,40(sp)
   8ce80:	dd400917 	ldw	r21,36(sp)
   8ce84:	dd000817 	ldw	r20,32(sp)
   8ce88:	dcc00717 	ldw	r19,28(sp)
   8ce8c:	dc800617 	ldw	r18,24(sp)
   8ce90:	dc400517 	ldw	r17,20(sp)
   8ce94:	dc000417 	ldw	r16,16(sp)
   8ce98:	dec00e04 	addi	sp,sp,56
   8ce9c:	f800283a 	ret

0008cea0 <__fixunsdfsi>:
   8cea0:	defffb04 	addi	sp,sp,-20
   8cea4:	dc400115 	stw	r17,4(sp)
   8cea8:	dc000015 	stw	r16,0(sp)
   8ceac:	04507834 	movhi	r17,16864
   8ceb0:	0021883a 	mov	r16,zero
   8ceb4:	800d883a 	mov	r6,r16
   8ceb8:	880f883a 	mov	r7,r17
   8cebc:	dcc00315 	stw	r19,12(sp)
   8cec0:	dc800215 	stw	r18,8(sp)
   8cec4:	2827883a 	mov	r19,r5
   8cec8:	2025883a 	mov	r18,r4
   8cecc:	dfc00415 	stw	ra,16(sp)
   8ced0:	008ea300 	call	8ea30 <__gedf2>
   8ced4:	000d883a 	mov	r6,zero
   8ced8:	880f883a 	mov	r7,r17
   8cedc:	980b883a 	mov	r5,r19
   8cee0:	9009883a 	mov	r4,r18
   8cee4:	10000d16 	blt	r2,zero,8cf1c <__fixunsdfsi+0x7c>
   8cee8:	008e1880 	call	8e188 <__subdf3>
   8ceec:	180b883a 	mov	r5,r3
   8cef0:	1009883a 	mov	r4,r2
   8cef4:	008ecc00 	call	8ecc0 <__fixdfsi>
   8cef8:	00e00034 	movhi	r3,32768
   8cefc:	10c5883a 	add	r2,r2,r3
   8cf00:	dfc00417 	ldw	ra,16(sp)
   8cf04:	dcc00317 	ldw	r19,12(sp)
   8cf08:	dc800217 	ldw	r18,8(sp)
   8cf0c:	dc400117 	ldw	r17,4(sp)
   8cf10:	dc000017 	ldw	r16,0(sp)
   8cf14:	dec00504 	addi	sp,sp,20
   8cf18:	f800283a 	ret
   8cf1c:	980b883a 	mov	r5,r19
   8cf20:	9009883a 	mov	r4,r18
   8cf24:	008ecc00 	call	8ecc0 <__fixdfsi>
   8cf28:	dfc00417 	ldw	ra,16(sp)
   8cf2c:	dcc00317 	ldw	r19,12(sp)
   8cf30:	dc800217 	ldw	r18,8(sp)
   8cf34:	dc400117 	ldw	r17,4(sp)
   8cf38:	dc000017 	ldw	r16,0(sp)
   8cf3c:	dec00504 	addi	sp,sp,20
   8cf40:	f800283a 	ret

0008cf44 <__udivdi3>:
   8cf44:	defff104 	addi	sp,sp,-60
   8cf48:	0015883a 	mov	r10,zero
   8cf4c:	2005883a 	mov	r2,r4
   8cf50:	3011883a 	mov	r8,r6
   8cf54:	df000d15 	stw	fp,52(sp)
   8cf58:	dd400a15 	stw	r21,40(sp)
   8cf5c:	dcc00815 	stw	r19,32(sp)
   8cf60:	dfc00e15 	stw	ra,56(sp)
   8cf64:	ddc00c15 	stw	r23,48(sp)
   8cf68:	dd800b15 	stw	r22,44(sp)
   8cf6c:	dd000915 	stw	r20,36(sp)
   8cf70:	dc800715 	stw	r18,28(sp)
   8cf74:	dc400615 	stw	r17,24(sp)
   8cf78:	dc000515 	stw	r16,20(sp)
   8cf7c:	da800315 	stw	r10,12(sp)
   8cf80:	4027883a 	mov	r19,r8
   8cf84:	1039883a 	mov	fp,r2
   8cf88:	282b883a 	mov	r21,r5
   8cf8c:	da800415 	stw	r10,16(sp)
   8cf90:	3800401e 	bne	r7,zero,8d094 <__udivdi3+0x150>
   8cf94:	2a006536 	bltu	r5,r8,8d12c <__udivdi3+0x1e8>
   8cf98:	4000b526 	beq	r8,zero,8d270 <__udivdi3+0x32c>
   8cf9c:	00bfffd4 	movui	r2,65535
   8cfa0:	14c0ad36 	bltu	r2,r19,8d258 <__udivdi3+0x314>
   8cfa4:	00803fc4 	movi	r2,255
   8cfa8:	14c15e36 	bltu	r2,r19,8d524 <__udivdi3+0x5e0>
   8cfac:	000b883a 	mov	r5,zero
   8cfb0:	0005883a 	mov	r2,zero
   8cfb4:	9884d83a 	srl	r2,r19,r2
   8cfb8:	01000274 	movhi	r4,9
   8cfbc:	210f1004 	addi	r4,r4,15424
   8cfc0:	01800804 	movi	r6,32
   8cfc4:	1105883a 	add	r2,r2,r4
   8cfc8:	10c00003 	ldbu	r3,0(r2)
   8cfcc:	28c7883a 	add	r3,r5,r3
   8cfd0:	30e9c83a 	sub	r20,r6,r3
   8cfd4:	a0010a1e 	bne	r20,zero,8d400 <__udivdi3+0x4bc>
   8cfd8:	982ed43a 	srli	r23,r19,16
   8cfdc:	acebc83a 	sub	r21,r21,r19
   8cfe0:	9dbfffcc 	andi	r22,r19,65535
   8cfe4:	05000044 	movi	r20,1
   8cfe8:	a809883a 	mov	r4,r21
   8cfec:	b80b883a 	mov	r5,r23
   8cff0:	008f0dc0 	call	8f0dc <__udivsi3>
   8cff4:	100b883a 	mov	r5,r2
   8cff8:	b009883a 	mov	r4,r22
   8cffc:	1021883a 	mov	r16,r2
   8d000:	00806240 	call	80624 <__mulsi3>
   8d004:	a809883a 	mov	r4,r21
   8d008:	b80b883a 	mov	r5,r23
   8d00c:	1023883a 	mov	r17,r2
   8d010:	008f0e40 	call	8f0e4 <__umodsi3>
   8d014:	1004943a 	slli	r2,r2,16
   8d018:	e006d43a 	srli	r3,fp,16
   8d01c:	10c4b03a 	or	r2,r2,r3
   8d020:	1440042e 	bgeu	r2,r17,8d034 <__udivdi3+0xf0>
   8d024:	14c5883a 	add	r2,r2,r19
   8d028:	843fffc4 	addi	r16,r16,-1
   8d02c:	14c00136 	bltu	r2,r19,8d034 <__udivdi3+0xf0>
   8d030:	14415c36 	bltu	r2,r17,8d5a4 <__udivdi3+0x660>
   8d034:	1463c83a 	sub	r17,r2,r17
   8d038:	8809883a 	mov	r4,r17
   8d03c:	b80b883a 	mov	r5,r23
   8d040:	008f0dc0 	call	8f0dc <__udivsi3>
   8d044:	100b883a 	mov	r5,r2
   8d048:	b009883a 	mov	r4,r22
   8d04c:	102b883a 	mov	r21,r2
   8d050:	00806240 	call	80624 <__mulsi3>
   8d054:	8809883a 	mov	r4,r17
   8d058:	b80b883a 	mov	r5,r23
   8d05c:	1025883a 	mov	r18,r2
   8d060:	008f0e40 	call	8f0e4 <__umodsi3>
   8d064:	1004943a 	slli	r2,r2,16
   8d068:	e0ffffcc 	andi	r3,fp,65535
   8d06c:	10c4b03a 	or	r2,r2,r3
   8d070:	1480042e 	bgeu	r2,r18,8d084 <__udivdi3+0x140>
   8d074:	9885883a 	add	r2,r19,r2
   8d078:	ad7fffc4 	addi	r21,r21,-1
   8d07c:	14c00136 	bltu	r2,r19,8d084 <__udivdi3+0x140>
   8d080:	14813c36 	bltu	r2,r18,8d574 <__udivdi3+0x630>
   8d084:	8004943a 	slli	r2,r16,16
   8d088:	a009883a 	mov	r4,r20
   8d08c:	a884b03a 	or	r2,r21,r2
   8d090:	00001506 	br	8d0e8 <__udivdi3+0x1a4>
   8d094:	380d883a 	mov	r6,r7
   8d098:	29c06c36 	bltu	r5,r7,8d24c <__udivdi3+0x308>
   8d09c:	00bfffd4 	movui	r2,65535
   8d0a0:	11c06436 	bltu	r2,r7,8d234 <__udivdi3+0x2f0>
   8d0a4:	00803fc4 	movi	r2,255
   8d0a8:	11c11836 	bltu	r2,r7,8d50c <__udivdi3+0x5c8>
   8d0ac:	000b883a 	mov	r5,zero
   8d0b0:	0005883a 	mov	r2,zero
   8d0b4:	3084d83a 	srl	r2,r6,r2
   8d0b8:	01000274 	movhi	r4,9
   8d0bc:	210f1004 	addi	r4,r4,15424
   8d0c0:	01c00804 	movi	r7,32
   8d0c4:	1105883a 	add	r2,r2,r4
   8d0c8:	10c00003 	ldbu	r3,0(r2)
   8d0cc:	28c7883a 	add	r3,r5,r3
   8d0d0:	38edc83a 	sub	r22,r7,r3
   8d0d4:	b000731e 	bne	r22,zero,8d2a4 <__udivdi3+0x360>
   8d0d8:	35400136 	bltu	r6,r21,8d0e0 <__udivdi3+0x19c>
   8d0dc:	e4c05b36 	bltu	fp,r19,8d24c <__udivdi3+0x308>
   8d0e0:	00800044 	movi	r2,1
   8d0e4:	0009883a 	mov	r4,zero
   8d0e8:	d8800315 	stw	r2,12(sp)
   8d0ec:	d9400317 	ldw	r5,12(sp)
   8d0f0:	2007883a 	mov	r3,r4
   8d0f4:	d9000415 	stw	r4,16(sp)
   8d0f8:	2805883a 	mov	r2,r5
   8d0fc:	dfc00e17 	ldw	ra,56(sp)
   8d100:	df000d17 	ldw	fp,52(sp)
   8d104:	ddc00c17 	ldw	r23,48(sp)
   8d108:	dd800b17 	ldw	r22,44(sp)
   8d10c:	dd400a17 	ldw	r21,40(sp)
   8d110:	dd000917 	ldw	r20,36(sp)
   8d114:	dcc00817 	ldw	r19,32(sp)
   8d118:	dc800717 	ldw	r18,28(sp)
   8d11c:	dc400617 	ldw	r17,24(sp)
   8d120:	dc000517 	ldw	r16,20(sp)
   8d124:	dec00f04 	addi	sp,sp,60
   8d128:	f800283a 	ret
   8d12c:	00bfffd4 	movui	r2,65535
   8d130:	12005636 	bltu	r2,r8,8d28c <__udivdi3+0x348>
   8d134:	00803fc4 	movi	r2,255
   8d138:	12010036 	bltu	r2,r8,8d53c <__udivdi3+0x5f8>
   8d13c:	000b883a 	mov	r5,zero
   8d140:	0005883a 	mov	r2,zero
   8d144:	9884d83a 	srl	r2,r19,r2
   8d148:	01000274 	movhi	r4,9
   8d14c:	210f1004 	addi	r4,r4,15424
   8d150:	01800804 	movi	r6,32
   8d154:	1105883a 	add	r2,r2,r4
   8d158:	10c00003 	ldbu	r3,0(r2)
   8d15c:	28c7883a 	add	r3,r5,r3
   8d160:	30cbc83a 	sub	r5,r6,r3
   8d164:	28000626 	beq	r5,zero,8d180 <__udivdi3+0x23c>
   8d168:	3145c83a 	sub	r2,r6,r5
   8d16c:	e084d83a 	srl	r2,fp,r2
   8d170:	a946983a 	sll	r3,r21,r5
   8d174:	e178983a 	sll	fp,fp,r5
   8d178:	9966983a 	sll	r19,r19,r5
   8d17c:	18aab03a 	or	r21,r3,r2
   8d180:	982ed43a 	srli	r23,r19,16
   8d184:	a809883a 	mov	r4,r21
   8d188:	9cbfffcc 	andi	r18,r19,65535
   8d18c:	b80b883a 	mov	r5,r23
   8d190:	008f0dc0 	call	8f0dc <__udivsi3>
   8d194:	100b883a 	mov	r5,r2
   8d198:	9009883a 	mov	r4,r18
   8d19c:	1021883a 	mov	r16,r2
   8d1a0:	00806240 	call	80624 <__mulsi3>
   8d1a4:	a809883a 	mov	r4,r21
   8d1a8:	b80b883a 	mov	r5,r23
   8d1ac:	1023883a 	mov	r17,r2
   8d1b0:	008f0e40 	call	8f0e4 <__umodsi3>
   8d1b4:	1004943a 	slli	r2,r2,16
   8d1b8:	e006d43a 	srli	r3,fp,16
   8d1bc:	10c4b03a 	or	r2,r2,r3
   8d1c0:	1440042e 	bgeu	r2,r17,8d1d4 <__udivdi3+0x290>
   8d1c4:	14c5883a 	add	r2,r2,r19
   8d1c8:	843fffc4 	addi	r16,r16,-1
   8d1cc:	14c00136 	bltu	r2,r19,8d1d4 <__udivdi3+0x290>
   8d1d0:	1440ea36 	bltu	r2,r17,8d57c <__udivdi3+0x638>
   8d1d4:	1463c83a 	sub	r17,r2,r17
   8d1d8:	8809883a 	mov	r4,r17
   8d1dc:	b80b883a 	mov	r5,r23
   8d1e0:	008f0dc0 	call	8f0dc <__udivsi3>
   8d1e4:	100b883a 	mov	r5,r2
   8d1e8:	9009883a 	mov	r4,r18
   8d1ec:	102b883a 	mov	r21,r2
   8d1f0:	00806240 	call	80624 <__mulsi3>
   8d1f4:	8809883a 	mov	r4,r17
   8d1f8:	b80b883a 	mov	r5,r23
   8d1fc:	1025883a 	mov	r18,r2
   8d200:	008f0e40 	call	8f0e4 <__umodsi3>
   8d204:	1004943a 	slli	r2,r2,16
   8d208:	e0ffffcc 	andi	r3,fp,65535
   8d20c:	10c4b03a 	or	r2,r2,r3
   8d210:	1480042e 	bgeu	r2,r18,8d224 <__udivdi3+0x2e0>
   8d214:	9885883a 	add	r2,r19,r2
   8d218:	ad7fffc4 	addi	r21,r21,-1
   8d21c:	14c00136 	bltu	r2,r19,8d224 <__udivdi3+0x2e0>
   8d220:	1480d936 	bltu	r2,r18,8d588 <__udivdi3+0x644>
   8d224:	8004943a 	slli	r2,r16,16
   8d228:	0009883a 	mov	r4,zero
   8d22c:	a884b03a 	or	r2,r21,r2
   8d230:	003fad06 	br	8d0e8 <__udivdi3+0x1a4>
   8d234:	00804034 	movhi	r2,256
   8d238:	10bfffc4 	addi	r2,r2,-1
   8d23c:	11c0b636 	bltu	r2,r7,8d518 <__udivdi3+0x5d4>
   8d240:	01400404 	movi	r5,16
   8d244:	2805883a 	mov	r2,r5
   8d248:	003f9a06 	br	8d0b4 <__udivdi3+0x170>
   8d24c:	0005883a 	mov	r2,zero
   8d250:	0009883a 	mov	r4,zero
   8d254:	003fa406 	br	8d0e8 <__udivdi3+0x1a4>
   8d258:	00804034 	movhi	r2,256
   8d25c:	10bfffc4 	addi	r2,r2,-1
   8d260:	14c0b336 	bltu	r2,r19,8d530 <__udivdi3+0x5ec>
   8d264:	01400404 	movi	r5,16
   8d268:	2805883a 	mov	r2,r5
   8d26c:	003f5106 	br	8cfb4 <__udivdi3+0x70>
   8d270:	01000044 	movi	r4,1
   8d274:	000b883a 	mov	r5,zero
   8d278:	008f0dc0 	call	8f0dc <__udivsi3>
   8d27c:	1027883a 	mov	r19,r2
   8d280:	00bfffd4 	movui	r2,65535
   8d284:	14fff436 	bltu	r2,r19,8d258 <__udivdi3+0x314>
   8d288:	003f4606 	br	8cfa4 <__udivdi3+0x60>
   8d28c:	00804034 	movhi	r2,256
   8d290:	10bfffc4 	addi	r2,r2,-1
   8d294:	1200ac36 	bltu	r2,r8,8d548 <__udivdi3+0x604>
   8d298:	01400404 	movi	r5,16
   8d29c:	2805883a 	mov	r2,r5
   8d2a0:	003fa806 	br	8d144 <__udivdi3+0x200>
   8d2a4:	3d85c83a 	sub	r2,r7,r22
   8d2a8:	3588983a 	sll	r4,r6,r22
   8d2ac:	9886d83a 	srl	r3,r19,r2
   8d2b0:	a8a2d83a 	srl	r17,r21,r2
   8d2b4:	e084d83a 	srl	r2,fp,r2
   8d2b8:	20eeb03a 	or	r23,r4,r3
   8d2bc:	b824d43a 	srli	r18,r23,16
   8d2c0:	ad86983a 	sll	r3,r21,r22
   8d2c4:	8809883a 	mov	r4,r17
   8d2c8:	900b883a 	mov	r5,r18
   8d2cc:	1886b03a 	or	r3,r3,r2
   8d2d0:	d8c00115 	stw	r3,4(sp)
   8d2d4:	bc3fffcc 	andi	r16,r23,65535
   8d2d8:	008f0dc0 	call	8f0dc <__udivsi3>
   8d2dc:	100b883a 	mov	r5,r2
   8d2e0:	8009883a 	mov	r4,r16
   8d2e4:	1029883a 	mov	r20,r2
   8d2e8:	00806240 	call	80624 <__mulsi3>
   8d2ec:	900b883a 	mov	r5,r18
   8d2f0:	8809883a 	mov	r4,r17
   8d2f4:	102b883a 	mov	r21,r2
   8d2f8:	008f0e40 	call	8f0e4 <__umodsi3>
   8d2fc:	d9400117 	ldw	r5,4(sp)
   8d300:	1004943a 	slli	r2,r2,16
   8d304:	9da6983a 	sll	r19,r19,r22
   8d308:	2806d43a 	srli	r3,r5,16
   8d30c:	10c4b03a 	or	r2,r2,r3
   8d310:	1540032e 	bgeu	r2,r21,8d320 <__udivdi3+0x3dc>
   8d314:	15c5883a 	add	r2,r2,r23
   8d318:	a53fffc4 	addi	r20,r20,-1
   8d31c:	15c0912e 	bgeu	r2,r23,8d564 <__udivdi3+0x620>
   8d320:	1563c83a 	sub	r17,r2,r21
   8d324:	8809883a 	mov	r4,r17
   8d328:	900b883a 	mov	r5,r18
   8d32c:	008f0dc0 	call	8f0dc <__udivsi3>
   8d330:	100b883a 	mov	r5,r2
   8d334:	8009883a 	mov	r4,r16
   8d338:	102b883a 	mov	r21,r2
   8d33c:	00806240 	call	80624 <__mulsi3>
   8d340:	8809883a 	mov	r4,r17
   8d344:	900b883a 	mov	r5,r18
   8d348:	1021883a 	mov	r16,r2
   8d34c:	008f0e40 	call	8f0e4 <__umodsi3>
   8d350:	da800117 	ldw	r10,4(sp)
   8d354:	1004943a 	slli	r2,r2,16
   8d358:	50ffffcc 	andi	r3,r10,65535
   8d35c:	10c6b03a 	or	r3,r2,r3
   8d360:	1c00032e 	bgeu	r3,r16,8d370 <__udivdi3+0x42c>
   8d364:	1dc7883a 	add	r3,r3,r23
   8d368:	ad7fffc4 	addi	r21,r21,-1
   8d36c:	1dc0792e 	bgeu	r3,r23,8d554 <__udivdi3+0x610>
   8d370:	a004943a 	slli	r2,r20,16
   8d374:	982ed43a 	srli	r23,r19,16
   8d378:	9cffffcc 	andi	r19,r19,65535
   8d37c:	a8a4b03a 	or	r18,r21,r2
   8d380:	947fffcc 	andi	r17,r18,65535
   8d384:	902ad43a 	srli	r21,r18,16
   8d388:	8809883a 	mov	r4,r17
   8d38c:	980b883a 	mov	r5,r19
   8d390:	1c21c83a 	sub	r16,r3,r16
   8d394:	00806240 	call	80624 <__mulsi3>
   8d398:	8809883a 	mov	r4,r17
   8d39c:	b80b883a 	mov	r5,r23
   8d3a0:	1029883a 	mov	r20,r2
   8d3a4:	00806240 	call	80624 <__mulsi3>
   8d3a8:	980b883a 	mov	r5,r19
   8d3ac:	a809883a 	mov	r4,r21
   8d3b0:	1023883a 	mov	r17,r2
   8d3b4:	00806240 	call	80624 <__mulsi3>
   8d3b8:	a809883a 	mov	r4,r21
   8d3bc:	b80b883a 	mov	r5,r23
   8d3c0:	1027883a 	mov	r19,r2
   8d3c4:	00806240 	call	80624 <__mulsi3>
   8d3c8:	1009883a 	mov	r4,r2
   8d3cc:	a004d43a 	srli	r2,r20,16
   8d3d0:	8ce3883a 	add	r17,r17,r19
   8d3d4:	1447883a 	add	r3,r2,r17
   8d3d8:	1cc0022e 	bgeu	r3,r19,8d3e4 <__udivdi3+0x4a0>
   8d3dc:	00800074 	movhi	r2,1
   8d3e0:	2089883a 	add	r4,r4,r2
   8d3e4:	1804d43a 	srli	r2,r3,16
   8d3e8:	2085883a 	add	r2,r4,r2
   8d3ec:	80804436 	bltu	r16,r2,8d500 <__udivdi3+0x5bc>
   8d3f0:	80803e26 	beq	r16,r2,8d4ec <__udivdi3+0x5a8>
   8d3f4:	9005883a 	mov	r2,r18
   8d3f8:	0009883a 	mov	r4,zero
   8d3fc:	003f3a06 	br	8d0e8 <__udivdi3+0x1a4>
   8d400:	9d26983a 	sll	r19,r19,r20
   8d404:	3505c83a 	sub	r2,r6,r20
   8d408:	a8a2d83a 	srl	r17,r21,r2
   8d40c:	982ed43a 	srli	r23,r19,16
   8d410:	e084d83a 	srl	r2,fp,r2
   8d414:	ad06983a 	sll	r3,r21,r20
   8d418:	8809883a 	mov	r4,r17
   8d41c:	b80b883a 	mov	r5,r23
   8d420:	1886b03a 	or	r3,r3,r2
   8d424:	d8c00015 	stw	r3,0(sp)
   8d428:	9dbfffcc 	andi	r22,r19,65535
   8d42c:	008f0dc0 	call	8f0dc <__udivsi3>
   8d430:	100b883a 	mov	r5,r2
   8d434:	b009883a 	mov	r4,r22
   8d438:	d8800215 	stw	r2,8(sp)
   8d43c:	00806240 	call	80624 <__mulsi3>
   8d440:	8809883a 	mov	r4,r17
   8d444:	b80b883a 	mov	r5,r23
   8d448:	102b883a 	mov	r21,r2
   8d44c:	008f0e40 	call	8f0e4 <__umodsi3>
   8d450:	d9000017 	ldw	r4,0(sp)
   8d454:	1004943a 	slli	r2,r2,16
   8d458:	2006d43a 	srli	r3,r4,16
   8d45c:	10c4b03a 	or	r2,r2,r3
   8d460:	1540052e 	bgeu	r2,r21,8d478 <__udivdi3+0x534>
   8d464:	d9400217 	ldw	r5,8(sp)
   8d468:	14c5883a 	add	r2,r2,r19
   8d46c:	297fffc4 	addi	r5,r5,-1
   8d470:	d9400215 	stw	r5,8(sp)
   8d474:	14c0462e 	bgeu	r2,r19,8d590 <__udivdi3+0x64c>
   8d478:	1563c83a 	sub	r17,r2,r21
   8d47c:	8809883a 	mov	r4,r17
   8d480:	b80b883a 	mov	r5,r23
   8d484:	008f0dc0 	call	8f0dc <__udivsi3>
   8d488:	100b883a 	mov	r5,r2
   8d48c:	b009883a 	mov	r4,r22
   8d490:	1025883a 	mov	r18,r2
   8d494:	00806240 	call	80624 <__mulsi3>
   8d498:	8809883a 	mov	r4,r17
   8d49c:	b80b883a 	mov	r5,r23
   8d4a0:	1021883a 	mov	r16,r2
   8d4a4:	008f0e40 	call	8f0e4 <__umodsi3>
   8d4a8:	da800017 	ldw	r10,0(sp)
   8d4ac:	1004943a 	slli	r2,r2,16
   8d4b0:	50ffffcc 	andi	r3,r10,65535
   8d4b4:	10c6b03a 	or	r3,r2,r3
   8d4b8:	1c00062e 	bgeu	r3,r16,8d4d4 <__udivdi3+0x590>
   8d4bc:	1cc7883a 	add	r3,r3,r19
   8d4c0:	94bfffc4 	addi	r18,r18,-1
   8d4c4:	1cc00336 	bltu	r3,r19,8d4d4 <__udivdi3+0x590>
   8d4c8:	1c00022e 	bgeu	r3,r16,8d4d4 <__udivdi3+0x590>
   8d4cc:	94bfffc4 	addi	r18,r18,-1
   8d4d0:	1cc7883a 	add	r3,r3,r19
   8d4d4:	d9000217 	ldw	r4,8(sp)
   8d4d8:	e538983a 	sll	fp,fp,r20
   8d4dc:	1c2bc83a 	sub	r21,r3,r16
   8d4e0:	2004943a 	slli	r2,r4,16
   8d4e4:	90a8b03a 	or	r20,r18,r2
   8d4e8:	003ebf06 	br	8cfe8 <__udivdi3+0xa4>
   8d4ec:	1804943a 	slli	r2,r3,16
   8d4f0:	e588983a 	sll	r4,fp,r22
   8d4f4:	a0ffffcc 	andi	r3,r20,65535
   8d4f8:	10c5883a 	add	r2,r2,r3
   8d4fc:	20bfbd2e 	bgeu	r4,r2,8d3f4 <__udivdi3+0x4b0>
   8d500:	90bfffc4 	addi	r2,r18,-1
   8d504:	0009883a 	mov	r4,zero
   8d508:	003ef706 	br	8d0e8 <__udivdi3+0x1a4>
   8d50c:	01400204 	movi	r5,8
   8d510:	2805883a 	mov	r2,r5
   8d514:	003ee706 	br	8d0b4 <__udivdi3+0x170>
   8d518:	01400604 	movi	r5,24
   8d51c:	2805883a 	mov	r2,r5
   8d520:	003ee406 	br	8d0b4 <__udivdi3+0x170>
   8d524:	01400204 	movi	r5,8
   8d528:	2805883a 	mov	r2,r5
   8d52c:	003ea106 	br	8cfb4 <__udivdi3+0x70>
   8d530:	01400604 	movi	r5,24
   8d534:	2805883a 	mov	r2,r5
   8d538:	003e9e06 	br	8cfb4 <__udivdi3+0x70>
   8d53c:	01400204 	movi	r5,8
   8d540:	2805883a 	mov	r2,r5
   8d544:	003eff06 	br	8d144 <__udivdi3+0x200>
   8d548:	01400604 	movi	r5,24
   8d54c:	2805883a 	mov	r2,r5
   8d550:	003efc06 	br	8d144 <__udivdi3+0x200>
   8d554:	1c3f862e 	bgeu	r3,r16,8d370 <__udivdi3+0x42c>
   8d558:	1dc7883a 	add	r3,r3,r23
   8d55c:	ad7fffc4 	addi	r21,r21,-1
   8d560:	003f8306 	br	8d370 <__udivdi3+0x42c>
   8d564:	157f6e2e 	bgeu	r2,r21,8d320 <__udivdi3+0x3dc>
   8d568:	a53fffc4 	addi	r20,r20,-1
   8d56c:	15c5883a 	add	r2,r2,r23
   8d570:	003f6b06 	br	8d320 <__udivdi3+0x3dc>
   8d574:	ad7fffc4 	addi	r21,r21,-1
   8d578:	003ec206 	br	8d084 <__udivdi3+0x140>
   8d57c:	843fffc4 	addi	r16,r16,-1
   8d580:	14c5883a 	add	r2,r2,r19
   8d584:	003f1306 	br	8d1d4 <__udivdi3+0x290>
   8d588:	ad7fffc4 	addi	r21,r21,-1
   8d58c:	003f2506 	br	8d224 <__udivdi3+0x2e0>
   8d590:	157fb92e 	bgeu	r2,r21,8d478 <__udivdi3+0x534>
   8d594:	297fffc4 	addi	r5,r5,-1
   8d598:	14c5883a 	add	r2,r2,r19
   8d59c:	d9400215 	stw	r5,8(sp)
   8d5a0:	003fb506 	br	8d478 <__udivdi3+0x534>
   8d5a4:	843fffc4 	addi	r16,r16,-1
   8d5a8:	14c5883a 	add	r2,r2,r19
   8d5ac:	003ea106 	br	8d034 <__udivdi3+0xf0>

0008d5b0 <__umoddi3>:
   8d5b0:	defff004 	addi	sp,sp,-64
   8d5b4:	3011883a 	mov	r8,r6
   8d5b8:	000d883a 	mov	r6,zero
   8d5bc:	dd400b15 	stw	r21,44(sp)
   8d5c0:	dcc00915 	stw	r19,36(sp)
   8d5c4:	dc000615 	stw	r16,24(sp)
   8d5c8:	dfc00f15 	stw	ra,60(sp)
   8d5cc:	df000e15 	stw	fp,56(sp)
   8d5d0:	ddc00d15 	stw	r23,52(sp)
   8d5d4:	dd800c15 	stw	r22,48(sp)
   8d5d8:	dd000a15 	stw	r20,40(sp)
   8d5dc:	dc800815 	stw	r18,32(sp)
   8d5e0:	dc400715 	stw	r17,28(sp)
   8d5e4:	2817883a 	mov	r11,r5
   8d5e8:	d9800415 	stw	r6,16(sp)
   8d5ec:	4027883a 	mov	r19,r8
   8d5f0:	d9800515 	stw	r6,20(sp)
   8d5f4:	2021883a 	mov	r16,r4
   8d5f8:	282b883a 	mov	r21,r5
   8d5fc:	38002c1e 	bne	r7,zero,8d6b0 <__umoddi3+0x100>
   8d600:	2a005636 	bltu	r5,r8,8d75c <__umoddi3+0x1ac>
   8d604:	40009a26 	beq	r8,zero,8d870 <__umoddi3+0x2c0>
   8d608:	00bfffd4 	movui	r2,65535
   8d60c:	14c09236 	bltu	r2,r19,8d858 <__umoddi3+0x2a8>
   8d610:	00803fc4 	movi	r2,255
   8d614:	14c15c36 	bltu	r2,r19,8db88 <__umoddi3+0x5d8>
   8d618:	000b883a 	mov	r5,zero
   8d61c:	0005883a 	mov	r2,zero
   8d620:	9884d83a 	srl	r2,r19,r2
   8d624:	01000274 	movhi	r4,9
   8d628:	210f1004 	addi	r4,r4,15424
   8d62c:	01800804 	movi	r6,32
   8d630:	1105883a 	add	r2,r2,r4
   8d634:	10c00003 	ldbu	r3,0(r2)
   8d638:	28c7883a 	add	r3,r5,r3
   8d63c:	30e5c83a 	sub	r18,r6,r3
   8d640:	9000a41e 	bne	r18,zero,8d8d4 <__umoddi3+0x324>
   8d644:	982ed43a 	srli	r23,r19,16
   8d648:	acebc83a 	sub	r21,r21,r19
   8d64c:	9d3fffcc 	andi	r20,r19,65535
   8d650:	002d883a 	mov	r22,zero
   8d654:	a809883a 	mov	r4,r21
   8d658:	b80b883a 	mov	r5,r23
   8d65c:	008f0dc0 	call	8f0dc <__udivsi3>
   8d660:	100b883a 	mov	r5,r2
   8d664:	a009883a 	mov	r4,r20
   8d668:	00806240 	call	80624 <__mulsi3>
   8d66c:	a809883a 	mov	r4,r21
   8d670:	b80b883a 	mov	r5,r23
   8d674:	1023883a 	mov	r17,r2
   8d678:	008f0e40 	call	8f0e4 <__umodsi3>
   8d67c:	1004943a 	slli	r2,r2,16
   8d680:	8006d43a 	srli	r3,r16,16
   8d684:	10c4b03a 	or	r2,r2,r3
   8d688:	1440032e 	bgeu	r2,r17,8d698 <__umoddi3+0xe8>
   8d68c:	14c5883a 	add	r2,r2,r19
   8d690:	14c00136 	bltu	r2,r19,8d698 <__umoddi3+0xe8>
   8d694:	14415836 	bltu	r2,r17,8dbf8 <__umoddi3+0x648>
   8d698:	1463c83a 	sub	r17,r2,r17
   8d69c:	8809883a 	mov	r4,r17
   8d6a0:	b80b883a 	mov	r5,r23
   8d6a4:	008f0dc0 	call	8f0dc <__udivsi3>
   8d6a8:	a009883a 	mov	r4,r20
   8d6ac:	00005306 	br	8d7fc <__umoddi3+0x24c>
   8d6b0:	380d883a 	mov	r6,r7
   8d6b4:	29c0132e 	bgeu	r5,r7,8d704 <__umoddi3+0x154>
   8d6b8:	d9000415 	stw	r4,16(sp)
   8d6bc:	d9400515 	stw	r5,20(sp)
   8d6c0:	d9400417 	ldw	r5,16(sp)
   8d6c4:	5813883a 	mov	r9,r11
   8d6c8:	2811883a 	mov	r8,r5
   8d6cc:	4005883a 	mov	r2,r8
   8d6d0:	4807883a 	mov	r3,r9
   8d6d4:	dfc00f17 	ldw	ra,60(sp)
   8d6d8:	df000e17 	ldw	fp,56(sp)
   8d6dc:	ddc00d17 	ldw	r23,52(sp)
   8d6e0:	dd800c17 	ldw	r22,48(sp)
   8d6e4:	dd400b17 	ldw	r21,44(sp)
   8d6e8:	dd000a17 	ldw	r20,40(sp)
   8d6ec:	dcc00917 	ldw	r19,36(sp)
   8d6f0:	dc800817 	ldw	r18,32(sp)
   8d6f4:	dc400717 	ldw	r17,28(sp)
   8d6f8:	dc000617 	ldw	r16,24(sp)
   8d6fc:	dec01004 	addi	sp,sp,64
   8d700:	f800283a 	ret
   8d704:	00bfffd4 	movui	r2,65535
   8d708:	11c06636 	bltu	r2,r7,8d8a4 <__umoddi3+0x2f4>
   8d70c:	00803fc4 	movi	r2,255
   8d710:	11c12036 	bltu	r2,r7,8db94 <__umoddi3+0x5e4>
   8d714:	000b883a 	mov	r5,zero
   8d718:	0005883a 	mov	r2,zero
   8d71c:	3084d83a 	srl	r2,r6,r2
   8d720:	01000274 	movhi	r4,9
   8d724:	210f1004 	addi	r4,r4,15424
   8d728:	01c00804 	movi	r7,32
   8d72c:	1105883a 	add	r2,r2,r4
   8d730:	10c00003 	ldbu	r3,0(r2)
   8d734:	28c7883a 	add	r3,r5,r3
   8d738:	38e5c83a 	sub	r18,r7,r3
   8d73c:	9000941e 	bne	r18,zero,8d990 <__umoddi3+0x3e0>
   8d740:	35405e36 	bltu	r6,r21,8d8bc <__umoddi3+0x30c>
   8d744:	84c05d2e 	bgeu	r16,r19,8d8bc <__umoddi3+0x30c>
   8d748:	8011883a 	mov	r8,r16
   8d74c:	a813883a 	mov	r9,r21
   8d750:	dc000415 	stw	r16,16(sp)
   8d754:	dd400515 	stw	r21,20(sp)
   8d758:	003fdc06 	br	8d6cc <__umoddi3+0x11c>
   8d75c:	00bfffd4 	movui	r2,65535
   8d760:	12004a36 	bltu	r2,r8,8d88c <__umoddi3+0x2dc>
   8d764:	00803fc4 	movi	r2,255
   8d768:	12010d36 	bltu	r2,r8,8dba0 <__umoddi3+0x5f0>
   8d76c:	000b883a 	mov	r5,zero
   8d770:	0005883a 	mov	r2,zero
   8d774:	9884d83a 	srl	r2,r19,r2
   8d778:	01000274 	movhi	r4,9
   8d77c:	210f1004 	addi	r4,r4,15424
   8d780:	01800804 	movi	r6,32
   8d784:	1105883a 	add	r2,r2,r4
   8d788:	10c00003 	ldbu	r3,0(r2)
   8d78c:	28c7883a 	add	r3,r5,r3
   8d790:	30c7c83a 	sub	r3,r6,r3
   8d794:	1800dc1e 	bne	r3,zero,8db08 <__umoddi3+0x558>
   8d798:	002d883a 	mov	r22,zero
   8d79c:	982ed43a 	srli	r23,r19,16
   8d7a0:	a809883a 	mov	r4,r21
   8d7a4:	9cbfffcc 	andi	r18,r19,65535
   8d7a8:	b80b883a 	mov	r5,r23
   8d7ac:	008f0dc0 	call	8f0dc <__udivsi3>
   8d7b0:	100b883a 	mov	r5,r2
   8d7b4:	9009883a 	mov	r4,r18
   8d7b8:	00806240 	call	80624 <__mulsi3>
   8d7bc:	a809883a 	mov	r4,r21
   8d7c0:	b80b883a 	mov	r5,r23
   8d7c4:	1023883a 	mov	r17,r2
   8d7c8:	008f0e40 	call	8f0e4 <__umodsi3>
   8d7cc:	1004943a 	slli	r2,r2,16
   8d7d0:	8006d43a 	srli	r3,r16,16
   8d7d4:	10c4b03a 	or	r2,r2,r3
   8d7d8:	1440032e 	bgeu	r2,r17,8d7e8 <__umoddi3+0x238>
   8d7dc:	14c5883a 	add	r2,r2,r19
   8d7e0:	14c00136 	bltu	r2,r19,8d7e8 <__umoddi3+0x238>
   8d7e4:	14410236 	bltu	r2,r17,8dbf0 <__umoddi3+0x640>
   8d7e8:	1463c83a 	sub	r17,r2,r17
   8d7ec:	8809883a 	mov	r4,r17
   8d7f0:	b80b883a 	mov	r5,r23
   8d7f4:	008f0dc0 	call	8f0dc <__udivsi3>
   8d7f8:	9009883a 	mov	r4,r18
   8d7fc:	100b883a 	mov	r5,r2
   8d800:	00806240 	call	80624 <__mulsi3>
   8d804:	8809883a 	mov	r4,r17
   8d808:	b80b883a 	mov	r5,r23
   8d80c:	102b883a 	mov	r21,r2
   8d810:	008f0e40 	call	8f0e4 <__umodsi3>
   8d814:	1004943a 	slli	r2,r2,16
   8d818:	80ffffcc 	andi	r3,r16,65535
   8d81c:	10c4b03a 	or	r2,r2,r3
   8d820:	1540042e 	bgeu	r2,r21,8d834 <__umoddi3+0x284>
   8d824:	14c5883a 	add	r2,r2,r19
   8d828:	14c00236 	bltu	r2,r19,8d834 <__umoddi3+0x284>
   8d82c:	1540012e 	bgeu	r2,r21,8d834 <__umoddi3+0x284>
   8d830:	14c5883a 	add	r2,r2,r19
   8d834:	1545c83a 	sub	r2,r2,r21
   8d838:	1584d83a 	srl	r2,r2,r22
   8d83c:	0013883a 	mov	r9,zero
   8d840:	d8800415 	stw	r2,16(sp)
   8d844:	d8c00417 	ldw	r3,16(sp)
   8d848:	0005883a 	mov	r2,zero
   8d84c:	d8800515 	stw	r2,20(sp)
   8d850:	1811883a 	mov	r8,r3
   8d854:	003f9d06 	br	8d6cc <__umoddi3+0x11c>
   8d858:	00804034 	movhi	r2,256
   8d85c:	10bfffc4 	addi	r2,r2,-1
   8d860:	14c0c636 	bltu	r2,r19,8db7c <__umoddi3+0x5cc>
   8d864:	01400404 	movi	r5,16
   8d868:	2805883a 	mov	r2,r5
   8d86c:	003f6c06 	br	8d620 <__umoddi3+0x70>
   8d870:	01000044 	movi	r4,1
   8d874:	000b883a 	mov	r5,zero
   8d878:	008f0dc0 	call	8f0dc <__udivsi3>
   8d87c:	1027883a 	mov	r19,r2
   8d880:	00bfffd4 	movui	r2,65535
   8d884:	14fff436 	bltu	r2,r19,8d858 <__umoddi3+0x2a8>
   8d888:	003f6106 	br	8d610 <__umoddi3+0x60>
   8d88c:	00804034 	movhi	r2,256
   8d890:	10bfffc4 	addi	r2,r2,-1
   8d894:	1200c536 	bltu	r2,r8,8dbac <__umoddi3+0x5fc>
   8d898:	01400404 	movi	r5,16
   8d89c:	2805883a 	mov	r2,r5
   8d8a0:	003fb406 	br	8d774 <__umoddi3+0x1c4>
   8d8a4:	00804034 	movhi	r2,256
   8d8a8:	10bfffc4 	addi	r2,r2,-1
   8d8ac:	11c0c236 	bltu	r2,r7,8dbb8 <__umoddi3+0x608>
   8d8b0:	01400404 	movi	r5,16
   8d8b4:	2805883a 	mov	r2,r5
   8d8b8:	003f9806 	br	8d71c <__umoddi3+0x16c>
   8d8bc:	84c9c83a 	sub	r4,r16,r19
   8d8c0:	8105803a 	cmpltu	r2,r16,r4
   8d8c4:	a987c83a 	sub	r3,r21,r6
   8d8c8:	18abc83a 	sub	r21,r3,r2
   8d8cc:	2021883a 	mov	r16,r4
   8d8d0:	003f9d06 	br	8d748 <__umoddi3+0x198>
   8d8d4:	9ca6983a 	sll	r19,r19,r18
   8d8d8:	3485c83a 	sub	r2,r6,r18
   8d8dc:	a8a2d83a 	srl	r17,r21,r2
   8d8e0:	982ed43a 	srli	r23,r19,16
   8d8e4:	ac86983a 	sll	r3,r21,r18
   8d8e8:	8084d83a 	srl	r2,r16,r2
   8d8ec:	8809883a 	mov	r4,r17
   8d8f0:	b80b883a 	mov	r5,r23
   8d8f4:	18b8b03a 	or	fp,r3,r2
   8d8f8:	9d3fffcc 	andi	r20,r19,65535
   8d8fc:	008f0dc0 	call	8f0dc <__udivsi3>
   8d900:	100b883a 	mov	r5,r2
   8d904:	a009883a 	mov	r4,r20
   8d908:	00806240 	call	80624 <__mulsi3>
   8d90c:	8809883a 	mov	r4,r17
   8d910:	b80b883a 	mov	r5,r23
   8d914:	102b883a 	mov	r21,r2
   8d918:	008f0e40 	call	8f0e4 <__umodsi3>
   8d91c:	1004943a 	slli	r2,r2,16
   8d920:	e006d43a 	srli	r3,fp,16
   8d924:	902d883a 	mov	r22,r18
   8d928:	10c4b03a 	or	r2,r2,r3
   8d92c:	1540022e 	bgeu	r2,r21,8d938 <__umoddi3+0x388>
   8d930:	14c5883a 	add	r2,r2,r19
   8d934:	14c0ab2e 	bgeu	r2,r19,8dbe4 <__umoddi3+0x634>
   8d938:	1563c83a 	sub	r17,r2,r21
   8d93c:	8809883a 	mov	r4,r17
   8d940:	b80b883a 	mov	r5,r23
   8d944:	008f0dc0 	call	8f0dc <__udivsi3>
   8d948:	100b883a 	mov	r5,r2
   8d94c:	a009883a 	mov	r4,r20
   8d950:	00806240 	call	80624 <__mulsi3>
   8d954:	8809883a 	mov	r4,r17
   8d958:	b80b883a 	mov	r5,r23
   8d95c:	102b883a 	mov	r21,r2
   8d960:	008f0e40 	call	8f0e4 <__umodsi3>
   8d964:	1004943a 	slli	r2,r2,16
   8d968:	e0ffffcc 	andi	r3,fp,65535
   8d96c:	10c4b03a 	or	r2,r2,r3
   8d970:	1540042e 	bgeu	r2,r21,8d984 <__umoddi3+0x3d4>
   8d974:	14c5883a 	add	r2,r2,r19
   8d978:	14c00236 	bltu	r2,r19,8d984 <__umoddi3+0x3d4>
   8d97c:	1540012e 	bgeu	r2,r21,8d984 <__umoddi3+0x3d4>
   8d980:	14c5883a 	add	r2,r2,r19
   8d984:	84a0983a 	sll	r16,r16,r18
   8d988:	156bc83a 	sub	r21,r2,r21
   8d98c:	003f3106 	br	8d654 <__umoddi3+0xa4>
   8d990:	3c8fc83a 	sub	r7,r7,r18
   8d994:	3486983a 	sll	r3,r6,r18
   8d998:	99c4d83a 	srl	r2,r19,r7
   8d99c:	a9e2d83a 	srl	r17,r21,r7
   8d9a0:	ac8c983a 	sll	r6,r21,r18
   8d9a4:	18acb03a 	or	r22,r3,r2
   8d9a8:	b02ed43a 	srli	r23,r22,16
   8d9ac:	81c4d83a 	srl	r2,r16,r7
   8d9b0:	8809883a 	mov	r4,r17
   8d9b4:	b80b883a 	mov	r5,r23
   8d9b8:	308cb03a 	or	r6,r6,r2
   8d9bc:	d9c00315 	stw	r7,12(sp)
   8d9c0:	d9800215 	stw	r6,8(sp)
   8d9c4:	b53fffcc 	andi	r20,r22,65535
   8d9c8:	008f0dc0 	call	8f0dc <__udivsi3>
   8d9cc:	100b883a 	mov	r5,r2
   8d9d0:	a009883a 	mov	r4,r20
   8d9d4:	1039883a 	mov	fp,r2
   8d9d8:	00806240 	call	80624 <__mulsi3>
   8d9dc:	8809883a 	mov	r4,r17
   8d9e0:	b80b883a 	mov	r5,r23
   8d9e4:	102b883a 	mov	r21,r2
   8d9e8:	008f0e40 	call	8f0e4 <__umodsi3>
   8d9ec:	d9000217 	ldw	r4,8(sp)
   8d9f0:	1004943a 	slli	r2,r2,16
   8d9f4:	9ca6983a 	sll	r19,r19,r18
   8d9f8:	2006d43a 	srli	r3,r4,16
   8d9fc:	84a0983a 	sll	r16,r16,r18
   8da00:	dcc00015 	stw	r19,0(sp)
   8da04:	10c4b03a 	or	r2,r2,r3
   8da08:	dc000115 	stw	r16,4(sp)
   8da0c:	1540032e 	bgeu	r2,r21,8da1c <__umoddi3+0x46c>
   8da10:	1585883a 	add	r2,r2,r22
   8da14:	e73fffc4 	addi	fp,fp,-1
   8da18:	15806e2e 	bgeu	r2,r22,8dbd4 <__umoddi3+0x624>
   8da1c:	1563c83a 	sub	r17,r2,r21
   8da20:	8809883a 	mov	r4,r17
   8da24:	b80b883a 	mov	r5,r23
   8da28:	008f0dc0 	call	8f0dc <__udivsi3>
   8da2c:	100b883a 	mov	r5,r2
   8da30:	a009883a 	mov	r4,r20
   8da34:	1021883a 	mov	r16,r2
   8da38:	00806240 	call	80624 <__mulsi3>
   8da3c:	b80b883a 	mov	r5,r23
   8da40:	8809883a 	mov	r4,r17
   8da44:	1029883a 	mov	r20,r2
   8da48:	008f0e40 	call	8f0e4 <__umodsi3>
   8da4c:	d9400217 	ldw	r5,8(sp)
   8da50:	1004943a 	slli	r2,r2,16
   8da54:	28ffffcc 	andi	r3,r5,65535
   8da58:	10c4b03a 	or	r2,r2,r3
   8da5c:	1500032e 	bgeu	r2,r20,8da6c <__umoddi3+0x4bc>
   8da60:	1585883a 	add	r2,r2,r22
   8da64:	843fffc4 	addi	r16,r16,-1
   8da68:	1580562e 	bgeu	r2,r22,8dbc4 <__umoddi3+0x614>
   8da6c:	d9800017 	ldw	r6,0(sp)
   8da70:	e022943a 	slli	r17,fp,16
   8da74:	302ed43a 	srli	r23,r6,16
   8da78:	8462b03a 	or	r17,r16,r17
   8da7c:	34ffffcc 	andi	r19,r6,65535
   8da80:	882ad43a 	srli	r21,r17,16
   8da84:	8c7fffcc 	andi	r17,r17,65535
   8da88:	8809883a 	mov	r4,r17
   8da8c:	980b883a 	mov	r5,r19
   8da90:	1521c83a 	sub	r16,r2,r20
   8da94:	00806240 	call	80624 <__mulsi3>
   8da98:	8809883a 	mov	r4,r17
   8da9c:	b80b883a 	mov	r5,r23
   8daa0:	1029883a 	mov	r20,r2
   8daa4:	00806240 	call	80624 <__mulsi3>
   8daa8:	980b883a 	mov	r5,r19
   8daac:	a809883a 	mov	r4,r21
   8dab0:	1023883a 	mov	r17,r2
   8dab4:	00806240 	call	80624 <__mulsi3>
   8dab8:	a809883a 	mov	r4,r21
   8dabc:	b80b883a 	mov	r5,r23
   8dac0:	1027883a 	mov	r19,r2
   8dac4:	00806240 	call	80624 <__mulsi3>
   8dac8:	100b883a 	mov	r5,r2
   8dacc:	a004d43a 	srli	r2,r20,16
   8dad0:	8ce3883a 	add	r17,r17,r19
   8dad4:	1449883a 	add	r4,r2,r17
   8dad8:	24c0022e 	bgeu	r4,r19,8dae4 <__umoddi3+0x534>
   8dadc:	00800074 	movhi	r2,1
   8dae0:	288b883a 	add	r5,r5,r2
   8dae4:	2004d43a 	srli	r2,r4,16
   8dae8:	2008943a 	slli	r4,r4,16
   8daec:	a0ffffcc 	andi	r3,r20,65535
   8daf0:	288d883a 	add	r6,r5,r2
   8daf4:	20c9883a 	add	r4,r4,r3
   8daf8:	81800b36 	bltu	r16,r6,8db28 <__umoddi3+0x578>
   8dafc:	81804026 	beq	r16,r6,8dc00 <__umoddi3+0x650>
   8db00:	818dc83a 	sub	r6,r16,r6
   8db04:	00000f06 	br	8db44 <__umoddi3+0x594>
   8db08:	30c5c83a 	sub	r2,r6,r3
   8db0c:	182d883a 	mov	r22,r3
   8db10:	8084d83a 	srl	r2,r16,r2
   8db14:	a8c6983a 	sll	r3,r21,r3
   8db18:	9da6983a 	sll	r19,r19,r22
   8db1c:	85a0983a 	sll	r16,r16,r22
   8db20:	18aab03a 	or	r21,r3,r2
   8db24:	003f1d06 	br	8d79c <__umoddi3+0x1ec>
   8db28:	d8c00017 	ldw	r3,0(sp)
   8db2c:	20c5c83a 	sub	r2,r4,r3
   8db30:	2089803a 	cmpltu	r4,r4,r2
   8db34:	3587c83a 	sub	r3,r6,r22
   8db38:	1907c83a 	sub	r3,r3,r4
   8db3c:	80cdc83a 	sub	r6,r16,r3
   8db40:	1009883a 	mov	r4,r2
   8db44:	d9400117 	ldw	r5,4(sp)
   8db48:	2905c83a 	sub	r2,r5,r4
   8db4c:	2887803a 	cmpltu	r3,r5,r2
   8db50:	30c7c83a 	sub	r3,r6,r3
   8db54:	d9800317 	ldw	r6,12(sp)
   8db58:	1484d83a 	srl	r2,r2,r18
   8db5c:	1988983a 	sll	r4,r3,r6
   8db60:	1c86d83a 	srl	r3,r3,r18
   8db64:	2088b03a 	or	r4,r4,r2
   8db68:	2011883a 	mov	r8,r4
   8db6c:	1813883a 	mov	r9,r3
   8db70:	d9000415 	stw	r4,16(sp)
   8db74:	d8c00515 	stw	r3,20(sp)
   8db78:	003ed406 	br	8d6cc <__umoddi3+0x11c>
   8db7c:	01400604 	movi	r5,24
   8db80:	2805883a 	mov	r2,r5
   8db84:	003ea606 	br	8d620 <__umoddi3+0x70>
   8db88:	01400204 	movi	r5,8
   8db8c:	2805883a 	mov	r2,r5
   8db90:	003ea306 	br	8d620 <__umoddi3+0x70>
   8db94:	01400204 	movi	r5,8
   8db98:	2805883a 	mov	r2,r5
   8db9c:	003edf06 	br	8d71c <__umoddi3+0x16c>
   8dba0:	01400204 	movi	r5,8
   8dba4:	2805883a 	mov	r2,r5
   8dba8:	003ef206 	br	8d774 <__umoddi3+0x1c4>
   8dbac:	01400604 	movi	r5,24
   8dbb0:	2805883a 	mov	r2,r5
   8dbb4:	003eef06 	br	8d774 <__umoddi3+0x1c4>
   8dbb8:	01400604 	movi	r5,24
   8dbbc:	2805883a 	mov	r2,r5
   8dbc0:	003ed606 	br	8d71c <__umoddi3+0x16c>
   8dbc4:	153fa92e 	bgeu	r2,r20,8da6c <__umoddi3+0x4bc>
   8dbc8:	843fffc4 	addi	r16,r16,-1
   8dbcc:	1585883a 	add	r2,r2,r22
   8dbd0:	003fa606 	br	8da6c <__umoddi3+0x4bc>
   8dbd4:	157f912e 	bgeu	r2,r21,8da1c <__umoddi3+0x46c>
   8dbd8:	e73fffc4 	addi	fp,fp,-1
   8dbdc:	1585883a 	add	r2,r2,r22
   8dbe0:	003f8e06 	br	8da1c <__umoddi3+0x46c>
   8dbe4:	157f542e 	bgeu	r2,r21,8d938 <__umoddi3+0x388>
   8dbe8:	14c5883a 	add	r2,r2,r19
   8dbec:	003f5206 	br	8d938 <__umoddi3+0x388>
   8dbf0:	14c5883a 	add	r2,r2,r19
   8dbf4:	003efc06 	br	8d7e8 <__umoddi3+0x238>
   8dbf8:	14c5883a 	add	r2,r2,r19
   8dbfc:	003ea606 	br	8d698 <__umoddi3+0xe8>
   8dc00:	d8800117 	ldw	r2,4(sp)
   8dc04:	113fc836 	bltu	r2,r4,8db28 <__umoddi3+0x578>
   8dc08:	000d883a 	mov	r6,zero
   8dc0c:	003fcd06 	br	8db44 <__umoddi3+0x594>

0008dc10 <__nesf2>:
   8dc10:	defff304 	addi	sp,sp,-52
   8dc14:	dc400b15 	stw	r17,44(sp)
   8dc18:	dc400204 	addi	r17,sp,8
   8dc1c:	dc000a15 	stw	r16,40(sp)
   8dc20:	d9000015 	stw	r4,0(sp)
   8dc24:	d9400115 	stw	r5,4(sp)
   8dc28:	d809883a 	mov	r4,sp
   8dc2c:	880b883a 	mov	r5,r17
   8dc30:	dc000604 	addi	r16,sp,24
   8dc34:	dfc00c15 	stw	ra,48(sp)
   8dc38:	008f16c0 	call	8f16c <__unpack_f>
   8dc3c:	d9000104 	addi	r4,sp,4
   8dc40:	800b883a 	mov	r5,r16
   8dc44:	008f16c0 	call	8f16c <__unpack_f>
   8dc48:	d8800217 	ldw	r2,8(sp)
   8dc4c:	00c00044 	movi	r3,1
   8dc50:	180d883a 	mov	r6,r3
   8dc54:	1880062e 	bgeu	r3,r2,8dc70 <__nesf2+0x60>
   8dc58:	d8800617 	ldw	r2,24(sp)
   8dc5c:	8809883a 	mov	r4,r17
   8dc60:	800b883a 	mov	r5,r16
   8dc64:	1880022e 	bgeu	r3,r2,8dc70 <__nesf2+0x60>
   8dc68:	008f2340 	call	8f234 <__fpcmp_parts_f>
   8dc6c:	100d883a 	mov	r6,r2
   8dc70:	3005883a 	mov	r2,r6
   8dc74:	dfc00c17 	ldw	ra,48(sp)
   8dc78:	dc400b17 	ldw	r17,44(sp)
   8dc7c:	dc000a17 	ldw	r16,40(sp)
   8dc80:	dec00d04 	addi	sp,sp,52
   8dc84:	f800283a 	ret

0008dc88 <__gtsf2>:
   8dc88:	defff304 	addi	sp,sp,-52
   8dc8c:	dc400b15 	stw	r17,44(sp)
   8dc90:	dc400204 	addi	r17,sp,8
   8dc94:	dc000a15 	stw	r16,40(sp)
   8dc98:	d9000015 	stw	r4,0(sp)
   8dc9c:	d9400115 	stw	r5,4(sp)
   8dca0:	d809883a 	mov	r4,sp
   8dca4:	880b883a 	mov	r5,r17
   8dca8:	dc000604 	addi	r16,sp,24
   8dcac:	dfc00c15 	stw	ra,48(sp)
   8dcb0:	008f16c0 	call	8f16c <__unpack_f>
   8dcb4:	d9000104 	addi	r4,sp,4
   8dcb8:	800b883a 	mov	r5,r16
   8dcbc:	008f16c0 	call	8f16c <__unpack_f>
   8dcc0:	d8800217 	ldw	r2,8(sp)
   8dcc4:	00c00044 	movi	r3,1
   8dcc8:	01bfffc4 	movi	r6,-1
   8dccc:	1880062e 	bgeu	r3,r2,8dce8 <__gtsf2+0x60>
   8dcd0:	d8800617 	ldw	r2,24(sp)
   8dcd4:	8809883a 	mov	r4,r17
   8dcd8:	800b883a 	mov	r5,r16
   8dcdc:	1880022e 	bgeu	r3,r2,8dce8 <__gtsf2+0x60>
   8dce0:	008f2340 	call	8f234 <__fpcmp_parts_f>
   8dce4:	100d883a 	mov	r6,r2
   8dce8:	3005883a 	mov	r2,r6
   8dcec:	dfc00c17 	ldw	ra,48(sp)
   8dcf0:	dc400b17 	ldw	r17,44(sp)
   8dcf4:	dc000a17 	ldw	r16,40(sp)
   8dcf8:	dec00d04 	addi	sp,sp,52
   8dcfc:	f800283a 	ret

0008dd00 <__ltsf2>:
   8dd00:	defff304 	addi	sp,sp,-52
   8dd04:	dc400b15 	stw	r17,44(sp)
   8dd08:	dc400204 	addi	r17,sp,8
   8dd0c:	dc000a15 	stw	r16,40(sp)
   8dd10:	d9000015 	stw	r4,0(sp)
   8dd14:	d9400115 	stw	r5,4(sp)
   8dd18:	d809883a 	mov	r4,sp
   8dd1c:	880b883a 	mov	r5,r17
   8dd20:	dc000604 	addi	r16,sp,24
   8dd24:	dfc00c15 	stw	ra,48(sp)
   8dd28:	008f16c0 	call	8f16c <__unpack_f>
   8dd2c:	d9000104 	addi	r4,sp,4
   8dd30:	800b883a 	mov	r5,r16
   8dd34:	008f16c0 	call	8f16c <__unpack_f>
   8dd38:	d8800217 	ldw	r2,8(sp)
   8dd3c:	00c00044 	movi	r3,1
   8dd40:	180d883a 	mov	r6,r3
   8dd44:	1880062e 	bgeu	r3,r2,8dd60 <__ltsf2+0x60>
   8dd48:	d8800617 	ldw	r2,24(sp)
   8dd4c:	8809883a 	mov	r4,r17
   8dd50:	800b883a 	mov	r5,r16
   8dd54:	1880022e 	bgeu	r3,r2,8dd60 <__ltsf2+0x60>
   8dd58:	008f2340 	call	8f234 <__fpcmp_parts_f>
   8dd5c:	100d883a 	mov	r6,r2
   8dd60:	3005883a 	mov	r2,r6
   8dd64:	dfc00c17 	ldw	ra,48(sp)
   8dd68:	dc400b17 	ldw	r17,44(sp)
   8dd6c:	dc000a17 	ldw	r16,40(sp)
   8dd70:	dec00d04 	addi	sp,sp,52
   8dd74:	f800283a 	ret

0008dd78 <_fpadd_parts>:
   8dd78:	defff804 	addi	sp,sp,-32
   8dd7c:	dcc00315 	stw	r19,12(sp)
   8dd80:	2027883a 	mov	r19,r4
   8dd84:	21000017 	ldw	r4,0(r4)
   8dd88:	00c00044 	movi	r3,1
   8dd8c:	dd400515 	stw	r21,20(sp)
   8dd90:	dd000415 	stw	r20,16(sp)
   8dd94:	ddc00715 	stw	r23,28(sp)
   8dd98:	dd800615 	stw	r22,24(sp)
   8dd9c:	dc800215 	stw	r18,8(sp)
   8dda0:	dc400115 	stw	r17,4(sp)
   8dda4:	dc000015 	stw	r16,0(sp)
   8dda8:	282b883a 	mov	r21,r5
   8ddac:	3029883a 	mov	r20,r6
   8ddb0:	1900632e 	bgeu	r3,r4,8df40 <_fpadd_parts+0x1c8>
   8ddb4:	28800017 	ldw	r2,0(r5)
   8ddb8:	1880812e 	bgeu	r3,r2,8dfc0 <_fpadd_parts+0x248>
   8ddbc:	00c00104 	movi	r3,4
   8ddc0:	20c0dc26 	beq	r4,r3,8e134 <_fpadd_parts+0x3bc>
   8ddc4:	10c07e26 	beq	r2,r3,8dfc0 <_fpadd_parts+0x248>
   8ddc8:	00c00084 	movi	r3,2
   8ddcc:	10c06726 	beq	r2,r3,8df6c <_fpadd_parts+0x1f4>
   8ddd0:	20c07b26 	beq	r4,r3,8dfc0 <_fpadd_parts+0x248>
   8ddd4:	9dc00217 	ldw	r23,8(r19)
   8ddd8:	28c00217 	ldw	r3,8(r5)
   8dddc:	9c400317 	ldw	r17,12(r19)
   8dde0:	2bc00317 	ldw	r15,12(r5)
   8dde4:	b8cdc83a 	sub	r6,r23,r3
   8dde8:	9c800417 	ldw	r18,16(r19)
   8ddec:	2c000417 	ldw	r16,16(r5)
   8ddf0:	3009883a 	mov	r4,r6
   8ddf4:	30009716 	blt	r6,zero,8e054 <_fpadd_parts+0x2dc>
   8ddf8:	00800fc4 	movi	r2,63
   8ddfc:	11806b16 	blt	r2,r6,8dfac <_fpadd_parts+0x234>
   8de00:	0100a40e 	bge	zero,r4,8e094 <_fpadd_parts+0x31c>
   8de04:	35bff804 	addi	r22,r6,-32
   8de08:	b000bc16 	blt	r22,zero,8e0fc <_fpadd_parts+0x384>
   8de0c:	8596d83a 	srl	r11,r16,r22
   8de10:	0019883a 	mov	r12,zero
   8de14:	0013883a 	mov	r9,zero
   8de18:	01000044 	movi	r4,1
   8de1c:	0015883a 	mov	r10,zero
   8de20:	b000be16 	blt	r22,zero,8e11c <_fpadd_parts+0x3a4>
   8de24:	2590983a 	sll	r8,r4,r22
   8de28:	000f883a 	mov	r7,zero
   8de2c:	00bfffc4 	movi	r2,-1
   8de30:	3889883a 	add	r4,r7,r2
   8de34:	408b883a 	add	r5,r8,r2
   8de38:	21cd803a 	cmpltu	r6,r4,r7
   8de3c:	314b883a 	add	r5,r6,r5
   8de40:	7904703a 	and	r2,r15,r4
   8de44:	8146703a 	and	r3,r16,r5
   8de48:	10c4b03a 	or	r2,r2,r3
   8de4c:	10000226 	beq	r2,zero,8de58 <_fpadd_parts+0xe0>
   8de50:	02400044 	movi	r9,1
   8de54:	0015883a 	mov	r10,zero
   8de58:	5a5eb03a 	or	r15,r11,r9
   8de5c:	62a0b03a 	or	r16,r12,r10
   8de60:	99400117 	ldw	r5,4(r19)
   8de64:	a8800117 	ldw	r2,4(r21)
   8de68:	28806e26 	beq	r5,r2,8e024 <_fpadd_parts+0x2ac>
   8de6c:	28006626 	beq	r5,zero,8e008 <_fpadd_parts+0x290>
   8de70:	7c45c83a 	sub	r2,r15,r17
   8de74:	7889803a 	cmpltu	r4,r15,r2
   8de78:	8487c83a 	sub	r3,r16,r18
   8de7c:	1909c83a 	sub	r4,r3,r4
   8de80:	100d883a 	mov	r6,r2
   8de84:	200f883a 	mov	r7,r4
   8de88:	38007716 	blt	r7,zero,8e068 <_fpadd_parts+0x2f0>
   8de8c:	a5c00215 	stw	r23,8(r20)
   8de90:	a1c00415 	stw	r7,16(r20)
   8de94:	a0000115 	stw	zero,4(r20)
   8de98:	a1800315 	stw	r6,12(r20)
   8de9c:	a2000317 	ldw	r8,12(r20)
   8dea0:	a2400417 	ldw	r9,16(r20)
   8dea4:	00bfffc4 	movi	r2,-1
   8dea8:	408b883a 	add	r5,r8,r2
   8deac:	2a09803a 	cmpltu	r4,r5,r8
   8deb0:	488d883a 	add	r6,r9,r2
   8deb4:	01c40034 	movhi	r7,4096
   8deb8:	39ffffc4 	addi	r7,r7,-1
   8debc:	218d883a 	add	r6,r4,r6
   8dec0:	39801736 	bltu	r7,r6,8df20 <_fpadd_parts+0x1a8>
   8dec4:	31c06526 	beq	r6,r7,8e05c <_fpadd_parts+0x2e4>
   8dec8:	a3000217 	ldw	r12,8(r20)
   8decc:	4209883a 	add	r4,r8,r8
   8ded0:	00bfffc4 	movi	r2,-1
   8ded4:	220f803a 	cmpltu	r7,r4,r8
   8ded8:	4a4b883a 	add	r5,r9,r9
   8dedc:	394f883a 	add	r7,r7,r5
   8dee0:	2095883a 	add	r10,r4,r2
   8dee4:	3897883a 	add	r11,r7,r2
   8dee8:	510d803a 	cmpltu	r6,r10,r4
   8deec:	6099883a 	add	r12,r12,r2
   8def0:	32d7883a 	add	r11,r6,r11
   8def4:	00840034 	movhi	r2,4096
   8def8:	10bfffc4 	addi	r2,r2,-1
   8defc:	2011883a 	mov	r8,r4
   8df00:	3813883a 	mov	r9,r7
   8df04:	a1000315 	stw	r4,12(r20)
   8df08:	a1c00415 	stw	r7,16(r20)
   8df0c:	a3000215 	stw	r12,8(r20)
   8df10:	12c00336 	bltu	r2,r11,8df20 <_fpadd_parts+0x1a8>
   8df14:	58bfed1e 	bne	r11,r2,8decc <_fpadd_parts+0x154>
   8df18:	00bfff84 	movi	r2,-2
   8df1c:	12bfeb2e 	bgeu	r2,r10,8decc <_fpadd_parts+0x154>
   8df20:	a2800417 	ldw	r10,16(r20)
   8df24:	008000c4 	movi	r2,3
   8df28:	00c80034 	movhi	r3,8192
   8df2c:	18ffffc4 	addi	r3,r3,-1
   8df30:	a2400317 	ldw	r9,12(r20)
   8df34:	a0800015 	stw	r2,0(r20)
   8df38:	1a802336 	bltu	r3,r10,8dfc8 <_fpadd_parts+0x250>
   8df3c:	a027883a 	mov	r19,r20
   8df40:	9805883a 	mov	r2,r19
   8df44:	ddc00717 	ldw	r23,28(sp)
   8df48:	dd800617 	ldw	r22,24(sp)
   8df4c:	dd400517 	ldw	r21,20(sp)
   8df50:	dd000417 	ldw	r20,16(sp)
   8df54:	dcc00317 	ldw	r19,12(sp)
   8df58:	dc800217 	ldw	r18,8(sp)
   8df5c:	dc400117 	ldw	r17,4(sp)
   8df60:	dc000017 	ldw	r16,0(sp)
   8df64:	dec00804 	addi	sp,sp,32
   8df68:	f800283a 	ret
   8df6c:	20fff41e 	bne	r4,r3,8df40 <_fpadd_parts+0x1c8>
   8df70:	31000015 	stw	r4,0(r6)
   8df74:	98800117 	ldw	r2,4(r19)
   8df78:	30800115 	stw	r2,4(r6)
   8df7c:	98c00217 	ldw	r3,8(r19)
   8df80:	30c00215 	stw	r3,8(r6)
   8df84:	98800317 	ldw	r2,12(r19)
   8df88:	30800315 	stw	r2,12(r6)
   8df8c:	98c00417 	ldw	r3,16(r19)
   8df90:	30c00415 	stw	r3,16(r6)
   8df94:	98800117 	ldw	r2,4(r19)
   8df98:	28c00117 	ldw	r3,4(r5)
   8df9c:	3027883a 	mov	r19,r6
   8dfa0:	10c4703a 	and	r2,r2,r3
   8dfa4:	30800115 	stw	r2,4(r6)
   8dfa8:	003fe506 	br	8df40 <_fpadd_parts+0x1c8>
   8dfac:	1dc02616 	blt	r3,r23,8e048 <_fpadd_parts+0x2d0>
   8dfb0:	0023883a 	mov	r17,zero
   8dfb4:	182f883a 	mov	r23,r3
   8dfb8:	0025883a 	mov	r18,zero
   8dfbc:	003fa806 	br	8de60 <_fpadd_parts+0xe8>
   8dfc0:	a827883a 	mov	r19,r21
   8dfc4:	003fde06 	br	8df40 <_fpadd_parts+0x1c8>
   8dfc8:	01800044 	movi	r6,1
   8dfcc:	500497fa 	slli	r2,r10,31
   8dfd0:	4808d07a 	srli	r4,r9,1
   8dfd4:	518ad83a 	srl	r5,r10,r6
   8dfd8:	a2000217 	ldw	r8,8(r20)
   8dfdc:	1108b03a 	or	r4,r2,r4
   8dfe0:	0007883a 	mov	r3,zero
   8dfe4:	4984703a 	and	r2,r9,r6
   8dfe8:	208cb03a 	or	r6,r4,r2
   8dfec:	28ceb03a 	or	r7,r5,r3
   8dff0:	42000044 	addi	r8,r8,1
   8dff4:	a027883a 	mov	r19,r20
   8dff8:	a1c00415 	stw	r7,16(r20)
   8dffc:	a2000215 	stw	r8,8(r20)
   8e000:	a1800315 	stw	r6,12(r20)
   8e004:	003fce06 	br	8df40 <_fpadd_parts+0x1c8>
   8e008:	8bc5c83a 	sub	r2,r17,r15
   8e00c:	8889803a 	cmpltu	r4,r17,r2
   8e010:	9407c83a 	sub	r3,r18,r16
   8e014:	1909c83a 	sub	r4,r3,r4
   8e018:	100d883a 	mov	r6,r2
   8e01c:	200f883a 	mov	r7,r4
   8e020:	003f9906 	br	8de88 <_fpadd_parts+0x110>
   8e024:	7c45883a 	add	r2,r15,r17
   8e028:	13c9803a 	cmpltu	r4,r2,r15
   8e02c:	8487883a 	add	r3,r16,r18
   8e030:	20c9883a 	add	r4,r4,r3
   8e034:	a1400115 	stw	r5,4(r20)
   8e038:	a5c00215 	stw	r23,8(r20)
   8e03c:	a0800315 	stw	r2,12(r20)
   8e040:	a1000415 	stw	r4,16(r20)
   8e044:	003fb606 	br	8df20 <_fpadd_parts+0x1a8>
   8e048:	001f883a 	mov	r15,zero
   8e04c:	0021883a 	mov	r16,zero
   8e050:	003f8306 	br	8de60 <_fpadd_parts+0xe8>
   8e054:	018dc83a 	sub	r6,zero,r6
   8e058:	003f6706 	br	8ddf8 <_fpadd_parts+0x80>
   8e05c:	00bfff84 	movi	r2,-2
   8e060:	117faf36 	bltu	r2,r5,8df20 <_fpadd_parts+0x1a8>
   8e064:	003f9806 	br	8dec8 <_fpadd_parts+0x150>
   8e068:	0005883a 	mov	r2,zero
   8e06c:	1189c83a 	sub	r4,r2,r6
   8e070:	1105803a 	cmpltu	r2,r2,r4
   8e074:	01cbc83a 	sub	r5,zero,r7
   8e078:	2885c83a 	sub	r2,r5,r2
   8e07c:	01800044 	movi	r6,1
   8e080:	a1800115 	stw	r6,4(r20)
   8e084:	a5c00215 	stw	r23,8(r20)
   8e088:	a1000315 	stw	r4,12(r20)
   8e08c:	a0800415 	stw	r2,16(r20)
   8e090:	003f8206 	br	8de9c <_fpadd_parts+0x124>
   8e094:	203f7226 	beq	r4,zero,8de60 <_fpadd_parts+0xe8>
   8e098:	35bff804 	addi	r22,r6,-32
   8e09c:	b9af883a 	add	r23,r23,r6
   8e0a0:	b0003116 	blt	r22,zero,8e168 <_fpadd_parts+0x3f0>
   8e0a4:	959ad83a 	srl	r13,r18,r22
   8e0a8:	001d883a 	mov	r14,zero
   8e0ac:	000f883a 	mov	r7,zero
   8e0b0:	01000044 	movi	r4,1
   8e0b4:	0011883a 	mov	r8,zero
   8e0b8:	b0002516 	blt	r22,zero,8e150 <_fpadd_parts+0x3d8>
   8e0bc:	2594983a 	sll	r10,r4,r22
   8e0c0:	0013883a 	mov	r9,zero
   8e0c4:	00bfffc4 	movi	r2,-1
   8e0c8:	4889883a 	add	r4,r9,r2
   8e0cc:	508b883a 	add	r5,r10,r2
   8e0d0:	224d803a 	cmpltu	r6,r4,r9
   8e0d4:	314b883a 	add	r5,r6,r5
   8e0d8:	8904703a 	and	r2,r17,r4
   8e0dc:	9146703a 	and	r3,r18,r5
   8e0e0:	10c4b03a 	or	r2,r2,r3
   8e0e4:	10000226 	beq	r2,zero,8e0f0 <_fpadd_parts+0x378>
   8e0e8:	01c00044 	movi	r7,1
   8e0ec:	0011883a 	mov	r8,zero
   8e0f0:	69e2b03a 	or	r17,r13,r7
   8e0f4:	7224b03a 	or	r18,r14,r8
   8e0f8:	003f5906 	br	8de60 <_fpadd_parts+0xe8>
   8e0fc:	8407883a 	add	r3,r16,r16
   8e100:	008007c4 	movi	r2,31
   8e104:	1185c83a 	sub	r2,r2,r6
   8e108:	1886983a 	sll	r3,r3,r2
   8e10c:	7996d83a 	srl	r11,r15,r6
   8e110:	8198d83a 	srl	r12,r16,r6
   8e114:	1ad6b03a 	or	r11,r3,r11
   8e118:	003f3e06 	br	8de14 <_fpadd_parts+0x9c>
   8e11c:	2006d07a 	srli	r3,r4,1
   8e120:	008007c4 	movi	r2,31
   8e124:	1185c83a 	sub	r2,r2,r6
   8e128:	1890d83a 	srl	r8,r3,r2
   8e12c:	218e983a 	sll	r7,r4,r6
   8e130:	003f3e06 	br	8de2c <_fpadd_parts+0xb4>
   8e134:	113f821e 	bne	r2,r4,8df40 <_fpadd_parts+0x1c8>
   8e138:	28c00117 	ldw	r3,4(r5)
   8e13c:	98800117 	ldw	r2,4(r19)
   8e140:	10ff7f26 	beq	r2,r3,8df40 <_fpadd_parts+0x1c8>
   8e144:	04c00274 	movhi	r19,9
   8e148:	9ccf0b04 	addi	r19,r19,15404
   8e14c:	003f7c06 	br	8df40 <_fpadd_parts+0x1c8>
   8e150:	2006d07a 	srli	r3,r4,1
   8e154:	008007c4 	movi	r2,31
   8e158:	1185c83a 	sub	r2,r2,r6
   8e15c:	1894d83a 	srl	r10,r3,r2
   8e160:	2192983a 	sll	r9,r4,r6
   8e164:	003fd706 	br	8e0c4 <_fpadd_parts+0x34c>
   8e168:	9487883a 	add	r3,r18,r18
   8e16c:	008007c4 	movi	r2,31
   8e170:	1185c83a 	sub	r2,r2,r6
   8e174:	1886983a 	sll	r3,r3,r2
   8e178:	899ad83a 	srl	r13,r17,r6
   8e17c:	919cd83a 	srl	r14,r18,r6
   8e180:	1b5ab03a 	or	r13,r3,r13
   8e184:	003fc906 	br	8e0ac <_fpadd_parts+0x334>

0008e188 <__subdf3>:
   8e188:	deffea04 	addi	sp,sp,-88
   8e18c:	dcc01415 	stw	r19,80(sp)
   8e190:	dcc00404 	addi	r19,sp,16
   8e194:	2011883a 	mov	r8,r4
   8e198:	2813883a 	mov	r9,r5
   8e19c:	dc401315 	stw	r17,76(sp)
   8e1a0:	d809883a 	mov	r4,sp
   8e1a4:	980b883a 	mov	r5,r19
   8e1a8:	dc400904 	addi	r17,sp,36
   8e1ac:	dfc01515 	stw	ra,84(sp)
   8e1b0:	da400115 	stw	r9,4(sp)
   8e1b4:	d9c00315 	stw	r7,12(sp)
   8e1b8:	da000015 	stw	r8,0(sp)
   8e1bc:	d9800215 	stw	r6,8(sp)
   8e1c0:	008f61c0 	call	8f61c <__unpack_d>
   8e1c4:	d9000204 	addi	r4,sp,8
   8e1c8:	880b883a 	mov	r5,r17
   8e1cc:	008f61c0 	call	8f61c <__unpack_d>
   8e1d0:	d8800a17 	ldw	r2,40(sp)
   8e1d4:	880b883a 	mov	r5,r17
   8e1d8:	9809883a 	mov	r4,r19
   8e1dc:	d9800e04 	addi	r6,sp,56
   8e1e0:	1080005c 	xori	r2,r2,1
   8e1e4:	d8800a15 	stw	r2,40(sp)
   8e1e8:	008dd780 	call	8dd78 <_fpadd_parts>
   8e1ec:	1009883a 	mov	r4,r2
   8e1f0:	008f3080 	call	8f308 <__pack_d>
   8e1f4:	dfc01517 	ldw	ra,84(sp)
   8e1f8:	dcc01417 	ldw	r19,80(sp)
   8e1fc:	dc401317 	ldw	r17,76(sp)
   8e200:	dec01604 	addi	sp,sp,88
   8e204:	f800283a 	ret

0008e208 <__adddf3>:
   8e208:	deffea04 	addi	sp,sp,-88
   8e20c:	dcc01415 	stw	r19,80(sp)
   8e210:	dcc00404 	addi	r19,sp,16
   8e214:	2011883a 	mov	r8,r4
   8e218:	2813883a 	mov	r9,r5
   8e21c:	dc401315 	stw	r17,76(sp)
   8e220:	d809883a 	mov	r4,sp
   8e224:	980b883a 	mov	r5,r19
   8e228:	dc400904 	addi	r17,sp,36
   8e22c:	dfc01515 	stw	ra,84(sp)
   8e230:	da400115 	stw	r9,4(sp)
   8e234:	d9c00315 	stw	r7,12(sp)
   8e238:	da000015 	stw	r8,0(sp)
   8e23c:	d9800215 	stw	r6,8(sp)
   8e240:	008f61c0 	call	8f61c <__unpack_d>
   8e244:	d9000204 	addi	r4,sp,8
   8e248:	880b883a 	mov	r5,r17
   8e24c:	008f61c0 	call	8f61c <__unpack_d>
   8e250:	d9800e04 	addi	r6,sp,56
   8e254:	9809883a 	mov	r4,r19
   8e258:	880b883a 	mov	r5,r17
   8e25c:	008dd780 	call	8dd78 <_fpadd_parts>
   8e260:	1009883a 	mov	r4,r2
   8e264:	008f3080 	call	8f308 <__pack_d>
   8e268:	dfc01517 	ldw	ra,84(sp)
   8e26c:	dcc01417 	ldw	r19,80(sp)
   8e270:	dc401317 	ldw	r17,76(sp)
   8e274:	dec01604 	addi	sp,sp,88
   8e278:	f800283a 	ret

0008e27c <__muldf3>:
   8e27c:	deffe004 	addi	sp,sp,-128
   8e280:	dc401815 	stw	r17,96(sp)
   8e284:	dc400404 	addi	r17,sp,16
   8e288:	2011883a 	mov	r8,r4
   8e28c:	2813883a 	mov	r9,r5
   8e290:	dc001715 	stw	r16,92(sp)
   8e294:	d809883a 	mov	r4,sp
   8e298:	880b883a 	mov	r5,r17
   8e29c:	dc000904 	addi	r16,sp,36
   8e2a0:	dfc01f15 	stw	ra,124(sp)
   8e2a4:	da400115 	stw	r9,4(sp)
   8e2a8:	d9c00315 	stw	r7,12(sp)
   8e2ac:	da000015 	stw	r8,0(sp)
   8e2b0:	d9800215 	stw	r6,8(sp)
   8e2b4:	ddc01e15 	stw	r23,120(sp)
   8e2b8:	dd801d15 	stw	r22,116(sp)
   8e2bc:	dd401c15 	stw	r21,112(sp)
   8e2c0:	dd001b15 	stw	r20,108(sp)
   8e2c4:	dcc01a15 	stw	r19,104(sp)
   8e2c8:	dc801915 	stw	r18,100(sp)
   8e2cc:	008f61c0 	call	8f61c <__unpack_d>
   8e2d0:	d9000204 	addi	r4,sp,8
   8e2d4:	800b883a 	mov	r5,r16
   8e2d8:	008f61c0 	call	8f61c <__unpack_d>
   8e2dc:	d9000417 	ldw	r4,16(sp)
   8e2e0:	00800044 	movi	r2,1
   8e2e4:	1100102e 	bgeu	r2,r4,8e328 <__muldf3+0xac>
   8e2e8:	d8c00917 	ldw	r3,36(sp)
   8e2ec:	10c0062e 	bgeu	r2,r3,8e308 <__muldf3+0x8c>
   8e2f0:	00800104 	movi	r2,4
   8e2f4:	20800a26 	beq	r4,r2,8e320 <__muldf3+0xa4>
   8e2f8:	1880cc26 	beq	r3,r2,8e62c <__muldf3+0x3b0>
   8e2fc:	00800084 	movi	r2,2
   8e300:	20800926 	beq	r4,r2,8e328 <__muldf3+0xac>
   8e304:	1880191e 	bne	r3,r2,8e36c <__muldf3+0xf0>
   8e308:	d8c00a17 	ldw	r3,40(sp)
   8e30c:	d8800517 	ldw	r2,20(sp)
   8e310:	8009883a 	mov	r4,r16
   8e314:	10c4c03a 	cmpne	r2,r2,r3
   8e318:	d8800a15 	stw	r2,40(sp)
   8e31c:	00000706 	br	8e33c <__muldf3+0xc0>
   8e320:	00800084 	movi	r2,2
   8e324:	1880c326 	beq	r3,r2,8e634 <__muldf3+0x3b8>
   8e328:	d8800517 	ldw	r2,20(sp)
   8e32c:	d8c00a17 	ldw	r3,40(sp)
   8e330:	8809883a 	mov	r4,r17
   8e334:	10c4c03a 	cmpne	r2,r2,r3
   8e338:	d8800515 	stw	r2,20(sp)
   8e33c:	008f3080 	call	8f308 <__pack_d>
   8e340:	dfc01f17 	ldw	ra,124(sp)
   8e344:	ddc01e17 	ldw	r23,120(sp)
   8e348:	dd801d17 	ldw	r22,116(sp)
   8e34c:	dd401c17 	ldw	r21,112(sp)
   8e350:	dd001b17 	ldw	r20,108(sp)
   8e354:	dcc01a17 	ldw	r19,104(sp)
   8e358:	dc801917 	ldw	r18,100(sp)
   8e35c:	dc401817 	ldw	r17,96(sp)
   8e360:	dc001717 	ldw	r16,92(sp)
   8e364:	dec02004 	addi	sp,sp,128
   8e368:	f800283a 	ret
   8e36c:	dd800717 	ldw	r22,28(sp)
   8e370:	dc800c17 	ldw	r18,48(sp)
   8e374:	002b883a 	mov	r21,zero
   8e378:	0023883a 	mov	r17,zero
   8e37c:	a80b883a 	mov	r5,r21
   8e380:	b00d883a 	mov	r6,r22
   8e384:	880f883a 	mov	r7,r17
   8e388:	ddc00817 	ldw	r23,32(sp)
   8e38c:	dcc00d17 	ldw	r19,52(sp)
   8e390:	9009883a 	mov	r4,r18
   8e394:	008cd7c0 	call	8cd7c <__muldi3>
   8e398:	001b883a 	mov	r13,zero
   8e39c:	680f883a 	mov	r7,r13
   8e3a0:	b009883a 	mov	r4,r22
   8e3a4:	000b883a 	mov	r5,zero
   8e3a8:	980d883a 	mov	r6,r19
   8e3ac:	b82d883a 	mov	r22,r23
   8e3b0:	002f883a 	mov	r23,zero
   8e3b4:	db401615 	stw	r13,88(sp)
   8e3b8:	d8801315 	stw	r2,76(sp)
   8e3bc:	d8c01415 	stw	r3,80(sp)
   8e3c0:	dcc01515 	stw	r19,84(sp)
   8e3c4:	008cd7c0 	call	8cd7c <__muldi3>
   8e3c8:	b00d883a 	mov	r6,r22
   8e3cc:	000b883a 	mov	r5,zero
   8e3d0:	9009883a 	mov	r4,r18
   8e3d4:	b80f883a 	mov	r7,r23
   8e3d8:	1021883a 	mov	r16,r2
   8e3dc:	1823883a 	mov	r17,r3
   8e3e0:	008cd7c0 	call	8cd7c <__muldi3>
   8e3e4:	8085883a 	add	r2,r16,r2
   8e3e8:	140d803a 	cmpltu	r6,r2,r16
   8e3ec:	88c7883a 	add	r3,r17,r3
   8e3f0:	30cd883a 	add	r6,r6,r3
   8e3f4:	1029883a 	mov	r20,r2
   8e3f8:	302b883a 	mov	r21,r6
   8e3fc:	da801317 	ldw	r10,76(sp)
   8e400:	dac01417 	ldw	r11,80(sp)
   8e404:	db001517 	ldw	r12,84(sp)
   8e408:	db401617 	ldw	r13,88(sp)
   8e40c:	3440612e 	bgeu	r6,r17,8e594 <__muldf3+0x318>
   8e410:	0009883a 	mov	r4,zero
   8e414:	5105883a 	add	r2,r10,r4
   8e418:	128d803a 	cmpltu	r6,r2,r10
   8e41c:	5d07883a 	add	r3,r11,r20
   8e420:	30cd883a 	add	r6,r6,r3
   8e424:	0021883a 	mov	r16,zero
   8e428:	04400044 	movi	r17,1
   8e42c:	1025883a 	mov	r18,r2
   8e430:	3027883a 	mov	r19,r6
   8e434:	32c06236 	bltu	r6,r11,8e5c0 <__muldf3+0x344>
   8e438:	59807a26 	beq	r11,r6,8e624 <__muldf3+0x3a8>
   8e43c:	680b883a 	mov	r5,r13
   8e440:	b80f883a 	mov	r7,r23
   8e444:	6009883a 	mov	r4,r12
   8e448:	b00d883a 	mov	r6,r22
   8e44c:	008cd7c0 	call	8cd7c <__muldi3>
   8e450:	1009883a 	mov	r4,r2
   8e454:	000f883a 	mov	r7,zero
   8e458:	1545883a 	add	r2,r2,r21
   8e45c:	1111803a 	cmpltu	r8,r2,r4
   8e460:	19c7883a 	add	r3,r3,r7
   8e464:	40c7883a 	add	r3,r8,r3
   8e468:	88cb883a 	add	r5,r17,r3
   8e46c:	d8c00617 	ldw	r3,24(sp)
   8e470:	8089883a 	add	r4,r16,r2
   8e474:	d8800b17 	ldw	r2,44(sp)
   8e478:	18c00104 	addi	r3,r3,4
   8e47c:	240d803a 	cmpltu	r6,r4,r16
   8e480:	10c7883a 	add	r3,r2,r3
   8e484:	2013883a 	mov	r9,r4
   8e488:	d8800a17 	ldw	r2,40(sp)
   8e48c:	d9000517 	ldw	r4,20(sp)
   8e490:	314d883a 	add	r6,r6,r5
   8e494:	3015883a 	mov	r10,r6
   8e498:	2088c03a 	cmpne	r4,r4,r2
   8e49c:	00880034 	movhi	r2,8192
   8e4a0:	10bfffc4 	addi	r2,r2,-1
   8e4a4:	d9000f15 	stw	r4,60(sp)
   8e4a8:	d8c01015 	stw	r3,64(sp)
   8e4ac:	1180162e 	bgeu	r2,r6,8e508 <__muldf3+0x28c>
   8e4b0:	1811883a 	mov	r8,r3
   8e4b4:	101f883a 	mov	r15,r2
   8e4b8:	980497fa 	slli	r2,r19,31
   8e4bc:	9016d07a 	srli	r11,r18,1
   8e4c0:	500697fa 	slli	r3,r10,31
   8e4c4:	480cd07a 	srli	r6,r9,1
   8e4c8:	500ed07a 	srli	r7,r10,1
   8e4cc:	12d6b03a 	or	r11,r2,r11
   8e4d0:	00800044 	movi	r2,1
   8e4d4:	198cb03a 	or	r6,r3,r6
   8e4d8:	4888703a 	and	r4,r9,r2
   8e4dc:	9818d07a 	srli	r12,r19,1
   8e4e0:	001b883a 	mov	r13,zero
   8e4e4:	03a00034 	movhi	r14,32768
   8e4e8:	3013883a 	mov	r9,r6
   8e4ec:	3815883a 	mov	r10,r7
   8e4f0:	4091883a 	add	r8,r8,r2
   8e4f4:	20000226 	beq	r4,zero,8e500 <__muldf3+0x284>
   8e4f8:	5b64b03a 	or	r18,r11,r13
   8e4fc:	63a6b03a 	or	r19,r12,r14
   8e500:	7abfed36 	bltu	r15,r10,8e4b8 <__muldf3+0x23c>
   8e504:	da001015 	stw	r8,64(sp)
   8e508:	00840034 	movhi	r2,4096
   8e50c:	10bfffc4 	addi	r2,r2,-1
   8e510:	12801436 	bltu	r2,r10,8e564 <__muldf3+0x2e8>
   8e514:	da001017 	ldw	r8,64(sp)
   8e518:	101f883a 	mov	r15,r2
   8e51c:	4a45883a 	add	r2,r9,r9
   8e520:	124d803a 	cmpltu	r6,r2,r9
   8e524:	5287883a 	add	r3,r10,r10
   8e528:	9497883a 	add	r11,r18,r18
   8e52c:	5c8f803a 	cmpltu	r7,r11,r18
   8e530:	9cd9883a 	add	r12,r19,r19
   8e534:	01000044 	movi	r4,1
   8e538:	30cd883a 	add	r6,r6,r3
   8e53c:	3b0f883a 	add	r7,r7,r12
   8e540:	423fffc4 	addi	r8,r8,-1
   8e544:	1013883a 	mov	r9,r2
   8e548:	3015883a 	mov	r10,r6
   8e54c:	111ab03a 	or	r13,r2,r4
   8e550:	98003016 	blt	r19,zero,8e614 <__muldf3+0x398>
   8e554:	5825883a 	mov	r18,r11
   8e558:	3827883a 	mov	r19,r7
   8e55c:	7abfef2e 	bgeu	r15,r10,8e51c <__muldf3+0x2a0>
   8e560:	da001015 	stw	r8,64(sp)
   8e564:	00803fc4 	movi	r2,255
   8e568:	488e703a 	and	r7,r9,r2
   8e56c:	00802004 	movi	r2,128
   8e570:	0007883a 	mov	r3,zero
   8e574:	0011883a 	mov	r8,zero
   8e578:	38801826 	beq	r7,r2,8e5dc <__muldf3+0x360>
   8e57c:	008000c4 	movi	r2,3
   8e580:	d9000e04 	addi	r4,sp,56
   8e584:	da801215 	stw	r10,72(sp)
   8e588:	d8800e15 	stw	r2,56(sp)
   8e58c:	da401115 	stw	r9,68(sp)
   8e590:	003f6a06 	br	8e33c <__muldf3+0xc0>
   8e594:	89802126 	beq	r17,r6,8e61c <__muldf3+0x3a0>
   8e598:	0009883a 	mov	r4,zero
   8e59c:	5105883a 	add	r2,r10,r4
   8e5a0:	128d803a 	cmpltu	r6,r2,r10
   8e5a4:	5d07883a 	add	r3,r11,r20
   8e5a8:	30cd883a 	add	r6,r6,r3
   8e5ac:	0021883a 	mov	r16,zero
   8e5b0:	0023883a 	mov	r17,zero
   8e5b4:	1025883a 	mov	r18,r2
   8e5b8:	3027883a 	mov	r19,r6
   8e5bc:	32ff9e2e 	bgeu	r6,r11,8e438 <__muldf3+0x1bc>
   8e5c0:	00800044 	movi	r2,1
   8e5c4:	8089883a 	add	r4,r16,r2
   8e5c8:	240d803a 	cmpltu	r6,r4,r16
   8e5cc:	344d883a 	add	r6,r6,r17
   8e5d0:	2021883a 	mov	r16,r4
   8e5d4:	3023883a 	mov	r17,r6
   8e5d8:	003f9806 	br	8e43c <__muldf3+0x1c0>
   8e5dc:	403fe71e 	bne	r8,zero,8e57c <__muldf3+0x300>
   8e5e0:	01004004 	movi	r4,256
   8e5e4:	4904703a 	and	r2,r9,r4
   8e5e8:	10c4b03a 	or	r2,r2,r3
   8e5ec:	103fe31e 	bne	r2,zero,8e57c <__muldf3+0x300>
   8e5f0:	94c4b03a 	or	r2,r18,r19
   8e5f4:	103fe126 	beq	r2,zero,8e57c <__muldf3+0x300>
   8e5f8:	49c5883a 	add	r2,r9,r7
   8e5fc:	1251803a 	cmpltu	r8,r2,r9
   8e600:	4291883a 	add	r8,r8,r10
   8e604:	013fc004 	movi	r4,-256
   8e608:	1112703a 	and	r9,r2,r4
   8e60c:	4015883a 	mov	r10,r8
   8e610:	003fda06 	br	8e57c <__muldf3+0x300>
   8e614:	6813883a 	mov	r9,r13
   8e618:	003fce06 	br	8e554 <__muldf3+0x2d8>
   8e61c:	143f7c36 	bltu	r2,r16,8e410 <__muldf3+0x194>
   8e620:	003fdd06 	br	8e598 <__muldf3+0x31c>
   8e624:	12bf852e 	bgeu	r2,r10,8e43c <__muldf3+0x1c0>
   8e628:	003fe506 	br	8e5c0 <__muldf3+0x344>
   8e62c:	00800084 	movi	r2,2
   8e630:	20bf351e 	bne	r4,r2,8e308 <__muldf3+0x8c>
   8e634:	01000274 	movhi	r4,9
   8e638:	210f0b04 	addi	r4,r4,15404
   8e63c:	003f3f06 	br	8e33c <__muldf3+0xc0>

0008e640 <__divdf3>:
   8e640:	deffed04 	addi	sp,sp,-76
   8e644:	dcc01115 	stw	r19,68(sp)
   8e648:	dcc00404 	addi	r19,sp,16
   8e64c:	2011883a 	mov	r8,r4
   8e650:	2813883a 	mov	r9,r5
   8e654:	dc000e15 	stw	r16,56(sp)
   8e658:	d809883a 	mov	r4,sp
   8e65c:	980b883a 	mov	r5,r19
   8e660:	dc000904 	addi	r16,sp,36
   8e664:	dfc01215 	stw	ra,72(sp)
   8e668:	da400115 	stw	r9,4(sp)
   8e66c:	d9c00315 	stw	r7,12(sp)
   8e670:	da000015 	stw	r8,0(sp)
   8e674:	d9800215 	stw	r6,8(sp)
   8e678:	dc801015 	stw	r18,64(sp)
   8e67c:	dc400f15 	stw	r17,60(sp)
   8e680:	008f61c0 	call	8f61c <__unpack_d>
   8e684:	d9000204 	addi	r4,sp,8
   8e688:	800b883a 	mov	r5,r16
   8e68c:	008f61c0 	call	8f61c <__unpack_d>
   8e690:	d9000417 	ldw	r4,16(sp)
   8e694:	00800044 	movi	r2,1
   8e698:	11000b2e 	bgeu	r2,r4,8e6c8 <__divdf3+0x88>
   8e69c:	d9400917 	ldw	r5,36(sp)
   8e6a0:	1140762e 	bgeu	r2,r5,8e87c <__divdf3+0x23c>
   8e6a4:	d8800517 	ldw	r2,20(sp)
   8e6a8:	d8c00a17 	ldw	r3,40(sp)
   8e6ac:	01800104 	movi	r6,4
   8e6b0:	10c4f03a 	xor	r2,r2,r3
   8e6b4:	d8800515 	stw	r2,20(sp)
   8e6b8:	21800226 	beq	r4,r6,8e6c4 <__divdf3+0x84>
   8e6bc:	00800084 	movi	r2,2
   8e6c0:	2080141e 	bne	r4,r2,8e714 <__divdf3+0xd4>
   8e6c4:	29000926 	beq	r5,r4,8e6ec <__divdf3+0xac>
   8e6c8:	9809883a 	mov	r4,r19
   8e6cc:	008f3080 	call	8f308 <__pack_d>
   8e6d0:	dfc01217 	ldw	ra,72(sp)
   8e6d4:	dcc01117 	ldw	r19,68(sp)
   8e6d8:	dc801017 	ldw	r18,64(sp)
   8e6dc:	dc400f17 	ldw	r17,60(sp)
   8e6e0:	dc000e17 	ldw	r16,56(sp)
   8e6e4:	dec01304 	addi	sp,sp,76
   8e6e8:	f800283a 	ret
   8e6ec:	01000274 	movhi	r4,9
   8e6f0:	210f0b04 	addi	r4,r4,15404
   8e6f4:	008f3080 	call	8f308 <__pack_d>
   8e6f8:	dfc01217 	ldw	ra,72(sp)
   8e6fc:	dcc01117 	ldw	r19,68(sp)
   8e700:	dc801017 	ldw	r18,64(sp)
   8e704:	dc400f17 	ldw	r17,60(sp)
   8e708:	dc000e17 	ldw	r16,56(sp)
   8e70c:	dec01304 	addi	sp,sp,76
   8e710:	f800283a 	ret
   8e714:	29805b26 	beq	r5,r6,8e884 <__divdf3+0x244>
   8e718:	28802d26 	beq	r5,r2,8e7d0 <__divdf3+0x190>
   8e71c:	d8c00617 	ldw	r3,24(sp)
   8e720:	d8800b17 	ldw	r2,44(sp)
   8e724:	d9c00817 	ldw	r7,32(sp)
   8e728:	dc400d17 	ldw	r17,52(sp)
   8e72c:	188bc83a 	sub	r5,r3,r2
   8e730:	d9800717 	ldw	r6,28(sp)
   8e734:	dc000c17 	ldw	r16,48(sp)
   8e738:	d9400615 	stw	r5,24(sp)
   8e73c:	3c403836 	bltu	r7,r17,8e820 <__divdf3+0x1e0>
   8e740:	89c03626 	beq	r17,r7,8e81c <__divdf3+0x1dc>
   8e744:	0015883a 	mov	r10,zero
   8e748:	001d883a 	mov	r14,zero
   8e74c:	02c40034 	movhi	r11,4096
   8e750:	001f883a 	mov	r15,zero
   8e754:	003f883a 	mov	ra,zero
   8e758:	04800f44 	movi	r18,61
   8e75c:	00000f06 	br	8e79c <__divdf3+0x15c>
   8e760:	601d883a 	mov	r14,r12
   8e764:	681f883a 	mov	r15,r13
   8e768:	400d883a 	mov	r6,r8
   8e76c:	100f883a 	mov	r7,r2
   8e770:	3191883a 	add	r8,r6,r6
   8e774:	5808d07a 	srli	r4,r11,1
   8e778:	4185803a 	cmpltu	r2,r8,r6
   8e77c:	39d3883a 	add	r9,r7,r7
   8e780:	28c6b03a 	or	r3,r5,r3
   8e784:	1245883a 	add	r2,r2,r9
   8e788:	1815883a 	mov	r10,r3
   8e78c:	2017883a 	mov	r11,r4
   8e790:	400d883a 	mov	r6,r8
   8e794:	100f883a 	mov	r7,r2
   8e798:	fc801726 	beq	ra,r18,8e7f8 <__divdf3+0x1b8>
   8e79c:	580a97fa 	slli	r5,r11,31
   8e7a0:	5006d07a 	srli	r3,r10,1
   8e7a4:	ffc00044 	addi	ra,ra,1
   8e7a8:	3c7ff136 	bltu	r7,r17,8e770 <__divdf3+0x130>
   8e7ac:	3411c83a 	sub	r8,r6,r16
   8e7b0:	3205803a 	cmpltu	r2,r6,r8
   8e7b4:	3c53c83a 	sub	r9,r7,r17
   8e7b8:	7298b03a 	or	r12,r14,r10
   8e7bc:	7adab03a 	or	r13,r15,r11
   8e7c0:	4885c83a 	sub	r2,r9,r2
   8e7c4:	89ffe61e 	bne	r17,r7,8e760 <__divdf3+0x120>
   8e7c8:	343fe936 	bltu	r6,r16,8e770 <__divdf3+0x130>
   8e7cc:	003fe406 	br	8e760 <__divdf3+0x120>
   8e7d0:	9809883a 	mov	r4,r19
   8e7d4:	d9800415 	stw	r6,16(sp)
   8e7d8:	008f3080 	call	8f308 <__pack_d>
   8e7dc:	dfc01217 	ldw	ra,72(sp)
   8e7e0:	dcc01117 	ldw	r19,68(sp)
   8e7e4:	dc801017 	ldw	r18,64(sp)
   8e7e8:	dc400f17 	ldw	r17,60(sp)
   8e7ec:	dc000e17 	ldw	r16,56(sp)
   8e7f0:	dec01304 	addi	sp,sp,76
   8e7f4:	f800283a 	ret
   8e7f8:	00803fc4 	movi	r2,255
   8e7fc:	7090703a 	and	r8,r14,r2
   8e800:	00802004 	movi	r2,128
   8e804:	0007883a 	mov	r3,zero
   8e808:	0013883a 	mov	r9,zero
   8e80c:	40800d26 	beq	r8,r2,8e844 <__divdf3+0x204>
   8e810:	dbc00815 	stw	r15,32(sp)
   8e814:	db800715 	stw	r14,28(sp)
   8e818:	003fab06 	br	8e6c8 <__divdf3+0x88>
   8e81c:	343fc92e 	bgeu	r6,r16,8e744 <__divdf3+0x104>
   8e820:	3185883a 	add	r2,r6,r6
   8e824:	1189803a 	cmpltu	r4,r2,r6
   8e828:	39c7883a 	add	r3,r7,r7
   8e82c:	20c9883a 	add	r4,r4,r3
   8e830:	297fffc4 	addi	r5,r5,-1
   8e834:	100d883a 	mov	r6,r2
   8e838:	200f883a 	mov	r7,r4
   8e83c:	d9400615 	stw	r5,24(sp)
   8e840:	003fc006 	br	8e744 <__divdf3+0x104>
   8e844:	483ff21e 	bne	r9,zero,8e810 <__divdf3+0x1d0>
   8e848:	01004004 	movi	r4,256
   8e84c:	7104703a 	and	r2,r14,r4
   8e850:	10c4b03a 	or	r2,r2,r3
   8e854:	103fee1e 	bne	r2,zero,8e810 <__divdf3+0x1d0>
   8e858:	31c4b03a 	or	r2,r6,r7
   8e85c:	103fec26 	beq	r2,zero,8e810 <__divdf3+0x1d0>
   8e860:	7205883a 	add	r2,r14,r8
   8e864:	1391803a 	cmpltu	r8,r2,r14
   8e868:	43d1883a 	add	r8,r8,r15
   8e86c:	013fc004 	movi	r4,-256
   8e870:	111c703a 	and	r14,r2,r4
   8e874:	401f883a 	mov	r15,r8
   8e878:	003fe506 	br	8e810 <__divdf3+0x1d0>
   8e87c:	8009883a 	mov	r4,r16
   8e880:	003f9206 	br	8e6cc <__divdf3+0x8c>
   8e884:	9809883a 	mov	r4,r19
   8e888:	d8000715 	stw	zero,28(sp)
   8e88c:	d8000815 	stw	zero,32(sp)
   8e890:	d8000615 	stw	zero,24(sp)
   8e894:	003f8d06 	br	8e6cc <__divdf3+0x8c>

0008e898 <__eqdf2>:
   8e898:	deffef04 	addi	sp,sp,-68
   8e89c:	dc400f15 	stw	r17,60(sp)
   8e8a0:	dc400404 	addi	r17,sp,16
   8e8a4:	2005883a 	mov	r2,r4
   8e8a8:	2807883a 	mov	r3,r5
   8e8ac:	dc000e15 	stw	r16,56(sp)
   8e8b0:	d809883a 	mov	r4,sp
   8e8b4:	880b883a 	mov	r5,r17
   8e8b8:	dc000904 	addi	r16,sp,36
   8e8bc:	d8c00115 	stw	r3,4(sp)
   8e8c0:	d8800015 	stw	r2,0(sp)
   8e8c4:	d9800215 	stw	r6,8(sp)
   8e8c8:	dfc01015 	stw	ra,64(sp)
   8e8cc:	d9c00315 	stw	r7,12(sp)
   8e8d0:	008f61c0 	call	8f61c <__unpack_d>
   8e8d4:	d9000204 	addi	r4,sp,8
   8e8d8:	800b883a 	mov	r5,r16
   8e8dc:	008f61c0 	call	8f61c <__unpack_d>
   8e8e0:	d8800417 	ldw	r2,16(sp)
   8e8e4:	00c00044 	movi	r3,1
   8e8e8:	180d883a 	mov	r6,r3
   8e8ec:	1880062e 	bgeu	r3,r2,8e908 <__eqdf2+0x70>
   8e8f0:	d8800917 	ldw	r2,36(sp)
   8e8f4:	8809883a 	mov	r4,r17
   8e8f8:	800b883a 	mov	r5,r16
   8e8fc:	1880022e 	bgeu	r3,r2,8e908 <__eqdf2+0x70>
   8e900:	008f7540 	call	8f754 <__fpcmp_parts_d>
   8e904:	100d883a 	mov	r6,r2
   8e908:	3005883a 	mov	r2,r6
   8e90c:	dfc01017 	ldw	ra,64(sp)
   8e910:	dc400f17 	ldw	r17,60(sp)
   8e914:	dc000e17 	ldw	r16,56(sp)
   8e918:	dec01104 	addi	sp,sp,68
   8e91c:	f800283a 	ret

0008e920 <__nedf2>:
   8e920:	deffef04 	addi	sp,sp,-68
   8e924:	dc400f15 	stw	r17,60(sp)
   8e928:	dc400404 	addi	r17,sp,16
   8e92c:	2005883a 	mov	r2,r4
   8e930:	2807883a 	mov	r3,r5
   8e934:	dc000e15 	stw	r16,56(sp)
   8e938:	d809883a 	mov	r4,sp
   8e93c:	880b883a 	mov	r5,r17
   8e940:	dc000904 	addi	r16,sp,36
   8e944:	d8c00115 	stw	r3,4(sp)
   8e948:	d8800015 	stw	r2,0(sp)
   8e94c:	d9800215 	stw	r6,8(sp)
   8e950:	dfc01015 	stw	ra,64(sp)
   8e954:	d9c00315 	stw	r7,12(sp)
   8e958:	008f61c0 	call	8f61c <__unpack_d>
   8e95c:	d9000204 	addi	r4,sp,8
   8e960:	800b883a 	mov	r5,r16
   8e964:	008f61c0 	call	8f61c <__unpack_d>
   8e968:	d8800417 	ldw	r2,16(sp)
   8e96c:	00c00044 	movi	r3,1
   8e970:	180d883a 	mov	r6,r3
   8e974:	1880062e 	bgeu	r3,r2,8e990 <__nedf2+0x70>
   8e978:	d8800917 	ldw	r2,36(sp)
   8e97c:	8809883a 	mov	r4,r17
   8e980:	800b883a 	mov	r5,r16
   8e984:	1880022e 	bgeu	r3,r2,8e990 <__nedf2+0x70>
   8e988:	008f7540 	call	8f754 <__fpcmp_parts_d>
   8e98c:	100d883a 	mov	r6,r2
   8e990:	3005883a 	mov	r2,r6
   8e994:	dfc01017 	ldw	ra,64(sp)
   8e998:	dc400f17 	ldw	r17,60(sp)
   8e99c:	dc000e17 	ldw	r16,56(sp)
   8e9a0:	dec01104 	addi	sp,sp,68
   8e9a4:	f800283a 	ret

0008e9a8 <__gtdf2>:
   8e9a8:	deffef04 	addi	sp,sp,-68
   8e9ac:	dc400f15 	stw	r17,60(sp)
   8e9b0:	dc400404 	addi	r17,sp,16
   8e9b4:	2005883a 	mov	r2,r4
   8e9b8:	2807883a 	mov	r3,r5
   8e9bc:	dc000e15 	stw	r16,56(sp)
   8e9c0:	d809883a 	mov	r4,sp
   8e9c4:	880b883a 	mov	r5,r17
   8e9c8:	dc000904 	addi	r16,sp,36
   8e9cc:	d8c00115 	stw	r3,4(sp)
   8e9d0:	d8800015 	stw	r2,0(sp)
   8e9d4:	d9800215 	stw	r6,8(sp)
   8e9d8:	dfc01015 	stw	ra,64(sp)
   8e9dc:	d9c00315 	stw	r7,12(sp)
   8e9e0:	008f61c0 	call	8f61c <__unpack_d>
   8e9e4:	d9000204 	addi	r4,sp,8
   8e9e8:	800b883a 	mov	r5,r16
   8e9ec:	008f61c0 	call	8f61c <__unpack_d>
   8e9f0:	d8800417 	ldw	r2,16(sp)
   8e9f4:	00c00044 	movi	r3,1
   8e9f8:	01bfffc4 	movi	r6,-1
   8e9fc:	1880062e 	bgeu	r3,r2,8ea18 <__gtdf2+0x70>
   8ea00:	d8800917 	ldw	r2,36(sp)
   8ea04:	8809883a 	mov	r4,r17
   8ea08:	800b883a 	mov	r5,r16
   8ea0c:	1880022e 	bgeu	r3,r2,8ea18 <__gtdf2+0x70>
   8ea10:	008f7540 	call	8f754 <__fpcmp_parts_d>
   8ea14:	100d883a 	mov	r6,r2
   8ea18:	3005883a 	mov	r2,r6
   8ea1c:	dfc01017 	ldw	ra,64(sp)
   8ea20:	dc400f17 	ldw	r17,60(sp)
   8ea24:	dc000e17 	ldw	r16,56(sp)
   8ea28:	dec01104 	addi	sp,sp,68
   8ea2c:	f800283a 	ret

0008ea30 <__gedf2>:
   8ea30:	deffef04 	addi	sp,sp,-68
   8ea34:	dc400f15 	stw	r17,60(sp)
   8ea38:	dc400404 	addi	r17,sp,16
   8ea3c:	2005883a 	mov	r2,r4
   8ea40:	2807883a 	mov	r3,r5
   8ea44:	dc000e15 	stw	r16,56(sp)
   8ea48:	d809883a 	mov	r4,sp
   8ea4c:	880b883a 	mov	r5,r17
   8ea50:	dc000904 	addi	r16,sp,36
   8ea54:	d8c00115 	stw	r3,4(sp)
   8ea58:	d8800015 	stw	r2,0(sp)
   8ea5c:	d9800215 	stw	r6,8(sp)
   8ea60:	dfc01015 	stw	ra,64(sp)
   8ea64:	d9c00315 	stw	r7,12(sp)
   8ea68:	008f61c0 	call	8f61c <__unpack_d>
   8ea6c:	d9000204 	addi	r4,sp,8
   8ea70:	800b883a 	mov	r5,r16
   8ea74:	008f61c0 	call	8f61c <__unpack_d>
   8ea78:	d8800417 	ldw	r2,16(sp)
   8ea7c:	00c00044 	movi	r3,1
   8ea80:	01bfffc4 	movi	r6,-1
   8ea84:	1880062e 	bgeu	r3,r2,8eaa0 <__gedf2+0x70>
   8ea88:	d8800917 	ldw	r2,36(sp)
   8ea8c:	8809883a 	mov	r4,r17
   8ea90:	800b883a 	mov	r5,r16
   8ea94:	1880022e 	bgeu	r3,r2,8eaa0 <__gedf2+0x70>
   8ea98:	008f7540 	call	8f754 <__fpcmp_parts_d>
   8ea9c:	100d883a 	mov	r6,r2
   8eaa0:	3005883a 	mov	r2,r6
   8eaa4:	dfc01017 	ldw	ra,64(sp)
   8eaa8:	dc400f17 	ldw	r17,60(sp)
   8eaac:	dc000e17 	ldw	r16,56(sp)
   8eab0:	dec01104 	addi	sp,sp,68
   8eab4:	f800283a 	ret

0008eab8 <__ltdf2>:
   8eab8:	deffef04 	addi	sp,sp,-68
   8eabc:	dc400f15 	stw	r17,60(sp)
   8eac0:	dc400404 	addi	r17,sp,16
   8eac4:	2005883a 	mov	r2,r4
   8eac8:	2807883a 	mov	r3,r5
   8eacc:	dc000e15 	stw	r16,56(sp)
   8ead0:	d809883a 	mov	r4,sp
   8ead4:	880b883a 	mov	r5,r17
   8ead8:	dc000904 	addi	r16,sp,36
   8eadc:	d8c00115 	stw	r3,4(sp)
   8eae0:	d8800015 	stw	r2,0(sp)
   8eae4:	d9800215 	stw	r6,8(sp)
   8eae8:	dfc01015 	stw	ra,64(sp)
   8eaec:	d9c00315 	stw	r7,12(sp)
   8eaf0:	008f61c0 	call	8f61c <__unpack_d>
   8eaf4:	d9000204 	addi	r4,sp,8
   8eaf8:	800b883a 	mov	r5,r16
   8eafc:	008f61c0 	call	8f61c <__unpack_d>
   8eb00:	d8800417 	ldw	r2,16(sp)
   8eb04:	00c00044 	movi	r3,1
   8eb08:	180d883a 	mov	r6,r3
   8eb0c:	1880062e 	bgeu	r3,r2,8eb28 <__ltdf2+0x70>
   8eb10:	d8800917 	ldw	r2,36(sp)
   8eb14:	8809883a 	mov	r4,r17
   8eb18:	800b883a 	mov	r5,r16
   8eb1c:	1880022e 	bgeu	r3,r2,8eb28 <__ltdf2+0x70>
   8eb20:	008f7540 	call	8f754 <__fpcmp_parts_d>
   8eb24:	100d883a 	mov	r6,r2
   8eb28:	3005883a 	mov	r2,r6
   8eb2c:	dfc01017 	ldw	ra,64(sp)
   8eb30:	dc400f17 	ldw	r17,60(sp)
   8eb34:	dc000e17 	ldw	r16,56(sp)
   8eb38:	dec01104 	addi	sp,sp,68
   8eb3c:	f800283a 	ret

0008eb40 <__ledf2>:
   8eb40:	deffef04 	addi	sp,sp,-68
   8eb44:	dc400f15 	stw	r17,60(sp)
   8eb48:	dc400404 	addi	r17,sp,16
   8eb4c:	2005883a 	mov	r2,r4
   8eb50:	2807883a 	mov	r3,r5
   8eb54:	dc000e15 	stw	r16,56(sp)
   8eb58:	d809883a 	mov	r4,sp
   8eb5c:	880b883a 	mov	r5,r17
   8eb60:	dc000904 	addi	r16,sp,36
   8eb64:	d8c00115 	stw	r3,4(sp)
   8eb68:	d8800015 	stw	r2,0(sp)
   8eb6c:	d9800215 	stw	r6,8(sp)
   8eb70:	dfc01015 	stw	ra,64(sp)
   8eb74:	d9c00315 	stw	r7,12(sp)
   8eb78:	008f61c0 	call	8f61c <__unpack_d>
   8eb7c:	d9000204 	addi	r4,sp,8
   8eb80:	800b883a 	mov	r5,r16
   8eb84:	008f61c0 	call	8f61c <__unpack_d>
   8eb88:	d8800417 	ldw	r2,16(sp)
   8eb8c:	00c00044 	movi	r3,1
   8eb90:	180d883a 	mov	r6,r3
   8eb94:	1880062e 	bgeu	r3,r2,8ebb0 <__ledf2+0x70>
   8eb98:	d8800917 	ldw	r2,36(sp)
   8eb9c:	8809883a 	mov	r4,r17
   8eba0:	800b883a 	mov	r5,r16
   8eba4:	1880022e 	bgeu	r3,r2,8ebb0 <__ledf2+0x70>
   8eba8:	008f7540 	call	8f754 <__fpcmp_parts_d>
   8ebac:	100d883a 	mov	r6,r2
   8ebb0:	3005883a 	mov	r2,r6
   8ebb4:	dfc01017 	ldw	ra,64(sp)
   8ebb8:	dc400f17 	ldw	r17,60(sp)
   8ebbc:	dc000e17 	ldw	r16,56(sp)
   8ebc0:	dec01104 	addi	sp,sp,68
   8ebc4:	f800283a 	ret

0008ebc8 <__floatsidf>:
   8ebc8:	2006d7fa 	srli	r3,r4,31
   8ebcc:	defff604 	addi	sp,sp,-40
   8ebd0:	008000c4 	movi	r2,3
   8ebd4:	dfc00915 	stw	ra,36(sp)
   8ebd8:	dcc00815 	stw	r19,32(sp)
   8ebdc:	dc800715 	stw	r18,28(sp)
   8ebe0:	dc400615 	stw	r17,24(sp)
   8ebe4:	dc000515 	stw	r16,20(sp)
   8ebe8:	d8800015 	stw	r2,0(sp)
   8ebec:	d8c00115 	stw	r3,4(sp)
   8ebf0:	20000f1e 	bne	r4,zero,8ec30 <__floatsidf+0x68>
   8ebf4:	00800084 	movi	r2,2
   8ebf8:	d8800015 	stw	r2,0(sp)
   8ebfc:	d809883a 	mov	r4,sp
   8ec00:	008f3080 	call	8f308 <__pack_d>
   8ec04:	1009883a 	mov	r4,r2
   8ec08:	180b883a 	mov	r5,r3
   8ec0c:	2005883a 	mov	r2,r4
   8ec10:	2807883a 	mov	r3,r5
   8ec14:	dfc00917 	ldw	ra,36(sp)
   8ec18:	dcc00817 	ldw	r19,32(sp)
   8ec1c:	dc800717 	ldw	r18,28(sp)
   8ec20:	dc400617 	ldw	r17,24(sp)
   8ec24:	dc000517 	ldw	r16,20(sp)
   8ec28:	dec00a04 	addi	sp,sp,40
   8ec2c:	f800283a 	ret
   8ec30:	00800f04 	movi	r2,60
   8ec34:	1807003a 	cmpeq	r3,r3,zero
   8ec38:	d8800215 	stw	r2,8(sp)
   8ec3c:	18001126 	beq	r3,zero,8ec84 <__floatsidf+0xbc>
   8ec40:	0027883a 	mov	r19,zero
   8ec44:	2025883a 	mov	r18,r4
   8ec48:	d9000315 	stw	r4,12(sp)
   8ec4c:	dcc00415 	stw	r19,16(sp)
   8ec50:	008f0ec0 	call	8f0ec <__clzsi2>
   8ec54:	11000744 	addi	r4,r2,29
   8ec58:	013fe80e 	bge	zero,r4,8ebfc <__floatsidf+0x34>
   8ec5c:	10bfff44 	addi	r2,r2,-3
   8ec60:	10000c16 	blt	r2,zero,8ec94 <__floatsidf+0xcc>
   8ec64:	90a2983a 	sll	r17,r18,r2
   8ec68:	0021883a 	mov	r16,zero
   8ec6c:	d8800217 	ldw	r2,8(sp)
   8ec70:	dc400415 	stw	r17,16(sp)
   8ec74:	dc000315 	stw	r16,12(sp)
   8ec78:	1105c83a 	sub	r2,r2,r4
   8ec7c:	d8800215 	stw	r2,8(sp)
   8ec80:	003fde06 	br	8ebfc <__floatsidf+0x34>
   8ec84:	00a00034 	movhi	r2,32768
   8ec88:	20800a26 	beq	r4,r2,8ecb4 <__floatsidf+0xec>
   8ec8c:	0109c83a 	sub	r4,zero,r4
   8ec90:	003feb06 	br	8ec40 <__floatsidf+0x78>
   8ec94:	9006d07a 	srli	r3,r18,1
   8ec98:	008007c4 	movi	r2,31
   8ec9c:	1105c83a 	sub	r2,r2,r4
   8eca0:	1886d83a 	srl	r3,r3,r2
   8eca4:	9922983a 	sll	r17,r19,r4
   8eca8:	9120983a 	sll	r16,r18,r4
   8ecac:	1c62b03a 	or	r17,r3,r17
   8ecb0:	003fee06 	br	8ec6c <__floatsidf+0xa4>
   8ecb4:	0009883a 	mov	r4,zero
   8ecb8:	01707834 	movhi	r5,49632
   8ecbc:	003fd306 	br	8ec0c <__floatsidf+0x44>

0008ecc0 <__fixdfsi>:
   8ecc0:	defff804 	addi	sp,sp,-32
   8ecc4:	2005883a 	mov	r2,r4
   8ecc8:	2807883a 	mov	r3,r5
   8eccc:	d809883a 	mov	r4,sp
   8ecd0:	d9400204 	addi	r5,sp,8
   8ecd4:	d8c00115 	stw	r3,4(sp)
   8ecd8:	d8800015 	stw	r2,0(sp)
   8ecdc:	dfc00715 	stw	ra,28(sp)
   8ece0:	008f61c0 	call	8f61c <__unpack_d>
   8ece4:	d8c00217 	ldw	r3,8(sp)
   8ece8:	00800084 	movi	r2,2
   8ecec:	1880051e 	bne	r3,r2,8ed04 <__fixdfsi+0x44>
   8ecf0:	0007883a 	mov	r3,zero
   8ecf4:	1805883a 	mov	r2,r3
   8ecf8:	dfc00717 	ldw	ra,28(sp)
   8ecfc:	dec00804 	addi	sp,sp,32
   8ed00:	f800283a 	ret
   8ed04:	00800044 	movi	r2,1
   8ed08:	10fff92e 	bgeu	r2,r3,8ecf0 <__fixdfsi+0x30>
   8ed0c:	00800104 	movi	r2,4
   8ed10:	18800426 	beq	r3,r2,8ed24 <__fixdfsi+0x64>
   8ed14:	d8c00417 	ldw	r3,16(sp)
   8ed18:	183ff516 	blt	r3,zero,8ecf0 <__fixdfsi+0x30>
   8ed1c:	00800784 	movi	r2,30
   8ed20:	10c0080e 	bge	r2,r3,8ed44 <__fixdfsi+0x84>
   8ed24:	d8800317 	ldw	r2,12(sp)
   8ed28:	1000121e 	bne	r2,zero,8ed74 <__fixdfsi+0xb4>
   8ed2c:	00e00034 	movhi	r3,32768
   8ed30:	18ffffc4 	addi	r3,r3,-1
   8ed34:	1805883a 	mov	r2,r3
   8ed38:	dfc00717 	ldw	ra,28(sp)
   8ed3c:	dec00804 	addi	sp,sp,32
   8ed40:	f800283a 	ret
   8ed44:	00800f04 	movi	r2,60
   8ed48:	10d1c83a 	sub	r8,r2,r3
   8ed4c:	40bff804 	addi	r2,r8,-32
   8ed50:	d9800517 	ldw	r6,20(sp)
   8ed54:	d9c00617 	ldw	r7,24(sp)
   8ed58:	10000816 	blt	r2,zero,8ed7c <__fixdfsi+0xbc>
   8ed5c:	3888d83a 	srl	r4,r7,r2
   8ed60:	d8800317 	ldw	r2,12(sp)
   8ed64:	2007883a 	mov	r3,r4
   8ed68:	103fe226 	beq	r2,zero,8ecf4 <__fixdfsi+0x34>
   8ed6c:	0107c83a 	sub	r3,zero,r4
   8ed70:	003fe006 	br	8ecf4 <__fixdfsi+0x34>
   8ed74:	00e00034 	movhi	r3,32768
   8ed78:	003fde06 	br	8ecf4 <__fixdfsi+0x34>
   8ed7c:	39c7883a 	add	r3,r7,r7
   8ed80:	008007c4 	movi	r2,31
   8ed84:	1205c83a 	sub	r2,r2,r8
   8ed88:	1886983a 	sll	r3,r3,r2
   8ed8c:	3208d83a 	srl	r4,r6,r8
   8ed90:	1908b03a 	or	r4,r3,r4
   8ed94:	003ff206 	br	8ed60 <__fixdfsi+0xa0>

0008ed98 <__truncdfsf2>:
   8ed98:	defff804 	addi	sp,sp,-32
   8ed9c:	2005883a 	mov	r2,r4
   8eda0:	2807883a 	mov	r3,r5
   8eda4:	d809883a 	mov	r4,sp
   8eda8:	d9400204 	addi	r5,sp,8
   8edac:	d8c00115 	stw	r3,4(sp)
   8edb0:	d8800015 	stw	r2,0(sp)
   8edb4:	dfc00715 	stw	ra,28(sp)
   8edb8:	008f61c0 	call	8f61c <__unpack_d>
   8edbc:	d9c00517 	ldw	r7,20(sp)
   8edc0:	da000617 	ldw	r8,24(sp)
   8edc4:	02d00034 	movhi	r11,16384
   8edc8:	5affffc4 	addi	r11,r11,-1
   8edcc:	3812d7ba 	srli	r9,r7,30
   8edd0:	401a90ba 	slli	r13,r8,2
   8edd4:	3ac4703a 	and	r2,r7,r11
   8edd8:	0007883a 	mov	r3,zero
   8eddc:	6a52b03a 	or	r9,r13,r9
   8ede0:	10c4b03a 	or	r2,r2,r3
   8ede4:	d9000217 	ldw	r4,8(sp)
   8ede8:	d9400317 	ldw	r5,12(sp)
   8edec:	d9800417 	ldw	r6,16(sp)
   8edf0:	480f883a 	mov	r7,r9
   8edf4:	10000126 	beq	r2,zero,8edfc <__truncdfsf2+0x64>
   8edf8:	49c00054 	ori	r7,r9,1
   8edfc:	008f2dc0 	call	8f2dc <__make_fp>
   8ee00:	dfc00717 	ldw	ra,28(sp)
   8ee04:	dec00804 	addi	sp,sp,32
   8ee08:	f800283a 	ret

0008ee0c <__floatunsidf>:
   8ee0c:	defff204 	addi	sp,sp,-56
   8ee10:	dfc00d15 	stw	ra,52(sp)
   8ee14:	ddc00c15 	stw	r23,48(sp)
   8ee18:	dd800b15 	stw	r22,44(sp)
   8ee1c:	dd400a15 	stw	r21,40(sp)
   8ee20:	dd000915 	stw	r20,36(sp)
   8ee24:	dcc00815 	stw	r19,32(sp)
   8ee28:	dc800715 	stw	r18,28(sp)
   8ee2c:	dc400615 	stw	r17,24(sp)
   8ee30:	dc000515 	stw	r16,20(sp)
   8ee34:	d8000115 	stw	zero,4(sp)
   8ee38:	20000f1e 	bne	r4,zero,8ee78 <__floatunsidf+0x6c>
   8ee3c:	00800084 	movi	r2,2
   8ee40:	d8800015 	stw	r2,0(sp)
   8ee44:	d809883a 	mov	r4,sp
   8ee48:	008f3080 	call	8f308 <__pack_d>
   8ee4c:	dfc00d17 	ldw	ra,52(sp)
   8ee50:	ddc00c17 	ldw	r23,48(sp)
   8ee54:	dd800b17 	ldw	r22,44(sp)
   8ee58:	dd400a17 	ldw	r21,40(sp)
   8ee5c:	dd000917 	ldw	r20,36(sp)
   8ee60:	dcc00817 	ldw	r19,32(sp)
   8ee64:	dc800717 	ldw	r18,28(sp)
   8ee68:	dc400617 	ldw	r17,24(sp)
   8ee6c:	dc000517 	ldw	r16,20(sp)
   8ee70:	dec00e04 	addi	sp,sp,56
   8ee74:	f800283a 	ret
   8ee78:	008000c4 	movi	r2,3
   8ee7c:	00c00f04 	movi	r3,60
   8ee80:	002f883a 	mov	r23,zero
   8ee84:	202d883a 	mov	r22,r4
   8ee88:	d8800015 	stw	r2,0(sp)
   8ee8c:	d8c00215 	stw	r3,8(sp)
   8ee90:	d9000315 	stw	r4,12(sp)
   8ee94:	ddc00415 	stw	r23,16(sp)
   8ee98:	008f0ec0 	call	8f0ec <__clzsi2>
   8ee9c:	12400744 	addi	r9,r2,29
   8eea0:	48000b16 	blt	r9,zero,8eed0 <__floatunsidf+0xc4>
   8eea4:	483fe726 	beq	r9,zero,8ee44 <__floatunsidf+0x38>
   8eea8:	10bfff44 	addi	r2,r2,-3
   8eeac:	10002e16 	blt	r2,zero,8ef68 <__floatunsidf+0x15c>
   8eeb0:	b0a2983a 	sll	r17,r22,r2
   8eeb4:	0021883a 	mov	r16,zero
   8eeb8:	d8800217 	ldw	r2,8(sp)
   8eebc:	dc400415 	stw	r17,16(sp)
   8eec0:	dc000315 	stw	r16,12(sp)
   8eec4:	1245c83a 	sub	r2,r2,r9
   8eec8:	d8800215 	stw	r2,8(sp)
   8eecc:	003fdd06 	br	8ee44 <__floatunsidf+0x38>
   8eed0:	0255c83a 	sub	r10,zero,r9
   8eed4:	51bff804 	addi	r6,r10,-32
   8eed8:	30001b16 	blt	r6,zero,8ef48 <__floatunsidf+0x13c>
   8eedc:	b9a8d83a 	srl	r20,r23,r6
   8eee0:	002b883a 	mov	r21,zero
   8eee4:	000f883a 	mov	r7,zero
   8eee8:	01000044 	movi	r4,1
   8eeec:	0011883a 	mov	r8,zero
   8eef0:	30002516 	blt	r6,zero,8ef88 <__floatunsidf+0x17c>
   8eef4:	21a6983a 	sll	r19,r4,r6
   8eef8:	0025883a 	mov	r18,zero
   8eefc:	00bfffc4 	movi	r2,-1
   8ef00:	9089883a 	add	r4,r18,r2
   8ef04:	988b883a 	add	r5,r19,r2
   8ef08:	248d803a 	cmpltu	r6,r4,r18
   8ef0c:	314b883a 	add	r5,r6,r5
   8ef10:	b104703a 	and	r2,r22,r4
   8ef14:	b946703a 	and	r3,r23,r5
   8ef18:	10c4b03a 	or	r2,r2,r3
   8ef1c:	10000226 	beq	r2,zero,8ef28 <__floatunsidf+0x11c>
   8ef20:	01c00044 	movi	r7,1
   8ef24:	0011883a 	mov	r8,zero
   8ef28:	d9000217 	ldw	r4,8(sp)
   8ef2c:	a1c4b03a 	or	r2,r20,r7
   8ef30:	aa06b03a 	or	r3,r21,r8
   8ef34:	2249c83a 	sub	r4,r4,r9
   8ef38:	d8c00415 	stw	r3,16(sp)
   8ef3c:	d9000215 	stw	r4,8(sp)
   8ef40:	d8800315 	stw	r2,12(sp)
   8ef44:	003fbf06 	br	8ee44 <__floatunsidf+0x38>
   8ef48:	bdc7883a 	add	r3,r23,r23
   8ef4c:	008007c4 	movi	r2,31
   8ef50:	1285c83a 	sub	r2,r2,r10
   8ef54:	1886983a 	sll	r3,r3,r2
   8ef58:	b2a8d83a 	srl	r20,r22,r10
   8ef5c:	baaad83a 	srl	r21,r23,r10
   8ef60:	1d28b03a 	or	r20,r3,r20
   8ef64:	003fdf06 	br	8eee4 <__floatunsidf+0xd8>
   8ef68:	b006d07a 	srli	r3,r22,1
   8ef6c:	008007c4 	movi	r2,31
   8ef70:	1245c83a 	sub	r2,r2,r9
   8ef74:	1886d83a 	srl	r3,r3,r2
   8ef78:	ba62983a 	sll	r17,r23,r9
   8ef7c:	b260983a 	sll	r16,r22,r9
   8ef80:	1c62b03a 	or	r17,r3,r17
   8ef84:	003fcc06 	br	8eeb8 <__floatunsidf+0xac>
   8ef88:	2006d07a 	srli	r3,r4,1
   8ef8c:	008007c4 	movi	r2,31
   8ef90:	1285c83a 	sub	r2,r2,r10
   8ef94:	18a6d83a 	srl	r19,r3,r2
   8ef98:	22a4983a 	sll	r18,r4,r10
   8ef9c:	003fd706 	br	8eefc <__floatunsidf+0xf0>

0008efa0 <udivmodsi4>:
   8efa0:	29001b2e 	bgeu	r5,r4,8f010 <udivmodsi4+0x70>
   8efa4:	28001a16 	blt	r5,zero,8f010 <udivmodsi4+0x70>
   8efa8:	00800044 	movi	r2,1
   8efac:	0007883a 	mov	r3,zero
   8efb0:	01c007c4 	movi	r7,31
   8efb4:	00000306 	br	8efc4 <udivmodsi4+0x24>
   8efb8:	19c01326 	beq	r3,r7,8f008 <udivmodsi4+0x68>
   8efbc:	18c00044 	addi	r3,r3,1
   8efc0:	28000416 	blt	r5,zero,8efd4 <udivmodsi4+0x34>
   8efc4:	294b883a 	add	r5,r5,r5
   8efc8:	1085883a 	add	r2,r2,r2
   8efcc:	293ffa36 	bltu	r5,r4,8efb8 <udivmodsi4+0x18>
   8efd0:	10000d26 	beq	r2,zero,8f008 <udivmodsi4+0x68>
   8efd4:	0007883a 	mov	r3,zero
   8efd8:	21400236 	bltu	r4,r5,8efe4 <udivmodsi4+0x44>
   8efdc:	2149c83a 	sub	r4,r4,r5
   8efe0:	1886b03a 	or	r3,r3,r2
   8efe4:	1004d07a 	srli	r2,r2,1
   8efe8:	280ad07a 	srli	r5,r5,1
   8efec:	103ffa1e 	bne	r2,zero,8efd8 <udivmodsi4+0x38>
   8eff0:	30000226 	beq	r6,zero,8effc <udivmodsi4+0x5c>
   8eff4:	2005883a 	mov	r2,r4
   8eff8:	f800283a 	ret
   8effc:	1809883a 	mov	r4,r3
   8f000:	2005883a 	mov	r2,r4
   8f004:	f800283a 	ret
   8f008:	0007883a 	mov	r3,zero
   8f00c:	003ff806 	br	8eff0 <udivmodsi4+0x50>
   8f010:	00800044 	movi	r2,1
   8f014:	0007883a 	mov	r3,zero
   8f018:	003fef06 	br	8efd8 <udivmodsi4+0x38>

0008f01c <__divsi3>:
   8f01c:	defffe04 	addi	sp,sp,-8
   8f020:	dc000015 	stw	r16,0(sp)
   8f024:	dfc00115 	stw	ra,4(sp)
   8f028:	0021883a 	mov	r16,zero
   8f02c:	20000c16 	blt	r4,zero,8f060 <__divsi3+0x44>
   8f030:	000d883a 	mov	r6,zero
   8f034:	28000e16 	blt	r5,zero,8f070 <__divsi3+0x54>
   8f038:	008efa00 	call	8efa0 <udivmodsi4>
   8f03c:	1007883a 	mov	r3,r2
   8f040:	8005003a 	cmpeq	r2,r16,zero
   8f044:	1000011e 	bne	r2,zero,8f04c <__divsi3+0x30>
   8f048:	00c7c83a 	sub	r3,zero,r3
   8f04c:	1805883a 	mov	r2,r3
   8f050:	dfc00117 	ldw	ra,4(sp)
   8f054:	dc000017 	ldw	r16,0(sp)
   8f058:	dec00204 	addi	sp,sp,8
   8f05c:	f800283a 	ret
   8f060:	0109c83a 	sub	r4,zero,r4
   8f064:	04000044 	movi	r16,1
   8f068:	000d883a 	mov	r6,zero
   8f06c:	283ff20e 	bge	r5,zero,8f038 <__divsi3+0x1c>
   8f070:	014bc83a 	sub	r5,zero,r5
   8f074:	8021003a 	cmpeq	r16,r16,zero
   8f078:	003fef06 	br	8f038 <__divsi3+0x1c>

0008f07c <__modsi3>:
   8f07c:	deffff04 	addi	sp,sp,-4
   8f080:	dfc00015 	stw	ra,0(sp)
   8f084:	01800044 	movi	r6,1
   8f088:	2807883a 	mov	r3,r5
   8f08c:	20000416 	blt	r4,zero,8f0a0 <__modsi3+0x24>
   8f090:	28000c16 	blt	r5,zero,8f0c4 <__modsi3+0x48>
   8f094:	dfc00017 	ldw	ra,0(sp)
   8f098:	dec00104 	addi	sp,sp,4
   8f09c:	008efa01 	jmpi	8efa0 <udivmodsi4>
   8f0a0:	0109c83a 	sub	r4,zero,r4
   8f0a4:	28000b16 	blt	r5,zero,8f0d4 <__modsi3+0x58>
   8f0a8:	180b883a 	mov	r5,r3
   8f0ac:	01800044 	movi	r6,1
   8f0b0:	008efa00 	call	8efa0 <udivmodsi4>
   8f0b4:	0085c83a 	sub	r2,zero,r2
   8f0b8:	dfc00017 	ldw	ra,0(sp)
   8f0bc:	dec00104 	addi	sp,sp,4
   8f0c0:	f800283a 	ret
   8f0c4:	014bc83a 	sub	r5,zero,r5
   8f0c8:	dfc00017 	ldw	ra,0(sp)
   8f0cc:	dec00104 	addi	sp,sp,4
   8f0d0:	008efa01 	jmpi	8efa0 <udivmodsi4>
   8f0d4:	0147c83a 	sub	r3,zero,r5
   8f0d8:	003ff306 	br	8f0a8 <__modsi3+0x2c>

0008f0dc <__udivsi3>:
   8f0dc:	000d883a 	mov	r6,zero
   8f0e0:	008efa01 	jmpi	8efa0 <udivmodsi4>

0008f0e4 <__umodsi3>:
   8f0e4:	01800044 	movi	r6,1
   8f0e8:	008efa01 	jmpi	8efa0 <udivmodsi4>

0008f0ec <__clzsi2>:
   8f0ec:	00bfffd4 	movui	r2,65535
   8f0f0:	11000e36 	bltu	r2,r4,8f12c <__clzsi2+0x40>
   8f0f4:	00803fc4 	movi	r2,255
   8f0f8:	01400204 	movi	r5,8
   8f0fc:	0007883a 	mov	r3,zero
   8f100:	11001036 	bltu	r2,r4,8f144 <__clzsi2+0x58>
   8f104:	000b883a 	mov	r5,zero
   8f108:	20c6d83a 	srl	r3,r4,r3
   8f10c:	00800274 	movhi	r2,9
   8f110:	108f1004 	addi	r2,r2,15424
   8f114:	1887883a 	add	r3,r3,r2
   8f118:	18800003 	ldbu	r2,0(r3)
   8f11c:	00c00804 	movi	r3,32
   8f120:	2885883a 	add	r2,r5,r2
   8f124:	1885c83a 	sub	r2,r3,r2
   8f128:	f800283a 	ret
   8f12c:	01400404 	movi	r5,16
   8f130:	00804034 	movhi	r2,256
   8f134:	10bfffc4 	addi	r2,r2,-1
   8f138:	2807883a 	mov	r3,r5
   8f13c:	113ff22e 	bgeu	r2,r4,8f108 <__clzsi2+0x1c>
   8f140:	01400604 	movi	r5,24
   8f144:	2807883a 	mov	r3,r5
   8f148:	20c6d83a 	srl	r3,r4,r3
   8f14c:	00800274 	movhi	r2,9
   8f150:	108f1004 	addi	r2,r2,15424
   8f154:	1887883a 	add	r3,r3,r2
   8f158:	18800003 	ldbu	r2,0(r3)
   8f15c:	00c00804 	movi	r3,32
   8f160:	2885883a 	add	r2,r5,r2
   8f164:	1885c83a 	sub	r2,r3,r2
   8f168:	f800283a 	ret

0008f16c <__unpack_f>:
   8f16c:	21800017 	ldw	r6,0(r4)
   8f170:	00c02034 	movhi	r3,128
   8f174:	18ffffc4 	addi	r3,r3,-1
   8f178:	3004d5fa 	srli	r2,r6,23
   8f17c:	3008d7fa 	srli	r4,r6,31
   8f180:	30ce703a 	and	r7,r6,r3
   8f184:	10c03fcc 	andi	r3,r2,255
   8f188:	29000115 	stw	r4,4(r5)
   8f18c:	1800131e 	bne	r3,zero,8f1dc <__unpack_f+0x70>
   8f190:	38000f26 	beq	r7,zero,8f1d0 <__unpack_f+0x64>
   8f194:	380691fa 	slli	r3,r7,7
   8f198:	01bfe084 	movi	r6,-126
   8f19c:	008000c4 	movi	r2,3
   8f1a0:	01100034 	movhi	r4,16384
   8f1a4:	213fffc4 	addi	r4,r4,-1
   8f1a8:	28800015 	stw	r2,0(r5)
   8f1ac:	29800215 	stw	r6,8(r5)
   8f1b0:	20c00536 	bltu	r4,r3,8f1c8 <__unpack_f+0x5c>
   8f1b4:	3005883a 	mov	r2,r6
   8f1b8:	18c7883a 	add	r3,r3,r3
   8f1bc:	10bfffc4 	addi	r2,r2,-1
   8f1c0:	20fffd2e 	bgeu	r4,r3,8f1b8 <__unpack_f+0x4c>
   8f1c4:	28800215 	stw	r2,8(r5)
   8f1c8:	28c00315 	stw	r3,12(r5)
   8f1cc:	f800283a 	ret
   8f1d0:	00800084 	movi	r2,2
   8f1d4:	28800015 	stw	r2,0(r5)
   8f1d8:	f800283a 	ret
   8f1dc:	00803fc4 	movi	r2,255
   8f1e0:	18800826 	beq	r3,r2,8f204 <__unpack_f+0x98>
   8f1e4:	380491fa 	slli	r2,r7,7
   8f1e8:	18ffe044 	addi	r3,r3,-127
   8f1ec:	28c00215 	stw	r3,8(r5)
   8f1f0:	10900034 	orhi	r2,r2,16384
   8f1f4:	28800315 	stw	r2,12(r5)
   8f1f8:	008000c4 	movi	r2,3
   8f1fc:	28800015 	stw	r2,0(r5)
   8f200:	f800283a 	ret
   8f204:	3800031e 	bne	r7,zero,8f214 <__unpack_f+0xa8>
   8f208:	00800104 	movi	r2,4
   8f20c:	28800015 	stw	r2,0(r5)
   8f210:	f800283a 	ret
   8f214:	3080042c 	andhi	r2,r6,16
   8f218:	10000426 	beq	r2,zero,8f22c <__unpack_f+0xc0>
   8f21c:	00800044 	movi	r2,1
   8f220:	28800015 	stw	r2,0(r5)
   8f224:	29c00315 	stw	r7,12(r5)
   8f228:	f800283a 	ret
   8f22c:	28000015 	stw	zero,0(r5)
   8f230:	003ffc06 	br	8f224 <__unpack_f+0xb8>

0008f234 <__fpcmp_parts_f>:
   8f234:	21800017 	ldw	r6,0(r4)
   8f238:	00c00044 	movi	r3,1
   8f23c:	19800a2e 	bgeu	r3,r6,8f268 <__fpcmp_parts_f+0x34>
   8f240:	28800017 	ldw	r2,0(r5)
   8f244:	1880082e 	bgeu	r3,r2,8f268 <__fpcmp_parts_f+0x34>
   8f248:	00c00104 	movi	r3,4
   8f24c:	30c01e26 	beq	r6,r3,8f2c8 <__fpcmp_parts_f+0x94>
   8f250:	10c01a26 	beq	r2,r3,8f2bc <__fpcmp_parts_f+0x88>
   8f254:	00c00084 	movi	r3,2
   8f258:	30c00526 	beq	r6,r3,8f270 <__fpcmp_parts_f+0x3c>
   8f25c:	10c0071e 	bne	r2,r3,8f27c <__fpcmp_parts_f+0x48>
   8f260:	20800117 	ldw	r2,4(r4)
   8f264:	1000091e 	bne	r2,zero,8f28c <__fpcmp_parts_f+0x58>
   8f268:	00800044 	movi	r2,1
   8f26c:	f800283a 	ret
   8f270:	10c0121e 	bne	r2,r3,8f2bc <__fpcmp_parts_f+0x88>
   8f274:	0005883a 	mov	r2,zero
   8f278:	f800283a 	ret
   8f27c:	20c00117 	ldw	r3,4(r4)
   8f280:	28800117 	ldw	r2,4(r5)
   8f284:	18800326 	beq	r3,r2,8f294 <__fpcmp_parts_f+0x60>
   8f288:	183ff726 	beq	r3,zero,8f268 <__fpcmp_parts_f+0x34>
   8f28c:	00bfffc4 	movi	r2,-1
   8f290:	f800283a 	ret
   8f294:	21800217 	ldw	r6,8(r4)
   8f298:	28800217 	ldw	r2,8(r5)
   8f29c:	11bffa16 	blt	r2,r6,8f288 <__fpcmp_parts_f+0x54>
   8f2a0:	30800416 	blt	r6,r2,8f2b4 <__fpcmp_parts_f+0x80>
   8f2a4:	21000317 	ldw	r4,12(r4)
   8f2a8:	29400317 	ldw	r5,12(r5)
   8f2ac:	293ff636 	bltu	r5,r4,8f288 <__fpcmp_parts_f+0x54>
   8f2b0:	217ff02e 	bgeu	r4,r5,8f274 <__fpcmp_parts_f+0x40>
   8f2b4:	183fec1e 	bne	r3,zero,8f268 <__fpcmp_parts_f+0x34>
   8f2b8:	003ff406 	br	8f28c <__fpcmp_parts_f+0x58>
   8f2bc:	28800117 	ldw	r2,4(r5)
   8f2c0:	103fe91e 	bne	r2,zero,8f268 <__fpcmp_parts_f+0x34>
   8f2c4:	003ff106 	br	8f28c <__fpcmp_parts_f+0x58>
   8f2c8:	11bfe51e 	bne	r2,r6,8f260 <__fpcmp_parts_f+0x2c>
   8f2cc:	28c00117 	ldw	r3,4(r5)
   8f2d0:	20800117 	ldw	r2,4(r4)
   8f2d4:	1885c83a 	sub	r2,r3,r2
   8f2d8:	f800283a 	ret

0008f2dc <__make_fp>:
   8f2dc:	defffb04 	addi	sp,sp,-20
   8f2e0:	d9000015 	stw	r4,0(sp)
   8f2e4:	d809883a 	mov	r4,sp
   8f2e8:	dfc00415 	stw	ra,16(sp)
   8f2ec:	d9400115 	stw	r5,4(sp)
   8f2f0:	d9800215 	stw	r6,8(sp)
   8f2f4:	d9c00315 	stw	r7,12(sp)
   8f2f8:	008f81c0 	call	8f81c <__pack_f>
   8f2fc:	dfc00417 	ldw	ra,16(sp)
   8f300:	dec00504 	addi	sp,sp,20
   8f304:	f800283a 	ret

0008f308 <__pack_d>:
   8f308:	20c00017 	ldw	r3,0(r4)
   8f30c:	defffd04 	addi	sp,sp,-12
   8f310:	dc000015 	stw	r16,0(sp)
   8f314:	dc800215 	stw	r18,8(sp)
   8f318:	dc400115 	stw	r17,4(sp)
   8f31c:	00800044 	movi	r2,1
   8f320:	22000317 	ldw	r8,12(r4)
   8f324:	001f883a 	mov	r15,zero
   8f328:	22400417 	ldw	r9,16(r4)
   8f32c:	24000117 	ldw	r16,4(r4)
   8f330:	10c0552e 	bgeu	r2,r3,8f488 <__pack_d+0x180>
   8f334:	00800104 	movi	r2,4
   8f338:	18804f26 	beq	r3,r2,8f478 <__pack_d+0x170>
   8f33c:	00800084 	movi	r2,2
   8f340:	18800226 	beq	r3,r2,8f34c <__pack_d+0x44>
   8f344:	4244b03a 	or	r2,r8,r9
   8f348:	10001a1e 	bne	r2,zero,8f3b4 <__pack_d+0xac>
   8f34c:	000d883a 	mov	r6,zero
   8f350:	000f883a 	mov	r7,zero
   8f354:	0011883a 	mov	r8,zero
   8f358:	00800434 	movhi	r2,16
   8f35c:	10bfffc4 	addi	r2,r2,-1
   8f360:	301d883a 	mov	r14,r6
   8f364:	3884703a 	and	r2,r7,r2
   8f368:	400a953a 	slli	r5,r8,20
   8f36c:	79bffc2c 	andhi	r6,r15,65520
   8f370:	308cb03a 	or	r6,r6,r2
   8f374:	00e00434 	movhi	r3,32784
   8f378:	18ffffc4 	addi	r3,r3,-1
   8f37c:	800497fa 	slli	r2,r16,31
   8f380:	30c6703a 	and	r3,r6,r3
   8f384:	1946b03a 	or	r3,r3,r5
   8f388:	01600034 	movhi	r5,32768
   8f38c:	297fffc4 	addi	r5,r5,-1
   8f390:	194a703a 	and	r5,r3,r5
   8f394:	288ab03a 	or	r5,r5,r2
   8f398:	2807883a 	mov	r3,r5
   8f39c:	7005883a 	mov	r2,r14
   8f3a0:	dc800217 	ldw	r18,8(sp)
   8f3a4:	dc400117 	ldw	r17,4(sp)
   8f3a8:	dc000017 	ldw	r16,0(sp)
   8f3ac:	dec00304 	addi	sp,sp,12
   8f3b0:	f800283a 	ret
   8f3b4:	21000217 	ldw	r4,8(r4)
   8f3b8:	00bf0084 	movi	r2,-1022
   8f3bc:	20803f16 	blt	r4,r2,8f4bc <__pack_d+0x1b4>
   8f3c0:	0080ffc4 	movi	r2,1023
   8f3c4:	11002c16 	blt	r2,r4,8f478 <__pack_d+0x170>
   8f3c8:	00803fc4 	movi	r2,255
   8f3cc:	408c703a 	and	r6,r8,r2
   8f3d0:	00802004 	movi	r2,128
   8f3d4:	0007883a 	mov	r3,zero
   8f3d8:	000f883a 	mov	r7,zero
   8f3dc:	2280ffc4 	addi	r10,r4,1023
   8f3e0:	30801e26 	beq	r6,r2,8f45c <__pack_d+0x154>
   8f3e4:	00801fc4 	movi	r2,127
   8f3e8:	4089883a 	add	r4,r8,r2
   8f3ec:	220d803a 	cmpltu	r6,r4,r8
   8f3f0:	324d883a 	add	r6,r6,r9
   8f3f4:	2011883a 	mov	r8,r4
   8f3f8:	3013883a 	mov	r9,r6
   8f3fc:	00880034 	movhi	r2,8192
   8f400:	10bfffc4 	addi	r2,r2,-1
   8f404:	12400d36 	bltu	r2,r9,8f43c <__pack_d+0x134>
   8f408:	4804963a 	slli	r2,r9,24
   8f40c:	400cd23a 	srli	r6,r8,8
   8f410:	480ed23a 	srli	r7,r9,8
   8f414:	013fffc4 	movi	r4,-1
   8f418:	118cb03a 	or	r6,r2,r6
   8f41c:	01400434 	movhi	r5,16
   8f420:	297fffc4 	addi	r5,r5,-1
   8f424:	3104703a 	and	r2,r6,r4
   8f428:	3946703a 	and	r3,r7,r5
   8f42c:	5201ffcc 	andi	r8,r10,2047
   8f430:	100d883a 	mov	r6,r2
   8f434:	180f883a 	mov	r7,r3
   8f438:	003fc706 	br	8f358 <__pack_d+0x50>
   8f43c:	480897fa 	slli	r4,r9,31
   8f440:	4004d07a 	srli	r2,r8,1
   8f444:	4806d07a 	srli	r3,r9,1
   8f448:	52800044 	addi	r10,r10,1
   8f44c:	2084b03a 	or	r2,r4,r2
   8f450:	1011883a 	mov	r8,r2
   8f454:	1813883a 	mov	r9,r3
   8f458:	003feb06 	br	8f408 <__pack_d+0x100>
   8f45c:	383fe11e 	bne	r7,zero,8f3e4 <__pack_d+0xdc>
   8f460:	01004004 	movi	r4,256
   8f464:	4104703a 	and	r2,r8,r4
   8f468:	10c4b03a 	or	r2,r2,r3
   8f46c:	103fe326 	beq	r2,zero,8f3fc <__pack_d+0xf4>
   8f470:	3005883a 	mov	r2,r6
   8f474:	003fdc06 	br	8f3e8 <__pack_d+0xe0>
   8f478:	000d883a 	mov	r6,zero
   8f47c:	000f883a 	mov	r7,zero
   8f480:	0201ffc4 	movi	r8,2047
   8f484:	003fb406 	br	8f358 <__pack_d+0x50>
   8f488:	0005883a 	mov	r2,zero
   8f48c:	00c00234 	movhi	r3,8
   8f490:	408cb03a 	or	r6,r8,r2
   8f494:	48ceb03a 	or	r7,r9,r3
   8f498:	013fffc4 	movi	r4,-1
   8f49c:	01400434 	movhi	r5,16
   8f4a0:	297fffc4 	addi	r5,r5,-1
   8f4a4:	3104703a 	and	r2,r6,r4
   8f4a8:	3946703a 	and	r3,r7,r5
   8f4ac:	100d883a 	mov	r6,r2
   8f4b0:	180f883a 	mov	r7,r3
   8f4b4:	0201ffc4 	movi	r8,2047
   8f4b8:	003fa706 	br	8f358 <__pack_d+0x50>
   8f4bc:	1109c83a 	sub	r4,r2,r4
   8f4c0:	00800e04 	movi	r2,56
   8f4c4:	11004316 	blt	r2,r4,8f5d4 <__pack_d+0x2cc>
   8f4c8:	21fff804 	addi	r7,r4,-32
   8f4cc:	38004516 	blt	r7,zero,8f5e4 <__pack_d+0x2dc>
   8f4d0:	49d8d83a 	srl	r12,r9,r7
   8f4d4:	001b883a 	mov	r13,zero
   8f4d8:	0023883a 	mov	r17,zero
   8f4dc:	01400044 	movi	r5,1
   8f4e0:	0025883a 	mov	r18,zero
   8f4e4:	38004716 	blt	r7,zero,8f604 <__pack_d+0x2fc>
   8f4e8:	29d6983a 	sll	r11,r5,r7
   8f4ec:	0015883a 	mov	r10,zero
   8f4f0:	00bfffc4 	movi	r2,-1
   8f4f4:	5089883a 	add	r4,r10,r2
   8f4f8:	588b883a 	add	r5,r11,r2
   8f4fc:	228d803a 	cmpltu	r6,r4,r10
   8f500:	314b883a 	add	r5,r6,r5
   8f504:	4104703a 	and	r2,r8,r4
   8f508:	4946703a 	and	r3,r9,r5
   8f50c:	10c4b03a 	or	r2,r2,r3
   8f510:	10000226 	beq	r2,zero,8f51c <__pack_d+0x214>
   8f514:	04400044 	movi	r17,1
   8f518:	0025883a 	mov	r18,zero
   8f51c:	00803fc4 	movi	r2,255
   8f520:	644eb03a 	or	r7,r12,r17
   8f524:	3892703a 	and	r9,r7,r2
   8f528:	00802004 	movi	r2,128
   8f52c:	6c90b03a 	or	r8,r13,r18
   8f530:	0015883a 	mov	r10,zero
   8f534:	48801626 	beq	r9,r2,8f590 <__pack_d+0x288>
   8f538:	01001fc4 	movi	r4,127
   8f53c:	3905883a 	add	r2,r7,r4
   8f540:	11cd803a 	cmpltu	r6,r2,r7
   8f544:	320d883a 	add	r6,r6,r8
   8f548:	100f883a 	mov	r7,r2
   8f54c:	00840034 	movhi	r2,4096
   8f550:	10bfffc4 	addi	r2,r2,-1
   8f554:	3011883a 	mov	r8,r6
   8f558:	0007883a 	mov	r3,zero
   8f55c:	11801b36 	bltu	r2,r6,8f5cc <__pack_d+0x2c4>
   8f560:	4004963a 	slli	r2,r8,24
   8f564:	3808d23a 	srli	r4,r7,8
   8f568:	400ad23a 	srli	r5,r8,8
   8f56c:	1813883a 	mov	r9,r3
   8f570:	1108b03a 	or	r4,r2,r4
   8f574:	00bfffc4 	movi	r2,-1
   8f578:	00c00434 	movhi	r3,16
   8f57c:	18ffffc4 	addi	r3,r3,-1
   8f580:	208c703a 	and	r6,r4,r2
   8f584:	28ce703a 	and	r7,r5,r3
   8f588:	4a01ffcc 	andi	r8,r9,2047
   8f58c:	003f7206 	br	8f358 <__pack_d+0x50>
   8f590:	503fe91e 	bne	r10,zero,8f538 <__pack_d+0x230>
   8f594:	01004004 	movi	r4,256
   8f598:	3904703a 	and	r2,r7,r4
   8f59c:	0007883a 	mov	r3,zero
   8f5a0:	10c4b03a 	or	r2,r2,r3
   8f5a4:	10000626 	beq	r2,zero,8f5c0 <__pack_d+0x2b8>
   8f5a8:	3a45883a 	add	r2,r7,r9
   8f5ac:	11cd803a 	cmpltu	r6,r2,r7
   8f5b0:	320d883a 	add	r6,r6,r8
   8f5b4:	100f883a 	mov	r7,r2
   8f5b8:	3011883a 	mov	r8,r6
   8f5bc:	0007883a 	mov	r3,zero
   8f5c0:	00840034 	movhi	r2,4096
   8f5c4:	10bfffc4 	addi	r2,r2,-1
   8f5c8:	123fe52e 	bgeu	r2,r8,8f560 <__pack_d+0x258>
   8f5cc:	00c00044 	movi	r3,1
   8f5d0:	003fe306 	br	8f560 <__pack_d+0x258>
   8f5d4:	0009883a 	mov	r4,zero
   8f5d8:	0013883a 	mov	r9,zero
   8f5dc:	000b883a 	mov	r5,zero
   8f5e0:	003fe406 	br	8f574 <__pack_d+0x26c>
   8f5e4:	4a47883a 	add	r3,r9,r9
   8f5e8:	008007c4 	movi	r2,31
   8f5ec:	1105c83a 	sub	r2,r2,r4
   8f5f0:	1886983a 	sll	r3,r3,r2
   8f5f4:	4118d83a 	srl	r12,r8,r4
   8f5f8:	491ad83a 	srl	r13,r9,r4
   8f5fc:	1b18b03a 	or	r12,r3,r12
   8f600:	003fb506 	br	8f4d8 <__pack_d+0x1d0>
   8f604:	2806d07a 	srli	r3,r5,1
   8f608:	008007c4 	movi	r2,31
   8f60c:	1105c83a 	sub	r2,r2,r4
   8f610:	1896d83a 	srl	r11,r3,r2
   8f614:	2914983a 	sll	r10,r5,r4
   8f618:	003fb506 	br	8f4f0 <__pack_d+0x1e8>

0008f61c <__unpack_d>:
   8f61c:	20c00117 	ldw	r3,4(r4)
   8f620:	22400017 	ldw	r9,0(r4)
   8f624:	00800434 	movhi	r2,16
   8f628:	10bfffc4 	addi	r2,r2,-1
   8f62c:	1808d53a 	srli	r4,r3,20
   8f630:	180cd7fa 	srli	r6,r3,31
   8f634:	1894703a 	and	r10,r3,r2
   8f638:	2201ffcc 	andi	r8,r4,2047
   8f63c:	281b883a 	mov	r13,r5
   8f640:	4817883a 	mov	r11,r9
   8f644:	29800115 	stw	r6,4(r5)
   8f648:	5019883a 	mov	r12,r10
   8f64c:	40001e1e 	bne	r8,zero,8f6c8 <__unpack_d+0xac>
   8f650:	4a84b03a 	or	r2,r9,r10
   8f654:	10001926 	beq	r2,zero,8f6bc <__unpack_d+0xa0>
   8f658:	4804d63a 	srli	r2,r9,24
   8f65c:	500c923a 	slli	r6,r10,8
   8f660:	013f0084 	movi	r4,-1022
   8f664:	00c40034 	movhi	r3,4096
   8f668:	18ffffc4 	addi	r3,r3,-1
   8f66c:	118cb03a 	or	r6,r2,r6
   8f670:	008000c4 	movi	r2,3
   8f674:	480a923a 	slli	r5,r9,8
   8f678:	68800015 	stw	r2,0(r13)
   8f67c:	69000215 	stw	r4,8(r13)
   8f680:	19800b36 	bltu	r3,r6,8f6b0 <__unpack_d+0x94>
   8f684:	200f883a 	mov	r7,r4
   8f688:	1811883a 	mov	r8,r3
   8f68c:	2945883a 	add	r2,r5,r5
   8f690:	1149803a 	cmpltu	r4,r2,r5
   8f694:	3187883a 	add	r3,r6,r6
   8f698:	20c9883a 	add	r4,r4,r3
   8f69c:	100b883a 	mov	r5,r2
   8f6a0:	200d883a 	mov	r6,r4
   8f6a4:	39ffffc4 	addi	r7,r7,-1
   8f6a8:	413ff82e 	bgeu	r8,r4,8f68c <__unpack_d+0x70>
   8f6ac:	69c00215 	stw	r7,8(r13)
   8f6b0:	69800415 	stw	r6,16(r13)
   8f6b4:	69400315 	stw	r5,12(r13)
   8f6b8:	f800283a 	ret
   8f6bc:	00800084 	movi	r2,2
   8f6c0:	28800015 	stw	r2,0(r5)
   8f6c4:	f800283a 	ret
   8f6c8:	0081ffc4 	movi	r2,2047
   8f6cc:	40800f26 	beq	r8,r2,8f70c <__unpack_d+0xf0>
   8f6d0:	480cd63a 	srli	r6,r9,24
   8f6d4:	5006923a 	slli	r3,r10,8
   8f6d8:	4804923a 	slli	r2,r9,8
   8f6dc:	0009883a 	mov	r4,zero
   8f6e0:	30c6b03a 	or	r3,r6,r3
   8f6e4:	01440034 	movhi	r5,4096
   8f6e8:	110cb03a 	or	r6,r2,r4
   8f6ec:	423f0044 	addi	r8,r8,-1023
   8f6f0:	194eb03a 	or	r7,r3,r5
   8f6f4:	008000c4 	movi	r2,3
   8f6f8:	69c00415 	stw	r7,16(r13)
   8f6fc:	6a000215 	stw	r8,8(r13)
   8f700:	68800015 	stw	r2,0(r13)
   8f704:	69800315 	stw	r6,12(r13)
   8f708:	f800283a 	ret
   8f70c:	4a84b03a 	or	r2,r9,r10
   8f710:	1000031e 	bne	r2,zero,8f720 <__unpack_d+0x104>
   8f714:	00800104 	movi	r2,4
   8f718:	28800015 	stw	r2,0(r5)
   8f71c:	f800283a 	ret
   8f720:	0009883a 	mov	r4,zero
   8f724:	01400234 	movhi	r5,8
   8f728:	4904703a 	and	r2,r9,r4
   8f72c:	5146703a 	and	r3,r10,r5
   8f730:	10c4b03a 	or	r2,r2,r3
   8f734:	10000526 	beq	r2,zero,8f74c <__unpack_d+0x130>
   8f738:	00800044 	movi	r2,1
   8f73c:	68800015 	stw	r2,0(r13)
   8f740:	6b000415 	stw	r12,16(r13)
   8f744:	6ac00315 	stw	r11,12(r13)
   8f748:	f800283a 	ret
   8f74c:	68000015 	stw	zero,0(r13)
   8f750:	003ffb06 	br	8f740 <__unpack_d+0x124>

0008f754 <__fpcmp_parts_d>:
   8f754:	21800017 	ldw	r6,0(r4)
   8f758:	00c00044 	movi	r3,1
   8f75c:	19800a2e 	bgeu	r3,r6,8f788 <__fpcmp_parts_d+0x34>
   8f760:	28800017 	ldw	r2,0(r5)
   8f764:	1880082e 	bgeu	r3,r2,8f788 <__fpcmp_parts_d+0x34>
   8f768:	00c00104 	movi	r3,4
   8f76c:	30c02626 	beq	r6,r3,8f808 <__fpcmp_parts_d+0xb4>
   8f770:	10c02226 	beq	r2,r3,8f7fc <__fpcmp_parts_d+0xa8>
   8f774:	00c00084 	movi	r3,2
   8f778:	30c00526 	beq	r6,r3,8f790 <__fpcmp_parts_d+0x3c>
   8f77c:	10c0071e 	bne	r2,r3,8f79c <__fpcmp_parts_d+0x48>
   8f780:	20800117 	ldw	r2,4(r4)
   8f784:	1000091e 	bne	r2,zero,8f7ac <__fpcmp_parts_d+0x58>
   8f788:	00800044 	movi	r2,1
   8f78c:	f800283a 	ret
   8f790:	10c01a1e 	bne	r2,r3,8f7fc <__fpcmp_parts_d+0xa8>
   8f794:	0005883a 	mov	r2,zero
   8f798:	f800283a 	ret
   8f79c:	22000117 	ldw	r8,4(r4)
   8f7a0:	28800117 	ldw	r2,4(r5)
   8f7a4:	40800326 	beq	r8,r2,8f7b4 <__fpcmp_parts_d+0x60>
   8f7a8:	403ff726 	beq	r8,zero,8f788 <__fpcmp_parts_d+0x34>
   8f7ac:	00bfffc4 	movi	r2,-1
   8f7b0:	f800283a 	ret
   8f7b4:	20c00217 	ldw	r3,8(r4)
   8f7b8:	28800217 	ldw	r2,8(r5)
   8f7bc:	10fffa16 	blt	r2,r3,8f7a8 <__fpcmp_parts_d+0x54>
   8f7c0:	18800916 	blt	r3,r2,8f7e8 <__fpcmp_parts_d+0x94>
   8f7c4:	21c00417 	ldw	r7,16(r4)
   8f7c8:	28c00417 	ldw	r3,16(r5)
   8f7cc:	21800317 	ldw	r6,12(r4)
   8f7d0:	28800317 	ldw	r2,12(r5)
   8f7d4:	19fff436 	bltu	r3,r7,8f7a8 <__fpcmp_parts_d+0x54>
   8f7d8:	38c00526 	beq	r7,r3,8f7f0 <__fpcmp_parts_d+0x9c>
   8f7dc:	38c00236 	bltu	r7,r3,8f7e8 <__fpcmp_parts_d+0x94>
   8f7e0:	19ffec1e 	bne	r3,r7,8f794 <__fpcmp_parts_d+0x40>
   8f7e4:	30bfeb2e 	bgeu	r6,r2,8f794 <__fpcmp_parts_d+0x40>
   8f7e8:	403fe71e 	bne	r8,zero,8f788 <__fpcmp_parts_d+0x34>
   8f7ec:	003fef06 	br	8f7ac <__fpcmp_parts_d+0x58>
   8f7f0:	11bffa2e 	bgeu	r2,r6,8f7dc <__fpcmp_parts_d+0x88>
   8f7f4:	403fe426 	beq	r8,zero,8f788 <__fpcmp_parts_d+0x34>
   8f7f8:	003fec06 	br	8f7ac <__fpcmp_parts_d+0x58>
   8f7fc:	28800117 	ldw	r2,4(r5)
   8f800:	103fe11e 	bne	r2,zero,8f788 <__fpcmp_parts_d+0x34>
   8f804:	003fe906 	br	8f7ac <__fpcmp_parts_d+0x58>
   8f808:	11bfdd1e 	bne	r2,r6,8f780 <__fpcmp_parts_d+0x2c>
   8f80c:	28c00117 	ldw	r3,4(r5)
   8f810:	20800117 	ldw	r2,4(r4)
   8f814:	1885c83a 	sub	r2,r3,r2
   8f818:	f800283a 	ret

0008f81c <__pack_f>:
   8f81c:	20c00017 	ldw	r3,0(r4)
   8f820:	01c00044 	movi	r7,1
   8f824:	21800317 	ldw	r6,12(r4)
   8f828:	21400117 	ldw	r5,4(r4)
   8f82c:	38c02d2e 	bgeu	r7,r3,8f8e4 <__pack_f+0xc8>
   8f830:	00800104 	movi	r2,4
   8f834:	18802826 	beq	r3,r2,8f8d8 <__pack_f+0xbc>
   8f838:	00800084 	movi	r2,2
   8f83c:	18800126 	beq	r3,r2,8f844 <__pack_f+0x28>
   8f840:	3000101e 	bne	r6,zero,8f884 <__pack_f+0x68>
   8f844:	000d883a 	mov	r6,zero
   8f848:	0007883a 	mov	r3,zero
   8f84c:	19003fcc 	andi	r4,r3,255
   8f850:	200895fa 	slli	r4,r4,23
   8f854:	00c02034 	movhi	r3,128
   8f858:	18ffffc4 	addi	r3,r3,-1
   8f85c:	30c6703a 	and	r3,r6,r3
   8f860:	10a0002c 	andhi	r2,r2,32768
   8f864:	10c4b03a 	or	r2,r2,r3
   8f868:	280a97fa 	slli	r5,r5,31
   8f86c:	1104b03a 	or	r2,r2,r4
   8f870:	00e00034 	movhi	r3,32768
   8f874:	18ffffc4 	addi	r3,r3,-1
   8f878:	10c4703a 	and	r2,r2,r3
   8f87c:	1144b03a 	or	r2,r2,r5
   8f880:	f800283a 	ret
   8f884:	21000217 	ldw	r4,8(r4)
   8f888:	00bfe084 	movi	r2,-126
   8f88c:	20801b16 	blt	r4,r2,8f8fc <__pack_f+0xe0>
   8f890:	00801fc4 	movi	r2,127
   8f894:	11001016 	blt	r2,r4,8f8d8 <__pack_f+0xbc>
   8f898:	308e703a 	and	r7,r6,r2
   8f89c:	2087883a 	add	r3,r4,r2
   8f8a0:	00801004 	movi	r2,64
   8f8a4:	38800526 	beq	r7,r2,8f8bc <__pack_f+0xa0>
   8f8a8:	31800fc4 	addi	r6,r6,63
   8f8ac:	30000716 	blt	r6,zero,8f8cc <__pack_f+0xb0>
   8f8b0:	300490ba 	slli	r2,r6,2
   8f8b4:	100cd27a 	srli	r6,r2,9
   8f8b8:	003fe406 	br	8f84c <__pack_f+0x30>
   8f8bc:	3080200c 	andi	r2,r6,128
   8f8c0:	103ffa26 	beq	r2,zero,8f8ac <__pack_f+0x90>
   8f8c4:	31cd883a 	add	r6,r6,r7
   8f8c8:	003ff806 	br	8f8ac <__pack_f+0x90>
   8f8cc:	300cd07a 	srli	r6,r6,1
   8f8d0:	18c00044 	addi	r3,r3,1
   8f8d4:	003ff606 	br	8f8b0 <__pack_f+0x94>
   8f8d8:	000d883a 	mov	r6,zero
   8f8dc:	00ffffc4 	movi	r3,-1
   8f8e0:	003fda06 	br	8f84c <__pack_f+0x30>
   8f8e4:	31800434 	orhi	r6,r6,16
   8f8e8:	00802034 	movhi	r2,128
   8f8ec:	10bfffc4 	addi	r2,r2,-1
   8f8f0:	308c703a 	and	r6,r6,r2
   8f8f4:	00ffffc4 	movi	r3,-1
   8f8f8:	003fd406 	br	8f84c <__pack_f+0x30>
   8f8fc:	1109c83a 	sub	r4,r2,r4
   8f900:	00800644 	movi	r2,25
   8f904:	11001216 	blt	r2,r4,8f950 <__pack_f+0x134>
   8f908:	3904983a 	sll	r2,r7,r4
   8f90c:	3106d83a 	srl	r3,r6,r4
   8f910:	10bfffc4 	addi	r2,r2,-1
   8f914:	3084703a 	and	r2,r6,r2
   8f918:	1004c03a 	cmpne	r2,r2,zero
   8f91c:	1886b03a 	or	r3,r3,r2
   8f920:	19001fcc 	andi	r4,r3,127
   8f924:	00801004 	movi	r2,64
   8f928:	20800c26 	beq	r4,r2,8f95c <__pack_f+0x140>
   8f92c:	18c00fc4 	addi	r3,r3,63
   8f930:	00900034 	movhi	r2,16384
   8f934:	10bfffc4 	addi	r2,r2,-1
   8f938:	180cd1fa 	srli	r6,r3,7
   8f93c:	10c7803a 	cmpltu	r3,r2,r3
   8f940:	00802034 	movhi	r2,128
   8f944:	10bfffc4 	addi	r2,r2,-1
   8f948:	308c703a 	and	r6,r6,r2
   8f94c:	003fbf06 	br	8f84c <__pack_f+0x30>
   8f950:	0007883a 	mov	r3,zero
   8f954:	000d883a 	mov	r6,zero
   8f958:	003ff906 	br	8f940 <__pack_f+0x124>
   8f95c:	1880200c 	andi	r2,r3,128
   8f960:	10000126 	beq	r2,zero,8f968 <__pack_f+0x14c>
   8f964:	1907883a 	add	r3,r3,r4
   8f968:	180cd1fa 	srli	r6,r3,7
   8f96c:	00900034 	movhi	r2,16384
   8f970:	10bfffc4 	addi	r2,r2,-1
   8f974:	10c7803a 	cmpltu	r3,r2,r3
   8f978:	003ff106 	br	8f940 <__pack_f+0x124>

0008f97c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   8f97c:	defff804 	addi	sp,sp,-32
   8f980:	dfc00715 	stw	ra,28(sp)
   8f984:	df000615 	stw	fp,24(sp)
   8f988:	df000604 	addi	fp,sp,24
   8f98c:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   8f990:	e0bffc17 	ldw	r2,-16(fp)
   8f994:	1004803a 	cmplt	r2,r2,zero
   8f998:	1000091e 	bne	r2,zero,8f9c0 <close+0x44>
   8f99c:	e13ffc17 	ldw	r4,-16(fp)
   8f9a0:	01400304 	movi	r5,12
   8f9a4:	00806240 	call	80624 <__mulsi3>
   8f9a8:	1007883a 	mov	r3,r2
   8f9ac:	00800274 	movhi	r2,9
   8f9b0:	10917904 	addi	r2,r2,17892
   8f9b4:	1887883a 	add	r3,r3,r2
   8f9b8:	e0ffff15 	stw	r3,-4(fp)
   8f9bc:	00000106 	br	8f9c4 <close+0x48>
   8f9c0:	e03fff15 	stw	zero,-4(fp)
   8f9c4:	e0bfff17 	ldw	r2,-4(fp)
   8f9c8:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
   8f9cc:	e0bffb17 	ldw	r2,-20(fp)
   8f9d0:	1005003a 	cmpeq	r2,r2,zero
   8f9d4:	10001d1e 	bne	r2,zero,8fa4c <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   8f9d8:	e0bffb17 	ldw	r2,-20(fp)
   8f9dc:	10800017 	ldw	r2,0(r2)
   8f9e0:	10800417 	ldw	r2,16(r2)
   8f9e4:	1005003a 	cmpeq	r2,r2,zero
   8f9e8:	1000071e 	bne	r2,zero,8fa08 <close+0x8c>
   8f9ec:	e0bffb17 	ldw	r2,-20(fp)
   8f9f0:	10800017 	ldw	r2,0(r2)
   8f9f4:	10800417 	ldw	r2,16(r2)
   8f9f8:	e13ffb17 	ldw	r4,-20(fp)
   8f9fc:	103ee83a 	callr	r2
   8fa00:	e0bffe15 	stw	r2,-8(fp)
   8fa04:	00000106 	br	8fa0c <close+0x90>
   8fa08:	e03ffe15 	stw	zero,-8(fp)
   8fa0c:	e0bffe17 	ldw	r2,-8(fp)
   8fa10:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   8fa14:	e13ffc17 	ldw	r4,-16(fp)
   8fa18:	00901d40 	call	901d4 <alt_release_fd>
    if (rval < 0)
   8fa1c:	e0bffa17 	ldw	r2,-24(fp)
   8fa20:	1004403a 	cmpge	r2,r2,zero
   8fa24:	1000071e 	bne	r2,zero,8fa44 <close+0xc8>
    {
      ALT_ERRNO = -rval;
   8fa28:	008fa7c0 	call	8fa7c <alt_get_errno>
   8fa2c:	e0fffa17 	ldw	r3,-24(fp)
   8fa30:	00c7c83a 	sub	r3,zero,r3
   8fa34:	10c00015 	stw	r3,0(r2)
      return -1;
   8fa38:	00bfffc4 	movi	r2,-1
   8fa3c:	e0bffd15 	stw	r2,-12(fp)
   8fa40:	00000806 	br	8fa64 <close+0xe8>
    }
    return 0;
   8fa44:	e03ffd15 	stw	zero,-12(fp)
   8fa48:	00000606 	br	8fa64 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8fa4c:	008fa7c0 	call	8fa7c <alt_get_errno>
   8fa50:	1007883a 	mov	r3,r2
   8fa54:	00801444 	movi	r2,81
   8fa58:	18800015 	stw	r2,0(r3)
    return -1;
   8fa5c:	00bfffc4 	movi	r2,-1
   8fa60:	e0bffd15 	stw	r2,-12(fp)
   8fa64:	e0bffd17 	ldw	r2,-12(fp)
  }
}
   8fa68:	e037883a 	mov	sp,fp
   8fa6c:	dfc00117 	ldw	ra,4(sp)
   8fa70:	df000017 	ldw	fp,0(sp)
   8fa74:	dec00204 	addi	sp,sp,8
   8fa78:	f800283a 	ret

0008fa7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8fa7c:	defffd04 	addi	sp,sp,-12
   8fa80:	dfc00215 	stw	ra,8(sp)
   8fa84:	df000115 	stw	fp,4(sp)
   8fa88:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8fa8c:	00800274 	movhi	r2,9
   8fa90:	10964504 	addi	r2,r2,22804
   8fa94:	10800017 	ldw	r2,0(r2)
   8fa98:	1005003a 	cmpeq	r2,r2,zero
   8fa9c:	1000061e 	bne	r2,zero,8fab8 <alt_get_errno+0x3c>
   8faa0:	00800274 	movhi	r2,9
   8faa4:	10964504 	addi	r2,r2,22804
   8faa8:	10800017 	ldw	r2,0(r2)
   8faac:	103ee83a 	callr	r2
   8fab0:	e0bfff15 	stw	r2,-4(fp)
   8fab4:	00000306 	br	8fac4 <alt_get_errno+0x48>
   8fab8:	00800274 	movhi	r2,9
   8fabc:	109d3c04 	addi	r2,r2,29936
   8fac0:	e0bfff15 	stw	r2,-4(fp)
   8fac4:	e0bfff17 	ldw	r2,-4(fp)
}
   8fac8:	e037883a 	mov	sp,fp
   8facc:	dfc00117 	ldw	ra,4(sp)
   8fad0:	df000017 	ldw	fp,0(sp)
   8fad4:	dec00204 	addi	sp,sp,8
   8fad8:	f800283a 	ret

0008fadc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   8fadc:	defffc04 	addi	sp,sp,-16
   8fae0:	df000315 	stw	fp,12(sp)
   8fae4:	df000304 	addi	fp,sp,12
   8fae8:	e13ffd15 	stw	r4,-12(fp)
   8faec:	e17ffe15 	stw	r5,-8(fp)
   8faf0:	e1bfff15 	stw	r6,-4(fp)
  return len;
   8faf4:	e0bfff17 	ldw	r2,-4(fp)
}
   8faf8:	e037883a 	mov	sp,fp
   8fafc:	df000017 	ldw	fp,0(sp)
   8fb00:	dec00104 	addi	sp,sp,4
   8fb04:	f800283a 	ret

0008fb08 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   8fb08:	defff904 	addi	sp,sp,-28
   8fb0c:	dfc00615 	stw	ra,24(sp)
   8fb10:	df000515 	stw	fp,20(sp)
   8fb14:	df000504 	addi	fp,sp,20
   8fb18:	e13ffc15 	stw	r4,-16(fp)
   8fb1c:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8fb20:	e0bffc17 	ldw	r2,-16(fp)
   8fb24:	1004803a 	cmplt	r2,r2,zero
   8fb28:	1000091e 	bne	r2,zero,8fb50 <fstat+0x48>
   8fb2c:	e13ffc17 	ldw	r4,-16(fp)
   8fb30:	01400304 	movi	r5,12
   8fb34:	00806240 	call	80624 <__mulsi3>
   8fb38:	1007883a 	mov	r3,r2
   8fb3c:	00800274 	movhi	r2,9
   8fb40:	10917904 	addi	r2,r2,17892
   8fb44:	1887883a 	add	r3,r3,r2
   8fb48:	e0ffff15 	stw	r3,-4(fp)
   8fb4c:	00000106 	br	8fb54 <fstat+0x4c>
   8fb50:	e03fff15 	stw	zero,-4(fp)
   8fb54:	e0bfff17 	ldw	r2,-4(fp)
   8fb58:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8fb5c:	e0bffb17 	ldw	r2,-20(fp)
   8fb60:	1005003a 	cmpeq	r2,r2,zero
   8fb64:	1000121e 	bne	r2,zero,8fbb0 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   8fb68:	e0bffb17 	ldw	r2,-20(fp)
   8fb6c:	10800017 	ldw	r2,0(r2)
   8fb70:	10800817 	ldw	r2,32(r2)
   8fb74:	1005003a 	cmpeq	r2,r2,zero
   8fb78:	1000081e 	bne	r2,zero,8fb9c <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
   8fb7c:	e0bffb17 	ldw	r2,-20(fp)
   8fb80:	10800017 	ldw	r2,0(r2)
   8fb84:	10800817 	ldw	r2,32(r2)
   8fb88:	e13ffb17 	ldw	r4,-20(fp)
   8fb8c:	e17ffd17 	ldw	r5,-12(fp)
   8fb90:	103ee83a 	callr	r2
   8fb94:	e0bffe15 	stw	r2,-8(fp)
   8fb98:	00000b06 	br	8fbc8 <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   8fb9c:	e0fffd17 	ldw	r3,-12(fp)
   8fba0:	00880004 	movi	r2,8192
   8fba4:	18800115 	stw	r2,4(r3)
      return 0;
   8fba8:	e03ffe15 	stw	zero,-8(fp)
   8fbac:	00000606 	br	8fbc8 <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8fbb0:	008fbe00 	call	8fbe0 <alt_get_errno>
   8fbb4:	1007883a 	mov	r3,r2
   8fbb8:	00801444 	movi	r2,81
   8fbbc:	18800015 	stw	r2,0(r3)
    return -1;
   8fbc0:	00bfffc4 	movi	r2,-1
   8fbc4:	e0bffe15 	stw	r2,-8(fp)
   8fbc8:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   8fbcc:	e037883a 	mov	sp,fp
   8fbd0:	dfc00117 	ldw	ra,4(sp)
   8fbd4:	df000017 	ldw	fp,0(sp)
   8fbd8:	dec00204 	addi	sp,sp,8
   8fbdc:	f800283a 	ret

0008fbe0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8fbe0:	defffd04 	addi	sp,sp,-12
   8fbe4:	dfc00215 	stw	ra,8(sp)
   8fbe8:	df000115 	stw	fp,4(sp)
   8fbec:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8fbf0:	00800274 	movhi	r2,9
   8fbf4:	10964504 	addi	r2,r2,22804
   8fbf8:	10800017 	ldw	r2,0(r2)
   8fbfc:	1005003a 	cmpeq	r2,r2,zero
   8fc00:	1000061e 	bne	r2,zero,8fc1c <alt_get_errno+0x3c>
   8fc04:	00800274 	movhi	r2,9
   8fc08:	10964504 	addi	r2,r2,22804
   8fc0c:	10800017 	ldw	r2,0(r2)
   8fc10:	103ee83a 	callr	r2
   8fc14:	e0bfff15 	stw	r2,-4(fp)
   8fc18:	00000306 	br	8fc28 <alt_get_errno+0x48>
   8fc1c:	00800274 	movhi	r2,9
   8fc20:	109d3c04 	addi	r2,r2,29936
   8fc24:	e0bfff15 	stw	r2,-4(fp)
   8fc28:	e0bfff17 	ldw	r2,-4(fp)
}
   8fc2c:	e037883a 	mov	sp,fp
   8fc30:	dfc00117 	ldw	ra,4(sp)
   8fc34:	df000017 	ldw	fp,0(sp)
   8fc38:	dec00204 	addi	sp,sp,8
   8fc3c:	f800283a 	ret

0008fc40 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   8fc40:	deffeb04 	addi	sp,sp,-84
   8fc44:	dfc01415 	stw	ra,80(sp)
   8fc48:	df001315 	stw	fp,76(sp)
   8fc4c:	df001304 	addi	fp,sp,76
   8fc50:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8fc54:	e0bffd17 	ldw	r2,-12(fp)
   8fc58:	1004803a 	cmplt	r2,r2,zero
   8fc5c:	1000091e 	bne	r2,zero,8fc84 <isatty+0x44>
   8fc60:	e13ffd17 	ldw	r4,-12(fp)
   8fc64:	01400304 	movi	r5,12
   8fc68:	00806240 	call	80624 <__mulsi3>
   8fc6c:	1007883a 	mov	r3,r2
   8fc70:	00800274 	movhi	r2,9
   8fc74:	10917904 	addi	r2,r2,17892
   8fc78:	1887883a 	add	r3,r3,r2
   8fc7c:	e0ffff15 	stw	r3,-4(fp)
   8fc80:	00000106 	br	8fc88 <isatty+0x48>
   8fc84:	e03fff15 	stw	zero,-4(fp)
   8fc88:	e0bfff17 	ldw	r2,-4(fp)
   8fc8c:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
   8fc90:	e0bfed17 	ldw	r2,-76(fp)
   8fc94:	1005003a 	cmpeq	r2,r2,zero
   8fc98:	10000f1e 	bne	r2,zero,8fcd8 <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   8fc9c:	e0bfed17 	ldw	r2,-76(fp)
   8fca0:	10800017 	ldw	r2,0(r2)
   8fca4:	10800817 	ldw	r2,32(r2)
   8fca8:	1004c03a 	cmpne	r2,r2,zero
   8fcac:	1000031e 	bne	r2,zero,8fcbc <isatty+0x7c>
    {
      return 1;
   8fcb0:	00800044 	movi	r2,1
   8fcb4:	e0bffe15 	stw	r2,-8(fp)
   8fcb8:	00000c06 	br	8fcec <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8fcbc:	e17fee04 	addi	r5,fp,-72
   8fcc0:	e13ffd17 	ldw	r4,-12(fp)
   8fcc4:	008fb080 	call	8fb08 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8fcc8:	e0bfef17 	ldw	r2,-68(fp)
   8fccc:	10880020 	cmpeqi	r2,r2,8192
   8fcd0:	e0bffe15 	stw	r2,-8(fp)
   8fcd4:	00000506 	br	8fcec <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8fcd8:	008fd040 	call	8fd04 <alt_get_errno>
   8fcdc:	1007883a 	mov	r3,r2
   8fce0:	00801444 	movi	r2,81
   8fce4:	18800015 	stw	r2,0(r3)
    return 0;
   8fce8:	e03ffe15 	stw	zero,-8(fp)
   8fcec:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   8fcf0:	e037883a 	mov	sp,fp
   8fcf4:	dfc00117 	ldw	ra,4(sp)
   8fcf8:	df000017 	ldw	fp,0(sp)
   8fcfc:	dec00204 	addi	sp,sp,8
   8fd00:	f800283a 	ret

0008fd04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8fd04:	defffd04 	addi	sp,sp,-12
   8fd08:	dfc00215 	stw	ra,8(sp)
   8fd0c:	df000115 	stw	fp,4(sp)
   8fd10:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8fd14:	00800274 	movhi	r2,9
   8fd18:	10964504 	addi	r2,r2,22804
   8fd1c:	10800017 	ldw	r2,0(r2)
   8fd20:	1005003a 	cmpeq	r2,r2,zero
   8fd24:	1000061e 	bne	r2,zero,8fd40 <alt_get_errno+0x3c>
   8fd28:	00800274 	movhi	r2,9
   8fd2c:	10964504 	addi	r2,r2,22804
   8fd30:	10800017 	ldw	r2,0(r2)
   8fd34:	103ee83a 	callr	r2
   8fd38:	e0bfff15 	stw	r2,-4(fp)
   8fd3c:	00000306 	br	8fd4c <alt_get_errno+0x48>
   8fd40:	00800274 	movhi	r2,9
   8fd44:	109d3c04 	addi	r2,r2,29936
   8fd48:	e0bfff15 	stw	r2,-4(fp)
   8fd4c:	e0bfff17 	ldw	r2,-4(fp)
}
   8fd50:	e037883a 	mov	sp,fp
   8fd54:	dfc00117 	ldw	ra,4(sp)
   8fd58:	df000017 	ldw	fp,0(sp)
   8fd5c:	dec00204 	addi	sp,sp,8
   8fd60:	f800283a 	ret

0008fd64 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8fd64:	defffe04 	addi	sp,sp,-8
   8fd68:	dfc00115 	stw	ra,4(sp)
   8fd6c:	df000015 	stw	fp,0(sp)
   8fd70:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8fd74:	01000274 	movhi	r4,9
   8fd78:	21164b04 	addi	r4,r4,22828
   8fd7c:	01400274 	movhi	r5,9
   8fd80:	294f6004 	addi	r5,r5,15744
   8fd84:	01800274 	movhi	r6,9
   8fd88:	31964b04 	addi	r6,r6,22828
   8fd8c:	008fde40 	call	8fde4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   8fd90:	01000234 	movhi	r4,8
   8fd94:	21000804 	addi	r4,r4,32
   8fd98:	01400234 	movhi	r5,8
   8fd9c:	29400804 	addi	r5,r5,32
   8fda0:	01800234 	movhi	r6,8
   8fda4:	31806d04 	addi	r6,r6,436
   8fda8:	008fde40 	call	8fde4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   8fdac:	01000274 	movhi	r4,9
   8fdb0:	210db204 	addi	r4,r4,14024
   8fdb4:	01400274 	movhi	r5,9
   8fdb8:	294db204 	addi	r5,r5,14024
   8fdbc:	01800274 	movhi	r6,9
   8fdc0:	318f6004 	addi	r6,r6,15744
   8fdc4:	008fde40 	call	8fde4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   8fdc8:	00923d40 	call	923d4 <alt_dcache_flush_all>
  alt_icache_flush_all();
   8fdcc:	00925cc0 	call	925cc <alt_icache_flush_all>
}
   8fdd0:	e037883a 	mov	sp,fp
   8fdd4:	dfc00117 	ldw	ra,4(sp)
   8fdd8:	df000017 	ldw	fp,0(sp)
   8fddc:	dec00204 	addi	sp,sp,8
   8fde0:	f800283a 	ret

0008fde4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   8fde4:	defffc04 	addi	sp,sp,-16
   8fde8:	df000315 	stw	fp,12(sp)
   8fdec:	df000304 	addi	fp,sp,12
   8fdf0:	e13ffd15 	stw	r4,-12(fp)
   8fdf4:	e17ffe15 	stw	r5,-8(fp)
   8fdf8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   8fdfc:	e0fffe17 	ldw	r3,-8(fp)
   8fe00:	e0bffd17 	ldw	r2,-12(fp)
   8fe04:	18800e26 	beq	r3,r2,8fe40 <alt_load_section+0x5c>
  {
    while( to != end )
   8fe08:	00000a06 	br	8fe34 <alt_load_section+0x50>
    {
      *to++ = *from++;
   8fe0c:	e0bffd17 	ldw	r2,-12(fp)
   8fe10:	10c00017 	ldw	r3,0(r2)
   8fe14:	e0bffe17 	ldw	r2,-8(fp)
   8fe18:	10c00015 	stw	r3,0(r2)
   8fe1c:	e0bffe17 	ldw	r2,-8(fp)
   8fe20:	10800104 	addi	r2,r2,4
   8fe24:	e0bffe15 	stw	r2,-8(fp)
   8fe28:	e0bffd17 	ldw	r2,-12(fp)
   8fe2c:	10800104 	addi	r2,r2,4
   8fe30:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   8fe34:	e0fffe17 	ldw	r3,-8(fp)
   8fe38:	e0bfff17 	ldw	r2,-4(fp)
   8fe3c:	18bff31e 	bne	r3,r2,8fe0c <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   8fe40:	e037883a 	mov	sp,fp
   8fe44:	df000017 	ldw	fp,0(sp)
   8fe48:	dec00104 	addi	sp,sp,4
   8fe4c:	f800283a 	ret

0008fe50 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   8fe50:	defff804 	addi	sp,sp,-32
   8fe54:	dfc00715 	stw	ra,28(sp)
   8fe58:	df000615 	stw	fp,24(sp)
   8fe5c:	df000604 	addi	fp,sp,24
   8fe60:	e13ffc15 	stw	r4,-16(fp)
   8fe64:	e17ffd15 	stw	r5,-12(fp)
   8fe68:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   8fe6c:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8fe70:	e0bffc17 	ldw	r2,-16(fp)
   8fe74:	1004803a 	cmplt	r2,r2,zero
   8fe78:	1000091e 	bne	r2,zero,8fea0 <lseek+0x50>
   8fe7c:	e13ffc17 	ldw	r4,-16(fp)
   8fe80:	01400304 	movi	r5,12
   8fe84:	00806240 	call	80624 <__mulsi3>
   8fe88:	1007883a 	mov	r3,r2
   8fe8c:	00800274 	movhi	r2,9
   8fe90:	10917904 	addi	r2,r2,17892
   8fe94:	1887883a 	add	r3,r3,r2
   8fe98:	e0ffff15 	stw	r3,-4(fp)
   8fe9c:	00000106 	br	8fea4 <lseek+0x54>
   8fea0:	e03fff15 	stw	zero,-4(fp)
   8fea4:	e0bfff17 	ldw	r2,-4(fp)
   8fea8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
   8feac:	e0bffb17 	ldw	r2,-20(fp)
   8feb0:	1005003a 	cmpeq	r2,r2,zero
   8feb4:	1000111e 	bne	r2,zero,8fefc <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   8feb8:	e0bffb17 	ldw	r2,-20(fp)
   8febc:	10800017 	ldw	r2,0(r2)
   8fec0:	10800717 	ldw	r2,28(r2)
   8fec4:	1005003a 	cmpeq	r2,r2,zero
   8fec8:	1000091e 	bne	r2,zero,8fef0 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   8fecc:	e0bffb17 	ldw	r2,-20(fp)
   8fed0:	10800017 	ldw	r2,0(r2)
   8fed4:	10800717 	ldw	r2,28(r2)
   8fed8:	e13ffb17 	ldw	r4,-20(fp)
   8fedc:	e17ffd17 	ldw	r5,-12(fp)
   8fee0:	e1bffe17 	ldw	r6,-8(fp)
   8fee4:	103ee83a 	callr	r2
   8fee8:	e0bffa15 	stw	r2,-24(fp)
   8feec:	00000506 	br	8ff04 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   8fef0:	00bfde84 	movi	r2,-134
   8fef4:	e0bffa15 	stw	r2,-24(fp)
   8fef8:	00000206 	br	8ff04 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
   8fefc:	00bfebc4 	movi	r2,-81
   8ff00:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
   8ff04:	e0bffa17 	ldw	r2,-24(fp)
   8ff08:	1004403a 	cmpge	r2,r2,zero
   8ff0c:	1000071e 	bne	r2,zero,8ff2c <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
   8ff10:	008ff440 	call	8ff44 <alt_get_errno>
   8ff14:	1007883a 	mov	r3,r2
   8ff18:	e0bffa17 	ldw	r2,-24(fp)
   8ff1c:	0085c83a 	sub	r2,zero,r2
   8ff20:	18800015 	stw	r2,0(r3)
    rc = -1;
   8ff24:	00bfffc4 	movi	r2,-1
   8ff28:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
   8ff2c:	e0bffa17 	ldw	r2,-24(fp)
}
   8ff30:	e037883a 	mov	sp,fp
   8ff34:	dfc00117 	ldw	ra,4(sp)
   8ff38:	df000017 	ldw	fp,0(sp)
   8ff3c:	dec00204 	addi	sp,sp,8
   8ff40:	f800283a 	ret

0008ff44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ff44:	defffd04 	addi	sp,sp,-12
   8ff48:	dfc00215 	stw	ra,8(sp)
   8ff4c:	df000115 	stw	fp,4(sp)
   8ff50:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8ff54:	00800274 	movhi	r2,9
   8ff58:	10964504 	addi	r2,r2,22804
   8ff5c:	10800017 	ldw	r2,0(r2)
   8ff60:	1005003a 	cmpeq	r2,r2,zero
   8ff64:	1000061e 	bne	r2,zero,8ff80 <alt_get_errno+0x3c>
   8ff68:	00800274 	movhi	r2,9
   8ff6c:	10964504 	addi	r2,r2,22804
   8ff70:	10800017 	ldw	r2,0(r2)
   8ff74:	103ee83a 	callr	r2
   8ff78:	e0bfff15 	stw	r2,-4(fp)
   8ff7c:	00000306 	br	8ff8c <alt_get_errno+0x48>
   8ff80:	00800274 	movhi	r2,9
   8ff84:	109d3c04 	addi	r2,r2,29936
   8ff88:	e0bfff15 	stw	r2,-4(fp)
   8ff8c:	e0bfff17 	ldw	r2,-4(fp)
}
   8ff90:	e037883a 	mov	sp,fp
   8ff94:	dfc00117 	ldw	ra,4(sp)
   8ff98:	df000017 	ldw	fp,0(sp)
   8ff9c:	dec00204 	addi	sp,sp,8
   8ffa0:	f800283a 	ret

0008ffa4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   8ffa4:	defffd04 	addi	sp,sp,-12
   8ffa8:	dfc00215 	stw	ra,8(sp)
   8ffac:	df000115 	stw	fp,4(sp)
   8ffb0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   8ffb4:	0009883a 	mov	r4,zero
   8ffb8:	009048c0 	call	9048c <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   8ffbc:	00904c00 	call	904c0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   8ffc0:	01000274 	movhi	r4,9
   8ffc4:	210f5304 	addi	r4,r4,15692
   8ffc8:	01400274 	movhi	r5,9
   8ffcc:	294f5304 	addi	r5,r5,15692
   8ffd0:	01800274 	movhi	r6,9
   8ffd4:	318f5304 	addi	r6,r6,15692
   8ffd8:	009298c0 	call	9298c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   8ffdc:	00925040 	call	92504 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   8ffe0:	01000274 	movhi	r4,9
   8ffe4:	21095a04 	addi	r4,r4,9576
   8ffe8:	00932bc0 	call	932bc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   8ffec:	d1270417 	ldw	r4,-25584(gp)
   8fff0:	d1670517 	ldw	r5,-25580(gp)
   8fff4:	d1a70617 	ldw	r6,-25576(gp)
   8fff8:	00801f00 	call	801f0 <main>
   8fffc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   90000:	01000044 	movi	r4,1
   90004:	008f97c0 	call	8f97c <close>
  exit (result);
   90008:	e13fff17 	ldw	r4,-4(fp)
   9000c:	00932d00 	call	932d0 <exit>

00090010 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   90010:	defffe04 	addi	sp,sp,-8
   90014:	df000115 	stw	fp,4(sp)
   90018:	df000104 	addi	fp,sp,4
   9001c:	e13fff15 	stw	r4,-4(fp)
}
   90020:	e037883a 	mov	sp,fp
   90024:	df000017 	ldw	fp,0(sp)
   90028:	dec00104 	addi	sp,sp,4
   9002c:	f800283a 	ret

00090030 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   90030:	defffe04 	addi	sp,sp,-8
   90034:	df000115 	stw	fp,4(sp)
   90038:	df000104 	addi	fp,sp,4
   9003c:	e13fff15 	stw	r4,-4(fp)
}
   90040:	e037883a 	mov	sp,fp
   90044:	df000017 	ldw	fp,0(sp)
   90048:	dec00104 	addi	sp,sp,4
   9004c:	f800283a 	ret

00090050 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   90050:	defff704 	addi	sp,sp,-36
   90054:	dfc00815 	stw	ra,32(sp)
   90058:	df000715 	stw	fp,28(sp)
   9005c:	df000704 	addi	fp,sp,28
   90060:	e13ffb15 	stw	r4,-20(fp)
   90064:	e17ffc15 	stw	r5,-16(fp)
   90068:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   9006c:	e0bffb17 	ldw	r2,-20(fp)
   90070:	1004803a 	cmplt	r2,r2,zero
   90074:	1000091e 	bne	r2,zero,9009c <read+0x4c>
   90078:	e13ffb17 	ldw	r4,-20(fp)
   9007c:	01400304 	movi	r5,12
   90080:	00806240 	call	80624 <__mulsi3>
   90084:	1007883a 	mov	r3,r2
   90088:	00800274 	movhi	r2,9
   9008c:	10917904 	addi	r2,r2,17892
   90090:	1887883a 	add	r3,r3,r2
   90094:	e0ffff15 	stw	r3,-4(fp)
   90098:	00000106 	br	900a0 <read+0x50>
   9009c:	e03fff15 	stw	zero,-4(fp)
   900a0:	e0bfff17 	ldw	r2,-4(fp)
   900a4:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   900a8:	e0bffa17 	ldw	r2,-24(fp)
   900ac:	1005003a 	cmpeq	r2,r2,zero
   900b0:	1000241e 	bne	r2,zero,90144 <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   900b4:	e0bffa17 	ldw	r2,-24(fp)
   900b8:	10800217 	ldw	r2,8(r2)
   900bc:	108000cc 	andi	r2,r2,3
   900c0:	10800060 	cmpeqi	r2,r2,1
   900c4:	10001a1e 	bne	r2,zero,90130 <read+0xe0>
   900c8:	e0bffa17 	ldw	r2,-24(fp)
   900cc:	10800017 	ldw	r2,0(r2)
   900d0:	10800517 	ldw	r2,20(r2)
   900d4:	1005003a 	cmpeq	r2,r2,zero
   900d8:	1000151e 	bne	r2,zero,90130 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   900dc:	e0bffa17 	ldw	r2,-24(fp)
   900e0:	10800017 	ldw	r2,0(r2)
   900e4:	10800517 	ldw	r2,20(r2)
   900e8:	e17ffc17 	ldw	r5,-16(fp)
   900ec:	e1bffd17 	ldw	r6,-12(fp)
   900f0:	e13ffa17 	ldw	r4,-24(fp)
   900f4:	103ee83a 	callr	r2
   900f8:	e0bff915 	stw	r2,-28(fp)
   900fc:	e0bff917 	ldw	r2,-28(fp)
   90100:	1004403a 	cmpge	r2,r2,zero
   90104:	1000071e 	bne	r2,zero,90124 <read+0xd4>
        {
          ALT_ERRNO = -rval;
   90108:	00901740 	call	90174 <alt_get_errno>
   9010c:	e0fff917 	ldw	r3,-28(fp)
   90110:	00c7c83a 	sub	r3,zero,r3
   90114:	10c00015 	stw	r3,0(r2)
          return -1;
   90118:	00bfffc4 	movi	r2,-1
   9011c:	e0bffe15 	stw	r2,-8(fp)
   90120:	00000e06 	br	9015c <read+0x10c>
        }
        return rval;
   90124:	e0bff917 	ldw	r2,-28(fp)
   90128:	e0bffe15 	stw	r2,-8(fp)
   9012c:	00000b06 	br	9015c <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
   90130:	00901740 	call	90174 <alt_get_errno>
   90134:	1007883a 	mov	r3,r2
   90138:	00800344 	movi	r2,13
   9013c:	18800015 	stw	r2,0(r3)
   90140:	00000406 	br	90154 <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   90144:	00901740 	call	90174 <alt_get_errno>
   90148:	1007883a 	mov	r3,r2
   9014c:	00801444 	movi	r2,81
   90150:	18800015 	stw	r2,0(r3)
  }
  return -1;
   90154:	00bfffc4 	movi	r2,-1
   90158:	e0bffe15 	stw	r2,-8(fp)
   9015c:	e0bffe17 	ldw	r2,-8(fp)
}
   90160:	e037883a 	mov	sp,fp
   90164:	dfc00117 	ldw	ra,4(sp)
   90168:	df000017 	ldw	fp,0(sp)
   9016c:	dec00204 	addi	sp,sp,8
   90170:	f800283a 	ret

00090174 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   90174:	defffd04 	addi	sp,sp,-12
   90178:	dfc00215 	stw	ra,8(sp)
   9017c:	df000115 	stw	fp,4(sp)
   90180:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   90184:	00800274 	movhi	r2,9
   90188:	10964504 	addi	r2,r2,22804
   9018c:	10800017 	ldw	r2,0(r2)
   90190:	1005003a 	cmpeq	r2,r2,zero
   90194:	1000061e 	bne	r2,zero,901b0 <alt_get_errno+0x3c>
   90198:	00800274 	movhi	r2,9
   9019c:	10964504 	addi	r2,r2,22804
   901a0:	10800017 	ldw	r2,0(r2)
   901a4:	103ee83a 	callr	r2
   901a8:	e0bfff15 	stw	r2,-4(fp)
   901ac:	00000306 	br	901bc <alt_get_errno+0x48>
   901b0:	00800274 	movhi	r2,9
   901b4:	109d3c04 	addi	r2,r2,29936
   901b8:	e0bfff15 	stw	r2,-4(fp)
   901bc:	e0bfff17 	ldw	r2,-4(fp)
}
   901c0:	e037883a 	mov	sp,fp
   901c4:	dfc00117 	ldw	ra,4(sp)
   901c8:	df000017 	ldw	fp,0(sp)
   901cc:	dec00204 	addi	sp,sp,8
   901d0:	f800283a 	ret

000901d4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   901d4:	defffc04 	addi	sp,sp,-16
   901d8:	dfc00315 	stw	ra,12(sp)
   901dc:	df000215 	stw	fp,8(sp)
   901e0:	dc000115 	stw	r16,4(sp)
   901e4:	df000104 	addi	fp,sp,4
   901e8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   901ec:	e0bfff17 	ldw	r2,-4(fp)
   901f0:	108000d0 	cmplti	r2,r2,3
   901f4:	10000f1e 	bne	r2,zero,90234 <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
   901f8:	e13fff17 	ldw	r4,-4(fp)
   901fc:	04000274 	movhi	r16,9
   90200:	84117904 	addi	r16,r16,17892
   90204:	01400304 	movi	r5,12
   90208:	00806240 	call	80624 <__mulsi3>
   9020c:	1405883a 	add	r2,r2,r16
   90210:	10800204 	addi	r2,r2,8
   90214:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   90218:	e13fff17 	ldw	r4,-4(fp)
   9021c:	04000274 	movhi	r16,9
   90220:	84117904 	addi	r16,r16,17892
   90224:	01400304 	movi	r5,12
   90228:	00806240 	call	80624 <__mulsi3>
   9022c:	1405883a 	add	r2,r2,r16
   90230:	10000015 	stw	zero,0(r2)
  }
}
   90234:	e037883a 	mov	sp,fp
   90238:	dfc00217 	ldw	ra,8(sp)
   9023c:	df000117 	ldw	fp,4(sp)
   90240:	dc000017 	ldw	r16,0(sp)
   90244:	dec00304 	addi	sp,sp,12
   90248:	f800283a 	ret

0009024c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   9024c:	defff804 	addi	sp,sp,-32
   90250:	df000715 	stw	fp,28(sp)
   90254:	df000704 	addi	fp,sp,28
   90258:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   9025c:	0005303a 	rdctl	r2,status
   90260:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   90264:	e0fffb17 	ldw	r3,-20(fp)
   90268:	00bfff84 	movi	r2,-2
   9026c:	1884703a 	and	r2,r3,r2
   90270:	1001703a 	wrctl	status,r2
  
  return context;
   90274:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   90278:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   9027c:	d0a00d17 	ldw	r2,-32716(gp)
   90280:	10c000c4 	addi	r3,r2,3
   90284:	00bfff04 	movi	r2,-4
   90288:	1884703a 	and	r2,r3,r2
   9028c:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   90290:	d0e00d17 	ldw	r3,-32716(gp)
   90294:	e0bffe17 	ldw	r2,-8(fp)
   90298:	1887883a 	add	r3,r3,r2
   9029c:	00800434 	movhi	r2,16
   902a0:	10800004 	addi	r2,r2,0
   902a4:	10c0072e 	bgeu	r2,r3,902c4 <sbrk+0x78>
   902a8:	e0bffd17 	ldw	r2,-12(fp)
   902ac:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   902b0:	e0bffa17 	ldw	r2,-24(fp)
   902b4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   902b8:	00bfffc4 	movi	r2,-1
   902bc:	e0bfff15 	stw	r2,-4(fp)
   902c0:	00000c06 	br	902f4 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   902c4:	d0a00d17 	ldw	r2,-32716(gp)
   902c8:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   902cc:	d0e00d17 	ldw	r3,-32716(gp)
   902d0:	e0bffe17 	ldw	r2,-8(fp)
   902d4:	1885883a 	add	r2,r3,r2
   902d8:	d0a00d15 	stw	r2,-32716(gp)
   902dc:	e0bffd17 	ldw	r2,-12(fp)
   902e0:	e0bff915 	stw	r2,-28(fp)
   902e4:	e0bff917 	ldw	r2,-28(fp)
   902e8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   902ec:	e0bffc17 	ldw	r2,-16(fp)
   902f0:	e0bfff15 	stw	r2,-4(fp)
   902f4:	e0bfff17 	ldw	r2,-4(fp)
} 
   902f8:	e037883a 	mov	sp,fp
   902fc:	df000017 	ldw	fp,0(sp)
   90300:	dec00104 	addi	sp,sp,4
   90304:	f800283a 	ret

00090308 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   90308:	defff704 	addi	sp,sp,-36
   9030c:	dfc00815 	stw	ra,32(sp)
   90310:	df000715 	stw	fp,28(sp)
   90314:	df000704 	addi	fp,sp,28
   90318:	e13ffb15 	stw	r4,-20(fp)
   9031c:	e17ffc15 	stw	r5,-16(fp)
   90320:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   90324:	e0bffb17 	ldw	r2,-20(fp)
   90328:	1004803a 	cmplt	r2,r2,zero
   9032c:	1000091e 	bne	r2,zero,90354 <write+0x4c>
   90330:	e13ffb17 	ldw	r4,-20(fp)
   90334:	01400304 	movi	r5,12
   90338:	00806240 	call	80624 <__mulsi3>
   9033c:	1007883a 	mov	r3,r2
   90340:	00800274 	movhi	r2,9
   90344:	10917904 	addi	r2,r2,17892
   90348:	1887883a 	add	r3,r3,r2
   9034c:	e0ffff15 	stw	r3,-4(fp)
   90350:	00000106 	br	90358 <write+0x50>
   90354:	e03fff15 	stw	zero,-4(fp)
   90358:	e0bfff17 	ldw	r2,-4(fp)
   9035c:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   90360:	e0bffa17 	ldw	r2,-24(fp)
   90364:	1005003a 	cmpeq	r2,r2,zero
   90368:	1000241e 	bne	r2,zero,903fc <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   9036c:	e0bffa17 	ldw	r2,-24(fp)
   90370:	10800217 	ldw	r2,8(r2)
   90374:	108000cc 	andi	r2,r2,3
   90378:	1005003a 	cmpeq	r2,r2,zero
   9037c:	10001a1e 	bne	r2,zero,903e8 <write+0xe0>
   90380:	e0bffa17 	ldw	r2,-24(fp)
   90384:	10800017 	ldw	r2,0(r2)
   90388:	10800617 	ldw	r2,24(r2)
   9038c:	1005003a 	cmpeq	r2,r2,zero
   90390:	1000151e 	bne	r2,zero,903e8 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   90394:	e0bffa17 	ldw	r2,-24(fp)
   90398:	10800017 	ldw	r2,0(r2)
   9039c:	10800617 	ldw	r2,24(r2)
   903a0:	e17ffc17 	ldw	r5,-16(fp)
   903a4:	e1bffd17 	ldw	r6,-12(fp)
   903a8:	e13ffa17 	ldw	r4,-24(fp)
   903ac:	103ee83a 	callr	r2
   903b0:	e0bff915 	stw	r2,-28(fp)
   903b4:	e0bff917 	ldw	r2,-28(fp)
   903b8:	1004403a 	cmpge	r2,r2,zero
   903bc:	1000071e 	bne	r2,zero,903dc <write+0xd4>
      {
        ALT_ERRNO = -rval;
   903c0:	009042c0 	call	9042c <alt_get_errno>
   903c4:	e0fff917 	ldw	r3,-28(fp)
   903c8:	00c7c83a 	sub	r3,zero,r3
   903cc:	10c00015 	stw	r3,0(r2)
        return -1;
   903d0:	00bfffc4 	movi	r2,-1
   903d4:	e0bffe15 	stw	r2,-8(fp)
   903d8:	00000e06 	br	90414 <write+0x10c>
      }
      return rval;
   903dc:	e0bff917 	ldw	r2,-28(fp)
   903e0:	e0bffe15 	stw	r2,-8(fp)
   903e4:	00000b06 	br	90414 <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
   903e8:	009042c0 	call	9042c <alt_get_errno>
   903ec:	1007883a 	mov	r3,r2
   903f0:	00800344 	movi	r2,13
   903f4:	18800015 	stw	r2,0(r3)
   903f8:	00000406 	br	9040c <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   903fc:	009042c0 	call	9042c <alt_get_errno>
   90400:	1007883a 	mov	r3,r2
   90404:	00801444 	movi	r2,81
   90408:	18800015 	stw	r2,0(r3)
  }
  return -1;
   9040c:	00bfffc4 	movi	r2,-1
   90410:	e0bffe15 	stw	r2,-8(fp)
   90414:	e0bffe17 	ldw	r2,-8(fp)
}
   90418:	e037883a 	mov	sp,fp
   9041c:	dfc00117 	ldw	ra,4(sp)
   90420:	df000017 	ldw	fp,0(sp)
   90424:	dec00204 	addi	sp,sp,8
   90428:	f800283a 	ret

0009042c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   9042c:	defffd04 	addi	sp,sp,-12
   90430:	dfc00215 	stw	ra,8(sp)
   90434:	df000115 	stw	fp,4(sp)
   90438:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   9043c:	00800274 	movhi	r2,9
   90440:	10964504 	addi	r2,r2,22804
   90444:	10800017 	ldw	r2,0(r2)
   90448:	1005003a 	cmpeq	r2,r2,zero
   9044c:	1000061e 	bne	r2,zero,90468 <alt_get_errno+0x3c>
   90450:	00800274 	movhi	r2,9
   90454:	10964504 	addi	r2,r2,22804
   90458:	10800017 	ldw	r2,0(r2)
   9045c:	103ee83a 	callr	r2
   90460:	e0bfff15 	stw	r2,-4(fp)
   90464:	00000306 	br	90474 <alt_get_errno+0x48>
   90468:	00800274 	movhi	r2,9
   9046c:	109d3c04 	addi	r2,r2,29936
   90470:	e0bfff15 	stw	r2,-4(fp)
   90474:	e0bfff17 	ldw	r2,-4(fp)
}
   90478:	e037883a 	mov	sp,fp
   9047c:	dfc00117 	ldw	ra,4(sp)
   90480:	df000017 	ldw	fp,0(sp)
   90484:	dec00204 	addi	sp,sp,8
   90488:	f800283a 	ret

0009048c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   9048c:	defffd04 	addi	sp,sp,-12
   90490:	dfc00215 	stw	ra,8(sp)
   90494:	df000115 	stw	fp,4(sp)
   90498:	df000104 	addi	fp,sp,4
   9049c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_IRQ_INIT ( CPU_0, cpu_0);
   904a0:	0092ebc0 	call	92ebc <altera_nios2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   904a4:	00800044 	movi	r2,1
   904a8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   904ac:	e037883a 	mov	sp,fp
   904b0:	dfc00117 	ldw	ra,4(sp)
   904b4:	df000017 	ldw	fp,0(sp)
   904b8:	dec00204 	addi	sp,sp,8
   904bc:	f800283a 	ret

000904c0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   904c0:	defffe04 	addi	sp,sp,-8
   904c4:	dfc00115 	stw	ra,4(sp)
   904c8:	df000015 	stw	fp,0(sp)
   904cc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_SYSTEM, timer_system);
   904d0:	01000434 	movhi	r4,16
   904d4:	21040004 	addi	r4,r4,4096
   904d8:	000b883a 	mov	r5,zero
   904dc:	01800084 	movi	r6,2
   904e0:	01c0fa04 	movi	r7,1000
   904e4:	00920880 	call	92088 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_TIMESTAMP, timer_timestamp);
   904e8:	00c00274 	movhi	r3,9
   904ec:	18dd4004 	addi	r3,r3,29952
   904f0:	00800434 	movhi	r2,16
   904f4:	10840804 	addi	r2,r2,4128
   904f8:	18800015 	stw	r2,0(r3)
   904fc:	00c00274 	movhi	r3,9
   90500:	18dd4104 	addi	r3,r3,29956
   90504:	0080bef4 	movhi	r2,763
   90508:	10bc2004 	addi	r2,r2,-3968
   9050c:	18800015 	stw	r2,0(r3)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   90510:	01000274 	movhi	r4,9
   90514:	2111e304 	addi	r4,r4,18316
   90518:	000b883a 	mov	r5,zero
   9051c:	000d883a 	mov	r6,zero
   90520:	00906dc0 	call	906dc <altera_avalon_jtag_uart_init>
   90524:	01000274 	movhi	r4,9
   90528:	2111d904 	addi	r4,r4,18276
   9052c:	009055c0 	call	9055c <alt_dev_reg>
    ALTERA_AVALON_LCD_16207_INIT ( LCD_0, lcd_0);
   90530:	01000274 	movhi	r4,9
   90534:	2115fb04 	addi	r4,r4,22508
   90538:	0091e840 	call	91e84 <altera_avalon_lcd_16207_init>
   9053c:	01000274 	movhi	r4,9
   90540:	2115f104 	addi	r4,r4,22468
   90544:	009055c0 	call	9055c <alt_dev_reg>
    ALTERA_AVALON_SYSID_INIT ( SYSID, sysid);
}
   90548:	e037883a 	mov	sp,fp
   9054c:	dfc00117 	ldw	ra,4(sp)
   90550:	df000017 	ldw	fp,0(sp)
   90554:	dec00204 	addi	sp,sp,8
   90558:	f800283a 	ret

0009055c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   9055c:	defffd04 	addi	sp,sp,-12
   90560:	dfc00215 	stw	ra,8(sp)
   90564:	df000115 	stw	fp,4(sp)
   90568:	df000104 	addi	fp,sp,4
   9056c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   90570:	e13fff17 	ldw	r4,-4(fp)
   90574:	01400274 	movhi	r5,9
   90578:	29564204 	addi	r5,r5,22792
   9057c:	00923f00 	call	923f0 <alt_dev_llist_insert>
}
   90580:	e037883a 	mov	sp,fp
   90584:	dfc00117 	ldw	ra,4(sp)
   90588:	df000017 	ldw	fp,0(sp)
   9058c:	dec00204 	addi	sp,sp,8
   90590:	f800283a 	ret

00090594 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   90594:	defffa04 	addi	sp,sp,-24
   90598:	dfc00515 	stw	ra,20(sp)
   9059c:	df000415 	stw	fp,16(sp)
   905a0:	df000404 	addi	fp,sp,16
   905a4:	e13ffd15 	stw	r4,-12(fp)
   905a8:	e17ffe15 	stw	r5,-8(fp)
   905ac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   905b0:	e0bffd17 	ldw	r2,-12(fp)
   905b4:	10800017 	ldw	r2,0(r2)
   905b8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   905bc:	e0bffc17 	ldw	r2,-16(fp)
   905c0:	11000a04 	addi	r4,r2,40
   905c4:	e0bffd17 	ldw	r2,-12(fp)
   905c8:	11c00217 	ldw	r7,8(r2)
   905cc:	e17ffe17 	ldw	r5,-8(fp)
   905d0:	e1bfff17 	ldw	r6,-4(fp)
   905d4:	0090bdc0 	call	90bdc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   905d8:	e037883a 	mov	sp,fp
   905dc:	dfc00117 	ldw	ra,4(sp)
   905e0:	df000017 	ldw	fp,0(sp)
   905e4:	dec00204 	addi	sp,sp,8
   905e8:	f800283a 	ret

000905ec <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   905ec:	defffa04 	addi	sp,sp,-24
   905f0:	dfc00515 	stw	ra,20(sp)
   905f4:	df000415 	stw	fp,16(sp)
   905f8:	df000404 	addi	fp,sp,16
   905fc:	e13ffd15 	stw	r4,-12(fp)
   90600:	e17ffe15 	stw	r5,-8(fp)
   90604:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   90608:	e0bffd17 	ldw	r2,-12(fp)
   9060c:	10800017 	ldw	r2,0(r2)
   90610:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   90614:	e0bffc17 	ldw	r2,-16(fp)
   90618:	11000a04 	addi	r4,r2,40
   9061c:	e0bffd17 	ldw	r2,-12(fp)
   90620:	11c00217 	ldw	r7,8(r2)
   90624:	e17ffe17 	ldw	r5,-8(fp)
   90628:	e1bfff17 	ldw	r6,-4(fp)
   9062c:	0090e000 	call	90e00 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   90630:	e037883a 	mov	sp,fp
   90634:	dfc00117 	ldw	ra,4(sp)
   90638:	df000017 	ldw	fp,0(sp)
   9063c:	dec00204 	addi	sp,sp,8
   90640:	f800283a 	ret

00090644 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   90644:	defffc04 	addi	sp,sp,-16
   90648:	dfc00315 	stw	ra,12(sp)
   9064c:	df000215 	stw	fp,8(sp)
   90650:	df000204 	addi	fp,sp,8
   90654:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   90658:	e0bfff17 	ldw	r2,-4(fp)
   9065c:	10800017 	ldw	r2,0(r2)
   90660:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   90664:	e0bffe17 	ldw	r2,-8(fp)
   90668:	11000a04 	addi	r4,r2,40
   9066c:	e0bfff17 	ldw	r2,-4(fp)
   90670:	11400217 	ldw	r5,8(r2)
   90674:	0090a740 	call	90a74 <altera_avalon_jtag_uart_close>
}
   90678:	e037883a 	mov	sp,fp
   9067c:	dfc00117 	ldw	ra,4(sp)
   90680:	df000017 	ldw	fp,0(sp)
   90684:	dec00204 	addi	sp,sp,8
   90688:	f800283a 	ret

0009068c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   9068c:	defffa04 	addi	sp,sp,-24
   90690:	dfc00515 	stw	ra,20(sp)
   90694:	df000415 	stw	fp,16(sp)
   90698:	df000404 	addi	fp,sp,16
   9069c:	e13ffd15 	stw	r4,-12(fp)
   906a0:	e17ffe15 	stw	r5,-8(fp)
   906a4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   906a8:	e0bffd17 	ldw	r2,-12(fp)
   906ac:	10800017 	ldw	r2,0(r2)
   906b0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   906b4:	e0bffc17 	ldw	r2,-16(fp)
   906b8:	11000a04 	addi	r4,r2,40
   906bc:	e17ffe17 	ldw	r5,-8(fp)
   906c0:	e1bfff17 	ldw	r6,-4(fp)
   906c4:	0090ae80 	call	90ae8 <altera_avalon_jtag_uart_ioctl>
}
   906c8:	e037883a 	mov	sp,fp
   906cc:	dfc00117 	ldw	ra,4(sp)
   906d0:	df000017 	ldw	fp,0(sp)
   906d4:	dec00204 	addi	sp,sp,8
   906d8:	f800283a 	ret

000906dc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   906dc:	defffa04 	addi	sp,sp,-24
   906e0:	dfc00515 	stw	ra,20(sp)
   906e4:	df000415 	stw	fp,16(sp)
   906e8:	df000404 	addi	fp,sp,16
   906ec:	e13ffd15 	stw	r4,-12(fp)
   906f0:	e17ffe15 	stw	r5,-8(fp)
   906f4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   906f8:	e0fffd17 	ldw	r3,-12(fp)
   906fc:	00800044 	movi	r2,1
   90700:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   90704:	e0bffd17 	ldw	r2,-12(fp)
   90708:	10800017 	ldw	r2,0(r2)
   9070c:	11000104 	addi	r4,r2,4
   90710:	e0bffd17 	ldw	r2,-12(fp)
   90714:	10800817 	ldw	r2,32(r2)
   90718:	1007883a 	mov	r3,r2
   9071c:	2005883a 	mov	r2,r4
   90720:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   90724:	e13ffe17 	ldw	r4,-8(fp)
   90728:	e17fff17 	ldw	r5,-4(fp)
   9072c:	d8000015 	stw	zero,0(sp)
   90730:	01800274 	movhi	r6,9
   90734:	3181e704 	addi	r6,r6,1948
   90738:	e1fffd17 	ldw	r7,-12(fp)
   9073c:	00925e80 	call	925e8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   90740:	e0bffd17 	ldw	r2,-12(fp)
   90744:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   90748:	e0bffd17 	ldw	r2,-12(fp)
   9074c:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   90750:	00800274 	movhi	r2,9
   90754:	109d4304 	addi	r2,r2,29964
   90758:	10800017 	ldw	r2,0(r2)
   9075c:	100b883a 	mov	r5,r2
   90760:	01800274 	movhi	r6,9
   90764:	31827104 	addi	r6,r6,2500
   90768:	e1fffd17 	ldw	r7,-12(fp)
   9076c:	00922800 	call	92280 <alt_alarm_start>
   90770:	1004403a 	cmpge	r2,r2,zero
   90774:	1000041e 	bne	r2,zero,90788 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   90778:	e0fffd17 	ldw	r3,-12(fp)
   9077c:	00a00034 	movhi	r2,32768
   90780:	10bfffc4 	addi	r2,r2,-1
   90784:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   90788:	e037883a 	mov	sp,fp
   9078c:	dfc00117 	ldw	ra,4(sp)
   90790:	df000017 	ldw	fp,0(sp)
   90794:	dec00204 	addi	sp,sp,8
   90798:	f800283a 	ret

0009079c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   9079c:	defff804 	addi	sp,sp,-32
   907a0:	df000715 	stw	fp,28(sp)
   907a4:	df000704 	addi	fp,sp,28
   907a8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   907ac:	e0bfff17 	ldw	r2,-4(fp)
   907b0:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   907b4:	e0bffe17 	ldw	r2,-8(fp)
   907b8:	10800017 	ldw	r2,0(r2)
   907bc:	e0bffd15 	stw	r2,-12(fp)
   907c0:	00000006 	br	907c4 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   907c4:	e0bffd17 	ldw	r2,-12(fp)
   907c8:	10800104 	addi	r2,r2,4
   907cc:	10800037 	ldwio	r2,0(r2)
   907d0:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   907d4:	e0bffc17 	ldw	r2,-16(fp)
   907d8:	1080c00c 	andi	r2,r2,768
   907dc:	1005003a 	cmpeq	r2,r2,zero
   907e0:	1000741e 	bne	r2,zero,909b4 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   907e4:	e0bffc17 	ldw	r2,-16(fp)
   907e8:	1080400c 	andi	r2,r2,256
   907ec:	1005003a 	cmpeq	r2,r2,zero
   907f0:	1000351e 	bne	r2,zero,908c8 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   907f4:	00800074 	movhi	r2,1
   907f8:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   907fc:	e0bffe17 	ldw	r2,-8(fp)
   90800:	10800a17 	ldw	r2,40(r2)
   90804:	10800044 	addi	r2,r2,1
   90808:	1081ffcc 	andi	r2,r2,2047
   9080c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   90810:	e0bffe17 	ldw	r2,-8(fp)
   90814:	10c00b17 	ldw	r3,44(r2)
   90818:	e0bffa17 	ldw	r2,-24(fp)
   9081c:	18801626 	beq	r3,r2,90878 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   90820:	e0bffd17 	ldw	r2,-12(fp)
   90824:	10800037 	ldwio	r2,0(r2)
   90828:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   9082c:	e0bffb17 	ldw	r2,-20(fp)
   90830:	10a0000c 	andi	r2,r2,32768
   90834:	1005003a 	cmpeq	r2,r2,zero
   90838:	10000f1e 	bne	r2,zero,90878 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   9083c:	e0bffe17 	ldw	r2,-8(fp)
   90840:	10c00a17 	ldw	r3,40(r2)
   90844:	e0bffb17 	ldw	r2,-20(fp)
   90848:	1009883a 	mov	r4,r2
   9084c:	e0bffe17 	ldw	r2,-8(fp)
   90850:	1885883a 	add	r2,r3,r2
   90854:	10800e04 	addi	r2,r2,56
   90858:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   9085c:	e0bffe17 	ldw	r2,-8(fp)
   90860:	10800a17 	ldw	r2,40(r2)
   90864:	10800044 	addi	r2,r2,1
   90868:	10c1ffcc 	andi	r3,r2,2047
   9086c:	e0bffe17 	ldw	r2,-8(fp)
   90870:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   90874:	003fe106 	br	907fc <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   90878:	e0bffb17 	ldw	r2,-20(fp)
   9087c:	10bfffec 	andhi	r2,r2,65535
   90880:	1005003a 	cmpeq	r2,r2,zero
   90884:	1000101e 	bne	r2,zero,908c8 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   90888:	e0bffe17 	ldw	r2,-8(fp)
   9088c:	10c00817 	ldw	r3,32(r2)
   90890:	00bfff84 	movi	r2,-2
   90894:	1886703a 	and	r3,r3,r2
   90898:	e0bffe17 	ldw	r2,-8(fp)
   9089c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   908a0:	e0bffd17 	ldw	r2,-12(fp)
   908a4:	11000104 	addi	r4,r2,4
   908a8:	e0bffe17 	ldw	r2,-8(fp)
   908ac:	10800817 	ldw	r2,32(r2)
   908b0:	1007883a 	mov	r3,r2
   908b4:	2005883a 	mov	r2,r4
   908b8:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   908bc:	e0bffd17 	ldw	r2,-12(fp)
   908c0:	10800104 	addi	r2,r2,4
   908c4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   908c8:	e0bffc17 	ldw	r2,-16(fp)
   908cc:	1080800c 	andi	r2,r2,512
   908d0:	1005003a 	cmpeq	r2,r2,zero
   908d4:	103fbb1e 	bne	r2,zero,907c4 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   908d8:	e0bffc17 	ldw	r2,-16(fp)
   908dc:	10bfffec 	andhi	r2,r2,65535
   908e0:	1004d43a 	srli	r2,r2,16
   908e4:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   908e8:	00001506 	br	90940 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   908ec:	e13ffd17 	ldw	r4,-12(fp)
   908f0:	e0bffe17 	ldw	r2,-8(fp)
   908f4:	10c00d17 	ldw	r3,52(r2)
   908f8:	e0bffe17 	ldw	r2,-8(fp)
   908fc:	1885883a 	add	r2,r3,r2
   90900:	10820e04 	addi	r2,r2,2104
   90904:	10800003 	ldbu	r2,0(r2)
   90908:	10c03fcc 	andi	r3,r2,255
   9090c:	18c0201c 	xori	r3,r3,128
   90910:	18ffe004 	addi	r3,r3,-128
   90914:	2005883a 	mov	r2,r4
   90918:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   9091c:	e0bffe17 	ldw	r2,-8(fp)
   90920:	10800d17 	ldw	r2,52(r2)
   90924:	10800044 	addi	r2,r2,1
   90928:	10c1ffcc 	andi	r3,r2,2047
   9092c:	e0bffe17 	ldw	r2,-8(fp)
   90930:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   90934:	e0bff917 	ldw	r2,-28(fp)
   90938:	10bfffc4 	addi	r2,r2,-1
   9093c:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   90940:	e0bff917 	ldw	r2,-28(fp)
   90944:	1005003a 	cmpeq	r2,r2,zero
   90948:	1000051e 	bne	r2,zero,90960 <altera_avalon_jtag_uart_irq+0x1c4>
   9094c:	e0bffe17 	ldw	r2,-8(fp)
   90950:	10c00d17 	ldw	r3,52(r2)
   90954:	e0bffe17 	ldw	r2,-8(fp)
   90958:	10800c17 	ldw	r2,48(r2)
   9095c:	18bfe31e 	bne	r3,r2,908ec <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   90960:	e0bff917 	ldw	r2,-28(fp)
   90964:	1005003a 	cmpeq	r2,r2,zero
   90968:	103f961e 	bne	r2,zero,907c4 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   9096c:	e0bffe17 	ldw	r2,-8(fp)
   90970:	10c00817 	ldw	r3,32(r2)
   90974:	00bfff44 	movi	r2,-3
   90978:	1886703a 	and	r3,r3,r2
   9097c:	e0bffe17 	ldw	r2,-8(fp)
   90980:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   90984:	e0bffe17 	ldw	r2,-8(fp)
   90988:	10800017 	ldw	r2,0(r2)
   9098c:	11000104 	addi	r4,r2,4
   90990:	e0bffe17 	ldw	r2,-8(fp)
   90994:	10800817 	ldw	r2,32(r2)
   90998:	1007883a 	mov	r3,r2
   9099c:	2005883a 	mov	r2,r4
   909a0:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   909a4:	e0bffd17 	ldw	r2,-12(fp)
   909a8:	10800104 	addi	r2,r2,4
   909ac:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   909b0:	003f8406 	br	907c4 <altera_avalon_jtag_uart_irq+0x28>
}
   909b4:	e037883a 	mov	sp,fp
   909b8:	df000017 	ldw	fp,0(sp)
   909bc:	dec00104 	addi	sp,sp,4
   909c0:	f800283a 	ret

000909c4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   909c4:	defffc04 	addi	sp,sp,-16
   909c8:	df000315 	stw	fp,12(sp)
   909cc:	df000304 	addi	fp,sp,12
   909d0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   909d4:	e0bfff17 	ldw	r2,-4(fp)
   909d8:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   909dc:	e0bffe17 	ldw	r2,-8(fp)
   909e0:	10800017 	ldw	r2,0(r2)
   909e4:	10800104 	addi	r2,r2,4
   909e8:	10800037 	ldwio	r2,0(r2)
   909ec:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   909f0:	e0bffd17 	ldw	r2,-12(fp)
   909f4:	1081000c 	andi	r2,r2,1024
   909f8:	1005003a 	cmpeq	r2,r2,zero
   909fc:	10000c1e 	bne	r2,zero,90a30 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   90a00:	e0bffe17 	ldw	r2,-8(fp)
   90a04:	10800017 	ldw	r2,0(r2)
   90a08:	11000104 	addi	r4,r2,4
   90a0c:	e0bffe17 	ldw	r2,-8(fp)
   90a10:	10800817 	ldw	r2,32(r2)
   90a14:	10810014 	ori	r2,r2,1024
   90a18:	1007883a 	mov	r3,r2
   90a1c:	2005883a 	mov	r2,r4
   90a20:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   90a24:	e0bffe17 	ldw	r2,-8(fp)
   90a28:	10000915 	stw	zero,36(r2)
   90a2c:	00000a06 	br	90a58 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   90a30:	e0bffe17 	ldw	r2,-8(fp)
   90a34:	10c00917 	ldw	r3,36(r2)
   90a38:	00a00034 	movhi	r2,32768
   90a3c:	10bfff04 	addi	r2,r2,-4
   90a40:	10c00536 	bltu	r2,r3,90a58 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   90a44:	e0bffe17 	ldw	r2,-8(fp)
   90a48:	10800917 	ldw	r2,36(r2)
   90a4c:	10c00044 	addi	r3,r2,1
   90a50:	e0bffe17 	ldw	r2,-8(fp)
   90a54:	10c00915 	stw	r3,36(r2)
   90a58:	00800274 	movhi	r2,9
   90a5c:	109d4304 	addi	r2,r2,29964
   90a60:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   90a64:	e037883a 	mov	sp,fp
   90a68:	df000017 	ldw	fp,0(sp)
   90a6c:	dec00104 	addi	sp,sp,4
   90a70:	f800283a 	ret

00090a74 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   90a74:	defffc04 	addi	sp,sp,-16
   90a78:	df000315 	stw	fp,12(sp)
   90a7c:	df000304 	addi	fp,sp,12
   90a80:	e13ffd15 	stw	r4,-12(fp)
   90a84:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   90a88:	00000706 	br	90aa8 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   90a8c:	e0bffe17 	ldw	r2,-8(fp)
   90a90:	1090000c 	andi	r2,r2,16384
   90a94:	1005003a 	cmpeq	r2,r2,zero
   90a98:	1000031e 	bne	r2,zero,90aa8 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   90a9c:	00bffd44 	movi	r2,-11
   90aa0:	e0bfff15 	stw	r2,-4(fp)
   90aa4:	00000b06 	br	90ad4 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   90aa8:	e0bffd17 	ldw	r2,-12(fp)
   90aac:	10c00d17 	ldw	r3,52(r2)
   90ab0:	e0bffd17 	ldw	r2,-12(fp)
   90ab4:	10800c17 	ldw	r2,48(r2)
   90ab8:	18800526 	beq	r3,r2,90ad0 <altera_avalon_jtag_uart_close+0x5c>
   90abc:	e0bffd17 	ldw	r2,-12(fp)
   90ac0:	10c00917 	ldw	r3,36(r2)
   90ac4:	e0bffd17 	ldw	r2,-12(fp)
   90ac8:	10800117 	ldw	r2,4(r2)
   90acc:	18bfef36 	bltu	r3,r2,90a8c <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   90ad0:	e03fff15 	stw	zero,-4(fp)
   90ad4:	e0bfff17 	ldw	r2,-4(fp)
}
   90ad8:	e037883a 	mov	sp,fp
   90adc:	df000017 	ldw	fp,0(sp)
   90ae0:	dec00104 	addi	sp,sp,4
   90ae4:	f800283a 	ret

00090ae8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   90ae8:	defff804 	addi	sp,sp,-32
   90aec:	df000715 	stw	fp,28(sp)
   90af0:	df000704 	addi	fp,sp,28
   90af4:	e13ffb15 	stw	r4,-20(fp)
   90af8:	e17ffc15 	stw	r5,-16(fp)
   90afc:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   90b00:	00bff9c4 	movi	r2,-25
   90b04:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   90b08:	e0bffc17 	ldw	r2,-16(fp)
   90b0c:	e0bfff15 	stw	r2,-4(fp)
   90b10:	e0ffff17 	ldw	r3,-4(fp)
   90b14:	189a8060 	cmpeqi	r2,r3,27137
   90b18:	1000041e 	bne	r2,zero,90b2c <altera_avalon_jtag_uart_ioctl+0x44>
   90b1c:	e0ffff17 	ldw	r3,-4(fp)
   90b20:	189a80a0 	cmpeqi	r2,r3,27138
   90b24:	10001b1e 	bne	r2,zero,90b94 <altera_avalon_jtag_uart_ioctl+0xac>
   90b28:	00002706 	br	90bc8 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   90b2c:	e0bffb17 	ldw	r2,-20(fp)
   90b30:	10c00117 	ldw	r3,4(r2)
   90b34:	00a00034 	movhi	r2,32768
   90b38:	10bfffc4 	addi	r2,r2,-1
   90b3c:	18802226 	beq	r3,r2,90bc8 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   90b40:	e0bffd17 	ldw	r2,-12(fp)
   90b44:	10800017 	ldw	r2,0(r2)
   90b48:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   90b4c:	e0bff917 	ldw	r2,-28(fp)
   90b50:	10800090 	cmplti	r2,r2,2
   90b54:	1000071e 	bne	r2,zero,90b74 <altera_avalon_jtag_uart_ioctl+0x8c>
   90b58:	e0fff917 	ldw	r3,-28(fp)
   90b5c:	00a00034 	movhi	r2,32768
   90b60:	10bfffc4 	addi	r2,r2,-1
   90b64:	18800326 	beq	r3,r2,90b74 <altera_avalon_jtag_uart_ioctl+0x8c>
   90b68:	e0bff917 	ldw	r2,-28(fp)
   90b6c:	e0bffe15 	stw	r2,-8(fp)
   90b70:	00000306 	br	90b80 <altera_avalon_jtag_uart_ioctl+0x98>
   90b74:	00e00034 	movhi	r3,32768
   90b78:	18ffff84 	addi	r3,r3,-2
   90b7c:	e0fffe15 	stw	r3,-8(fp)
   90b80:	e0bffb17 	ldw	r2,-20(fp)
   90b84:	e0fffe17 	ldw	r3,-8(fp)
   90b88:	10c00115 	stw	r3,4(r2)
      rc = 0;
   90b8c:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   90b90:	00000d06 	br	90bc8 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   90b94:	e0bffb17 	ldw	r2,-20(fp)
   90b98:	10c00117 	ldw	r3,4(r2)
   90b9c:	00a00034 	movhi	r2,32768
   90ba0:	10bfffc4 	addi	r2,r2,-1
   90ba4:	18800826 	beq	r3,r2,90bc8 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   90ba8:	e13ffd17 	ldw	r4,-12(fp)
   90bac:	e0bffb17 	ldw	r2,-20(fp)
   90bb0:	10c00917 	ldw	r3,36(r2)
   90bb4:	e0bffb17 	ldw	r2,-20(fp)
   90bb8:	10800117 	ldw	r2,4(r2)
   90bbc:	1885803a 	cmpltu	r2,r3,r2
   90bc0:	20800015 	stw	r2,0(r4)
      rc = 0;
   90bc4:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   90bc8:	e0bffa17 	ldw	r2,-24(fp)
}
   90bcc:	e037883a 	mov	sp,fp
   90bd0:	df000017 	ldw	fp,0(sp)
   90bd4:	dec00104 	addi	sp,sp,4
   90bd8:	f800283a 	ret

00090bdc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   90bdc:	defff204 	addi	sp,sp,-56
   90be0:	dfc00d15 	stw	ra,52(sp)
   90be4:	df000c15 	stw	fp,48(sp)
   90be8:	df000c04 	addi	fp,sp,48
   90bec:	e13ffb15 	stw	r4,-20(fp)
   90bf0:	e17ffc15 	stw	r5,-16(fp)
   90bf4:	e1bffd15 	stw	r6,-12(fp)
   90bf8:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   90bfc:	e0bffc17 	ldw	r2,-16(fp)
   90c00:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   90c04:	00004806 	br	90d28 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   90c08:	e0bffb17 	ldw	r2,-20(fp)
   90c0c:	10800a17 	ldw	r2,40(r2)
   90c10:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   90c14:	e0bffb17 	ldw	r2,-20(fp)
   90c18:	10800b17 	ldw	r2,44(r2)
   90c1c:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   90c20:	e0fff717 	ldw	r3,-36(fp)
   90c24:	e0bff617 	ldw	r2,-40(fp)
   90c28:	18800536 	bltu	r3,r2,90c40 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   90c2c:	e0bff717 	ldw	r2,-36(fp)
   90c30:	e0fff617 	ldw	r3,-40(fp)
   90c34:	10c5c83a 	sub	r2,r2,r3
   90c38:	e0bff815 	stw	r2,-32(fp)
   90c3c:	00000406 	br	90c50 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   90c40:	00820004 	movi	r2,2048
   90c44:	e0fff617 	ldw	r3,-40(fp)
   90c48:	10c5c83a 	sub	r2,r2,r3
   90c4c:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   90c50:	e0bff817 	ldw	r2,-32(fp)
   90c54:	1005003a 	cmpeq	r2,r2,zero
   90c58:	10001f1e 	bne	r2,zero,90cd8 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   90c5c:	e0fffd17 	ldw	r3,-12(fp)
   90c60:	e0bff817 	ldw	r2,-32(fp)
   90c64:	1880022e 	bgeu	r3,r2,90c70 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   90c68:	e0bffd17 	ldw	r2,-12(fp)
   90c6c:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   90c70:	e0bffb17 	ldw	r2,-20(fp)
   90c74:	10c00e04 	addi	r3,r2,56
   90c78:	e0bff617 	ldw	r2,-40(fp)
   90c7c:	1887883a 	add	r3,r3,r2
   90c80:	e0bffa17 	ldw	r2,-24(fp)
   90c84:	1009883a 	mov	r4,r2
   90c88:	180b883a 	mov	r5,r3
   90c8c:	e1bff817 	ldw	r6,-32(fp)
   90c90:	00876c80 	call	876c8 <memcpy>
      ptr   += n;
   90c94:	e0fff817 	ldw	r3,-32(fp)
   90c98:	e0bffa17 	ldw	r2,-24(fp)
   90c9c:	10c5883a 	add	r2,r2,r3
   90ca0:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   90ca4:	e0fffd17 	ldw	r3,-12(fp)
   90ca8:	e0bff817 	ldw	r2,-32(fp)
   90cac:	1885c83a 	sub	r2,r3,r2
   90cb0:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   90cb4:	e0fff617 	ldw	r3,-40(fp)
   90cb8:	e0bff817 	ldw	r2,-32(fp)
   90cbc:	1885883a 	add	r2,r3,r2
   90cc0:	10c1ffcc 	andi	r3,r2,2047
   90cc4:	e0bffb17 	ldw	r2,-20(fp)
   90cc8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   90ccc:	e0bffd17 	ldw	r2,-12(fp)
   90cd0:	10800048 	cmpgei	r2,r2,1
   90cd4:	103fcc1e 	bne	r2,zero,90c08 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   90cd8:	e0fffa17 	ldw	r3,-24(fp)
   90cdc:	e0bffc17 	ldw	r2,-16(fp)
   90ce0:	1880141e 	bne	r3,r2,90d34 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   90ce4:	e0bffe17 	ldw	r2,-8(fp)
   90ce8:	1090000c 	andi	r2,r2,16384
   90cec:	1004c03a 	cmpne	r2,r2,zero
   90cf0:	1000101e 	bne	r2,zero,90d34 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   90cf4:	e0bffb17 	ldw	r2,-20(fp)
   90cf8:	10c00a17 	ldw	r3,40(r2)
   90cfc:	e0bff717 	ldw	r2,-36(fp)
   90d00:	1880051e 	bne	r3,r2,90d18 <altera_avalon_jtag_uart_read+0x13c>
   90d04:	e0bffb17 	ldw	r2,-20(fp)
   90d08:	10c00917 	ldw	r3,36(r2)
   90d0c:	e0bffb17 	ldw	r2,-20(fp)
   90d10:	10800117 	ldw	r2,4(r2)
   90d14:	18bff736 	bltu	r3,r2,90cf4 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   90d18:	e0bffb17 	ldw	r2,-20(fp)
   90d1c:	10c00a17 	ldw	r3,40(r2)
   90d20:	e0bff717 	ldw	r2,-36(fp)
   90d24:	18800326 	beq	r3,r2,90d34 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   90d28:	e0bffd17 	ldw	r2,-12(fp)
   90d2c:	10800048 	cmpgei	r2,r2,1
   90d30:	103fb51e 	bne	r2,zero,90c08 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   90d34:	e0fffa17 	ldw	r3,-24(fp)
   90d38:	e0bffc17 	ldw	r2,-16(fp)
   90d3c:	18801926 	beq	r3,r2,90da4 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   90d40:	0005303a 	rdctl	r2,status
   90d44:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   90d48:	e0fff517 	ldw	r3,-44(fp)
   90d4c:	00bfff84 	movi	r2,-2
   90d50:	1884703a 	and	r2,r3,r2
   90d54:	1001703a 	wrctl	status,r2
  
  return context;
   90d58:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   90d5c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   90d60:	e0bffb17 	ldw	r2,-20(fp)
   90d64:	10800817 	ldw	r2,32(r2)
   90d68:	10c00054 	ori	r3,r2,1
   90d6c:	e0bffb17 	ldw	r2,-20(fp)
   90d70:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   90d74:	e0bffb17 	ldw	r2,-20(fp)
   90d78:	10800017 	ldw	r2,0(r2)
   90d7c:	11000104 	addi	r4,r2,4
   90d80:	e0bffb17 	ldw	r2,-20(fp)
   90d84:	10800817 	ldw	r2,32(r2)
   90d88:	1007883a 	mov	r3,r2
   90d8c:	2005883a 	mov	r2,r4
   90d90:	10c00035 	stwio	r3,0(r2)
   90d94:	e0bff917 	ldw	r2,-28(fp)
   90d98:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   90d9c:	e0bff417 	ldw	r2,-48(fp)
   90da0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   90da4:	e0fffa17 	ldw	r3,-24(fp)
   90da8:	e0bffc17 	ldw	r2,-16(fp)
   90dac:	18800526 	beq	r3,r2,90dc4 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   90db0:	e0fffa17 	ldw	r3,-24(fp)
   90db4:	e0bffc17 	ldw	r2,-16(fp)
   90db8:	1887c83a 	sub	r3,r3,r2
   90dbc:	e0ffff15 	stw	r3,-4(fp)
   90dc0:	00000906 	br	90de8 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   90dc4:	e0bffe17 	ldw	r2,-8(fp)
   90dc8:	1090000c 	andi	r2,r2,16384
   90dcc:	1005003a 	cmpeq	r2,r2,zero
   90dd0:	1000031e 	bne	r2,zero,90de0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   90dd4:	00bffd44 	movi	r2,-11
   90dd8:	e0bfff15 	stw	r2,-4(fp)
   90ddc:	00000206 	br	90de8 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   90de0:	00bffec4 	movi	r2,-5
   90de4:	e0bfff15 	stw	r2,-4(fp)
   90de8:	e0bfff17 	ldw	r2,-4(fp)
}
   90dec:	e037883a 	mov	sp,fp
   90df0:	dfc00117 	ldw	ra,4(sp)
   90df4:	df000017 	ldw	fp,0(sp)
   90df8:	dec00204 	addi	sp,sp,8
   90dfc:	f800283a 	ret

00090e00 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   90e00:	defff204 	addi	sp,sp,-56
   90e04:	dfc00d15 	stw	ra,52(sp)
   90e08:	df000c15 	stw	fp,48(sp)
   90e0c:	df000c04 	addi	fp,sp,48
   90e10:	e13ffb15 	stw	r4,-20(fp)
   90e14:	e17ffc15 	stw	r5,-16(fp)
   90e18:	e1bffd15 	stw	r6,-12(fp)
   90e1c:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   90e20:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   90e24:	e0bffc17 	ldw	r2,-16(fp)
   90e28:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   90e2c:	00003a06 	br	90f18 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   90e30:	e0bffb17 	ldw	r2,-20(fp)
   90e34:	10800c17 	ldw	r2,48(r2)
   90e38:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   90e3c:	e0bffb17 	ldw	r2,-20(fp)
   90e40:	10800d17 	ldw	r2,52(r2)
   90e44:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   90e48:	e0fffa17 	ldw	r3,-24(fp)
   90e4c:	e0bff917 	ldw	r2,-28(fp)
   90e50:	1880062e 	bgeu	r3,r2,90e6c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   90e54:	e0fff917 	ldw	r3,-28(fp)
   90e58:	e0bffa17 	ldw	r2,-24(fp)
   90e5c:	1885c83a 	sub	r2,r3,r2
   90e60:	10bfffc4 	addi	r2,r2,-1
   90e64:	e0bff815 	stw	r2,-32(fp)
   90e68:	00000c06 	br	90e9c <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   90e6c:	e0bff917 	ldw	r2,-28(fp)
   90e70:	1005003a 	cmpeq	r2,r2,zero
   90e74:	1000051e 	bne	r2,zero,90e8c <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   90e78:	00820004 	movi	r2,2048
   90e7c:	e0fffa17 	ldw	r3,-24(fp)
   90e80:	10c5c83a 	sub	r2,r2,r3
   90e84:	e0bff815 	stw	r2,-32(fp)
   90e88:	00000406 	br	90e9c <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   90e8c:	0081ffc4 	movi	r2,2047
   90e90:	e0fffa17 	ldw	r3,-24(fp)
   90e94:	10c5c83a 	sub	r2,r2,r3
   90e98:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   90e9c:	e0bff817 	ldw	r2,-32(fp)
   90ea0:	1005003a 	cmpeq	r2,r2,zero
   90ea4:	10001f1e 	bne	r2,zero,90f24 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   90ea8:	e0fffd17 	ldw	r3,-12(fp)
   90eac:	e0bff817 	ldw	r2,-32(fp)
   90eb0:	1880022e 	bgeu	r3,r2,90ebc <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   90eb4:	e0bffd17 	ldw	r2,-12(fp)
   90eb8:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   90ebc:	e0bffb17 	ldw	r2,-20(fp)
   90ec0:	10c20e04 	addi	r3,r2,2104
   90ec4:	e0bffa17 	ldw	r2,-24(fp)
   90ec8:	1885883a 	add	r2,r3,r2
   90ecc:	e0fffc17 	ldw	r3,-16(fp)
   90ed0:	1009883a 	mov	r4,r2
   90ed4:	180b883a 	mov	r5,r3
   90ed8:	e1bff817 	ldw	r6,-32(fp)
   90edc:	00876c80 	call	876c8 <memcpy>
      ptr   += n;
   90ee0:	e0fff817 	ldw	r3,-32(fp)
   90ee4:	e0bffc17 	ldw	r2,-16(fp)
   90ee8:	10c5883a 	add	r2,r2,r3
   90eec:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   90ef0:	e0fffd17 	ldw	r3,-12(fp)
   90ef4:	e0bff817 	ldw	r2,-32(fp)
   90ef8:	1885c83a 	sub	r2,r3,r2
   90efc:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   90f00:	e0fffa17 	ldw	r3,-24(fp)
   90f04:	e0bff817 	ldw	r2,-32(fp)
   90f08:	1885883a 	add	r2,r3,r2
   90f0c:	10c1ffcc 	andi	r3,r2,2047
   90f10:	e0bffb17 	ldw	r2,-20(fp)
   90f14:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   90f18:	e0bffd17 	ldw	r2,-12(fp)
   90f1c:	10800048 	cmpgei	r2,r2,1
   90f20:	103fc31e 	bne	r2,zero,90e30 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   90f24:	0005303a 	rdctl	r2,status
   90f28:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   90f2c:	e0fff517 	ldw	r3,-44(fp)
   90f30:	00bfff84 	movi	r2,-2
   90f34:	1884703a 	and	r2,r3,r2
   90f38:	1001703a 	wrctl	status,r2
  
  return context;
   90f3c:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   90f40:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   90f44:	e0bffb17 	ldw	r2,-20(fp)
   90f48:	10800817 	ldw	r2,32(r2)
   90f4c:	10c00094 	ori	r3,r2,2
   90f50:	e0bffb17 	ldw	r2,-20(fp)
   90f54:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   90f58:	e0bffb17 	ldw	r2,-20(fp)
   90f5c:	10800017 	ldw	r2,0(r2)
   90f60:	11000104 	addi	r4,r2,4
   90f64:	e0bffb17 	ldw	r2,-20(fp)
   90f68:	10800817 	ldw	r2,32(r2)
   90f6c:	1007883a 	mov	r3,r2
   90f70:	2005883a 	mov	r2,r4
   90f74:	10c00035 	stwio	r3,0(r2)
   90f78:	e0bff717 	ldw	r2,-36(fp)
   90f7c:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   90f80:	e0bff417 	ldw	r2,-48(fp)
   90f84:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   90f88:	e0bffd17 	ldw	r2,-12(fp)
   90f8c:	10800050 	cmplti	r2,r2,1
   90f90:	1000111e 	bne	r2,zero,90fd8 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   90f94:	e0bffe17 	ldw	r2,-8(fp)
   90f98:	1090000c 	andi	r2,r2,16384
   90f9c:	1004c03a 	cmpne	r2,r2,zero
   90fa0:	1000101e 	bne	r2,zero,90fe4 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   90fa4:	e0bffb17 	ldw	r2,-20(fp)
   90fa8:	10c00d17 	ldw	r3,52(r2)
   90fac:	e0bff917 	ldw	r2,-28(fp)
   90fb0:	1880051e 	bne	r3,r2,90fc8 <altera_avalon_jtag_uart_write+0x1c8>
   90fb4:	e0bffb17 	ldw	r2,-20(fp)
   90fb8:	10c00917 	ldw	r3,36(r2)
   90fbc:	e0bffb17 	ldw	r2,-20(fp)
   90fc0:	10800117 	ldw	r2,4(r2)
   90fc4:	18bff736 	bltu	r3,r2,90fa4 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   90fc8:	e0bffb17 	ldw	r2,-20(fp)
   90fcc:	10c00d17 	ldw	r3,52(r2)
   90fd0:	e0bff917 	ldw	r2,-28(fp)
   90fd4:	18800326 	beq	r3,r2,90fe4 <altera_avalon_jtag_uart_write+0x1e4>
        break;
    }
  }
  while (count > 0);
   90fd8:	e0bffd17 	ldw	r2,-12(fp)
   90fdc:	10800048 	cmpgei	r2,r2,1
   90fe0:	103fcd1e 	bne	r2,zero,90f18 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   90fe4:	e0fffc17 	ldw	r3,-16(fp)
   90fe8:	e0bff617 	ldw	r2,-40(fp)
   90fec:	18800526 	beq	r3,r2,91004 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   90ff0:	e0fffc17 	ldw	r3,-16(fp)
   90ff4:	e0bff617 	ldw	r2,-40(fp)
   90ff8:	1887c83a 	sub	r3,r3,r2
   90ffc:	e0ffff15 	stw	r3,-4(fp)
   91000:	00000906 	br	91028 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   91004:	e0bffe17 	ldw	r2,-8(fp)
   91008:	1090000c 	andi	r2,r2,16384
   9100c:	1005003a 	cmpeq	r2,r2,zero
   91010:	1000031e 	bne	r2,zero,91020 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   91014:	00bffd44 	movi	r2,-11
   91018:	e0bfff15 	stw	r2,-4(fp)
   9101c:	00000206 	br	91028 <altera_avalon_jtag_uart_write+0x228>
  else
    return -EIO; /* Host not connected */
   91020:	00bffec4 	movi	r2,-5
   91024:	e0bfff15 	stw	r2,-4(fp)
   91028:	e0bfff17 	ldw	r2,-4(fp)
}
   9102c:	e037883a 	mov	sp,fp
   91030:	dfc00117 	ldw	ra,4(sp)
   91034:	df000017 	ldw	fp,0(sp)
   91038:	dec00204 	addi	sp,sp,8
   9103c:	f800283a 	ret

00091040 <lcd_write_command>:

/* --------------------------------------------------------------------- */

static void lcd_write_command(altera_avalon_lcd_16207_state* sp, 
  unsigned char command)
{
   91040:	defffa04 	addi	sp,sp,-24
   91044:	dfc00515 	stw	ra,20(sp)
   91048:	df000415 	stw	fp,16(sp)
   9104c:	df000404 	addi	fp,sp,16
   91050:	e13ffe15 	stw	r4,-8(fp)
   91054:	e17fff05 	stb	r5,-4(fp)
  unsigned int base = sp->base;
   91058:	e0bffe17 	ldw	r2,-8(fp)
   9105c:	10800017 	ldw	r2,0(r2)
   91060:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
   91064:	008003f4 	movhi	r2,15
   91068:	10909004 	addi	r2,r2,16960
   9106c:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
   91070:	e0bffe17 	ldw	r2,-8(fp)
   91074:	10800803 	ldbu	r2,32(r2)
   91078:	10803fcc 	andi	r2,r2,255
   9107c:	1080201c 	xori	r2,r2,128
   91080:	10bfe004 	addi	r2,r2,-128
   91084:	1004c03a 	cmpne	r2,r2,zero
   91088:	1000161e 	bne	r2,zero,910e4 <lcd_write_command+0xa4>
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   9108c:	00000a06 	br	910b8 <lcd_write_command+0x78>
    if (--i == 0)
   91090:	e0bffc17 	ldw	r2,-16(fp)
   91094:	10bfffc4 	addi	r2,r2,-1
   91098:	e0bffc15 	stw	r2,-16(fp)
   9109c:	e0bffc17 	ldw	r2,-16(fp)
   910a0:	1004c03a 	cmpne	r2,r2,zero
   910a4:	1000041e 	bne	r2,zero,910b8 <lcd_write_command+0x78>
    {
      sp->broken = 1;
   910a8:	e0fffe17 	ldw	r3,-8(fp)
   910ac:	00800044 	movi	r2,1
   910b0:	18800805 	stb	r2,32(r3)
      return;
   910b4:	00000b06 	br	910e4 <lcd_write_command+0xa4>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   910b8:	e0bffd17 	ldw	r2,-12(fp)
   910bc:	10800104 	addi	r2,r2,4
   910c0:	10800037 	ldwio	r2,0(r2)
   910c4:	1080200c 	andi	r2,r2,128
   910c8:	1004c03a 	cmpne	r2,r2,zero
   910cc:	103ff01e 	bne	r2,zero,91090 <lcd_write_command+0x50>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
   910d0:	01001904 	movi	r4,100
   910d4:	0092e8c0 	call	92e8c <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, command);
   910d8:	e0bffd17 	ldw	r2,-12(fp)
   910dc:	e0ffff03 	ldbu	r3,-4(fp)
   910e0:	10c00035 	stwio	r3,0(r2)
}
   910e4:	e037883a 	mov	sp,fp
   910e8:	dfc00117 	ldw	ra,4(sp)
   910ec:	df000017 	ldw	fp,0(sp)
   910f0:	dec00204 	addi	sp,sp,8
   910f4:	f800283a 	ret

000910f8 <lcd_write_data>:

/* --------------------------------------------------------------------- */

static void lcd_write_data(altera_avalon_lcd_16207_state* sp, 
  unsigned char data)
{
   910f8:	defffa04 	addi	sp,sp,-24
   910fc:	dfc00515 	stw	ra,20(sp)
   91100:	df000415 	stw	fp,16(sp)
   91104:	df000404 	addi	fp,sp,16
   91108:	e13ffe15 	stw	r4,-8(fp)
   9110c:	e17fff05 	stb	r5,-4(fp)
  unsigned int base = sp->base;
   91110:	e0bffe17 	ldw	r2,-8(fp)
   91114:	10800017 	ldw	r2,0(r2)
   91118:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
   9111c:	008003f4 	movhi	r2,15
   91120:	10909004 	addi	r2,r2,16960
   91124:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
   91128:	e0bffe17 	ldw	r2,-8(fp)
   9112c:	10800803 	ldbu	r2,32(r2)
   91130:	10803fcc 	andi	r2,r2,255
   91134:	1080201c 	xori	r2,r2,128
   91138:	10bfe004 	addi	r2,r2,-128
   9113c:	1004c03a 	cmpne	r2,r2,zero
   91140:	10001d1e 	bne	r2,zero,911b8 <lcd_write_data+0xc0>
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   91144:	00000a06 	br	91170 <lcd_write_data+0x78>
    if (--i == 0)
   91148:	e0bffc17 	ldw	r2,-16(fp)
   9114c:	10bfffc4 	addi	r2,r2,-1
   91150:	e0bffc15 	stw	r2,-16(fp)
   91154:	e0bffc17 	ldw	r2,-16(fp)
   91158:	1004c03a 	cmpne	r2,r2,zero
   9115c:	1000041e 	bne	r2,zero,91170 <lcd_write_data+0x78>
    {
      sp->broken = 1;
   91160:	e0fffe17 	ldw	r3,-8(fp)
   91164:	00800044 	movi	r2,1
   91168:	18800805 	stb	r2,32(r3)
      return;
   9116c:	00001206 	br	911b8 <lcd_write_data+0xc0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   91170:	e0bffd17 	ldw	r2,-12(fp)
   91174:	10800104 	addi	r2,r2,4
   91178:	10800037 	ldwio	r2,0(r2)
   9117c:	1080200c 	andi	r2,r2,128
   91180:	1004c03a 	cmpne	r2,r2,zero
   91184:	103ff01e 	bne	r2,zero,91148 <lcd_write_data+0x50>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
   91188:	01001904 	movi	r4,100
   9118c:	0092e8c0 	call	92e8c <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_DATA(base, data);
   91190:	e0bffd17 	ldw	r2,-12(fp)
   91194:	10800204 	addi	r2,r2,8
   91198:	e0ffff03 	ldbu	r3,-4(fp)
   9119c:	10c00035 	stwio	r3,0(r2)

  sp->address++;
   911a0:	e0bffe17 	ldw	r2,-8(fp)
   911a4:	108008c3 	ldbu	r2,35(r2)
   911a8:	10800044 	addi	r2,r2,1
   911ac:	1007883a 	mov	r3,r2
   911b0:	e0bffe17 	ldw	r2,-8(fp)
   911b4:	10c008c5 	stb	r3,35(r2)
}
   911b8:	e037883a 	mov	sp,fp
   911bc:	dfc00117 	ldw	ra,4(sp)
   911c0:	df000017 	ldw	fp,0(sp)
   911c4:	dec00204 	addi	sp,sp,8
   911c8:	f800283a 	ret

000911cc <lcd_clear_screen>:

/* --------------------------------------------------------------------- */

static void lcd_clear_screen(altera_avalon_lcd_16207_state* sp)
{
   911cc:	defffb04 	addi	sp,sp,-20
   911d0:	dfc00415 	stw	ra,16(sp)
   911d4:	df000315 	stw	fp,12(sp)
   911d8:	dc000215 	stw	r16,8(sp)
   911dc:	df000204 	addi	fp,sp,8
   911e0:	e13fff15 	stw	r4,-4(fp)
  int y;

  lcd_write_command(sp, LCD_CMD_CLEAR);
   911e4:	e13fff17 	ldw	r4,-4(fp)
   911e8:	01400044 	movi	r5,1
   911ec:	00910400 	call	91040 <lcd_write_command>

  sp->x = 0;
   911f0:	e0bfff17 	ldw	r2,-4(fp)
   911f4:	10000845 	stb	zero,33(r2)
  sp->y = 0;
   911f8:	e0bfff17 	ldw	r2,-4(fp)
   911fc:	10000885 	stb	zero,34(r2)
  sp->address = 0;
   91200:	e0bfff17 	ldw	r2,-4(fp)
   91204:	100008c5 	stb	zero,35(r2)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91208:	e03ffe15 	stw	zero,-8(fp)
   9120c:	00001c06 	br	91280 <lcd_clear_screen+0xb4>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
   91210:	e13ffe17 	ldw	r4,-8(fp)
   91214:	014018c4 	movi	r5,99
   91218:	00806240 	call	80624 <__mulsi3>
   9121c:	10c01004 	addi	r3,r2,64
   91220:	e0bfff17 	ldw	r2,-4(fp)
   91224:	1889883a 	add	r4,r3,r2
   91228:	01400804 	movi	r5,32
   9122c:	01801444 	movi	r6,81
   91230:	00878480 	call	87848 <memset>
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
   91234:	e13ffe17 	ldw	r4,-8(fp)
   91238:	014018c4 	movi	r5,99
   9123c:	00806240 	call	80624 <__mulsi3>
   91240:	10c00c04 	addi	r3,r2,48
   91244:	e0bfff17 	ldw	r2,-4(fp)
   91248:	1889883a 	add	r4,r3,r2
   9124c:	01400804 	movi	r5,32
   91250:	01800404 	movi	r6,16
   91254:	00878480 	call	87848 <memset>
    sp->line[y].width = 0;
   91258:	e13ffe17 	ldw	r4,-8(fp)
   9125c:	e43fff17 	ldw	r16,-4(fp)
   91260:	014018c4 	movi	r5,99
   91264:	00806240 	call	80624 <__mulsi3>
   91268:	1405883a 	add	r2,r2,r16
   9126c:	10802404 	addi	r2,r2,144
   91270:	10000045 	stb	zero,1(r2)

  sp->x = 0;
  sp->y = 0;
  sp->address = 0;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91274:	e0bffe17 	ldw	r2,-8(fp)
   91278:	10800044 	addi	r2,r2,1
   9127c:	e0bffe15 	stw	r2,-8(fp)
   91280:	e0bffe17 	ldw	r2,-8(fp)
   91284:	10800090 	cmplti	r2,r2,2
   91288:	103fe11e 	bne	r2,zero,91210 <lcd_clear_screen+0x44>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
    sp->line[y].width = 0;
  }
}
   9128c:	e037883a 	mov	sp,fp
   91290:	dfc00217 	ldw	ra,8(sp)
   91294:	df000117 	ldw	fp,4(sp)
   91298:	dc000017 	ldw	r16,0(sp)
   9129c:	dec00304 	addi	sp,sp,12
   912a0:	f800283a 	ret

000912a4 <lcd_repaint_screen>:

/* --------------------------------------------------------------------- */

static void lcd_repaint_screen(altera_avalon_lcd_16207_state* sp)
{
   912a4:	defff404 	addi	sp,sp,-48
   912a8:	dfc00b15 	stw	ra,44(sp)
   912ac:	df000a15 	stw	fp,40(sp)
   912b0:	dc800915 	stw	r18,36(sp)
   912b4:	dc400815 	stw	r17,32(sp)
   912b8:	dc000715 	stw	r16,28(sp)
   912bc:	df000704 	addi	fp,sp,28
   912c0:	e13fff15 	stw	r4,-4(fp)
  /* scrollpos controls how much the lines have scrolled round.  The speed
   * each line scrolls at is controlled by its speed variable - while
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;
   912c4:	e0bfff17 	ldw	r2,-4(fp)
   912c8:	10800943 	ldbu	r2,37(r2)
   912cc:	10803fcc 	andi	r2,r2,255
   912d0:	1080201c 	xori	r2,r2,128
   912d4:	10bfe004 	addi	r2,r2,-128
   912d8:	e0bffc15 	stw	r2,-16(fp)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   912dc:	e03ffe15 	stw	zero,-8(fp)
   912e0:	00006a06 	br	9148c <lcd_repaint_screen+0x1e8>
  {
    int width  = sp->line[y].width;
   912e4:	e13ffe17 	ldw	r4,-8(fp)
   912e8:	e43fff17 	ldw	r16,-4(fp)
   912ec:	014018c4 	movi	r5,99
   912f0:	00806240 	call	80624 <__mulsi3>
   912f4:	1405883a 	add	r2,r2,r16
   912f8:	10802404 	addi	r2,r2,144
   912fc:	10800043 	ldbu	r2,1(r2)
   91300:	10803fcc 	andi	r2,r2,255
   91304:	1080201c 	xori	r2,r2,128
   91308:	10bfe004 	addi	r2,r2,-128
   9130c:	e0bffb15 	stw	r2,-20(fp)
    int offset = (scrollpos * sp->line[y].speed) >> 8;
   91310:	e13ffe17 	ldw	r4,-8(fp)
   91314:	e43fff17 	ldw	r16,-4(fp)
   91318:	014018c4 	movi	r5,99
   9131c:	00806240 	call	80624 <__mulsi3>
   91320:	1405883a 	add	r2,r2,r16
   91324:	10802404 	addi	r2,r2,144
   91328:	10800083 	ldbu	r2,2(r2)
   9132c:	11003fcc 	andi	r4,r2,255
   91330:	e17ffc17 	ldw	r5,-16(fp)
   91334:	00806240 	call	80624 <__mulsi3>
   91338:	1005d23a 	srai	r2,r2,8
   9133c:	e0bffa15 	stw	r2,-24(fp)
    if (offset >= width)
   91340:	e0fffa17 	ldw	r3,-24(fp)
   91344:	e0bffb17 	ldw	r2,-20(fp)
   91348:	18800116 	blt	r3,r2,91350 <lcd_repaint_screen+0xac>
      offset = 0;
   9134c:	e03ffa15 	stw	zero,-24(fp)

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
   91350:	e03ffd15 	stw	zero,-12(fp)
   91354:	00004706 	br	91474 <lcd_repaint_screen+0x1d0>
    {
      char c = sp->line[y].data[(x + offset) % width];
   91358:	e47ffe17 	ldw	r17,-8(fp)
   9135c:	e0fffd17 	ldw	r3,-12(fp)
   91360:	e0bffa17 	ldw	r2,-24(fp)
   91364:	1889883a 	add	r4,r3,r2
   91368:	e17ffb17 	ldw	r5,-20(fp)
   9136c:	008f07c0 	call	8f07c <__modsi3>
   91370:	1025883a 	mov	r18,r2
   91374:	e43fff17 	ldw	r16,-4(fp)
   91378:	8809883a 	mov	r4,r17
   9137c:	014018c4 	movi	r5,99
   91380:	00806240 	call	80624 <__mulsi3>
   91384:	1405883a 	add	r2,r2,r16
   91388:	1485883a 	add	r2,r2,r18
   9138c:	10801004 	addi	r2,r2,64
   91390:	10800003 	ldbu	r2,0(r2)
   91394:	e0bff945 	stb	r2,-27(fp)

      /* Writing data takes 40us, so don't do it unless required */
      if (sp->line[y].visible[x] != c)
   91398:	e13ffe17 	ldw	r4,-8(fp)
   9139c:	e47ffd17 	ldw	r17,-12(fp)
   913a0:	e43fff17 	ldw	r16,-4(fp)
   913a4:	014018c4 	movi	r5,99
   913a8:	00806240 	call	80624 <__mulsi3>
   913ac:	1405883a 	add	r2,r2,r16
   913b0:	1445883a 	add	r2,r2,r17
   913b4:	10800c04 	addi	r2,r2,48
   913b8:	10800003 	ldbu	r2,0(r2)
   913bc:	10c03fcc 	andi	r3,r2,255
   913c0:	18c0201c 	xori	r3,r3,128
   913c4:	18ffe004 	addi	r3,r3,-128
   913c8:	e0bff947 	ldb	r2,-27(fp)
   913cc:	18802626 	beq	r3,r2,91468 <lcd_repaint_screen+0x1c4>
      {
        unsigned char address = x + colstart[y];
   913d0:	e0fffe17 	ldw	r3,-8(fp)
   913d4:	d0a00e04 	addi	r2,gp,-32712
   913d8:	1885883a 	add	r2,r3,r2
   913dc:	10800003 	ldbu	r2,0(r2)
   913e0:	1007883a 	mov	r3,r2
   913e4:	e0bffd17 	ldw	r2,-12(fp)
   913e8:	1885883a 	add	r2,r3,r2
   913ec:	e0bff905 	stb	r2,-28(fp)

        if (address != sp->address)
   913f0:	e0fff903 	ldbu	r3,-28(fp)
   913f4:	e0bfff17 	ldw	r2,-4(fp)
   913f8:	108008c3 	ldbu	r2,35(r2)
   913fc:	10803fcc 	andi	r2,r2,255
   91400:	1080201c 	xori	r2,r2,128
   91404:	10bfe004 	addi	r2,r2,-128
   91408:	18800926 	beq	r3,r2,91430 <lcd_repaint_screen+0x18c>
        {
          lcd_write_command(sp, LCD_CMD_WRITE_DATA | address);
   9140c:	e0fff903 	ldbu	r3,-28(fp)
   91410:	00bfe004 	movi	r2,-128
   91414:	1884b03a 	or	r2,r3,r2
   91418:	11403fcc 	andi	r5,r2,255
   9141c:	e13fff17 	ldw	r4,-4(fp)
   91420:	00910400 	call	91040 <lcd_write_command>
          sp->address = address;
   91424:	e0fff903 	ldbu	r3,-28(fp)
   91428:	e0bfff17 	ldw	r2,-4(fp)
   9142c:	10c008c5 	stb	r3,35(r2)
        }

        lcd_write_data(sp, c);
   91430:	e0bff943 	ldbu	r2,-27(fp)
   91434:	11403fcc 	andi	r5,r2,255
   91438:	e13fff17 	ldw	r4,-4(fp)
   9143c:	00910f80 	call	910f8 <lcd_write_data>
        sp->line[y].visible[x] = c;
   91440:	e13ffe17 	ldw	r4,-8(fp)
   91444:	e47ffd17 	ldw	r17,-12(fp)
   91448:	e43fff17 	ldw	r16,-4(fp)
   9144c:	014018c4 	movi	r5,99
   91450:	00806240 	call	80624 <__mulsi3>
   91454:	1405883a 	add	r2,r2,r16
   91458:	1445883a 	add	r2,r2,r17
   9145c:	10c00c04 	addi	r3,r2,48
   91460:	e0bff943 	ldbu	r2,-27(fp)
   91464:	18800005 	stb	r2,0(r3)
    int width  = sp->line[y].width;
    int offset = (scrollpos * sp->line[y].speed) >> 8;
    if (offset >= width)
      offset = 0;

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
   91468:	e0bffd17 	ldw	r2,-12(fp)
   9146c:	10800044 	addi	r2,r2,1
   91470:	e0bffd15 	stw	r2,-12(fp)
   91474:	e0bffd17 	ldw	r2,-12(fp)
   91478:	10800410 	cmplti	r2,r2,16
   9147c:	103fb61e 	bne	r2,zero,91358 <lcd_repaint_screen+0xb4>
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91480:	e0bffe17 	ldw	r2,-8(fp)
   91484:	10800044 	addi	r2,r2,1
   91488:	e0bffe15 	stw	r2,-8(fp)
   9148c:	e0bffe17 	ldw	r2,-8(fp)
   91490:	10800090 	cmplti	r2,r2,2
   91494:	103f931e 	bne	r2,zero,912e4 <lcd_repaint_screen+0x40>
        lcd_write_data(sp, c);
        sp->line[y].visible[x] = c;
      }
    }
  }
}
   91498:	e037883a 	mov	sp,fp
   9149c:	dfc00417 	ldw	ra,16(sp)
   914a0:	df000317 	ldw	fp,12(sp)
   914a4:	dc800217 	ldw	r18,8(sp)
   914a8:	dc400117 	ldw	r17,4(sp)
   914ac:	dc000017 	ldw	r16,0(sp)
   914b0:	dec00504 	addi	sp,sp,20
   914b4:	f800283a 	ret

000914b8 <lcd_scroll_up>:

/* --------------------------------------------------------------------- */

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
   914b8:	defffb04 	addi	sp,sp,-20
   914bc:	dfc00415 	stw	ra,16(sp)
   914c0:	df000315 	stw	fp,12(sp)
   914c4:	dc000215 	stw	r16,8(sp)
   914c8:	df000204 	addi	fp,sp,8
   914cc:	e13fff15 	stw	r4,-4(fp)
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   914d0:	e03ffe15 	stw	zero,-8(fp)
   914d4:	00002106 	br	9155c <lcd_scroll_up+0xa4>
  {
    if (y < ALT_LCD_HEIGHT-1)
   914d8:	e0bffe17 	ldw	r2,-8(fp)
   914dc:	10800048 	cmpgei	r2,r2,1
   914e0:	1000121e 	bne	r2,zero,9152c <lcd_scroll_up+0x74>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
   914e4:	e13ffe17 	ldw	r4,-8(fp)
   914e8:	014018c4 	movi	r5,99
   914ec:	00806240 	call	80624 <__mulsi3>
   914f0:	10c01004 	addi	r3,r2,64
   914f4:	e0bfff17 	ldw	r2,-4(fp)
   914f8:	18a1883a 	add	r16,r3,r2
   914fc:	e0bffe17 	ldw	r2,-8(fp)
   91500:	11000044 	addi	r4,r2,1
   91504:	014018c4 	movi	r5,99
   91508:	00806240 	call	80624 <__mulsi3>
   9150c:	10c01004 	addi	r3,r2,64
   91510:	e0bfff17 	ldw	r2,-4(fp)
   91514:	1885883a 	add	r2,r3,r2
   91518:	8009883a 	mov	r4,r16
   9151c:	100b883a 	mov	r5,r2
   91520:	01801404 	movi	r6,80
   91524:	00876c80 	call	876c8 <memcpy>
   91528:	00000906 	br	91550 <lcd_scroll_up+0x98>
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
   9152c:	e13ffe17 	ldw	r4,-8(fp)
   91530:	014018c4 	movi	r5,99
   91534:	00806240 	call	80624 <__mulsi3>
   91538:	10c01004 	addi	r3,r2,64
   9153c:	e0bfff17 	ldw	r2,-4(fp)
   91540:	1889883a 	add	r4,r3,r2
   91544:	01400804 	movi	r5,32
   91548:	01801404 	movi	r6,80
   9154c:	00878480 	call	87848 <memset>

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91550:	e0bffe17 	ldw	r2,-8(fp)
   91554:	10800044 	addi	r2,r2,1
   91558:	e0bffe15 	stw	r2,-8(fp)
   9155c:	e0bffe17 	ldw	r2,-8(fp)
   91560:	10800090 	cmplti	r2,r2,2
   91564:	103fdc1e 	bne	r2,zero,914d8 <lcd_scroll_up+0x20>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  }

  sp->y--;
   91568:	e0bfff17 	ldw	r2,-4(fp)
   9156c:	10800883 	ldbu	r2,34(r2)
   91570:	10bfffc4 	addi	r2,r2,-1
   91574:	1007883a 	mov	r3,r2
   91578:	e0bfff17 	ldw	r2,-4(fp)
   9157c:	10c00885 	stb	r3,34(r2)
}
   91580:	e037883a 	mov	sp,fp
   91584:	dfc00217 	ldw	ra,8(sp)
   91588:	df000117 	ldw	fp,4(sp)
   9158c:	dc000017 	ldw	r16,0(sp)
   91590:	dec00304 	addi	sp,sp,12
   91594:	f800283a 	ret

00091598 <lcd_handle_escape>:

/* --------------------------------------------------------------------- */

static void lcd_handle_escape(altera_avalon_lcd_16207_state* sp, char c)
{
   91598:	defff804 	addi	sp,sp,-32
   9159c:	dfc00715 	stw	ra,28(sp)
   915a0:	df000615 	stw	fp,24(sp)
   915a4:	df000604 	addi	fp,sp,24
   915a8:	e13ffd15 	stw	r4,-12(fp)
   915ac:	e17ffe05 	stb	r5,-8(fp)
  int parm1 = 0, parm2 = 0;
   915b0:	e03ffc15 	stw	zero,-16(fp)
   915b4:	e03ffb15 	stw	zero,-20(fp)

  if (sp->escape[0] == '[')
   915b8:	e0bffd17 	ldw	r2,-12(fp)
   915bc:	10800a03 	ldbu	r2,40(r2)
   915c0:	10803fcc 	andi	r2,r2,255
   915c4:	1080201c 	xori	r2,r2,128
   915c8:	10bfe004 	addi	r2,r2,-128
   915cc:	108016d8 	cmpnei	r2,r2,91
   915d0:	10004d1e 	bne	r2,zero,91708 <lcd_handle_escape+0x170>
  {
    char * ptr = sp->escape+1;
   915d4:	e0bffd17 	ldw	r2,-12(fp)
   915d8:	10800a04 	addi	r2,r2,40
   915dc:	10800044 	addi	r2,r2,1
   915e0:	e0bffa15 	stw	r2,-24(fp)
    while (isdigit(*ptr))
   915e4:	00000f06 	br	91624 <lcd_handle_escape+0x8c>
      parm1 = (parm1 * 10) + (*ptr++ - '0');
   915e8:	e13ffc17 	ldw	r4,-16(fp)
   915ec:	01400284 	movi	r5,10
   915f0:	00806240 	call	80624 <__mulsi3>
   915f4:	1007883a 	mov	r3,r2
   915f8:	e0bffa17 	ldw	r2,-24(fp)
   915fc:	10800003 	ldbu	r2,0(r2)
   91600:	10803fcc 	andi	r2,r2,255
   91604:	1080201c 	xori	r2,r2,128
   91608:	10bfe004 	addi	r2,r2,-128
   9160c:	1885883a 	add	r2,r3,r2
   91610:	10bff404 	addi	r2,r2,-48
   91614:	e0bffc15 	stw	r2,-16(fp)
   91618:	e0bffa17 	ldw	r2,-24(fp)
   9161c:	10800044 	addi	r2,r2,1
   91620:	e0bffa15 	stw	r2,-24(fp)
  int parm1 = 0, parm2 = 0;

  if (sp->escape[0] == '[')
  {
    char * ptr = sp->escape+1;
    while (isdigit(*ptr))
   91624:	e0bffa17 	ldw	r2,-24(fp)
   91628:	10800003 	ldbu	r2,0(r2)
   9162c:	10803fcc 	andi	r2,r2,255
   91630:	1080201c 	xori	r2,r2,128
   91634:	10bfe004 	addi	r2,r2,-128
   91638:	1007883a 	mov	r3,r2
   9163c:	00800274 	movhi	r2,9
   91640:	10963904 	addi	r2,r2,22756
   91644:	10800017 	ldw	r2,0(r2)
   91648:	1885883a 	add	r2,r3,r2
   9164c:	10800003 	ldbu	r2,0(r2)
   91650:	10803fcc 	andi	r2,r2,255
   91654:	1080010c 	andi	r2,r2,4
   91658:	1004c03a 	cmpne	r2,r2,zero
   9165c:	103fe21e 	bne	r2,zero,915e8 <lcd_handle_escape+0x50>
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
   91660:	e0bffa17 	ldw	r2,-24(fp)
   91664:	10800003 	ldbu	r2,0(r2)
   91668:	10803fcc 	andi	r2,r2,255
   9166c:	1080201c 	xori	r2,r2,128
   91670:	10bfe004 	addi	r2,r2,-128
   91674:	10800ed8 	cmpnei	r2,r2,59
   91678:	1000251e 	bne	r2,zero,91710 <lcd_handle_escape+0x178>
    {
      ptr++;
   9167c:	e0bffa17 	ldw	r2,-24(fp)
   91680:	10800044 	addi	r2,r2,1
   91684:	e0bffa15 	stw	r2,-24(fp)
      while (isdigit(*ptr))
   91688:	00000f06 	br	916c8 <lcd_handle_escape+0x130>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
   9168c:	e13ffb17 	ldw	r4,-20(fp)
   91690:	01400284 	movi	r5,10
   91694:	00806240 	call	80624 <__mulsi3>
   91698:	1007883a 	mov	r3,r2
   9169c:	e0bffa17 	ldw	r2,-24(fp)
   916a0:	10800003 	ldbu	r2,0(r2)
   916a4:	10803fcc 	andi	r2,r2,255
   916a8:	1080201c 	xori	r2,r2,128
   916ac:	10bfe004 	addi	r2,r2,-128
   916b0:	1885883a 	add	r2,r3,r2
   916b4:	10bff404 	addi	r2,r2,-48
   916b8:	e0bffb15 	stw	r2,-20(fp)
   916bc:	e0bffa17 	ldw	r2,-24(fp)
   916c0:	10800044 	addi	r2,r2,1
   916c4:	e0bffa15 	stw	r2,-24(fp)
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
    {
      ptr++;
      while (isdigit(*ptr))
   916c8:	e0bffa17 	ldw	r2,-24(fp)
   916cc:	10800003 	ldbu	r2,0(r2)
   916d0:	10803fcc 	andi	r2,r2,255
   916d4:	1080201c 	xori	r2,r2,128
   916d8:	10bfe004 	addi	r2,r2,-128
   916dc:	1007883a 	mov	r3,r2
   916e0:	00800274 	movhi	r2,9
   916e4:	10963904 	addi	r2,r2,22756
   916e8:	10800017 	ldw	r2,0(r2)
   916ec:	1885883a 	add	r2,r3,r2
   916f0:	10800003 	ldbu	r2,0(r2)
   916f4:	10803fcc 	andi	r2,r2,255
   916f8:	1080010c 	andi	r2,r2,4
   916fc:	1004c03a 	cmpne	r2,r2,zero
   91700:	103fe21e 	bne	r2,zero,9168c <lcd_handle_escape+0xf4>
   91704:	00000206 	br	91710 <lcd_handle_escape+0x178>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
    }
  }
  else
    parm1 = -1;
   91708:	00bfffc4 	movi	r2,-1
   9170c:	e0bffc15 	stw	r2,-16(fp)

  switch (c)
   91710:	e0bffe07 	ldb	r2,-8(fp)
   91714:	e0bfff15 	stw	r2,-4(fp)
   91718:	e0ffff17 	ldw	r3,-4(fp)
   9171c:	188012a0 	cmpeqi	r2,r3,74
   91720:	10002f1e 	bne	r2,zero,917e0 <lcd_handle_escape+0x248>
   91724:	e0ffff17 	ldw	r3,-4(fp)
   91728:	188012c8 	cmpgei	r2,r3,75
   9172c:	1000041e 	bne	r2,zero,91740 <lcd_handle_escape+0x1a8>
   91730:	e0ffff17 	ldw	r3,-4(fp)
   91734:	18801220 	cmpeqi	r2,r3,72
   91738:	1000081e 	bne	r2,zero,9175c <lcd_handle_escape+0x1c4>
   9173c:	00004a06 	br	91868 <lcd_handle_escape+0x2d0>
   91740:	e0ffff17 	ldw	r3,-4(fp)
   91744:	188012e0 	cmpeqi	r2,r3,75
   91748:	10002b1e 	bne	r2,zero,917f8 <lcd_handle_escape+0x260>
   9174c:	e0ffff17 	ldw	r3,-4(fp)
   91750:	188019a0 	cmpeqi	r2,r3,102
   91754:	1000011e 	bne	r2,zero,9175c <lcd_handle_escape+0x1c4>
   91758:	00004306 	br	91868 <lcd_handle_escape+0x2d0>
  {
  case 'H': /* ESC '[' <y> ';' <x> 'H'  : Move cursor to location */
  case 'f': /* Same as above */
    if (parm2 > 0)
   9175c:	e0bffb17 	ldw	r2,-20(fp)
   91760:	10800050 	cmplti	r2,r2,1
   91764:	1000051e 	bne	r2,zero,9177c <lcd_handle_escape+0x1e4>
      sp->x = parm2 - 1;
   91768:	e0bffb17 	ldw	r2,-20(fp)
   9176c:	10bfffc4 	addi	r2,r2,-1
   91770:	1007883a 	mov	r3,r2
   91774:	e0bffd17 	ldw	r2,-12(fp)
   91778:	10c00845 	stb	r3,33(r2)
    if (parm1 > 0)
   9177c:	e0bffc17 	ldw	r2,-16(fp)
   91780:	10800050 	cmplti	r2,r2,1
   91784:	1000381e 	bne	r2,zero,91868 <lcd_handle_escape+0x2d0>
    {
      sp->y = parm1 - 1;
   91788:	e0bffc17 	ldw	r2,-16(fp)
   9178c:	10bfffc4 	addi	r2,r2,-1
   91790:	1007883a 	mov	r3,r2
   91794:	e0bffd17 	ldw	r2,-12(fp)
   91798:	10c00885 	stb	r3,34(r2)
      if (sp->y > ALT_LCD_HEIGHT * 2)
   9179c:	e0bffd17 	ldw	r2,-12(fp)
   917a0:	10800883 	ldbu	r2,34(r2)
   917a4:	10803fcc 	andi	r2,r2,255
   917a8:	10800170 	cmpltui	r2,r2,5
   917ac:	1000061e 	bne	r2,zero,917c8 <lcd_handle_escape+0x230>
        sp->y = ALT_LCD_HEIGHT * 2;
   917b0:	e0fffd17 	ldw	r3,-12(fp)
   917b4:	00800104 	movi	r2,4
   917b8:	18800885 	stb	r2,34(r3)
      while (sp->y > ALT_LCD_HEIGHT)
   917bc:	00000206 	br	917c8 <lcd_handle_escape+0x230>
        lcd_scroll_up(sp);
   917c0:	e13ffd17 	ldw	r4,-12(fp)
   917c4:	00914b80 	call	914b8 <lcd_scroll_up>
    if (parm1 > 0)
    {
      sp->y = parm1 - 1;
      if (sp->y > ALT_LCD_HEIGHT * 2)
        sp->y = ALT_LCD_HEIGHT * 2;
      while (sp->y > ALT_LCD_HEIGHT)
   917c8:	e0bffd17 	ldw	r2,-12(fp)
   917cc:	10800883 	ldbu	r2,34(r2)
   917d0:	10803fcc 	andi	r2,r2,255
   917d4:	108000e8 	cmpgeui	r2,r2,3
   917d8:	103ff91e 	bne	r2,zero,917c0 <lcd_handle_escape+0x228>
        lcd_scroll_up(sp);
    }
    break;
   917dc:	00002206 	br	91868 <lcd_handle_escape+0x2d0>
    /*   ESC J      is clear to beginning of line    [unimplemented]
     *   ESC [ 0 J  is clear to bottom of screen     [unimplemented]
     *   ESC [ 1 J  is clear to beginning of screen  [unimplemented]
     *   ESC [ 2 J  is clear screen
     */
    if (parm1 == 2)
   917e0:	e0bffc17 	ldw	r2,-16(fp)
   917e4:	10800098 	cmpnei	r2,r2,2
   917e8:	10001f1e 	bne	r2,zero,91868 <lcd_handle_escape+0x2d0>
      lcd_clear_screen(sp);
   917ec:	e13ffd17 	ldw	r4,-12(fp)
   917f0:	00911cc0 	call	911cc <lcd_clear_screen>
    break;
   917f4:	00001c06 	br	91868 <lcd_handle_escape+0x2d0>
    /*   ESC K      is clear to end of line
     *   ESC [ 0 K  is clear to end of line
     *   ESC [ 1 K  is clear to beginning of line    [unimplemented]
     *   ESC [ 2 K  is clear line                    [unimplemented]
     */
    if (parm1 < 1)
   917f8:	e0bffc17 	ldw	r2,-16(fp)
   917fc:	10800048 	cmpgei	r2,r2,1
   91800:	1000191e 	bne	r2,zero,91868 <lcd_handle_escape+0x2d0>
    {
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
   91804:	e0bffd17 	ldw	r2,-12(fp)
   91808:	10800843 	ldbu	r2,33(r2)
   9180c:	10803fcc 	andi	r2,r2,255
   91810:	10801428 	cmpgeui	r2,r2,80
   91814:	1000141e 	bne	r2,zero,91868 <lcd_handle_escape+0x2d0>
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
   91818:	e0bffd17 	ldw	r2,-12(fp)
   9181c:	10800883 	ldbu	r2,34(r2)
   91820:	11003fcc 	andi	r4,r2,255
   91824:	014018c4 	movi	r5,99
   91828:	00806240 	call	80624 <__mulsi3>
   9182c:	10c01004 	addi	r3,r2,64
   91830:	e0bffd17 	ldw	r2,-12(fp)
   91834:	1887883a 	add	r3,r3,r2
   91838:	e0bffd17 	ldw	r2,-12(fp)
   9183c:	10800843 	ldbu	r2,33(r2)
   91840:	10803fcc 	andi	r2,r2,255
   91844:	1889883a 	add	r4,r3,r2
   91848:	e0bffd17 	ldw	r2,-12(fp)
   9184c:	10800843 	ldbu	r2,33(r2)
   91850:	10c03fcc 	andi	r3,r2,255
   91854:	00801404 	movi	r2,80
   91858:	10c5c83a 	sub	r2,r2,r3
   9185c:	100d883a 	mov	r6,r2
   91860:	01400804 	movi	r5,32
   91864:	00878480 	call	87848 <memset>
    }
    break;
  }
}
   91868:	e037883a 	mov	sp,fp
   9186c:	dfc00117 	ldw	ra,4(sp)
   91870:	df000017 	ldw	fp,0(sp)
   91874:	dec00204 	addi	sp,sp,8
   91878:	f800283a 	ret

0009187c <altera_avalon_lcd_16207_write>:

/* --------------------------------------------------------------------- */

int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp, 
  const char* ptr, int len, int flags)
{
   9187c:	defff004 	addi	sp,sp,-64
   91880:	dfc00f15 	stw	ra,60(sp)
   91884:	df000e15 	stw	fp,56(sp)
   91888:	dc800d15 	stw	r18,52(sp)
   9188c:	dc400c15 	stw	r17,48(sp)
   91890:	dc000b15 	stw	r16,44(sp)
   91894:	df000b04 	addi	fp,sp,44
   91898:	e13ffc15 	stw	r4,-16(fp)
   9189c:	e17ffd15 	stw	r5,-12(fp)
   918a0:	e1bffe15 	stw	r6,-8(fp)
   918a4:	e1ffff15 	stw	r7,-4(fp)
  const char* end = ptr + len;
   918a8:	e0bffe17 	ldw	r2,-8(fp)
   918ac:	1007883a 	mov	r3,r2
   918b0:	e0bffd17 	ldw	r2,-12(fp)
   918b4:	10c5883a 	add	r2,r2,r3
   918b8:	e0bffb15 	stw	r2,-20(fp)

  ALT_SEM_PEND (sp->write_lock, 0);

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;
   918bc:	e0fffc17 	ldw	r3,-16(fp)
   918c0:	00800044 	movi	r2,1
   918c4:	188009c5 	stb	r2,39(r3)

  for ( ; ptr < end ; ptr++)
   918c8:	0000a306 	br	91b58 <altera_avalon_lcd_16207_write+0x2dc>
  {
    char c = *ptr;
   918cc:	e0bffd17 	ldw	r2,-12(fp)
   918d0:	10800003 	ldbu	r2,0(r2)
   918d4:	e0bff805 	stb	r2,-32(fp)

    if (sp->esccount >= 0)
   918d8:	e0bffc17 	ldw	r2,-16(fp)
   918dc:	10800903 	ldbu	r2,36(r2)
   918e0:	10803fcc 	andi	r2,r2,255
   918e4:	1080201c 	xori	r2,r2,128
   918e8:	10bfe004 	addi	r2,r2,-128
   918ec:	1004803a 	cmplt	r2,r2,zero
   918f0:	10003b1e 	bne	r2,zero,919e0 <altera_avalon_lcd_16207_write+0x164>
    {
      unsigned int esccount = sp->esccount;
   918f4:	e0bffc17 	ldw	r2,-16(fp)
   918f8:	10800903 	ldbu	r2,36(r2)
   918fc:	10803fcc 	andi	r2,r2,255
   91900:	1080201c 	xori	r2,r2,128
   91904:	10bfe004 	addi	r2,r2,-128
   91908:	e0bff715 	stw	r2,-36(fp)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
   9190c:	e0bff717 	ldw	r2,-36(fp)
   91910:	1004c03a 	cmpne	r2,r2,zero
   91914:	1000031e 	bne	r2,zero,91924 <altera_avalon_lcd_16207_write+0xa8>
   91918:	e0bff807 	ldb	r2,-32(fp)
   9191c:	108016d8 	cmpnei	r2,r2,91
   91920:	1000111e 	bne	r2,zero,91968 <altera_avalon_lcd_16207_write+0xec>
   91924:	e0bff717 	ldw	r2,-36(fp)
   91928:	1005003a 	cmpeq	r2,r2,zero
   9192c:	10001a1e 	bne	r2,zero,91998 <altera_avalon_lcd_16207_write+0x11c>
   91930:	e0bff807 	ldb	r2,-32(fp)
   91934:	1007883a 	mov	r3,r2
   91938:	00800274 	movhi	r2,9
   9193c:	10963904 	addi	r2,r2,22756
   91940:	10800017 	ldw	r2,0(r2)
   91944:	1885883a 	add	r2,r3,r2
   91948:	10800003 	ldbu	r2,0(r2)
   9194c:	10803fcc 	andi	r2,r2,255
   91950:	1080010c 	andi	r2,r2,4
   91954:	1004c03a 	cmpne	r2,r2,zero
   91958:	10000f1e 	bne	r2,zero,91998 <altera_avalon_lcd_16207_write+0x11c>
   9195c:	e0bff807 	ldb	r2,-32(fp)
   91960:	10800ee0 	cmpeqi	r2,r2,59
   91964:	10000c1e 	bne	r2,zero,91998 <altera_avalon_lcd_16207_write+0x11c>
          (esccount > 0 && !isdigit(c) && c != ';'))
      {
        sp->escape[esccount] = 0;
   91968:	e0fff717 	ldw	r3,-36(fp)
   9196c:	e0bffc17 	ldw	r2,-16(fp)
   91970:	1885883a 	add	r2,r3,r2
   91974:	10800a04 	addi	r2,r2,40
   91978:	10000005 	stb	zero,0(r2)

        lcd_handle_escape(sp, c);
   9197c:	e17ff807 	ldb	r5,-32(fp)
   91980:	e13ffc17 	ldw	r4,-16(fp)
   91984:	00915980 	call	91598 <lcd_handle_escape>

        sp->esccount = -1;
   91988:	e0fffc17 	ldw	r3,-16(fp)
   9198c:	00bfffc4 	movi	r2,-1
   91990:	18800905 	stb	r2,36(r3)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
   91994:	00006d06 	br	91b4c <altera_avalon_lcd_16207_write+0x2d0>

        lcd_handle_escape(sp, c);

        sp->esccount = -1;
      }
      else if (sp->esccount < sizeof(sp->escape)-1)
   91998:	e0bffc17 	ldw	r2,-16(fp)
   9199c:	10800903 	ldbu	r2,36(r2)
   919a0:	10803fcc 	andi	r2,r2,255
   919a4:	108001e8 	cmpgeui	r2,r2,7
   919a8:	1000681e 	bne	r2,zero,91b4c <altera_avalon_lcd_16207_write+0x2d0>
      {
        sp->escape[esccount] = c;
   919ac:	e0fff717 	ldw	r3,-36(fp)
   919b0:	e0bffc17 	ldw	r2,-16(fp)
   919b4:	1885883a 	add	r2,r3,r2
   919b8:	10c00a04 	addi	r3,r2,40
   919bc:	e0bff803 	ldbu	r2,-32(fp)
   919c0:	18800005 	stb	r2,0(r3)
        sp->esccount++;
   919c4:	e0bffc17 	ldw	r2,-16(fp)
   919c8:	10800903 	ldbu	r2,36(r2)
   919cc:	10800044 	addi	r2,r2,1
   919d0:	1007883a 	mov	r3,r2
   919d4:	e0bffc17 	ldw	r2,-16(fp)
   919d8:	10c00905 	stb	r3,36(r2)
   919dc:	00005b06 	br	91b4c <altera_avalon_lcd_16207_write+0x2d0>
      }
    }
    else if (c == 27) /* ESC */
   919e0:	e0bff807 	ldb	r2,-32(fp)
   919e4:	108006d8 	cmpnei	r2,r2,27
   919e8:	1000031e 	bne	r2,zero,919f8 <altera_avalon_lcd_16207_write+0x17c>
    {
      sp->esccount = 0;
   919ec:	e0bffc17 	ldw	r2,-16(fp)
   919f0:	10000905 	stb	zero,36(r2)
   919f4:	00005506 	br	91b4c <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (c == '\r')
   919f8:	e0bff807 	ldb	r2,-32(fp)
   919fc:	10800358 	cmpnei	r2,r2,13
   91a00:	1000031e 	bne	r2,zero,91a10 <altera_avalon_lcd_16207_write+0x194>
    {
      sp->x = 0;
   91a04:	e0bffc17 	ldw	r2,-16(fp)
   91a08:	10000845 	stb	zero,33(r2)
   91a0c:	00004f06 	br	91b4c <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (c == '\n')
   91a10:	e0bff807 	ldb	r2,-32(fp)
   91a14:	10800298 	cmpnei	r2,r2,10
   91a18:	1000101e 	bne	r2,zero,91a5c <altera_avalon_lcd_16207_write+0x1e0>
    {
      sp->x = 0;
   91a1c:	e0bffc17 	ldw	r2,-16(fp)
   91a20:	10000845 	stb	zero,33(r2)
      sp->y++;
   91a24:	e0bffc17 	ldw	r2,-16(fp)
   91a28:	10800883 	ldbu	r2,34(r2)
   91a2c:	10800044 	addi	r2,r2,1
   91a30:	1007883a 	mov	r3,r2
   91a34:	e0bffc17 	ldw	r2,-16(fp)
   91a38:	10c00885 	stb	r3,34(r2)

      /* Let the cursor sit at X=0, Y=HEIGHT without scrolling so the user
       * can print two lines of data without losing one.
       */
      if (sp->y > ALT_LCD_HEIGHT)
   91a3c:	e0bffc17 	ldw	r2,-16(fp)
   91a40:	10800883 	ldbu	r2,34(r2)
   91a44:	10803fcc 	andi	r2,r2,255
   91a48:	108000f0 	cmpltui	r2,r2,3
   91a4c:	10003f1e 	bne	r2,zero,91b4c <altera_avalon_lcd_16207_write+0x2d0>
        lcd_scroll_up(sp);
   91a50:	e13ffc17 	ldw	r4,-16(fp)
   91a54:	00914b80 	call	914b8 <lcd_scroll_up>
   91a58:	00003c06 	br	91b4c <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (c == '\b')
   91a5c:	e0bff807 	ldb	r2,-32(fp)
   91a60:	10800218 	cmpnei	r2,r2,8
   91a64:	10000c1e 	bne	r2,zero,91a98 <altera_avalon_lcd_16207_write+0x21c>
    {
      if (sp->x > 0)
   91a68:	e0bffc17 	ldw	r2,-16(fp)
   91a6c:	10800843 	ldbu	r2,33(r2)
   91a70:	10803fcc 	andi	r2,r2,255
   91a74:	1005003a 	cmpeq	r2,r2,zero
   91a78:	1000341e 	bne	r2,zero,91b4c <altera_avalon_lcd_16207_write+0x2d0>
        sp->x--;
   91a7c:	e0bffc17 	ldw	r2,-16(fp)
   91a80:	10800843 	ldbu	r2,33(r2)
   91a84:	10bfffc4 	addi	r2,r2,-1
   91a88:	1007883a 	mov	r3,r2
   91a8c:	e0bffc17 	ldw	r2,-16(fp)
   91a90:	10c00845 	stb	r3,33(r2)
   91a94:	00002d06 	br	91b4c <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (isprint(c))
   91a98:	e0bff807 	ldb	r2,-32(fp)
   91a9c:	1007883a 	mov	r3,r2
   91aa0:	00800274 	movhi	r2,9
   91aa4:	10963904 	addi	r2,r2,22756
   91aa8:	10800017 	ldw	r2,0(r2)
   91aac:	1885883a 	add	r2,r3,r2
   91ab0:	10800003 	ldbu	r2,0(r2)
   91ab4:	10803fcc 	andi	r2,r2,255
   91ab8:	1080201c 	xori	r2,r2,128
   91abc:	10bfe004 	addi	r2,r2,-128
   91ac0:	108025cc 	andi	r2,r2,151
   91ac4:	1005003a 	cmpeq	r2,r2,zero
   91ac8:	1000201e 	bne	r2,zero,91b4c <altera_avalon_lcd_16207_write+0x2d0>
    {
      /* If we didn't scroll on the last linefeed then we might need to do
       * it now. */
      if (sp->y >= ALT_LCD_HEIGHT)
   91acc:	e0bffc17 	ldw	r2,-16(fp)
   91ad0:	10800883 	ldbu	r2,34(r2)
   91ad4:	10803fcc 	andi	r2,r2,255
   91ad8:	108000b0 	cmpltui	r2,r2,2
   91adc:	1000021e 	bne	r2,zero,91ae8 <altera_avalon_lcd_16207_write+0x26c>
        lcd_scroll_up(sp);
   91ae0:	e13ffc17 	ldw	r4,-16(fp)
   91ae4:	00914b80 	call	914b8 <lcd_scroll_up>

      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
   91ae8:	e0bffc17 	ldw	r2,-16(fp)
   91aec:	10800843 	ldbu	r2,33(r2)
   91af0:	10803fcc 	andi	r2,r2,255
   91af4:	10801428 	cmpgeui	r2,r2,80
   91af8:	10000e1e 	bne	r2,zero,91b34 <altera_avalon_lcd_16207_write+0x2b8>
        sp->line[sp->y].data[sp->x] = c;
   91afc:	e0bffc17 	ldw	r2,-16(fp)
   91b00:	10800883 	ldbu	r2,34(r2)
   91b04:	11003fcc 	andi	r4,r2,255
   91b08:	e0bffc17 	ldw	r2,-16(fp)
   91b0c:	10800843 	ldbu	r2,33(r2)
   91b10:	14403fcc 	andi	r17,r2,255
   91b14:	e43ffc17 	ldw	r16,-16(fp)
   91b18:	014018c4 	movi	r5,99
   91b1c:	00806240 	call	80624 <__mulsi3>
   91b20:	1405883a 	add	r2,r2,r16
   91b24:	1445883a 	add	r2,r2,r17
   91b28:	10c01004 	addi	r3,r2,64
   91b2c:	e0bff803 	ldbu	r2,-32(fp)
   91b30:	18800005 	stb	r2,0(r3)

      sp->x++;
   91b34:	e0bffc17 	ldw	r2,-16(fp)
   91b38:	10800843 	ldbu	r2,33(r2)
   91b3c:	10800044 	addi	r2,r2,1
   91b40:	1007883a 	mov	r3,r2
   91b44:	e0bffc17 	ldw	r2,-16(fp)
   91b48:	10c00845 	stb	r3,33(r2)

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;

  for ( ; ptr < end ; ptr++)
   91b4c:	e0bffd17 	ldw	r2,-12(fp)
   91b50:	10800044 	addi	r2,r2,1
   91b54:	e0bffd15 	stw	r2,-12(fp)
   91b58:	e0fffd17 	ldw	r3,-12(fp)
   91b5c:	e0bffb17 	ldw	r2,-20(fp)
   91b60:	18bf5a36 	bltu	r3,r2,918cc <altera_avalon_lcd_16207_write+0x50>
      sp->x++;
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
   91b64:	00800404 	movi	r2,16
   91b68:	e0bff915 	stw	r2,-28(fp)
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91b6c:	e03ffa15 	stw	zero,-24(fp)
   91b70:	00003906 	br	91c58 <altera_avalon_lcd_16207_write+0x3dc>
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
   91b74:	00801404 	movi	r2,80
   91b78:	e0bff615 	stw	r2,-40(fp)
   91b7c:	00001206 	br	91bc8 <altera_avalon_lcd_16207_write+0x34c>
      if (sp->line[y].data[width-1] != ' ')
   91b80:	e13ffa17 	ldw	r4,-24(fp)
   91b84:	e0bff617 	ldw	r2,-40(fp)
   91b88:	147fffc4 	addi	r17,r2,-1
   91b8c:	e43ffc17 	ldw	r16,-16(fp)
   91b90:	014018c4 	movi	r5,99
   91b94:	00806240 	call	80624 <__mulsi3>
   91b98:	1405883a 	add	r2,r2,r16
   91b9c:	1445883a 	add	r2,r2,r17
   91ba0:	10801004 	addi	r2,r2,64
   91ba4:	10800003 	ldbu	r2,0(r2)
   91ba8:	10803fcc 	andi	r2,r2,255
   91bac:	1080201c 	xori	r2,r2,128
   91bb0:	10bfe004 	addi	r2,r2,-128
   91bb4:	10800818 	cmpnei	r2,r2,32
   91bb8:	1000061e 	bne	r2,zero,91bd4 <altera_avalon_lcd_16207_write+0x358>
  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
   91bbc:	e0bff617 	ldw	r2,-40(fp)
   91bc0:	10bfffc4 	addi	r2,r2,-1
   91bc4:	e0bff615 	stw	r2,-40(fp)
   91bc8:	e0bff617 	ldw	r2,-40(fp)
   91bcc:	10800048 	cmpgei	r2,r2,1
   91bd0:	103feb1e 	bne	r2,zero,91b80 <altera_avalon_lcd_16207_write+0x304>

    /* The minimum width is the size of the LCD panel.  If the real width
     * is long enough to require scrolling then add an extra space so the
     * end of the message doesn't run into the beginning of it.
     */
    if (width <= ALT_LCD_WIDTH)
   91bd4:	e0bff617 	ldw	r2,-40(fp)
   91bd8:	10800448 	cmpgei	r2,r2,17
   91bdc:	1000031e 	bne	r2,zero,91bec <altera_avalon_lcd_16207_write+0x370>
      width = ALT_LCD_WIDTH;
   91be0:	00800404 	movi	r2,16
   91be4:	e0bff615 	stw	r2,-40(fp)
   91be8:	00000306 	br	91bf8 <altera_avalon_lcd_16207_write+0x37c>
    else
      width++;
   91bec:	e0bff617 	ldw	r2,-40(fp)
   91bf0:	10800044 	addi	r2,r2,1
   91bf4:	e0bff615 	stw	r2,-40(fp)

    sp->line[y].width = width;
   91bf8:	e13ffa17 	ldw	r4,-24(fp)
   91bfc:	e0bff617 	ldw	r2,-40(fp)
   91c00:	1023883a 	mov	r17,r2
   91c04:	e43ffc17 	ldw	r16,-16(fp)
   91c08:	014018c4 	movi	r5,99
   91c0c:	00806240 	call	80624 <__mulsi3>
   91c10:	1405883a 	add	r2,r2,r16
   91c14:	10802404 	addi	r2,r2,144
   91c18:	14400045 	stb	r17,1(r2)
    if (widthmax < width)
   91c1c:	e0fff917 	ldw	r3,-28(fp)
   91c20:	e0bff617 	ldw	r2,-40(fp)
   91c24:	1880020e 	bge	r3,r2,91c30 <altera_avalon_lcd_16207_write+0x3b4>
      widthmax = width;
   91c28:	e0bff617 	ldw	r2,-40(fp)
   91c2c:	e0bff915 	stw	r2,-28(fp)
    sp->line[y].speed = 0; /* By default lines don't scroll */
   91c30:	e13ffa17 	ldw	r4,-24(fp)
   91c34:	e43ffc17 	ldw	r16,-16(fp)
   91c38:	014018c4 	movi	r5,99
   91c3c:	00806240 	call	80624 <__mulsi3>
   91c40:	1405883a 	add	r2,r2,r16
   91c44:	10802404 	addi	r2,r2,144
   91c48:	10000085 	stb	zero,2(r2)
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91c4c:	e0bffa17 	ldw	r2,-24(fp)
   91c50:	10800044 	addi	r2,r2,1
   91c54:	e0bffa15 	stw	r2,-24(fp)
   91c58:	e0bffa17 	ldw	r2,-24(fp)
   91c5c:	10800090 	cmplti	r2,r2,2
   91c60:	103fc41e 	bne	r2,zero,91b74 <altera_avalon_lcd_16207_write+0x2f8>
    if (widthmax < width)
      widthmax = width;
    sp->line[y].speed = 0; /* By default lines don't scroll */
  }

  if (widthmax <= ALT_LCD_WIDTH)
   91c64:	e0bff917 	ldw	r2,-28(fp)
   91c68:	10800448 	cmpgei	r2,r2,17
   91c6c:	1000031e 	bne	r2,zero,91c7c <altera_avalon_lcd_16207_write+0x400>
    sp->scrollmax = 0;
   91c70:	e0bffc17 	ldw	r2,-16(fp)
   91c74:	10000985 	stb	zero,38(r2)
   91c78:	00003106 	br	91d40 <altera_avalon_lcd_16207_write+0x4c4>
  else
  {
    widthmax *= 2;
   91c7c:	e0bff917 	ldw	r2,-28(fp)
   91c80:	1085883a 	add	r2,r2,r2
   91c84:	e0bff915 	stw	r2,-28(fp)
    sp->scrollmax = widthmax;
   91c88:	e0bff917 	ldw	r2,-28(fp)
   91c8c:	1007883a 	mov	r3,r2
   91c90:	e0bffc17 	ldw	r2,-16(fp)
   91c94:	10c00985 	stb	r3,38(r2)

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91c98:	e03ffa15 	stw	zero,-24(fp)
   91c9c:	00002506 	br	91d34 <altera_avalon_lcd_16207_write+0x4b8>
      if (sp->line[y].width > ALT_LCD_WIDTH)
   91ca0:	e13ffa17 	ldw	r4,-24(fp)
   91ca4:	e43ffc17 	ldw	r16,-16(fp)
   91ca8:	014018c4 	movi	r5,99
   91cac:	00806240 	call	80624 <__mulsi3>
   91cb0:	1405883a 	add	r2,r2,r16
   91cb4:	10802404 	addi	r2,r2,144
   91cb8:	10800043 	ldbu	r2,1(r2)
   91cbc:	10803fcc 	andi	r2,r2,255
   91cc0:	1080201c 	xori	r2,r2,128
   91cc4:	10bfe004 	addi	r2,r2,-128
   91cc8:	10800450 	cmplti	r2,r2,17
   91ccc:	1000161e 	bne	r2,zero,91d28 <altera_avalon_lcd_16207_write+0x4ac>
         */
#if 1
        /* This option makes all the lines scroll round at different speeds
         * which are chosen so that all the scrolls finish at the same time.
         */
        sp->line[y].speed = 256 * sp->line[y].width / widthmax;
   91cd0:	e4bffa17 	ldw	r18,-24(fp)
   91cd4:	e13ffa17 	ldw	r4,-24(fp)
   91cd8:	e43ffc17 	ldw	r16,-16(fp)
   91cdc:	014018c4 	movi	r5,99
   91ce0:	00806240 	call	80624 <__mulsi3>
   91ce4:	1405883a 	add	r2,r2,r16
   91ce8:	10802404 	addi	r2,r2,144
   91cec:	10800043 	ldbu	r2,1(r2)
   91cf0:	10803fcc 	andi	r2,r2,255
   91cf4:	1080201c 	xori	r2,r2,128
   91cf8:	10bfe004 	addi	r2,r2,-128
   91cfc:	1008923a 	slli	r4,r2,8
   91d00:	e17ff917 	ldw	r5,-28(fp)
   91d04:	008f01c0 	call	8f01c <__divsi3>
   91d08:	1023883a 	mov	r17,r2
   91d0c:	e43ffc17 	ldw	r16,-16(fp)
   91d10:	9009883a 	mov	r4,r18
   91d14:	014018c4 	movi	r5,99
   91d18:	00806240 	call	80624 <__mulsi3>
   91d1c:	1405883a 	add	r2,r2,r16
   91d20:	10802404 	addi	r2,r2,144
   91d24:	14400085 	stb	r17,2(r2)
  {
    widthmax *= 2;
    sp->scrollmax = widthmax;

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91d28:	e0bffa17 	ldw	r2,-24(fp)
   91d2c:	10800044 	addi	r2,r2,1
   91d30:	e0bffa15 	stw	r2,-24(fp)
   91d34:	e0bffa17 	ldw	r2,-24(fp)
   91d38:	10800090 	cmplti	r2,r2,2
   91d3c:	103fd81e 	bne	r2,zero,91ca0 <altera_avalon_lcd_16207_write+0x424>
   * (because active was set when the timer interrupt occurred).  If there
   * has been a missed repaint then paint again.  And again.  etc.
   */
  for ( ; ; )
  {
    int old_scrollpos = sp->scrollpos;
   91d40:	e0bffc17 	ldw	r2,-16(fp)
   91d44:	10800943 	ldbu	r2,37(r2)
   91d48:	10803fcc 	andi	r2,r2,255
   91d4c:	1080201c 	xori	r2,r2,128
   91d50:	10bfe004 	addi	r2,r2,-128
   91d54:	e0bff515 	stw	r2,-44(fp)

    lcd_repaint_screen(sp);
   91d58:	e13ffc17 	ldw	r4,-16(fp)
   91d5c:	00912a40 	call	912a4 <lcd_repaint_screen>

    /* Let the timer routines repaint the display again */
    sp->active = 0;
   91d60:	e0bffc17 	ldw	r2,-16(fp)
   91d64:	100009c5 	stb	zero,39(r2)

    /* Have the timer routines tried to scroll while we were painting?
     * If not then we can exit */
    if (sp->scrollpos == old_scrollpos)
   91d68:	e0bffc17 	ldw	r2,-16(fp)
   91d6c:	10800943 	ldbu	r2,37(r2)
   91d70:	10c03fcc 	andi	r3,r2,255
   91d74:	18c0201c 	xori	r3,r3,128
   91d78:	18ffe004 	addi	r3,r3,-128
   91d7c:	e0bff517 	ldw	r2,-44(fp)
   91d80:	18800426 	beq	r3,r2,91d94 <altera_avalon_lcd_16207_write+0x518>
      break;

    /* We need to repaint again since the display scrolled while we were
     * painting last time */
    sp->active = 1;
   91d84:	e0fffc17 	ldw	r3,-16(fp)
   91d88:	00800044 	movi	r2,1
   91d8c:	188009c5 	stb	r2,39(r3)
  }
   91d90:	003feb06 	br	91d40 <altera_avalon_lcd_16207_write+0x4c4>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);

  return len;
   91d94:	e0bffe17 	ldw	r2,-8(fp)
}
   91d98:	e037883a 	mov	sp,fp
   91d9c:	dfc00417 	ldw	ra,16(sp)
   91da0:	df000317 	ldw	fp,12(sp)
   91da4:	dc800217 	ldw	r18,8(sp)
   91da8:	dc400117 	ldw	r17,4(sp)
   91dac:	dc000017 	ldw	r16,0(sp)
   91db0:	dec00504 	addi	sp,sp,20
   91db4:	f800283a 	ret

00091db8 <alt_lcd_16207_timeout>:
/*
 * Timeout routine is called every second
 */

static alt_u32 alt_lcd_16207_timeout(void* context) 
{
   91db8:	defffc04 	addi	sp,sp,-16
   91dbc:	dfc00315 	stw	ra,12(sp)
   91dc0:	df000215 	stw	fp,8(sp)
   91dc4:	df000204 	addi	fp,sp,8
   91dc8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_lcd_16207_state* sp = (altera_avalon_lcd_16207_state*)context;
   91dcc:	e0bfff17 	ldw	r2,-4(fp)
   91dd0:	e0bffe15 	stw	r2,-8(fp)

  /* Update the scrolling position */
  if (sp->scrollpos + 1 >= sp->scrollmax)
   91dd4:	e0bffe17 	ldw	r2,-8(fp)
   91dd8:	10800943 	ldbu	r2,37(r2)
   91ddc:	10803fcc 	andi	r2,r2,255
   91de0:	1080201c 	xori	r2,r2,128
   91de4:	10bfe004 	addi	r2,r2,-128
   91de8:	10c00044 	addi	r3,r2,1
   91dec:	e0bffe17 	ldw	r2,-8(fp)
   91df0:	10800983 	ldbu	r2,38(r2)
   91df4:	10803fcc 	andi	r2,r2,255
   91df8:	1080201c 	xori	r2,r2,128
   91dfc:	10bfe004 	addi	r2,r2,-128
   91e00:	18800316 	blt	r3,r2,91e10 <alt_lcd_16207_timeout+0x58>
    sp->scrollpos = 0;
   91e04:	e0bffe17 	ldw	r2,-8(fp)
   91e08:	10000945 	stb	zero,37(r2)
   91e0c:	00000606 	br	91e28 <alt_lcd_16207_timeout+0x70>
  else
    sp->scrollpos = sp->scrollpos + 1;
   91e10:	e0bffe17 	ldw	r2,-8(fp)
   91e14:	10800943 	ldbu	r2,37(r2)
   91e18:	10800044 	addi	r2,r2,1
   91e1c:	1007883a 	mov	r3,r2
   91e20:	e0bffe17 	ldw	r2,-8(fp)
   91e24:	10c00945 	stb	r3,37(r2)

  /* Repaint the panel unless the foreground will do it again soon */
  if (sp->scrollmax > 0 && !sp->active)
   91e28:	e0bffe17 	ldw	r2,-8(fp)
   91e2c:	10800983 	ldbu	r2,38(r2)
   91e30:	10803fcc 	andi	r2,r2,255
   91e34:	1080201c 	xori	r2,r2,128
   91e38:	10bfe004 	addi	r2,r2,-128
   91e3c:	10800050 	cmplti	r2,r2,1
   91e40:	1000091e 	bne	r2,zero,91e68 <alt_lcd_16207_timeout+0xb0>
   91e44:	e0bffe17 	ldw	r2,-8(fp)
   91e48:	108009c3 	ldbu	r2,39(r2)
   91e4c:	10803fcc 	andi	r2,r2,255
   91e50:	1080201c 	xori	r2,r2,128
   91e54:	10bfe004 	addi	r2,r2,-128
   91e58:	1004c03a 	cmpne	r2,r2,zero
   91e5c:	1000021e 	bne	r2,zero,91e68 <alt_lcd_16207_timeout+0xb0>
    lcd_repaint_screen(sp);
   91e60:	e13ffe17 	ldw	r4,-8(fp)
   91e64:	00912a40 	call	912a4 <lcd_repaint_screen>

  return sp->period;
   91e68:	e0bffe17 	ldw	r2,-8(fp)
   91e6c:	10800717 	ldw	r2,28(r2)
}
   91e70:	e037883a 	mov	sp,fp
   91e74:	dfc00117 	ldw	ra,4(sp)
   91e78:	df000017 	ldw	fp,0(sp)
   91e7c:	dec00204 	addi	sp,sp,8
   91e80:	f800283a 	ret

00091e84 <altera_avalon_lcd_16207_init>:

/*
 * Called at boot time to initialise the LCD driver
 */
void altera_avalon_lcd_16207_init(altera_avalon_lcd_16207_state* sp)
{
   91e84:	defffc04 	addi	sp,sp,-16
   91e88:	dfc00315 	stw	ra,12(sp)
   91e8c:	df000215 	stw	fp,8(sp)
   91e90:	df000204 	addi	fp,sp,8
   91e94:	e13fff15 	stw	r4,-4(fp)
  unsigned int base = sp->base;
   91e98:	e0bfff17 	ldw	r2,-4(fp)
   91e9c:	10800017 	ldw	r2,0(r2)
   91ea0:	e0bffe15 	stw	r2,-8(fp)

  /* Mark the device as functional */
  sp->broken = 0;
   91ea4:	e0bfff17 	ldw	r2,-4(fp)
   91ea8:	10000805 	stb	zero,32(r2)
   * the BUSY bit in the status register doesn't work until the display
   * has been reset three times.
   */

  /* Wait for 15 ms then reset */
  usleep(15000);
   91eac:	010ea604 	movi	r4,15000
   91eb0:	0092e8c0 	call	92e8c <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
   91eb4:	e0bffe17 	ldw	r2,-8(fp)
   91eb8:	1007883a 	mov	r3,r2
   91ebc:	00800c04 	movi	r2,48
   91ec0:	18800035 	stwio	r2,0(r3)

  /* Wait for another 4.1ms and reset again */
  usleep(4100);  
   91ec4:	01040104 	movi	r4,4100
   91ec8:	0092e8c0 	call	92e8c <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
   91ecc:	e0bffe17 	ldw	r2,-8(fp)
   91ed0:	1007883a 	mov	r3,r2
   91ed4:	00800c04 	movi	r2,48
   91ed8:	18800035 	stwio	r2,0(r3)

  /* Wait a further 1 ms and reset a third time */
  usleep(1000);
   91edc:	0100fa04 	movi	r4,1000
   91ee0:	0092e8c0 	call	92e8c <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
   91ee4:	e0bffe17 	ldw	r2,-8(fp)
   91ee8:	1007883a 	mov	r3,r2
   91eec:	00800c04 	movi	r2,48
   91ef0:	18800035 	stwio	r2,0(r3)

  /* Setup interface parameters: 8 bit bus, 2 rows, 5x7 font */
  lcd_write_command(sp, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT | LCD_CMD_TWO_LINE);
   91ef4:	e13fff17 	ldw	r4,-4(fp)
   91ef8:	01400e04 	movi	r5,56
   91efc:	00910400 	call	91040 <lcd_write_command>
  
  /* Turn display off */
  lcd_write_command(sp, LCD_CMD_ONOFF);
   91f00:	e13fff17 	ldw	r4,-4(fp)
   91f04:	01400204 	movi	r5,8
   91f08:	00910400 	call	91040 <lcd_write_command>

  /* Clear display */
  lcd_clear_screen(sp);
   91f0c:	e13fff17 	ldw	r4,-4(fp)
   91f10:	00911cc0 	call	911cc <lcd_clear_screen>
  
  /* Set mode: increment after writing, don't shift display */
  lcd_write_command(sp, LCD_CMD_MODES | LCD_CMD_MODE_INC);
   91f14:	e13fff17 	ldw	r4,-4(fp)
   91f18:	01400184 	movi	r5,6
   91f1c:	00910400 	call	91040 <lcd_write_command>

  /* Turn display on */
  lcd_write_command(sp, LCD_CMD_ONOFF | LCD_CMD_ENABLE_DISP);
   91f20:	e13fff17 	ldw	r4,-4(fp)
   91f24:	01400304 	movi	r5,12
   91f28:	00910400 	call	91040 <lcd_write_command>

  sp->esccount = -1;
   91f2c:	e0ffff17 	ldw	r3,-4(fp)
   91f30:	00bfffc4 	movi	r2,-1
   91f34:	18800905 	stb	r2,36(r3)
  memset(sp->escape, 0, sizeof(sp->escape));
   91f38:	e0bfff17 	ldw	r2,-4(fp)
   91f3c:	11000a04 	addi	r4,r2,40
   91f40:	000b883a 	mov	r5,zero
   91f44:	01800204 	movi	r6,8
   91f48:	00878480 	call	87848 <memset>

  sp->scrollpos = 0;
   91f4c:	e0bfff17 	ldw	r2,-4(fp)
   91f50:	10000945 	stb	zero,37(r2)
  sp->scrollmax = 0;
   91f54:	e0bfff17 	ldw	r2,-4(fp)
   91f58:	10000985 	stb	zero,38(r2)
  sp->active = 0;
   91f5c:	e0bfff17 	ldw	r2,-4(fp)
   91f60:	100009c5 	stb	zero,39(r2)
   91f64:	00800274 	movhi	r2,9
   91f68:	109d4304 	addi	r2,r2,29964
   91f6c:	10800017 	ldw	r2,0(r2)
   91f70:	1009883a 	mov	r4,r2

  sp->period = alt_ticks_per_second() / 10; /* Call every 100ms */
   91f74:	01400284 	movi	r5,10
   91f78:	008f0dc0 	call	8f0dc <__udivsi3>
   91f7c:	1007883a 	mov	r3,r2
   91f80:	e0bfff17 	ldw	r2,-4(fp)
   91f84:	10c00715 	stw	r3,28(r2)

  alt_alarm_start(&sp->alarm, sp->period, &alt_lcd_16207_timeout, sp);
   91f88:	e0bfff17 	ldw	r2,-4(fp)
   91f8c:	11000104 	addi	r4,r2,4
   91f90:	e0bfff17 	ldw	r2,-4(fp)
   91f94:	10800717 	ldw	r2,28(r2)
   91f98:	100b883a 	mov	r5,r2
   91f9c:	01800274 	movhi	r6,9
   91fa0:	31876e04 	addi	r6,r6,7608
   91fa4:	e1ffff17 	ldw	r7,-4(fp)
   91fa8:	00922800 	call	92280 <alt_alarm_start>
}
   91fac:	e037883a 	mov	sp,fp
   91fb0:	dfc00117 	ldw	ra,4(sp)
   91fb4:	df000017 	ldw	fp,0(sp)
   91fb8:	dec00204 	addi	sp,sp,8
   91fbc:	f800283a 	ret

00091fc0 <altera_avalon_lcd_16207_write_fd>:
extern int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp,
  const char* ptr, int count, int flags);

int 
altera_avalon_lcd_16207_write_fd(alt_fd* fd, const char* buffer, int space)
{
   91fc0:	defffa04 	addi	sp,sp,-24
   91fc4:	dfc00515 	stw	ra,20(sp)
   91fc8:	df000415 	stw	fp,16(sp)
   91fcc:	df000404 	addi	fp,sp,16
   91fd0:	e13ffd15 	stw	r4,-12(fp)
   91fd4:	e17ffe15 	stw	r5,-8(fp)
   91fd8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_lcd_16207_dev* dev = (altera_avalon_lcd_16207_dev*) fd->dev; 
   91fdc:	e0bffd17 	ldw	r2,-12(fp)
   91fe0:	10800017 	ldw	r2,0(r2)
   91fe4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_lcd_16207_write(&dev->state, buffer, space,
   91fe8:	e0bffc17 	ldw	r2,-16(fp)
   91fec:	11000a04 	addi	r4,r2,40
   91ff0:	e0bffd17 	ldw	r2,-12(fp)
   91ff4:	11c00217 	ldw	r7,8(r2)
   91ff8:	e17ffe17 	ldw	r5,-8(fp)
   91ffc:	e1bfff17 	ldw	r6,-4(fp)
   92000:	009187c0 	call	9187c <altera_avalon_lcd_16207_write>
      fd->fd_flags);
}
   92004:	e037883a 	mov	sp,fp
   92008:	dfc00117 	ldw	ra,4(sp)
   9200c:	df000017 	ldw	fp,0(sp)
   92010:	dec00204 	addi	sp,sp,8
   92014:	f800283a 	ret

00092018 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   92018:	defffa04 	addi	sp,sp,-24
   9201c:	dfc00515 	stw	ra,20(sp)
   92020:	df000415 	stw	fp,16(sp)
   92024:	df000404 	addi	fp,sp,16
   92028:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   9202c:	e0bfff17 	ldw	r2,-4(fp)
   92030:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   92034:	e0bfff17 	ldw	r2,-4(fp)
   92038:	10800104 	addi	r2,r2,4
   9203c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   92040:	0005303a 	rdctl	r2,status
   92044:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   92048:	e0fffd17 	ldw	r3,-12(fp)
   9204c:	00bfff84 	movi	r2,-2
   92050:	1884703a 	and	r2,r3,r2
   92054:	1001703a 	wrctl	status,r2
  
  return context;
   92058:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   9205c:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
   92060:	0092d800 	call	92d80 <alt_tick>
   92064:	e0bffe17 	ldw	r2,-8(fp)
   92068:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   9206c:	e0bffc17 	ldw	r2,-16(fp)
   92070:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   92074:	e037883a 	mov	sp,fp
   92078:	dfc00117 	ldw	ra,4(sp)
   9207c:	df000017 	ldw	fp,0(sp)
   92080:	dec00204 	addi	sp,sp,8
   92084:	f800283a 	ret

00092088 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   92088:	defff804 	addi	sp,sp,-32
   9208c:	dfc00715 	stw	ra,28(sp)
   92090:	df000615 	stw	fp,24(sp)
   92094:	df000604 	addi	fp,sp,24
   92098:	e13ffc15 	stw	r4,-16(fp)
   9209c:	e17ffd15 	stw	r5,-12(fp)
   920a0:	e1bffe15 	stw	r6,-8(fp)
   920a4:	e1ffff15 	stw	r7,-4(fp)
   920a8:	e0bfff17 	ldw	r2,-4(fp)
   920ac:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   920b0:	00800274 	movhi	r2,9
   920b4:	109d4304 	addi	r2,r2,29964
   920b8:	10800017 	ldw	r2,0(r2)
   920bc:	1004c03a 	cmpne	r2,r2,zero
   920c0:	1000041e 	bne	r2,zero,920d4 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
   920c4:	00c00274 	movhi	r3,9
   920c8:	18dd4304 	addi	r3,r3,29964
   920cc:	e0bffb17 	ldw	r2,-20(fp)
   920d0:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   920d4:	e0bffc17 	ldw	r2,-16(fp)
   920d8:	10800104 	addi	r2,r2,4
   920dc:	1007883a 	mov	r3,r2
   920e0:	008001c4 	movi	r2,7
   920e4:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   920e8:	d8000015 	stw	zero,0(sp)
   920ec:	e13ffd17 	ldw	r4,-12(fp)
   920f0:	e17ffe17 	ldw	r5,-8(fp)
   920f4:	01800274 	movhi	r6,9
   920f8:	31880604 	addi	r6,r6,8216
   920fc:	e1fffc17 	ldw	r7,-16(fp)
   92100:	00925e80 	call	925e8 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   92104:	e037883a 	mov	sp,fp
   92108:	dfc00117 	ldw	ra,4(sp)
   9210c:	df000017 	ldw	fp,0(sp)
   92110:	dec00204 	addi	sp,sp,8
   92114:	f800283a 	ret

00092118 <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
   92118:	defffd04 	addi	sp,sp,-12
   9211c:	df000215 	stw	fp,8(sp)
   92120:	df000204 	addi	fp,sp,8
  void* base = altera_avalon_timer_ts_base;
   92124:	00800274 	movhi	r2,9
   92128:	109d4004 	addi	r2,r2,29952
   9212c:	10800017 	ldw	r2,0(r2)
   92130:	e0bffe15 	stw	r2,-8(fp)

  if (!altera_avalon_timer_ts_freq)
   92134:	00800274 	movhi	r2,9
   92138:	109d4104 	addi	r2,r2,29956
   9213c:	10800017 	ldw	r2,0(r2)
   92140:	1004c03a 	cmpne	r2,r2,zero
   92144:	1000031e 	bne	r2,zero,92154 <alt_timestamp_start+0x3c>
  {
    return -1;
   92148:	00bfffc4 	movi	r2,-1
   9214c:	e0bfff15 	stw	r2,-4(fp)
   92150:	00001506 	br	921a8 <alt_timestamp_start+0x90>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
   92154:	e0bffe17 	ldw	r2,-8(fp)
   92158:	10800104 	addi	r2,r2,4
   9215c:	1007883a 	mov	r3,r2
   92160:	00800204 	movi	r2,8
   92164:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
   92168:	e0bffe17 	ldw	r2,-8(fp)
   9216c:	10800204 	addi	r2,r2,8
   92170:	1007883a 	mov	r3,r2
   92174:	00bfffd4 	movui	r2,65535
   92178:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
   9217c:	e0bffe17 	ldw	r2,-8(fp)
   92180:	10800304 	addi	r2,r2,12
   92184:	1007883a 	mov	r3,r2
   92188:	00bfffd4 	movui	r2,65535
   9218c:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
   92190:	e0bffe17 	ldw	r2,-8(fp)
   92194:	10800104 	addi	r2,r2,4
   92198:	1007883a 	mov	r3,r2
   9219c:	00800104 	movi	r2,4
   921a0:	18800035 	stwio	r2,0(r3)
    } 
  }
  return 0;
   921a4:	e03fff15 	stw	zero,-4(fp)
   921a8:	e0bfff17 	ldw	r2,-4(fp)
}
   921ac:	e037883a 	mov	sp,fp
   921b0:	df000017 	ldw	fp,0(sp)
   921b4:	dec00104 	addi	sp,sp,4
   921b8:	f800283a 	ret

000921bc <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
   921bc:	defffb04 	addi	sp,sp,-20
   921c0:	df000415 	stw	fp,16(sp)
   921c4:	df000404 	addi	fp,sp,16

  void* base = altera_avalon_timer_ts_base;
   921c8:	00800274 	movhi	r2,9
   921cc:	109d4004 	addi	r2,r2,29952
   921d0:	10800017 	ldw	r2,0(r2)
   921d4:	e0bffe15 	stw	r2,-8(fp)

  if (!altera_avalon_timer_ts_freq)
   921d8:	00800274 	movhi	r2,9
   921dc:	109d4104 	addi	r2,r2,29956
   921e0:	10800017 	ldw	r2,0(r2)
   921e4:	1004c03a 	cmpne	r2,r2,zero
   921e8:	1000031e 	bne	r2,zero,921f8 <alt_timestamp+0x3c>
  {
	if(ALT_TIMESTAMP_COUNTER_SIZE == 64) {
        return 0xFFFFFFFFFFFFFFFFULL;
    } else {
        return 0xFFFFFFFF;
   921ec:	00bfffc4 	movi	r2,-1
   921f0:	e0bfff15 	stw	r2,-4(fp)
   921f4:	00001306 	br	92244 <alt_timestamp+0x88>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
    } else {
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
   921f8:	e0bffe17 	ldw	r2,-8(fp)
   921fc:	10800404 	addi	r2,r2,16
   92200:	10000035 	stwio	zero,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
   92204:	e0bffe17 	ldw	r2,-8(fp)
   92208:	10800404 	addi	r2,r2,16
   9220c:	10800037 	ldwio	r2,0(r2)
   92210:	10bfffcc 	andi	r2,r2,65535
   92214:	e0bffd15 	stw	r2,-12(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
   92218:	e0bffe17 	ldw	r2,-8(fp)
   9221c:	10800504 	addi	r2,r2,20
   92220:	10800037 	ldwio	r2,0(r2)
   92224:	10bfffcc 	andi	r2,r2,65535
   92228:	e0bffc15 	stw	r2,-16(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
   9222c:	e0bffc17 	ldw	r2,-16(fp)
   92230:	1006943a 	slli	r3,r2,16
   92234:	e0bffd17 	ldw	r2,-12(fp)
   92238:	1884b03a 	or	r2,r3,r2
   9223c:	0084303a 	nor	r2,zero,r2
   92240:	e0bfff15 	stw	r2,-4(fp)
   92244:	e0bfff17 	ldw	r2,-4(fp)
    }  
  }
}
   92248:	e037883a 	mov	sp,fp
   9224c:	df000017 	ldw	fp,0(sp)
   92250:	dec00104 	addi	sp,sp,4
   92254:	f800283a 	ret

00092258 <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
   92258:	deffff04 	addi	sp,sp,-4
   9225c:	df000015 	stw	fp,0(sp)
   92260:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
   92264:	00800274 	movhi	r2,9
   92268:	109d4104 	addi	r2,r2,29956
   9226c:	10800017 	ldw	r2,0(r2)
}
   92270:	e037883a 	mov	sp,fp
   92274:	df000017 	ldw	fp,0(sp)
   92278:	dec00104 	addi	sp,sp,4
   9227c:	f800283a 	ret

00092280 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   92280:	defff404 	addi	sp,sp,-48
   92284:	df000b15 	stw	fp,44(sp)
   92288:	df000b04 	addi	fp,sp,44
   9228c:	e13ffb15 	stw	r4,-20(fp)
   92290:	e17ffc15 	stw	r5,-16(fp)
   92294:	e1bffd15 	stw	r6,-12(fp)
   92298:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   9229c:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   922a0:	00800274 	movhi	r2,9
   922a4:	109d4304 	addi	r2,r2,29964
   922a8:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   922ac:	1005003a 	cmpeq	r2,r2,zero
   922b0:	1000411e 	bne	r2,zero,923b8 <alt_alarm_start+0x138>
  {
    if (alarm)
   922b4:	e0bffb17 	ldw	r2,-20(fp)
   922b8:	1005003a 	cmpeq	r2,r2,zero
   922bc:	10003b1e 	bne	r2,zero,923ac <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   922c0:	e0fffb17 	ldw	r3,-20(fp)
   922c4:	e0bffd17 	ldw	r2,-12(fp)
   922c8:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   922cc:	e0fffb17 	ldw	r3,-20(fp)
   922d0:	e0bffe17 	ldw	r2,-8(fp)
   922d4:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   922d8:	0005303a 	rdctl	r2,status
   922dc:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   922e0:	e0fff817 	ldw	r3,-32(fp)
   922e4:	00bfff84 	movi	r2,-2
   922e8:	1884703a 	and	r2,r3,r2
   922ec:	1001703a 	wrctl	status,r2
  
  return context;
   922f0:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   922f4:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   922f8:	00800274 	movhi	r2,9
   922fc:	109d4404 	addi	r2,r2,29968
   92300:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   92304:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   92308:	e0fffc17 	ldw	r3,-16(fp)
   9230c:	e0bff917 	ldw	r2,-28(fp)
   92310:	1885883a 	add	r2,r3,r2
   92314:	10c00044 	addi	r3,r2,1
   92318:	e0bffb17 	ldw	r2,-20(fp)
   9231c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   92320:	e0bffb17 	ldw	r2,-20(fp)
   92324:	10c00217 	ldw	r3,8(r2)
   92328:	e0bff917 	ldw	r2,-28(fp)
   9232c:	1880042e 	bgeu	r3,r2,92340 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   92330:	e0fffb17 	ldw	r3,-20(fp)
   92334:	00800044 	movi	r2,1
   92338:	18800405 	stb	r2,16(r3)
   9233c:	00000206 	br	92348 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   92340:	e0bffb17 	ldw	r2,-20(fp)
   92344:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   92348:	e0fffb17 	ldw	r3,-20(fp)
   9234c:	00800274 	movhi	r2,9
   92350:	10964904 	addi	r2,r2,22820
   92354:	e0bff615 	stw	r2,-40(fp)
   92358:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   9235c:	e0fff717 	ldw	r3,-36(fp)
   92360:	e0bff617 	ldw	r2,-40(fp)
   92364:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   92368:	e0bff617 	ldw	r2,-40(fp)
   9236c:	10c00017 	ldw	r3,0(r2)
   92370:	e0bff717 	ldw	r2,-36(fp)
   92374:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   92378:	e0bff617 	ldw	r2,-40(fp)
   9237c:	10c00017 	ldw	r3,0(r2)
   92380:	e0bff717 	ldw	r2,-36(fp)
   92384:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   92388:	e0fff617 	ldw	r3,-40(fp)
   9238c:	e0bff717 	ldw	r2,-36(fp)
   92390:	18800015 	stw	r2,0(r3)
   92394:	e0bffa17 	ldw	r2,-24(fp)
   92398:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   9239c:	e0bff517 	ldw	r2,-44(fp)
   923a0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   923a4:	e03fff15 	stw	zero,-4(fp)
   923a8:	00000506 	br	923c0 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   923ac:	00bffa84 	movi	r2,-22
   923b0:	e0bfff15 	stw	r2,-4(fp)
   923b4:	00000206 	br	923c0 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   923b8:	00bfde84 	movi	r2,-134
   923bc:	e0bfff15 	stw	r2,-4(fp)
   923c0:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   923c4:	e037883a 	mov	sp,fp
   923c8:	df000017 	ldw	fp,0(sp)
   923cc:	dec00104 	addi	sp,sp,4
   923d0:	f800283a 	ret

000923d4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   923d4:	deffff04 	addi	sp,sp,-4
   923d8:	df000015 	stw	fp,0(sp)
   923dc:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   923e0:	e037883a 	mov	sp,fp
   923e4:	df000017 	ldw	fp,0(sp)
   923e8:	dec00104 	addi	sp,sp,4
   923ec:	f800283a 	ret

000923f0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   923f0:	defff904 	addi	sp,sp,-28
   923f4:	dfc00615 	stw	ra,24(sp)
   923f8:	df000515 	stw	fp,20(sp)
   923fc:	df000504 	addi	fp,sp,20
   92400:	e13ffd15 	stw	r4,-12(fp)
   92404:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   92408:	e0bffd17 	ldw	r2,-12(fp)
   9240c:	1005003a 	cmpeq	r2,r2,zero
   92410:	1000041e 	bne	r2,zero,92424 <alt_dev_llist_insert+0x34>
   92414:	e0bffd17 	ldw	r2,-12(fp)
   92418:	10800217 	ldw	r2,8(r2)
   9241c:	1004c03a 	cmpne	r2,r2,zero
   92420:	1000071e 	bne	r2,zero,92440 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   92424:	00924a40 	call	924a4 <alt_get_errno>
   92428:	1007883a 	mov	r3,r2
   9242c:	00800584 	movi	r2,22
   92430:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   92434:	00bffa84 	movi	r2,-22
   92438:	e0bfff15 	stw	r2,-4(fp)
   9243c:	00001306 	br	9248c <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   92440:	e0fffd17 	ldw	r3,-12(fp)
   92444:	e0bffe17 	ldw	r2,-8(fp)
   92448:	e0bffb15 	stw	r2,-20(fp)
   9244c:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   92450:	e0fffc17 	ldw	r3,-16(fp)
   92454:	e0bffb17 	ldw	r2,-20(fp)
   92458:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   9245c:	e0bffb17 	ldw	r2,-20(fp)
   92460:	10c00017 	ldw	r3,0(r2)
   92464:	e0bffc17 	ldw	r2,-16(fp)
   92468:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   9246c:	e0bffb17 	ldw	r2,-20(fp)
   92470:	10c00017 	ldw	r3,0(r2)
   92474:	e0bffc17 	ldw	r2,-16(fp)
   92478:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   9247c:	e0fffb17 	ldw	r3,-20(fp)
   92480:	e0bffc17 	ldw	r2,-16(fp)
   92484:	18800015 	stw	r2,0(r3)

  return 0;  
   92488:	e03fff15 	stw	zero,-4(fp)
   9248c:	e0bfff17 	ldw	r2,-4(fp)
}
   92490:	e037883a 	mov	sp,fp
   92494:	dfc00117 	ldw	ra,4(sp)
   92498:	df000017 	ldw	fp,0(sp)
   9249c:	dec00204 	addi	sp,sp,8
   924a0:	f800283a 	ret

000924a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   924a4:	defffd04 	addi	sp,sp,-12
   924a8:	dfc00215 	stw	ra,8(sp)
   924ac:	df000115 	stw	fp,4(sp)
   924b0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   924b4:	00800274 	movhi	r2,9
   924b8:	10964504 	addi	r2,r2,22804
   924bc:	10800017 	ldw	r2,0(r2)
   924c0:	1005003a 	cmpeq	r2,r2,zero
   924c4:	1000061e 	bne	r2,zero,924e0 <alt_get_errno+0x3c>
   924c8:	00800274 	movhi	r2,9
   924cc:	10964504 	addi	r2,r2,22804
   924d0:	10800017 	ldw	r2,0(r2)
   924d4:	103ee83a 	callr	r2
   924d8:	e0bfff15 	stw	r2,-4(fp)
   924dc:	00000306 	br	924ec <alt_get_errno+0x48>
   924e0:	00800274 	movhi	r2,9
   924e4:	109d3c04 	addi	r2,r2,29936
   924e8:	e0bfff15 	stw	r2,-4(fp)
   924ec:	e0bfff17 	ldw	r2,-4(fp)
}
   924f0:	e037883a 	mov	sp,fp
   924f4:	dfc00117 	ldw	ra,4(sp)
   924f8:	df000017 	ldw	fp,0(sp)
   924fc:	dec00204 	addi	sp,sp,8
   92500:	f800283a 	ret

00092504 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   92504:	defffd04 	addi	sp,sp,-12
   92508:	dfc00215 	stw	ra,8(sp)
   9250c:	df000115 	stw	fp,4(sp)
   92510:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   92514:	00bfff04 	movi	r2,-4
   92518:	00c00274 	movhi	r3,9
   9251c:	18cdb204 	addi	r3,r3,14024
   92520:	1885883a 	add	r2,r3,r2
   92524:	e0bfff15 	stw	r2,-4(fp)
   92528:	00000606 	br	92544 <_do_ctors+0x40>
        (*ctor) (); 
   9252c:	e0bfff17 	ldw	r2,-4(fp)
   92530:	10800017 	ldw	r2,0(r2)
   92534:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   92538:	e0bfff17 	ldw	r2,-4(fp)
   9253c:	10bfff04 	addi	r2,r2,-4
   92540:	e0bfff15 	stw	r2,-4(fp)
   92544:	e0ffff17 	ldw	r3,-4(fp)
   92548:	00800274 	movhi	r2,9
   9254c:	108db104 	addi	r2,r2,14020
   92550:	18bff62e 	bgeu	r3,r2,9252c <_do_ctors+0x28>
        (*ctor) (); 
}
   92554:	e037883a 	mov	sp,fp
   92558:	dfc00117 	ldw	ra,4(sp)
   9255c:	df000017 	ldw	fp,0(sp)
   92560:	dec00204 	addi	sp,sp,8
   92564:	f800283a 	ret

00092568 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   92568:	defffd04 	addi	sp,sp,-12
   9256c:	dfc00215 	stw	ra,8(sp)
   92570:	df000115 	stw	fp,4(sp)
   92574:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   92578:	00bfff04 	movi	r2,-4
   9257c:	00c00274 	movhi	r3,9
   92580:	18cdb204 	addi	r3,r3,14024
   92584:	1885883a 	add	r2,r3,r2
   92588:	e0bfff15 	stw	r2,-4(fp)
   9258c:	00000606 	br	925a8 <_do_dtors+0x40>
        (*dtor) (); 
   92590:	e0bfff17 	ldw	r2,-4(fp)
   92594:	10800017 	ldw	r2,0(r2)
   92598:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   9259c:	e0bfff17 	ldw	r2,-4(fp)
   925a0:	10bfff04 	addi	r2,r2,-4
   925a4:	e0bfff15 	stw	r2,-4(fp)
   925a8:	e0ffff17 	ldw	r3,-4(fp)
   925ac:	00800274 	movhi	r2,9
   925b0:	108db204 	addi	r2,r2,14024
   925b4:	18bff62e 	bgeu	r3,r2,92590 <_do_dtors+0x28>
        (*dtor) (); 
}
   925b8:	e037883a 	mov	sp,fp
   925bc:	dfc00117 	ldw	ra,4(sp)
   925c0:	df000017 	ldw	fp,0(sp)
   925c4:	dec00204 	addi	sp,sp,8
   925c8:	f800283a 	ret

000925cc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   925cc:	deffff04 	addi	sp,sp,-4
   925d0:	df000015 	stw	fp,0(sp)
   925d4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   925d8:	e037883a 	mov	sp,fp
   925dc:	df000017 	ldw	fp,0(sp)
   925e0:	dec00104 	addi	sp,sp,4
   925e4:	f800283a 	ret

000925e8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   925e8:	defff904 	addi	sp,sp,-28
   925ec:	dfc00615 	stw	ra,24(sp)
   925f0:	df000515 	stw	fp,20(sp)
   925f4:	df000504 	addi	fp,sp,20
   925f8:	e13ffc15 	stw	r4,-16(fp)
   925fc:	e17ffd15 	stw	r5,-12(fp)
   92600:	e1bffe15 	stw	r6,-8(fp)
   92604:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   92608:	e0800217 	ldw	r2,8(fp)
   9260c:	d8800015 	stw	r2,0(sp)
   92610:	e13ffc17 	ldw	r4,-16(fp)
   92614:	e17ffd17 	ldw	r5,-12(fp)
   92618:	e1bffe17 	ldw	r6,-8(fp)
   9261c:	e1ffff17 	ldw	r7,-4(fp)
   92620:	00927bc0 	call	927bc <alt_iic_isr_register>
}  
   92624:	e037883a 	mov	sp,fp
   92628:	dfc00117 	ldw	ra,4(sp)
   9262c:	df000017 	ldw	fp,0(sp)
   92630:	dec00204 	addi	sp,sp,8
   92634:	f800283a 	ret

00092638 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   92638:	defff904 	addi	sp,sp,-28
   9263c:	df000615 	stw	fp,24(sp)
   92640:	df000604 	addi	fp,sp,24
   92644:	e13ffe15 	stw	r4,-8(fp)
   92648:	e17fff15 	stw	r5,-4(fp)
   9264c:	e0bfff17 	ldw	r2,-4(fp)
   92650:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   92654:	0005303a 	rdctl	r2,status
   92658:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   9265c:	e0fffb17 	ldw	r3,-20(fp)
   92660:	00bfff84 	movi	r2,-2
   92664:	1884703a 	and	r2,r3,r2
   92668:	1001703a 	wrctl	status,r2
  
  return context;
   9266c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   92670:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   92674:	e0fffc17 	ldw	r3,-16(fp)
   92678:	00800044 	movi	r2,1
   9267c:	10c4983a 	sll	r2,r2,r3
   92680:	1007883a 	mov	r3,r2
   92684:	00800274 	movhi	r2,9
   92688:	109d4204 	addi	r2,r2,29960
   9268c:	10800017 	ldw	r2,0(r2)
   92690:	1886b03a 	or	r3,r3,r2
   92694:	00800274 	movhi	r2,9
   92698:	109d4204 	addi	r2,r2,29960
   9269c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   926a0:	00800274 	movhi	r2,9
   926a4:	109d4204 	addi	r2,r2,29960
   926a8:	10800017 	ldw	r2,0(r2)
   926ac:	100170fa 	wrctl	ienable,r2
   926b0:	e0bffd17 	ldw	r2,-12(fp)
   926b4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   926b8:	e0bffa17 	ldw	r2,-24(fp)
   926bc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   926c0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   926c4:	e037883a 	mov	sp,fp
   926c8:	df000017 	ldw	fp,0(sp)
   926cc:	dec00104 	addi	sp,sp,4
   926d0:	f800283a 	ret

000926d4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   926d4:	defff904 	addi	sp,sp,-28
   926d8:	df000615 	stw	fp,24(sp)
   926dc:	df000604 	addi	fp,sp,24
   926e0:	e13ffe15 	stw	r4,-8(fp)
   926e4:	e17fff15 	stw	r5,-4(fp)
   926e8:	e0bfff17 	ldw	r2,-4(fp)
   926ec:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   926f0:	0005303a 	rdctl	r2,status
   926f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   926f8:	e0fffb17 	ldw	r3,-20(fp)
   926fc:	00bfff84 	movi	r2,-2
   92700:	1884703a 	and	r2,r3,r2
   92704:	1001703a 	wrctl	status,r2
  
  return context;
   92708:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   9270c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   92710:	e0fffc17 	ldw	r3,-16(fp)
   92714:	00800044 	movi	r2,1
   92718:	10c4983a 	sll	r2,r2,r3
   9271c:	0084303a 	nor	r2,zero,r2
   92720:	1007883a 	mov	r3,r2
   92724:	00800274 	movhi	r2,9
   92728:	109d4204 	addi	r2,r2,29960
   9272c:	10800017 	ldw	r2,0(r2)
   92730:	1886703a 	and	r3,r3,r2
   92734:	00800274 	movhi	r2,9
   92738:	109d4204 	addi	r2,r2,29960
   9273c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   92740:	00800274 	movhi	r2,9
   92744:	109d4204 	addi	r2,r2,29960
   92748:	10800017 	ldw	r2,0(r2)
   9274c:	100170fa 	wrctl	ienable,r2
   92750:	e0bffd17 	ldw	r2,-12(fp)
   92754:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   92758:	e0bffa17 	ldw	r2,-24(fp)
   9275c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   92760:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   92764:	e037883a 	mov	sp,fp
   92768:	df000017 	ldw	fp,0(sp)
   9276c:	dec00104 	addi	sp,sp,4
   92770:	f800283a 	ret

00092774 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   92774:	defffc04 	addi	sp,sp,-16
   92778:	df000315 	stw	fp,12(sp)
   9277c:	df000304 	addi	fp,sp,12
   92780:	e13ffe15 	stw	r4,-8(fp)
   92784:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   92788:	000530fa 	rdctl	r2,ienable
   9278c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   92790:	e0ffff17 	ldw	r3,-4(fp)
   92794:	00800044 	movi	r2,1
   92798:	10c4983a 	sll	r2,r2,r3
   9279c:	1007883a 	mov	r3,r2
   927a0:	e0bffd17 	ldw	r2,-12(fp)
   927a4:	1884703a 	and	r2,r3,r2
   927a8:	1004c03a 	cmpne	r2,r2,zero
}
   927ac:	e037883a 	mov	sp,fp
   927b0:	df000017 	ldw	fp,0(sp)
   927b4:	dec00104 	addi	sp,sp,4
   927b8:	f800283a 	ret

000927bc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   927bc:	defff404 	addi	sp,sp,-48
   927c0:	dfc00b15 	stw	ra,44(sp)
   927c4:	df000a15 	stw	fp,40(sp)
   927c8:	df000a04 	addi	fp,sp,40
   927cc:	e13ffb15 	stw	r4,-20(fp)
   927d0:	e17ffc15 	stw	r5,-16(fp)
   927d4:	e1bffd15 	stw	r6,-12(fp)
   927d8:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   927dc:	00bffa84 	movi	r2,-22
   927e0:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   927e4:	e0bffc17 	ldw	r2,-16(fp)
   927e8:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   927ec:	e0bff917 	ldw	r2,-28(fp)
   927f0:	10800808 	cmpgei	r2,r2,32
   927f4:	1000291e 	bne	r2,zero,9289c <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   927f8:	0005303a 	rdctl	r2,status
   927fc:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   92800:	e0fff717 	ldw	r3,-36(fp)
   92804:	00bfff84 	movi	r2,-2
   92808:	1884703a 	and	r2,r3,r2
   9280c:	1001703a 	wrctl	status,r2
  
  return context;
   92810:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   92814:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   92818:	e0bff917 	ldw	r2,-28(fp)
   9281c:	00c00274 	movhi	r3,9
   92820:	18dd8f04 	addi	r3,r3,30268
   92824:	100490fa 	slli	r2,r2,3
   92828:	10c7883a 	add	r3,r2,r3
   9282c:	e0bffd17 	ldw	r2,-12(fp)
   92830:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   92834:	e0bff917 	ldw	r2,-28(fp)
   92838:	00c00274 	movhi	r3,9
   9283c:	18dd8f04 	addi	r3,r3,30268
   92840:	100490fa 	slli	r2,r2,3
   92844:	10c5883a 	add	r2,r2,r3
   92848:	10c00104 	addi	r3,r2,4
   9284c:	e0bffe17 	ldw	r2,-8(fp)
   92850:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   92854:	e0bffd17 	ldw	r2,-12(fp)
   92858:	1005003a 	cmpeq	r2,r2,zero
   9285c:	1000051e 	bne	r2,zero,92874 <alt_iic_isr_register+0xb8>
   92860:	e17ff917 	ldw	r5,-28(fp)
   92864:	e13ffb17 	ldw	r4,-20(fp)
   92868:	00926380 	call	92638 <alt_ic_irq_enable>
   9286c:	e0bfff15 	stw	r2,-4(fp)
   92870:	00000406 	br	92884 <alt_iic_isr_register+0xc8>
   92874:	e17ff917 	ldw	r5,-28(fp)
   92878:	e13ffb17 	ldw	r4,-20(fp)
   9287c:	00926d40 	call	926d4 <alt_ic_irq_disable>
   92880:	e0bfff15 	stw	r2,-4(fp)
   92884:	e0bfff17 	ldw	r2,-4(fp)
   92888:	e0bffa15 	stw	r2,-24(fp)
   9288c:	e0bff817 	ldw	r2,-32(fp)
   92890:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   92894:	e0bff617 	ldw	r2,-40(fp)
   92898:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   9289c:	e0bffa17 	ldw	r2,-24(fp)
}
   928a0:	e037883a 	mov	sp,fp
   928a4:	dfc00117 	ldw	ra,4(sp)
   928a8:	df000017 	ldw	fp,0(sp)
   928ac:	dec00204 	addi	sp,sp,8
   928b0:	f800283a 	ret

000928b4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   928b4:	defff804 	addi	sp,sp,-32
   928b8:	dfc00715 	stw	ra,28(sp)
   928bc:	df000615 	stw	fp,24(sp)
   928c0:	dc000515 	stw	r16,20(sp)
   928c4:	df000504 	addi	fp,sp,20
   928c8:	e13ffc15 	stw	r4,-16(fp)
   928cc:	e17ffd15 	stw	r5,-12(fp)
   928d0:	e1bffe15 	stw	r6,-8(fp)
   928d4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   928d8:	e13ffd17 	ldw	r4,-12(fp)
   928dc:	e17ffe17 	ldw	r5,-8(fp)
   928e0:	e1bfff17 	ldw	r6,-4(fp)
   928e4:	0092afc0 	call	92afc <open>
   928e8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   928ec:	e0bffb17 	ldw	r2,-20(fp)
   928f0:	1004803a 	cmplt	r2,r2,zero
   928f4:	10001f1e 	bne	r2,zero,92974 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
   928f8:	e13ffb17 	ldw	r4,-20(fp)
   928fc:	04000274 	movhi	r16,9
   92900:	84117904 	addi	r16,r16,17892
   92904:	01400304 	movi	r5,12
   92908:	00806240 	call	80624 <__mulsi3>
   9290c:	1405883a 	add	r2,r2,r16
   92910:	10c00017 	ldw	r3,0(r2)
   92914:	e0bffc17 	ldw	r2,-16(fp)
   92918:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   9291c:	e13ffb17 	ldw	r4,-20(fp)
   92920:	04000274 	movhi	r16,9
   92924:	84117904 	addi	r16,r16,17892
   92928:	01400304 	movi	r5,12
   9292c:	00806240 	call	80624 <__mulsi3>
   92930:	1405883a 	add	r2,r2,r16
   92934:	10800104 	addi	r2,r2,4
   92938:	10c00017 	ldw	r3,0(r2)
   9293c:	e0bffc17 	ldw	r2,-16(fp)
   92940:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   92944:	e13ffb17 	ldw	r4,-20(fp)
   92948:	04000274 	movhi	r16,9
   9294c:	84117904 	addi	r16,r16,17892
   92950:	01400304 	movi	r5,12
   92954:	00806240 	call	80624 <__mulsi3>
   92958:	1405883a 	add	r2,r2,r16
   9295c:	10800204 	addi	r2,r2,8
   92960:	10c00017 	ldw	r3,0(r2)
   92964:	e0bffc17 	ldw	r2,-16(fp)
   92968:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   9296c:	e13ffb17 	ldw	r4,-20(fp)
   92970:	00901d40 	call	901d4 <alt_release_fd>
  }
} 
   92974:	e037883a 	mov	sp,fp
   92978:	dfc00217 	ldw	ra,8(sp)
   9297c:	df000117 	ldw	fp,4(sp)
   92980:	dc000017 	ldw	r16,0(sp)
   92984:	dec00304 	addi	sp,sp,12
   92988:	f800283a 	ret

0009298c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   9298c:	defffb04 	addi	sp,sp,-20
   92990:	dfc00415 	stw	ra,16(sp)
   92994:	df000315 	stw	fp,12(sp)
   92998:	df000304 	addi	fp,sp,12
   9299c:	e13ffd15 	stw	r4,-12(fp)
   929a0:	e17ffe15 	stw	r5,-8(fp)
   929a4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   929a8:	01000274 	movhi	r4,9
   929ac:	21117c04 	addi	r4,r4,17904
   929b0:	e17ffd17 	ldw	r5,-12(fp)
   929b4:	01800044 	movi	r6,1
   929b8:	01c07fc4 	movi	r7,511
   929bc:	00928b40 	call	928b4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   929c0:	01000274 	movhi	r4,9
   929c4:	21117904 	addi	r4,r4,17892
   929c8:	e17ffe17 	ldw	r5,-8(fp)
   929cc:	000d883a 	mov	r6,zero
   929d0:	01c07fc4 	movi	r7,511
   929d4:	00928b40 	call	928b4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   929d8:	01000274 	movhi	r4,9
   929dc:	21117f04 	addi	r4,r4,17916
   929e0:	e17fff17 	ldw	r5,-4(fp)
   929e4:	01800044 	movi	r6,1
   929e8:	01c07fc4 	movi	r7,511
   929ec:	00928b40 	call	928b4 <alt_open_fd>
}  
   929f0:	e037883a 	mov	sp,fp
   929f4:	dfc00117 	ldw	ra,4(sp)
   929f8:	df000017 	ldw	fp,0(sp)
   929fc:	dec00204 	addi	sp,sp,8
   92a00:	f800283a 	ret

00092a04 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   92a04:	defffa04 	addi	sp,sp,-24
   92a08:	dfc00515 	stw	ra,20(sp)
   92a0c:	df000415 	stw	fp,16(sp)
   92a10:	dc000315 	stw	r16,12(sp)
   92a14:	df000304 	addi	fp,sp,12
   92a18:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   92a1c:	e0bffe17 	ldw	r2,-8(fp)
   92a20:	10800217 	ldw	r2,8(r2)
   92a24:	10d00034 	orhi	r3,r2,16384
   92a28:	e0bffe17 	ldw	r2,-8(fp)
   92a2c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   92a30:	e03ffd15 	stw	zero,-12(fp)
   92a34:	00002306 	br	92ac4 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   92a38:	e13ffd17 	ldw	r4,-12(fp)
   92a3c:	04000274 	movhi	r16,9
   92a40:	84117904 	addi	r16,r16,17892
   92a44:	01400304 	movi	r5,12
   92a48:	00806240 	call	80624 <__mulsi3>
   92a4c:	1405883a 	add	r2,r2,r16
   92a50:	10c00017 	ldw	r3,0(r2)
   92a54:	e0bffe17 	ldw	r2,-8(fp)
   92a58:	10800017 	ldw	r2,0(r2)
   92a5c:	1880161e 	bne	r3,r2,92ab8 <alt_file_locked+0xb4>
   92a60:	e13ffd17 	ldw	r4,-12(fp)
   92a64:	04000274 	movhi	r16,9
   92a68:	84117904 	addi	r16,r16,17892
   92a6c:	01400304 	movi	r5,12
   92a70:	00806240 	call	80624 <__mulsi3>
   92a74:	1405883a 	add	r2,r2,r16
   92a78:	10800204 	addi	r2,r2,8
   92a7c:	10800017 	ldw	r2,0(r2)
   92a80:	1004403a 	cmpge	r2,r2,zero
   92a84:	10000c1e 	bne	r2,zero,92ab8 <alt_file_locked+0xb4>
   92a88:	e13ffd17 	ldw	r4,-12(fp)
   92a8c:	01400304 	movi	r5,12
   92a90:	00806240 	call	80624 <__mulsi3>
   92a94:	1007883a 	mov	r3,r2
   92a98:	00800274 	movhi	r2,9
   92a9c:	10917904 	addi	r2,r2,17892
   92aa0:	1887883a 	add	r3,r3,r2
   92aa4:	e0bffe17 	ldw	r2,-8(fp)
   92aa8:	18800326 	beq	r3,r2,92ab8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   92aac:	00bffcc4 	movi	r2,-13
   92ab0:	e0bfff15 	stw	r2,-4(fp)
   92ab4:	00000a06 	br	92ae0 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   92ab8:	e0bffd17 	ldw	r2,-12(fp)
   92abc:	10800044 	addi	r2,r2,1
   92ac0:	e0bffd15 	stw	r2,-12(fp)
   92ac4:	00800274 	movhi	r2,9
   92ac8:	10964404 	addi	r2,r2,22800
   92acc:	10800017 	ldw	r2,0(r2)
   92ad0:	1007883a 	mov	r3,r2
   92ad4:	e0bffd17 	ldw	r2,-12(fp)
   92ad8:	18bfd72e 	bgeu	r3,r2,92a38 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   92adc:	e03fff15 	stw	zero,-4(fp)
   92ae0:	e0bfff17 	ldw	r2,-4(fp)
}
   92ae4:	e037883a 	mov	sp,fp
   92ae8:	dfc00217 	ldw	ra,8(sp)
   92aec:	df000117 	ldw	fp,4(sp)
   92af0:	dc000017 	ldw	r16,0(sp)
   92af4:	dec00304 	addi	sp,sp,12
   92af8:	f800283a 	ret

00092afc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   92afc:	defff404 	addi	sp,sp,-48
   92b00:	dfc00b15 	stw	ra,44(sp)
   92b04:	df000a15 	stw	fp,40(sp)
   92b08:	df000a04 	addi	fp,sp,40
   92b0c:	e13ffb15 	stw	r4,-20(fp)
   92b10:	e17ffc15 	stw	r5,-16(fp)
   92b14:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   92b18:	00bfffc4 	movi	r2,-1
   92b1c:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   92b20:	00bffb44 	movi	r2,-19
   92b24:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   92b28:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   92b2c:	e13ffb17 	ldw	r4,-20(fp)
   92b30:	01400274 	movhi	r5,9
   92b34:	29564204 	addi	r5,r5,22792
   92b38:	00930380 	call	93038 <alt_find_dev>
   92b3c:	e0bffa15 	stw	r2,-24(fp)
   92b40:	e0bffa17 	ldw	r2,-24(fp)
   92b44:	1004c03a 	cmpne	r2,r2,zero
   92b48:	1000051e 	bne	r2,zero,92b60 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   92b4c:	e13ffb17 	ldw	r4,-20(fp)
   92b50:	00930cc0 	call	930cc <alt_find_file>
   92b54:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   92b58:	00800044 	movi	r2,1
   92b5c:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   92b60:	e0bffa17 	ldw	r2,-24(fp)
   92b64:	1005003a 	cmpeq	r2,r2,zero
   92b68:	1000311e 	bne	r2,zero,92c30 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
   92b6c:	e13ffa17 	ldw	r4,-24(fp)
   92b70:	00931ec0 	call	931ec <alt_get_fd>
   92b74:	e0bff815 	stw	r2,-32(fp)
   92b78:	e0bff817 	ldw	r2,-32(fp)
   92b7c:	1004403a 	cmpge	r2,r2,zero
   92b80:	1000031e 	bne	r2,zero,92b90 <open+0x94>
    {
      status = index;
   92b84:	e0bff817 	ldw	r2,-32(fp)
   92b88:	e0bff715 	stw	r2,-36(fp)
   92b8c:	00002a06 	br	92c38 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
   92b90:	e13ff817 	ldw	r4,-32(fp)
   92b94:	01400304 	movi	r5,12
   92b98:	00806240 	call	80624 <__mulsi3>
   92b9c:	1007883a 	mov	r3,r2
   92ba0:	00800274 	movhi	r2,9
   92ba4:	10917904 	addi	r2,r2,17892
   92ba8:	1885883a 	add	r2,r3,r2
   92bac:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   92bb0:	e0fffc17 	ldw	r3,-16(fp)
   92bb4:	00900034 	movhi	r2,16384
   92bb8:	10bfffc4 	addi	r2,r2,-1
   92bbc:	1886703a 	and	r3,r3,r2
   92bc0:	e0bff917 	ldw	r2,-28(fp)
   92bc4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   92bc8:	e0bff617 	ldw	r2,-40(fp)
   92bcc:	1004c03a 	cmpne	r2,r2,zero
   92bd0:	1000061e 	bne	r2,zero,92bec <open+0xf0>
   92bd4:	e13ff917 	ldw	r4,-28(fp)
   92bd8:	0092a040 	call	92a04 <alt_file_locked>
   92bdc:	e0bff715 	stw	r2,-36(fp)
   92be0:	e0bff717 	ldw	r2,-36(fp)
   92be4:	1004803a 	cmplt	r2,r2,zero
   92be8:	1000131e 	bne	r2,zero,92c38 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   92bec:	e0bffa17 	ldw	r2,-24(fp)
   92bf0:	10800317 	ldw	r2,12(r2)
   92bf4:	1005003a 	cmpeq	r2,r2,zero
   92bf8:	1000091e 	bne	r2,zero,92c20 <open+0x124>
   92bfc:	e0bffa17 	ldw	r2,-24(fp)
   92c00:	10800317 	ldw	r2,12(r2)
   92c04:	e13ff917 	ldw	r4,-28(fp)
   92c08:	e17ffb17 	ldw	r5,-20(fp)
   92c0c:	e1bffc17 	ldw	r6,-16(fp)
   92c10:	e1fffd17 	ldw	r7,-12(fp)
   92c14:	103ee83a 	callr	r2
   92c18:	e0bfff15 	stw	r2,-4(fp)
   92c1c:	00000106 	br	92c24 <open+0x128>
   92c20:	e03fff15 	stw	zero,-4(fp)
   92c24:	e0bfff17 	ldw	r2,-4(fp)
   92c28:	e0bff715 	stw	r2,-36(fp)
   92c2c:	00000206 	br	92c38 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   92c30:	00bffb44 	movi	r2,-19
   92c34:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   92c38:	e0bff717 	ldw	r2,-36(fp)
   92c3c:	1004403a 	cmpge	r2,r2,zero
   92c40:	1000091e 	bne	r2,zero,92c68 <open+0x16c>
  {
    alt_release_fd (index);  
   92c44:	e13ff817 	ldw	r4,-32(fp)
   92c48:	00901d40 	call	901d4 <alt_release_fd>
    ALT_ERRNO = -status;
   92c4c:	0092c880 	call	92c88 <alt_get_errno>
   92c50:	e0fff717 	ldw	r3,-36(fp)
   92c54:	00c7c83a 	sub	r3,zero,r3
   92c58:	10c00015 	stw	r3,0(r2)
    return -1;
   92c5c:	00bfffc4 	movi	r2,-1
   92c60:	e0bffe15 	stw	r2,-8(fp)
   92c64:	00000206 	br	92c70 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
   92c68:	e0bff817 	ldw	r2,-32(fp)
   92c6c:	e0bffe15 	stw	r2,-8(fp)
   92c70:	e0bffe17 	ldw	r2,-8(fp)
}
   92c74:	e037883a 	mov	sp,fp
   92c78:	dfc00117 	ldw	ra,4(sp)
   92c7c:	df000017 	ldw	fp,0(sp)
   92c80:	dec00204 	addi	sp,sp,8
   92c84:	f800283a 	ret

00092c88 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   92c88:	defffd04 	addi	sp,sp,-12
   92c8c:	dfc00215 	stw	ra,8(sp)
   92c90:	df000115 	stw	fp,4(sp)
   92c94:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   92c98:	00800274 	movhi	r2,9
   92c9c:	10964504 	addi	r2,r2,22804
   92ca0:	10800017 	ldw	r2,0(r2)
   92ca4:	1005003a 	cmpeq	r2,r2,zero
   92ca8:	1000061e 	bne	r2,zero,92cc4 <alt_get_errno+0x3c>
   92cac:	00800274 	movhi	r2,9
   92cb0:	10964504 	addi	r2,r2,22804
   92cb4:	10800017 	ldw	r2,0(r2)
   92cb8:	103ee83a 	callr	r2
   92cbc:	e0bfff15 	stw	r2,-4(fp)
   92cc0:	00000306 	br	92cd0 <alt_get_errno+0x48>
   92cc4:	00800274 	movhi	r2,9
   92cc8:	109d3c04 	addi	r2,r2,29936
   92ccc:	e0bfff15 	stw	r2,-4(fp)
   92cd0:	e0bfff17 	ldw	r2,-4(fp)
}
   92cd4:	e037883a 	mov	sp,fp
   92cd8:	dfc00117 	ldw	ra,4(sp)
   92cdc:	df000017 	ldw	fp,0(sp)
   92ce0:	dec00204 	addi	sp,sp,8
   92ce4:	f800283a 	ret

00092ce8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   92ce8:	defffa04 	addi	sp,sp,-24
   92cec:	df000515 	stw	fp,20(sp)
   92cf0:	df000504 	addi	fp,sp,20
   92cf4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   92cf8:	0005303a 	rdctl	r2,status
   92cfc:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   92d00:	e0fffd17 	ldw	r3,-12(fp)
   92d04:	00bfff84 	movi	r2,-2
   92d08:	1884703a 	and	r2,r3,r2
   92d0c:	1001703a 	wrctl	status,r2
  
  return context;
   92d10:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   92d14:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   92d18:	e0bfff17 	ldw	r2,-4(fp)
   92d1c:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   92d20:	e0bffc17 	ldw	r2,-16(fp)
   92d24:	10c00017 	ldw	r3,0(r2)
   92d28:	e0bffc17 	ldw	r2,-16(fp)
   92d2c:	10800117 	ldw	r2,4(r2)
   92d30:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   92d34:	e0bffc17 	ldw	r2,-16(fp)
   92d38:	10c00117 	ldw	r3,4(r2)
   92d3c:	e0bffc17 	ldw	r2,-16(fp)
   92d40:	10800017 	ldw	r2,0(r2)
   92d44:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   92d48:	e0fffc17 	ldw	r3,-16(fp)
   92d4c:	e0bffc17 	ldw	r2,-16(fp)
   92d50:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   92d54:	e0fffc17 	ldw	r3,-16(fp)
   92d58:	e0bffc17 	ldw	r2,-16(fp)
   92d5c:	18800015 	stw	r2,0(r3)
   92d60:	e0bffe17 	ldw	r2,-8(fp)
   92d64:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   92d68:	e0bffb17 	ldw	r2,-20(fp)
   92d6c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   92d70:	e037883a 	mov	sp,fp
   92d74:	df000017 	ldw	fp,0(sp)
   92d78:	dec00104 	addi	sp,sp,4
   92d7c:	f800283a 	ret

00092d80 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   92d80:	defffb04 	addi	sp,sp,-20
   92d84:	dfc00415 	stw	ra,16(sp)
   92d88:	df000315 	stw	fp,12(sp)
   92d8c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   92d90:	d0a01017 	ldw	r2,-32704(gp)
   92d94:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   92d98:	d0a70b17 	ldw	r2,-25556(gp)
   92d9c:	10800044 	addi	r2,r2,1
   92da0:	d0a70b15 	stw	r2,-25556(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   92da4:	00003106 	br	92e6c <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   92da8:	e0bffe17 	ldw	r2,-8(fp)
   92dac:	10800017 	ldw	r2,0(r2)
   92db0:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   92db4:	e0bffe17 	ldw	r2,-8(fp)
   92db8:	10800403 	ldbu	r2,16(r2)
   92dbc:	10803fcc 	andi	r2,r2,255
   92dc0:	1005003a 	cmpeq	r2,r2,zero
   92dc4:	1000051e 	bne	r2,zero,92ddc <alt_tick+0x5c>
   92dc8:	d0a70b17 	ldw	r2,-25556(gp)
   92dcc:	1004c03a 	cmpne	r2,r2,zero
   92dd0:	1000021e 	bne	r2,zero,92ddc <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   92dd4:	e0bffe17 	ldw	r2,-8(fp)
   92dd8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   92ddc:	e0bffe17 	ldw	r2,-8(fp)
   92de0:	10c00217 	ldw	r3,8(r2)
   92de4:	d0a70b17 	ldw	r2,-25556(gp)
   92de8:	10c01e36 	bltu	r2,r3,92e64 <alt_tick+0xe4>
   92dec:	e0bffe17 	ldw	r2,-8(fp)
   92df0:	10800403 	ldbu	r2,16(r2)
   92df4:	10803fcc 	andi	r2,r2,255
   92df8:	1004c03a 	cmpne	r2,r2,zero
   92dfc:	1000191e 	bne	r2,zero,92e64 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   92e00:	e0bffe17 	ldw	r2,-8(fp)
   92e04:	10c00317 	ldw	r3,12(r2)
   92e08:	e0bffe17 	ldw	r2,-8(fp)
   92e0c:	11000517 	ldw	r4,20(r2)
   92e10:	183ee83a 	callr	r3
   92e14:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   92e18:	e0bffd17 	ldw	r2,-12(fp)
   92e1c:	1004c03a 	cmpne	r2,r2,zero
   92e20:	1000031e 	bne	r2,zero,92e30 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   92e24:	e13ffe17 	ldw	r4,-8(fp)
   92e28:	0092ce80 	call	92ce8 <alt_alarm_stop>
   92e2c:	00000d06 	br	92e64 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   92e30:	e0bffe17 	ldw	r2,-8(fp)
   92e34:	10c00217 	ldw	r3,8(r2)
   92e38:	e0bffd17 	ldw	r2,-12(fp)
   92e3c:	1887883a 	add	r3,r3,r2
   92e40:	e0bffe17 	ldw	r2,-8(fp)
   92e44:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   92e48:	e0bffe17 	ldw	r2,-8(fp)
   92e4c:	10c00217 	ldw	r3,8(r2)
   92e50:	d0a70b17 	ldw	r2,-25556(gp)
   92e54:	1880032e 	bgeu	r3,r2,92e64 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   92e58:	e0fffe17 	ldw	r3,-8(fp)
   92e5c:	00800044 	movi	r2,1
   92e60:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   92e64:	e0bfff17 	ldw	r2,-4(fp)
   92e68:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   92e6c:	d0e01004 	addi	r3,gp,-32704
   92e70:	e0bffe17 	ldw	r2,-8(fp)
   92e74:	10ffcc1e 	bne	r2,r3,92da8 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   92e78:	e037883a 	mov	sp,fp
   92e7c:	dfc00117 	ldw	ra,4(sp)
   92e80:	df000017 	ldw	fp,0(sp)
   92e84:	dec00204 	addi	sp,sp,8
   92e88:	f800283a 	ret

00092e8c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   92e8c:	defffd04 	addi	sp,sp,-12
   92e90:	dfc00215 	stw	ra,8(sp)
   92e94:	df000115 	stw	fp,4(sp)
   92e98:	df000104 	addi	fp,sp,4
   92e9c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   92ea0:	e13fff17 	ldw	r4,-4(fp)
   92ea4:	0092edc0 	call	92edc <alt_busy_sleep>
}
   92ea8:	e037883a 	mov	sp,fp
   92eac:	dfc00117 	ldw	ra,4(sp)
   92eb0:	df000017 	ldw	fp,0(sp)
   92eb4:	dec00204 	addi	sp,sp,8
   92eb8:	f800283a 	ret

00092ebc <altera_nios2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_irq_init(void) 
{
   92ebc:	deffff04 	addi	sp,sp,-4
   92ec0:	df000015 	stw	fp,0(sp)
   92ec4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   92ec8:	000170fa 	wrctl	ienable,zero
}
   92ecc:	e037883a 	mov	sp,fp
   92ed0:	df000017 	ldw	fp,0(sp)
   92ed4:	dec00104 	addi	sp,sp,4
   92ed8:	f800283a 	ret

00092edc <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   92edc:	defffa04 	addi	sp,sp,-24
   92ee0:	dfc00515 	stw	ra,20(sp)
   92ee4:	df000415 	stw	fp,16(sp)
   92ee8:	df000404 	addi	fp,sp,16
   92eec:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
   92ef0:	00800244 	movi	r2,9
   92ef4:	e0bffc15 	stw	r2,-16(fp)
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   92ef8:	e13ffc17 	ldw	r4,-16(fp)
   92efc:	014003f4 	movhi	r5,15
   92f00:	29509004 	addi	r5,r5,16960
   92f04:	00806240 	call	80624 <__mulsi3>
   92f08:	100b883a 	mov	r5,r2
   92f0c:	0100bef4 	movhi	r4,763
   92f10:	213c2004 	addi	r4,r4,-3968
   92f14:	008f0dc0 	call	8f0dc <__udivsi3>
   92f18:	100b883a 	mov	r5,r2
   92f1c:	01200034 	movhi	r4,32768
   92f20:	213fffc4 	addi	r4,r4,-1
   92f24:	008f0dc0 	call	8f0dc <__udivsi3>
   92f28:	100b883a 	mov	r5,r2
   92f2c:	e13fff17 	ldw	r4,-4(fp)
   92f30:	008f0dc0 	call	8f0dc <__udivsi3>
   92f34:	e0bffd15 	stw	r2,-12(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   92f38:	e0bffd17 	ldw	r2,-12(fp)
   92f3c:	1005003a 	cmpeq	r2,r2,zero
   92f40:	10002a1e 	bne	r2,zero,92fec <alt_busy_sleep+0x110>
  {
    for(i=0;i<big_loops;i++)
   92f44:	e03ffe15 	stw	zero,-8(fp)
   92f48:	00001706 	br	92fa8 <alt_busy_sleep+0xcc>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   92f4c:	00a00034 	movhi	r2,32768
   92f50:	10bfffc4 	addi	r2,r2,-1
   92f54:	10bfffc4 	addi	r2,r2,-1
   92f58:	103ffe1e 	bne	r2,zero,92f54 <alt_busy_sleep+0x78>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   92f5c:	e13ffc17 	ldw	r4,-16(fp)
   92f60:	014003f4 	movhi	r5,15
   92f64:	29509004 	addi	r5,r5,16960
   92f68:	00806240 	call	80624 <__mulsi3>
   92f6c:	100b883a 	mov	r5,r2
   92f70:	0100bef4 	movhi	r4,763
   92f74:	213c2004 	addi	r4,r4,-3968
   92f78:	008f0dc0 	call	8f0dc <__udivsi3>
   92f7c:	100b883a 	mov	r5,r2
   92f80:	01200034 	movhi	r4,32768
   92f84:	213fffc4 	addi	r4,r4,-1
   92f88:	008f0dc0 	call	8f0dc <__udivsi3>
   92f8c:	1007883a 	mov	r3,r2
   92f90:	e0bfff17 	ldw	r2,-4(fp)
   92f94:	10c5c83a 	sub	r2,r2,r3
   92f98:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   92f9c:	e0bffe17 	ldw	r2,-8(fp)
   92fa0:	10800044 	addi	r2,r2,1
   92fa4:	e0bffe15 	stw	r2,-8(fp)
   92fa8:	e0fffe17 	ldw	r3,-8(fp)
   92fac:	e0bffd17 	ldw	r2,-12(fp)
   92fb0:	18bfe616 	blt	r3,r2,92f4c <alt_busy_sleep+0x70>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   92fb4:	e13ffc17 	ldw	r4,-16(fp)
   92fb8:	014003f4 	movhi	r5,15
   92fbc:	29509004 	addi	r5,r5,16960
   92fc0:	00806240 	call	80624 <__mulsi3>
   92fc4:	100b883a 	mov	r5,r2
   92fc8:	0100bef4 	movhi	r4,763
   92fcc:	213c2004 	addi	r4,r4,-3968
   92fd0:	008f0dc0 	call	8f0dc <__udivsi3>
   92fd4:	1009883a 	mov	r4,r2
   92fd8:	e17fff17 	ldw	r5,-4(fp)
   92fdc:	00806240 	call	80624 <__mulsi3>
   92fe0:	10bfffc4 	addi	r2,r2,-1
   92fe4:	103ffe1e 	bne	r2,zero,92fe0 <alt_busy_sleep+0x104>
   92fe8:	00000d06 	br	93020 <alt_busy_sleep+0x144>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   92fec:	e13ffc17 	ldw	r4,-16(fp)
   92ff0:	014003f4 	movhi	r5,15
   92ff4:	29509004 	addi	r5,r5,16960
   92ff8:	00806240 	call	80624 <__mulsi3>
   92ffc:	100b883a 	mov	r5,r2
   93000:	0100bef4 	movhi	r4,763
   93004:	213c2004 	addi	r4,r4,-3968
   93008:	008f0dc0 	call	8f0dc <__udivsi3>
   9300c:	1009883a 	mov	r4,r2
   93010:	e17fff17 	ldw	r5,-4(fp)
   93014:	00806240 	call	80624 <__mulsi3>
   93018:	10bfffc4 	addi	r2,r2,-1
   9301c:	00bffe16 	blt	zero,r2,93018 <alt_busy_sleep+0x13c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   93020:	0005883a 	mov	r2,zero
}
   93024:	e037883a 	mov	sp,fp
   93028:	dfc00117 	ldw	ra,4(sp)
   9302c:	df000017 	ldw	fp,0(sp)
   93030:	dec00204 	addi	sp,sp,8
   93034:	f800283a 	ret

00093038 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   93038:	defff904 	addi	sp,sp,-28
   9303c:	dfc00615 	stw	ra,24(sp)
   93040:	df000515 	stw	fp,20(sp)
   93044:	df000504 	addi	fp,sp,20
   93048:	e13ffd15 	stw	r4,-12(fp)
   9304c:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   93050:	e0bffe17 	ldw	r2,-8(fp)
   93054:	10800017 	ldw	r2,0(r2)
   93058:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   9305c:	e13ffd17 	ldw	r4,-12(fp)
   93060:	00808e40 	call	808e4 <strlen>
   93064:	10800044 	addi	r2,r2,1
   93068:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   9306c:	00000d06 	br	930a4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   93070:	e0bffc17 	ldw	r2,-16(fp)
   93074:	11000217 	ldw	r4,8(r2)
   93078:	e1bffb17 	ldw	r6,-20(fp)
   9307c:	e17ffd17 	ldw	r5,-12(fp)
   93080:	00933080 	call	93308 <memcmp>
   93084:	1004c03a 	cmpne	r2,r2,zero
   93088:	1000031e 	bne	r2,zero,93098 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   9308c:	e0bffc17 	ldw	r2,-16(fp)
   93090:	e0bfff15 	stw	r2,-4(fp)
   93094:	00000706 	br	930b4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   93098:	e0bffc17 	ldw	r2,-16(fp)
   9309c:	10800017 	ldw	r2,0(r2)
   930a0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   930a4:	e0fffe17 	ldw	r3,-8(fp)
   930a8:	e0bffc17 	ldw	r2,-16(fp)
   930ac:	10fff01e 	bne	r2,r3,93070 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   930b0:	e03fff15 	stw	zero,-4(fp)
   930b4:	e0bfff17 	ldw	r2,-4(fp)
}
   930b8:	e037883a 	mov	sp,fp
   930bc:	dfc00117 	ldw	ra,4(sp)
   930c0:	df000017 	ldw	fp,0(sp)
   930c4:	dec00204 	addi	sp,sp,8
   930c8:	f800283a 	ret

000930cc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   930cc:	defffa04 	addi	sp,sp,-24
   930d0:	dfc00515 	stw	ra,20(sp)
   930d4:	df000415 	stw	fp,16(sp)
   930d8:	df000404 	addi	fp,sp,16
   930dc:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   930e0:	00800274 	movhi	r2,9
   930e4:	10964004 	addi	r2,r2,22784
   930e8:	10800017 	ldw	r2,0(r2)
   930ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   930f0:	00003306 	br	931c0 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   930f4:	e0bffd17 	ldw	r2,-12(fp)
   930f8:	11000217 	ldw	r4,8(r2)
   930fc:	00808e40 	call	808e4 <strlen>
   93100:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   93104:	e0bffd17 	ldw	r2,-12(fp)
   93108:	10c00217 	ldw	r3,8(r2)
   9310c:	e0bffc17 	ldw	r2,-16(fp)
   93110:	1885883a 	add	r2,r3,r2
   93114:	10bfffc4 	addi	r2,r2,-1
   93118:	10800003 	ldbu	r2,0(r2)
   9311c:	10803fcc 	andi	r2,r2,255
   93120:	1080201c 	xori	r2,r2,128
   93124:	10bfe004 	addi	r2,r2,-128
   93128:	10800bd8 	cmpnei	r2,r2,47
   9312c:	1000031e 	bne	r2,zero,9313c <alt_find_file+0x70>
    {
      len -= 1;
   93130:	e0bffc17 	ldw	r2,-16(fp)
   93134:	10bfffc4 	addi	r2,r2,-1
   93138:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   9313c:	e0bffc17 	ldw	r2,-16(fp)
   93140:	1007883a 	mov	r3,r2
   93144:	e0bffe17 	ldw	r2,-8(fp)
   93148:	1885883a 	add	r2,r3,r2
   9314c:	10800003 	ldbu	r2,0(r2)
   93150:	10803fcc 	andi	r2,r2,255
   93154:	1080201c 	xori	r2,r2,128
   93158:	10bfe004 	addi	r2,r2,-128
   9315c:	10800be0 	cmpeqi	r2,r2,47
   93160:	10000a1e 	bne	r2,zero,9318c <alt_find_file+0xc0>
   93164:	e0bffc17 	ldw	r2,-16(fp)
   93168:	1007883a 	mov	r3,r2
   9316c:	e0bffe17 	ldw	r2,-8(fp)
   93170:	1885883a 	add	r2,r3,r2
   93174:	10800003 	ldbu	r2,0(r2)
   93178:	10803fcc 	andi	r2,r2,255
   9317c:	1080201c 	xori	r2,r2,128
   93180:	10bfe004 	addi	r2,r2,-128
   93184:	1004c03a 	cmpne	r2,r2,zero
   93188:	10000a1e 	bne	r2,zero,931b4 <alt_find_file+0xe8>
   9318c:	e0bffd17 	ldw	r2,-12(fp)
   93190:	11000217 	ldw	r4,8(r2)
   93194:	e1bffc17 	ldw	r6,-16(fp)
   93198:	e17ffe17 	ldw	r5,-8(fp)
   9319c:	00933080 	call	93308 <memcmp>
   931a0:	1004c03a 	cmpne	r2,r2,zero
   931a4:	1000031e 	bne	r2,zero,931b4 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   931a8:	e0bffd17 	ldw	r2,-12(fp)
   931ac:	e0bfff15 	stw	r2,-4(fp)
   931b0:	00000806 	br	931d4 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   931b4:	e0bffd17 	ldw	r2,-12(fp)
   931b8:	10800017 	ldw	r2,0(r2)
   931bc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   931c0:	00c00274 	movhi	r3,9
   931c4:	18d64004 	addi	r3,r3,22784
   931c8:	e0bffd17 	ldw	r2,-12(fp)
   931cc:	10ffc91e 	bne	r2,r3,930f4 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   931d0:	e03fff15 	stw	zero,-4(fp)
   931d4:	e0bfff17 	ldw	r2,-4(fp)
}
   931d8:	e037883a 	mov	sp,fp
   931dc:	dfc00117 	ldw	ra,4(sp)
   931e0:	df000017 	ldw	fp,0(sp)
   931e4:	dec00204 	addi	sp,sp,8
   931e8:	f800283a 	ret

000931ec <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   931ec:	defffa04 	addi	sp,sp,-24
   931f0:	dfc00515 	stw	ra,20(sp)
   931f4:	df000415 	stw	fp,16(sp)
   931f8:	dc000315 	stw	r16,12(sp)
   931fc:	df000304 	addi	fp,sp,12
   93200:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   93204:	00bffa04 	movi	r2,-24
   93208:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   9320c:	e03ffe15 	stw	zero,-8(fp)
   93210:	00002006 	br	93294 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
   93214:	e13ffe17 	ldw	r4,-8(fp)
   93218:	04000274 	movhi	r16,9
   9321c:	84117904 	addi	r16,r16,17892
   93220:	01400304 	movi	r5,12
   93224:	00806240 	call	80624 <__mulsi3>
   93228:	1405883a 	add	r2,r2,r16
   9322c:	10800017 	ldw	r2,0(r2)
   93230:	1004c03a 	cmpne	r2,r2,zero
   93234:	1000141e 	bne	r2,zero,93288 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
   93238:	e13ffe17 	ldw	r4,-8(fp)
   9323c:	04000274 	movhi	r16,9
   93240:	84117904 	addi	r16,r16,17892
   93244:	01400304 	movi	r5,12
   93248:	00806240 	call	80624 <__mulsi3>
   9324c:	1407883a 	add	r3,r2,r16
   93250:	e0bfff17 	ldw	r2,-4(fp)
   93254:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   93258:	00800274 	movhi	r2,9
   9325c:	10964404 	addi	r2,r2,22800
   93260:	10c00017 	ldw	r3,0(r2)
   93264:	e0bffe17 	ldw	r2,-8(fp)
   93268:	1880040e 	bge	r3,r2,9327c <alt_get_fd+0x90>
      {
        alt_max_fd = i;
   9326c:	00c00274 	movhi	r3,9
   93270:	18d64404 	addi	r3,r3,22800
   93274:	e0bffe17 	ldw	r2,-8(fp)
   93278:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   9327c:	e0bffe17 	ldw	r2,-8(fp)
   93280:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   93284:	00000606 	br	932a0 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   93288:	e0bffe17 	ldw	r2,-8(fp)
   9328c:	10800044 	addi	r2,r2,1
   93290:	e0bffe15 	stw	r2,-8(fp)
   93294:	e0bffe17 	ldw	r2,-8(fp)
   93298:	10800810 	cmplti	r2,r2,32
   9329c:	103fdd1e 	bne	r2,zero,93214 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   932a0:	e0bffd17 	ldw	r2,-12(fp)
}
   932a4:	e037883a 	mov	sp,fp
   932a8:	dfc00217 	ldw	ra,8(sp)
   932ac:	df000117 	ldw	fp,4(sp)
   932b0:	dc000017 	ldw	r16,0(sp)
   932b4:	dec00304 	addi	sp,sp,12
   932b8:	f800283a 	ret

000932bc <atexit>:
   932bc:	200b883a 	mov	r5,r4
   932c0:	000d883a 	mov	r6,zero
   932c4:	0009883a 	mov	r4,zero
   932c8:	000f883a 	mov	r7,zero
   932cc:	009337c1 	jmpi	9337c <__register_exitproc>

000932d0 <exit>:
   932d0:	defffe04 	addi	sp,sp,-8
   932d4:	000b883a 	mov	r5,zero
   932d8:	dc000015 	stw	r16,0(sp)
   932dc:	dfc00115 	stw	ra,4(sp)
   932e0:	2021883a 	mov	r16,r4
   932e4:	00934b40 	call	934b4 <__call_exitprocs>
   932e8:	00800274 	movhi	r2,9
   932ec:	10963b04 	addi	r2,r2,22764
   932f0:	11000017 	ldw	r4,0(r2)
   932f4:	20800f17 	ldw	r2,60(r4)
   932f8:	10000126 	beq	r2,zero,93300 <exit+0x30>
   932fc:	103ee83a 	callr	r2
   93300:	8009883a 	mov	r4,r16
   93304:	00936a40 	call	936a4 <_exit>

00093308 <memcmp>:
   93308:	00c000c4 	movi	r3,3
   9330c:	1980032e 	bgeu	r3,r6,9331c <memcmp+0x14>
   93310:	2144b03a 	or	r2,r4,r5
   93314:	10c4703a 	and	r2,r2,r3
   93318:	10000f26 	beq	r2,zero,93358 <memcmp+0x50>
   9331c:	31ffffc4 	addi	r7,r6,-1
   93320:	3000061e 	bne	r6,zero,9333c <memcmp+0x34>
   93324:	00000a06 	br	93350 <memcmp+0x48>
   93328:	39ffffc4 	addi	r7,r7,-1
   9332c:	00bfffc4 	movi	r2,-1
   93330:	21000044 	addi	r4,r4,1
   93334:	29400044 	addi	r5,r5,1
   93338:	38800526 	beq	r7,r2,93350 <memcmp+0x48>
   9333c:	20c00003 	ldbu	r3,0(r4)
   93340:	28800003 	ldbu	r2,0(r5)
   93344:	18bff826 	beq	r3,r2,93328 <memcmp+0x20>
   93348:	1885c83a 	sub	r2,r3,r2
   9334c:	f800283a 	ret
   93350:	0005883a 	mov	r2,zero
   93354:	f800283a 	ret
   93358:	180f883a 	mov	r7,r3
   9335c:	20c00017 	ldw	r3,0(r4)
   93360:	28800017 	ldw	r2,0(r5)
   93364:	18bfed1e 	bne	r3,r2,9331c <memcmp+0x14>
   93368:	31bfff04 	addi	r6,r6,-4
   9336c:	21000104 	addi	r4,r4,4
   93370:	29400104 	addi	r5,r5,4
   93374:	39bff936 	bltu	r7,r6,9335c <memcmp+0x54>
   93378:	003fe806 	br	9331c <memcmp+0x14>

0009337c <__register_exitproc>:
   9337c:	defffa04 	addi	sp,sp,-24
   93380:	00800274 	movhi	r2,9
   93384:	10963b04 	addi	r2,r2,22764
   93388:	dc000015 	stw	r16,0(sp)
   9338c:	14000017 	ldw	r16,0(r2)
   93390:	dd000415 	stw	r20,16(sp)
   93394:	2829883a 	mov	r20,r5
   93398:	81405217 	ldw	r5,328(r16)
   9339c:	dcc00315 	stw	r19,12(sp)
   933a0:	dc800215 	stw	r18,8(sp)
   933a4:	dc400115 	stw	r17,4(sp)
   933a8:	dfc00515 	stw	ra,20(sp)
   933ac:	2023883a 	mov	r17,r4
   933b0:	3027883a 	mov	r19,r6
   933b4:	3825883a 	mov	r18,r7
   933b8:	28002526 	beq	r5,zero,93450 <__register_exitproc+0xd4>
   933bc:	29000117 	ldw	r4,4(r5)
   933c0:	008007c4 	movi	r2,31
   933c4:	11002716 	blt	r2,r4,93464 <__register_exitproc+0xe8>
   933c8:	8800101e 	bne	r17,zero,9340c <__register_exitproc+0x90>
   933cc:	2105883a 	add	r2,r4,r4
   933d0:	1085883a 	add	r2,r2,r2
   933d4:	20c00044 	addi	r3,r4,1
   933d8:	1145883a 	add	r2,r2,r5
   933dc:	0009883a 	mov	r4,zero
   933e0:	15000215 	stw	r20,8(r2)
   933e4:	28c00115 	stw	r3,4(r5)
   933e8:	2005883a 	mov	r2,r4
   933ec:	dfc00517 	ldw	ra,20(sp)
   933f0:	dd000417 	ldw	r20,16(sp)
   933f4:	dcc00317 	ldw	r19,12(sp)
   933f8:	dc800217 	ldw	r18,8(sp)
   933fc:	dc400117 	ldw	r17,4(sp)
   93400:	dc000017 	ldw	r16,0(sp)
   93404:	dec00604 	addi	sp,sp,24
   93408:	f800283a 	ret
   9340c:	29802204 	addi	r6,r5,136
   93410:	00800044 	movi	r2,1
   93414:	110e983a 	sll	r7,r2,r4
   93418:	30c04017 	ldw	r3,256(r6)
   9341c:	2105883a 	add	r2,r4,r4
   93420:	1085883a 	add	r2,r2,r2
   93424:	1185883a 	add	r2,r2,r6
   93428:	19c6b03a 	or	r3,r3,r7
   9342c:	14802015 	stw	r18,128(r2)
   93430:	14c00015 	stw	r19,0(r2)
   93434:	00800084 	movi	r2,2
   93438:	30c04015 	stw	r3,256(r6)
   9343c:	88bfe31e 	bne	r17,r2,933cc <__register_exitproc+0x50>
   93440:	30804117 	ldw	r2,260(r6)
   93444:	11c4b03a 	or	r2,r2,r7
   93448:	30804115 	stw	r2,260(r6)
   9344c:	003fdf06 	br	933cc <__register_exitproc+0x50>
   93450:	00800274 	movhi	r2,9
   93454:	109dcf04 	addi	r2,r2,30524
   93458:	100b883a 	mov	r5,r2
   9345c:	80805215 	stw	r2,328(r16)
   93460:	003fd606 	br	933bc <__register_exitproc+0x40>
   93464:	00800034 	movhi	r2,0
   93468:	10800004 	addi	r2,r2,0
   9346c:	1000021e 	bne	r2,zero,93478 <__register_exitproc+0xfc>
   93470:	013fffc4 	movi	r4,-1
   93474:	003fdc06 	br	933e8 <__register_exitproc+0x6c>
   93478:	01006404 	movi	r4,400
   9347c:	103ee83a 	callr	r2
   93480:	1007883a 	mov	r3,r2
   93484:	103ffa26 	beq	r2,zero,93470 <__register_exitproc+0xf4>
   93488:	80805217 	ldw	r2,328(r16)
   9348c:	180b883a 	mov	r5,r3
   93490:	18000115 	stw	zero,4(r3)
   93494:	18800015 	stw	r2,0(r3)
   93498:	80c05215 	stw	r3,328(r16)
   9349c:	18006215 	stw	zero,392(r3)
   934a0:	18006315 	stw	zero,396(r3)
   934a4:	0009883a 	mov	r4,zero
   934a8:	883fc826 	beq	r17,zero,933cc <__register_exitproc+0x50>
   934ac:	003fd706 	br	9340c <__register_exitproc+0x90>

000934b0 <register_fini>:
   934b0:	f800283a 	ret

000934b4 <__call_exitprocs>:
   934b4:	00800274 	movhi	r2,9
   934b8:	10963b04 	addi	r2,r2,22764
   934bc:	10800017 	ldw	r2,0(r2)
   934c0:	defff304 	addi	sp,sp,-52
   934c4:	df000b15 	stw	fp,44(sp)
   934c8:	d8800115 	stw	r2,4(sp)
   934cc:	00800034 	movhi	r2,0
   934d0:	10800004 	addi	r2,r2,0
   934d4:	1005003a 	cmpeq	r2,r2,zero
   934d8:	d8800215 	stw	r2,8(sp)
   934dc:	d8800117 	ldw	r2,4(sp)
   934e0:	dd400815 	stw	r21,32(sp)
   934e4:	dd000715 	stw	r20,28(sp)
   934e8:	10805204 	addi	r2,r2,328
   934ec:	dfc00c15 	stw	ra,48(sp)
   934f0:	ddc00a15 	stw	r23,40(sp)
   934f4:	dd800915 	stw	r22,36(sp)
   934f8:	dcc00615 	stw	r19,24(sp)
   934fc:	dc800515 	stw	r18,20(sp)
   93500:	dc400415 	stw	r17,16(sp)
   93504:	dc000315 	stw	r16,12(sp)
   93508:	282b883a 	mov	r21,r5
   9350c:	2039883a 	mov	fp,r4
   93510:	d8800015 	stw	r2,0(sp)
   93514:	2829003a 	cmpeq	r20,r5,zero
   93518:	d8800117 	ldw	r2,4(sp)
   9351c:	14405217 	ldw	r17,328(r2)
   93520:	88001026 	beq	r17,zero,93564 <__call_exitprocs+0xb0>
   93524:	ddc00017 	ldw	r23,0(sp)
   93528:	88800117 	ldw	r2,4(r17)
   9352c:	8c802204 	addi	r18,r17,136
   93530:	143fffc4 	addi	r16,r2,-1
   93534:	80000916 	blt	r16,zero,9355c <__call_exitprocs+0xa8>
   93538:	05bfffc4 	movi	r22,-1
   9353c:	a000151e 	bne	r20,zero,93594 <__call_exitprocs+0xe0>
   93540:	8409883a 	add	r4,r16,r16
   93544:	2105883a 	add	r2,r4,r4
   93548:	1485883a 	add	r2,r2,r18
   9354c:	10c02017 	ldw	r3,128(r2)
   93550:	a8c01126 	beq	r21,r3,93598 <__call_exitprocs+0xe4>
   93554:	843fffc4 	addi	r16,r16,-1
   93558:	85bff81e 	bne	r16,r22,9353c <__call_exitprocs+0x88>
   9355c:	d8800217 	ldw	r2,8(sp)
   93560:	10003126 	beq	r2,zero,93628 <__call_exitprocs+0x174>
   93564:	dfc00c17 	ldw	ra,48(sp)
   93568:	df000b17 	ldw	fp,44(sp)
   9356c:	ddc00a17 	ldw	r23,40(sp)
   93570:	dd800917 	ldw	r22,36(sp)
   93574:	dd400817 	ldw	r21,32(sp)
   93578:	dd000717 	ldw	r20,28(sp)
   9357c:	dcc00617 	ldw	r19,24(sp)
   93580:	dc800517 	ldw	r18,20(sp)
   93584:	dc400417 	ldw	r17,16(sp)
   93588:	dc000317 	ldw	r16,12(sp)
   9358c:	dec00d04 	addi	sp,sp,52
   93590:	f800283a 	ret
   93594:	8409883a 	add	r4,r16,r16
   93598:	88c00117 	ldw	r3,4(r17)
   9359c:	2105883a 	add	r2,r4,r4
   935a0:	1445883a 	add	r2,r2,r17
   935a4:	18ffffc4 	addi	r3,r3,-1
   935a8:	11800217 	ldw	r6,8(r2)
   935ac:	1c001526 	beq	r3,r16,93604 <__call_exitprocs+0x150>
   935b0:	10000215 	stw	zero,8(r2)
   935b4:	303fe726 	beq	r6,zero,93554 <__call_exitprocs+0xa0>
   935b8:	00c00044 	movi	r3,1
   935bc:	1c06983a 	sll	r3,r3,r16
   935c0:	90804017 	ldw	r2,256(r18)
   935c4:	8cc00117 	ldw	r19,4(r17)
   935c8:	1884703a 	and	r2,r3,r2
   935cc:	10001426 	beq	r2,zero,93620 <__call_exitprocs+0x16c>
   935d0:	90804117 	ldw	r2,260(r18)
   935d4:	1884703a 	and	r2,r3,r2
   935d8:	10000c1e 	bne	r2,zero,9360c <__call_exitprocs+0x158>
   935dc:	2105883a 	add	r2,r4,r4
   935e0:	1485883a 	add	r2,r2,r18
   935e4:	11400017 	ldw	r5,0(r2)
   935e8:	e009883a 	mov	r4,fp
   935ec:	303ee83a 	callr	r6
   935f0:	88800117 	ldw	r2,4(r17)
   935f4:	98bfc81e 	bne	r19,r2,93518 <__call_exitprocs+0x64>
   935f8:	b8800017 	ldw	r2,0(r23)
   935fc:	147fd526 	beq	r2,r17,93554 <__call_exitprocs+0xa0>
   93600:	003fc506 	br	93518 <__call_exitprocs+0x64>
   93604:	8c000115 	stw	r16,4(r17)
   93608:	003fea06 	br	935b4 <__call_exitprocs+0x100>
   9360c:	2105883a 	add	r2,r4,r4
   93610:	1485883a 	add	r2,r2,r18
   93614:	11000017 	ldw	r4,0(r2)
   93618:	303ee83a 	callr	r6
   9361c:	003ff406 	br	935f0 <__call_exitprocs+0x13c>
   93620:	303ee83a 	callr	r6
   93624:	003ff206 	br	935f0 <__call_exitprocs+0x13c>
   93628:	88800117 	ldw	r2,4(r17)
   9362c:	1000081e 	bne	r2,zero,93650 <__call_exitprocs+0x19c>
   93630:	89000017 	ldw	r4,0(r17)
   93634:	20000726 	beq	r4,zero,93654 <__call_exitprocs+0x1a0>
   93638:	b9000015 	stw	r4,0(r23)
   9363c:	8809883a 	mov	r4,r17
   93640:	00000000 	call	0 <__alt_mem_sram_0-0x80000>
   93644:	bc400017 	ldw	r17,0(r23)
   93648:	883fb71e 	bne	r17,zero,93528 <__call_exitprocs+0x74>
   9364c:	003fc506 	br	93564 <__call_exitprocs+0xb0>
   93650:	89000017 	ldw	r4,0(r17)
   93654:	882f883a 	mov	r23,r17
   93658:	2023883a 	mov	r17,r4
   9365c:	883fb21e 	bne	r17,zero,93528 <__call_exitprocs+0x74>
   93660:	003fc006 	br	93564 <__call_exitprocs+0xb0>

00093664 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   93664:	defffd04 	addi	sp,sp,-12
   93668:	df000215 	stw	fp,8(sp)
   9366c:	df000204 	addi	fp,sp,8
   93670:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   93674:	e0bfff17 	ldw	r2,-4(fp)
   93678:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   9367c:	e0bffe17 	ldw	r2,-8(fp)
   93680:	1005003a 	cmpeq	r2,r2,zero
   93684:	1000021e 	bne	r2,zero,93690 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   93688:	002af070 	cmpltui	zero,zero,43969
   9368c:	00000106 	br	93694 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   93690:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   93694:	e037883a 	mov	sp,fp
   93698:	df000017 	ldw	fp,0(sp)
   9369c:	dec00104 	addi	sp,sp,4
   936a0:	f800283a 	ret

000936a4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   936a4:	defffd04 	addi	sp,sp,-12
   936a8:	dfc00215 	stw	ra,8(sp)
   936ac:	df000115 	stw	fp,4(sp)
   936b0:	df000104 	addi	fp,sp,4
   936b4:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   936b8:	e13fff17 	ldw	r4,-4(fp)
   936bc:	00936640 	call	93664 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   936c0:	003fff06 	br	936c0 <_exit+0x1c>
   936c4:	000934b0 	cmpltui	zero,zero,9426
