
Ello_World.elf:     file format elf32-littlenios2
Ello_World.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000801b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x00013e9c memsz 0x00013e9c flags r-x
    LOAD off    0x00014ebc vaddr 0x00093ebc paddr 0x00095a68 align 2**12
         filesz 0x00001bac memsz 0x00001bac flags rw-
    LOAD off    0x00017614 vaddr 0x00097614 paddr 0x00097614 align 2**12
         filesz 0x00000000 memsz 0x000003f4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013630  000801b4  000801b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006d8  000937e4  000937e4  000147e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bac  00093ebc  00095a68  00014ebc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003f4  00097614  00097614  00017614  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00016a68  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001158  00000000  00000000  00016a90  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000019b7  00000000  00000000  00017be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00034764  00000000  00000000  0001959f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000b2c7  00000000  00000000  0004dd03  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001c2c9  00000000  00000000  00058fca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002210  00000000  00000000  00075294  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002dda  00000000  00000000  000774a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001243d  00000000  00000000  0007a27e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000040  00000000  00000000  0008c6bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba0  00000000  00000000  0008c700  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00090dd8  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  00090ddb  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  00090de0  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  00090de1  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  00090de5  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  00090de9  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000b  00000000  00000000  00090ded  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000b  00000000  00000000  00090df8  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000b  00000000  00000000  00090e03  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 0000000a  00000000  00000000  00090e0e  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 0000002c  00000000  00000000  00090e18  2**0
                  CONTENTS, READONLY
 28 .jdi          0000423d  00000000  00000000  00090e44  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00046c0f  00000000  00000000  00095081  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
000801b4 l    d  .text	00000000 .text
000937e4 l    d  .rodata	00000000 .rodata
00093ebc l    d  .rwdata	00000000 .rwdata
00097614 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000801ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00080784 l     F .text	00000058 std
00080890 l     F .text	00000008 __fp_lock
00080898 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
00093ebc l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
0008243c l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 vfprintf.c
00082a34 l     F .text	00000058 __sprint_r
000938e2 l     O .rodata	00000010 blanks.3452
000938d2 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
000938fa l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00093a1d l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
00086320 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
00095a38 l     O .rwdata	00000004 charset
00093bc0 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00093d08 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strtod.c
0008a0e0 l     F .text	00000048 match
000946e4 l     O .rwdata	00000014 fpi.1950
00093d24 l     O .rodata	00000028 tinytens
000946d0 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0008c3fc l     F .text	00000024 htinit
0008c488 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0008cd34 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0008dfc4 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0008f1ec l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0008fd00 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0008fd60 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0008fe64 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0008ff88 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00090068 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
000901c8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
000902d4 l     F .text	000000f8 alt_file_locked
00090558 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_read.c
000906dc l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00095a54 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00090994 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000948a0 l     O .rwdata	00001060 jtag_uart_0
00095900 l     O .rwdata	00000120 lcd_0
00090ac4 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00090d04 l     F .text	00000228 altera_avalon_jtag_uart_irq
00090f2c l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207.c
00095a58 l     O .rwdata	00000004 colstart
000915a8 l     F .text	000000b8 lcd_write_command
00091660 l     F .text	000000d4 lcd_write_data
00091734 l     F .text	000000d8 lcd_clear_screen
0009180c l     F .text	00000214 lcd_repaint_screen
00091a20 l     F .text	000000e0 lcd_scroll_up
00091b00 l     F .text	000002e4 lcd_handle_escape
00092320 l     F .text	000000cc alt_lcd_16207_timeout
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00092580 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000928a4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00092f38 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 altera_nios2_irq.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
000935cc l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
00093780 l     F .text	00000040 alt_sim_halt
00088be8 g     F .text	00000094 _mprec_log10
00088cd4 g     F .text	00000088 __any_on
000882a0 g     F .text	00000070 _isatty_r
00093ce0 g     O .rodata	00000028 __mprec_tinytens
00090228 g     F .text	0000006c alt_main
000821c4 g     F .text	000000a0 _puts_r
00097778 g     O .bss	00000100 alt_irq
00088400 g     F .text	00000078 _lseek_r
00095a68 g       *ABS*	00000000 __flash_rwdata_start
00087b18 g     F .text	000000a0 __sflags
0008eae4 g     F .text	00000088 __eqdf2
00097a08 g       *ABS*	00000000 __alt_heap_start
0008214c g     F .text	00000044 printf
0008254c g     F .text	00000068 __sseek
000807ec g     F .text	000000a4 __sinit
00088360 g     F .text	00000084 _setlocale_r
000808ec g     F .text	0000009c __sfmoreglue
0008c318 g     F .text	0000001c ungetc
000902b4 g     F .text	00000020 __malloc_unlock
0008a128 g     F .text	000015cc _strtod_r
00097640 g     O .bss	00000004 altera_avalon_timer_ts_freq
000886fc g     F .text	000000e0 memmove
000808dc g     F .text	00000010 _cleanup
00088d5c g     F .text	000000bc _Balloc
0008ebf4 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00080000 g     F .entry	0000000c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
00081488 g     F .text	00000074 _fstat_r
00097614 g     O .bss	00000004 errno
00085ffc g     F .text	00000024 __svfscanf
0008f560 g     F .text	0000002c __make_fp
00097634 g     O .bss	00000004 alt_argv
0009da20 g       *ABS*	00000000 _gp
0009322c g     F .text	00000030 usleep
00094720 g     O .rwdata	00000180 alt_fd_list
000929cc g     F .text	00000094 alt_find_dev
0008865c g     F .text	000000a0 memcpy
0008cd80 g     F .text	00000248 __hexnan
000808d0 g     F .text	0000000c _cleanup_r
0008ee14 g     F .text	000000f8 __floatsidf
00093010 g     F .text	00000078 alt_io_redirect
0008ed04 g     F .text	00000088 __ltdf2
000937e4 g       *ABS*	00000000 __DTOR_END__
00082264 g     F .text	00000014 puts
000884f8 g     F .text	00000040 mbrtowc
0009325c g     F .text	00000020 altera_nios2_irq_init
00086020 g     F .text	00000068 _vfscanf_r
00088b38 g     F .text	000000b0 __ratio
00091144 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00082190 g     F .text	00000034 _printf_r
0008f328 g     F .text	00000008 __udivsi3
0008fec4 g     F .text	000000c4 isatty
00088310 g     F .text	0000002c iswspace
00093bf0 g     O .rodata	000000c8 __mprec_tens
0008833c g     F .text	00000008 __locale_charset
0008d0ec g     F .text	000000a4 __fixunsdfsi
00097618 g     O .bss	00000004 __malloc_top_pad
0008bd8c g     F .text	00000024 strtoul
00095a34 g     O .rwdata	00000004 __mb_cur_max
00088344 g     F .text	0000000c _localeconv_r
0008bdb0 g     F .text	000002f0 _strtoull_r
000894c0 g     F .text	0000003c __i2b
00087e04 g     F .text	0000049c __sfvwrite_r
00082458 g     F .text	00000070 _sbrk_r
00089868 g     F .text	00000078 _read_r
000946c4 g     O .rwdata	0000000c __lc_ctype
00095a4c g     O .rwdata	00000004 alt_max_fd
0008f8a0 g     F .text	00000138 __unpack_d
00080430 g     F .text	00000110 _fclose_r
00080750 g     F .text	00000034 fflush
0009761c g     O .bss	00000004 __malloc_max_sbrked_mem
0008e454 g     F .text	00000074 __adddf3
0008de5c g     F .text	00000078 __nesf2
00088a18 g     F .text	00000120 __b2d
0008d7fc g     F .text	00000660 __umoddi3
000900d4 g     F .text	000000f4 lseek
00095a24 g     O .rwdata	00000004 _global_impure_ptr
000898e0 g     F .text	000005f4 _realloc_r
00097a08 g       *ABS*	00000000 __bss_end
00092e40 g     F .text	000000f8 alt_iic_isr_register
00093120 g     F .text	0000010c alt_tick
00097678 g     O .bss	00000100 __hexdig
0008d190 g     F .text	0000066c __udivdi3
00093cb8 g     O .rodata	00000028 __mprec_bigtens
00089748 g     F .text	00000120 __s2b
0008f058 g     F .text	00000194 __floatunsidf
00088938 g     F .text	00000060 __mcmp
00095a30 g     O .rwdata	00000004 __ctype_ptr
000808b8 g     F .text	00000018 __fp_lock_all
00092df8 g     F .text	00000048 alt_ic_irq_enabled
00093088 g     F .text	00000098 alt_alarm_stop
00082a10 g     F .text	00000024 strtol
00097644 g     O .bss	00000004 alt_irq_active
000800ec g     F .exceptions	000000c8 alt_irq_handler
000946f8 g     O .rwdata	00000028 alt_dev_null
0008f3f0 g     F .text	000000c8 __unpack_f
000927d4 g     F .text	0000001c alt_dcache_flush_all
00088804 g     F .text	00000070 __hi0bits
0008ef0c g     F .text	000000d8 __fixdfsi
0008b818 g     F .text	0000001c strtod
00095a68 g       *ABS*	00000000 __ram_rwdata_end
00095a44 g     O .rwdata	00000008 alt_dev_list
00090870 g     F .text	00000124 write
0008ded4 g     F .text	00000078 __gtsf2
00093ebc g       *ABS*	00000000 __ram_rodata_end
0008fd8c g     F .text	000000d8 fstat
00080b88 g     F .text	0000002c fprintf
0008ed8c g     F .text	00000088 __ledf2
00089628 g     F .text	00000120 __pow5mult
00097624 g     O .bss	00000004 __nlocale_changed
0008f330 g     F .text	00000008 __umodsi3
000824c8 g     F .text	00000034 _scanf_r
00097a08 g       *ABS*	00000000 end
0008faa0 g     F .text	00000160 __pack_f
00091de4 g     F .text	0000053c altera_avalon_lcd_16207_write
00080418 g     F .text	0000000c _atoi_r
00081464 g     F .text	00000024 fseek
00090c44 g     F .text	000000c0 altera_avalon_jtag_uart_init
000937e0 g       *ABS*	00000000 __CTOR_LIST__
00100000 g       *ABS*	00000000 __alt_stack_pointer
000925f0 g     F .text	00000090 alt_avalon_timer_sc_init
0008f370 g     F .text	00000080 __clzsi2
00091368 g     F .text	00000240 altera_avalon_jtag_uart_write
000807dc g     F .text	00000004 __sfp_lock_acquire
00088578 g     F .text	000000e4 memchr
00082a8c g     F .text	00001ec4 ___vfprintf_internal_r
0008a080 g     F .text	00000060 _sprintf_r
00080d14 g     F .text	00000314 _free_r
000935d0 g     F .text	000001b0 __call_exitprocs
00097628 g     O .bss	00000004 __mlocale_changed
00095a2c g     O .rwdata	00000004 __malloc_sbrk_base
000801b4 g     F .text	0000003c _start
00097648 g     O .bss	00000004 _alt_tick_rate
0008b834 g     F .text	00000318 _strtoll_r
00089120 g     F .text	0000014c __lshift
0009764c g     O .bss	00000004 _alt_nticks
000905b8 g     F .text	00000124 read
00090a28 g     F .text	0000009c alt_sys_init
000820d4 g     F .text	00000078 _open_r
00093498 g     F .text	00000134 __register_exitproc
0008926c g     F .text	00000254 __multiply
00090fdc g     F .text	00000074 altera_avalon_jtag_uart_close
0008f338 g     F .text	00000038 __mulsi3
00093ebc g       *ABS*	00000000 __ram_rwdata_start
000937e4 g       *ABS*	00000000 __ram_rodata_start
00097650 g     O .bss	00000028 __malloc_current_mallinfo
00088e18 g     F .text	0000017c __d2b
00090afc g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0008bb4c g     F .text	00000240 _strtoul_r
00092b80 g     F .text	000000d0 alt_get_fd
0009327c g     F .text	0000015c alt_busy_sleep
0008f9d8 g     F .text	000000c8 __fpcmp_parts_d
000862b0 g     F .text	00000070 _close_r
00093424 g     F .text	00000074 memcmp
00090bac g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00097a08 g       *ABS*	00000000 __alt_stack_base
00090bf4 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
0008167c g     F .text	000000ac _fwrite_r
00086174 g     F .text	0000013c __swsetup_r
0008e88c g     F .text	00000258 __divdf3
00080988 g     F .text	000000f0 __sfp
00088c7c g     F .text	00000058 __copybits
000942bc g     O .rwdata	00000408 __malloc_av_
000807e8 g     F .text	00000004 __sinit_lock_release
0008e4c8 g     F .text	000003c4 __muldf3
00082630 g     F .text	00000060 __sread
00087dc4 g     F .text	00000040 fread
00092a60 g     F .text	00000120 alt_find_file
000927f0 g     F .text	000000b4 alt_dev_llist_insert
00090294 g     F .text	00000020 __malloc_lock
00080bb4 g     F .text	00000034 _fprintf_r
000907b4 g     F .text	000000bc sbrk
00080554 g     F .text	000001fc _fflush_r
0008c334 g     F .text	000000c8 _calloc_r
00080b6c g     F .text	0000001c fopen
00097614 g       *ABS*	00000000 __bss_start
0008203c g     F .text	00000098 memset
000801f0 g     F .text	00000228 main
00097638 g     O .bss	00000004 alt_envp
00097620 g     O .bss	00000004 __malloc_max_total_mem
00090b54 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0008df4c g     F .text	00000078 __ltsf2
00087bb8 g     F .text	0000020c _fread_r
000923ec g     F .text	0000013c altera_avalon_lcd_16207_init
00082544 g     F .text	00000008 __sclose
00100000 g       *ABS*	00000000 __alt_heap_limit
00080540 g     F .text	00000014 fclose
0008efe4 g     F .text	00000074 __truncdfsf2
000827c0 g     F .text	00000250 _strtol_r
00097878 g     O .bss	00000190 _atexit0
00086564 g     F .text	000015b4 _dtoa_r
000818fc g     F .text	00000740 _malloc_r
00095a50 g     O .rwdata	00000004 alt_errno
0008c0a0 g     F .text	000000dc __submore
000815c4 g     F .text	000000b8 _fwalk
00088538 g     F .text	00000040 _mbtowc_r
0008f268 g     F .text	00000060 __divsi3
00093d68 g     O .rodata	00000014 __thenan_df
00080be8 g     F .text	0000012c _malloc_trim_r
000937e4 g       *ABS*	00000000 __CTOR_END__
00082690 g     F .text	000000bc strcmp
000937e4 g       *ABS*	00000000 __flash_rodata_start
000937e4 g       *ABS*	00000000 __DTOR_LIST__
0008eb6c g     F .text	00000088 __nedf2
00080000 g       *ABS*	00000000 __alt_mem_sram_0
000909f4 g     F .text	00000034 alt_irq_init
0009073c g     F .text	00000078 alt_release_fd
0008a00c g     F .text	00000074 sprintf
00093d7c g     O .rodata	00000100 __clz_tab
0009762c g     O .bss	00000004 _PathLocale
0008b6f4 g     F .text	00000124 strtof
000933d8 g     F .text	00000014 atexit
000860fc g     F .text	00000078 _write_r
000883e4 g     F .text	0000001c setlocale
000824fc g     F .text	00000048 scanf
0008a004 g     F .text	00000008 nanf
00095a20 g     O .rwdata	00000004 _impure_ptr
00097630 g     O .bss	00000004 alt_argc
00088478 g     F .text	00000080 _mbrtowc_r
0009763c g     O .bss	00000004 altera_avalon_timer_ts_base
00092968 g     F .text	00000064 _do_dtors
00081028 g     F .text	0000043c _fseek_r
00082278 g     F .text	000001c4 __srefill_r
00080020 g       .exceptions	00000000 alt_irq_entry
00088998 g     F .text	00000080 __ulp
00089ed4 g     F .text	00000040 __isinfd
000808a0 g     F .text	00000018 __fp_unlock_all
00092528 g     F .text	00000058 altera_avalon_lcd_16207_write_fd
00095a3c g     O .rwdata	00000008 alt_fs_list
00080020 g       *ABS*	00000000 __ram_exceptions_start
00088350 g     F .text	00000010 localeconv
00092c6c g     F .text	00000050 alt_ic_isr_register
00081728 g     F .text	00000040 fwrite
0008c420 g     F .text	00000068 __hexdig_init
00095a68 g       *ABS*	00000000 _edata
00097a08 g       *ABS*	00000000 _end
000801b4 g       *ABS*	00000000 __ram_exceptions_end
00086088 g     F .text	00000074 vfscanf
00091050 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00092d58 g     F .text	000000a0 alt_ic_irq_disable
000825b4 g     F .text	0000007c __swrite
00095a28 g     O .rwdata	00000004 __malloc_trim_threshold
000933ec g     F .text	00000038 exit
000814fc g     F .text	000000c8 _fwalk_reent
00088f94 g     F .text	0000018c __mdiff
0008f2c8 g     F .text	00000060 __modsi3
00100000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
000807e0 g     F .text	00000004 __sfp_lock_release
00089f44 g     F .text	000000c0 __sccl
00080424 g     F .text	0000000c atoi
0009391c g     O .rodata	00000101 _ctype_
0008f4b8 g     F .text	000000a8 __fpcmp_parts_f
00080a78 g     F .text	000000f4 _fopen_r
000937c0 g     F .text	00000020 _exit
00089f14 g     F .text	00000030 __isnand
00092680 g     F .text	00000154 alt_alarm_start
0008cfc8 g     F .text	00000124 __muldi3
00081768 g     F .text	00000194 __smakebuf_r
0008274c g     F .text	00000074 strlen
000903cc g     F .text	0000018c open
0008ec7c g     F .text	00000088 __gedf2
0008c538 g     F .text	000007fc __gethex
00092c50 g     F .text	0000001c alt_icache_flush_all
00095a5c g     O .rwdata	00000004 alt_priority_mask
00092cbc g     F .text	0000009c alt_ic_irq_enable
00084950 g     F .text	00000024 __vfprintf_internal
0008e3d4 g     F .text	00000080 __subdf3
00088874 g     F .text	000000c4 __lo0bits
00084974 g     F .text	00001688 __svfscanf_r
00095a60 g     O .rwdata	00000008 alt_alarm_list
0008c17c g     F .text	0000019c _ungetc_r
00092904 g     F .text	00000064 _do_ctors
0008fc00 g     F .text	00000100 close
0008ffe8 g     F .text	00000080 alt_load
0008f58c g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
000807e4 g     F .text	00000004 __sinit_lock_acquire
000894fc g     F .text	0000012c __multadd
000887dc g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80000:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80004:	08406d14 	ori	at,at,436
    jmp r1
   80008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00080020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
   80044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800ec0 	call	800ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000306 	br	80098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   8008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   80094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   80098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   8009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
   800c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
   800e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800e8:	ef80083a 	eret

000800ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800ec:	defff904 	addi	sp,sp,-28
   800f0:	dfc00615 	stw	ra,24(sp)
   800f4:	df000515 	stw	fp,20(sp)
   800f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   800fc:	0005313a 	rdctl	r2,ipending
   80100:	e0bffc15 	stw	r2,-16(fp)

  return active;
   80104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   80108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   8010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80110:	00800044 	movi	r2,1
   80114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   80118:	e0ffff17 	ldw	r3,-4(fp)
   8011c:	e0bffe17 	ldw	r2,-8(fp)
   80120:	1884703a 	and	r2,r3,r2
   80124:	1005003a 	cmpeq	r2,r2,zero
   80128:	1000161e 	bne	r2,zero,80184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8012c:	e0bffd17 	ldw	r2,-12(fp)
   80130:	00c00274 	movhi	r3,9
   80134:	18ddde04 	addi	r3,r3,30584
   80138:	100490fa 	slli	r2,r2,3
   8013c:	10c5883a 	add	r2,r2,r3
   80140:	11400017 	ldw	r5,0(r2)
   80144:	e0bffd17 	ldw	r2,-12(fp)
   80148:	00c00274 	movhi	r3,9
   8014c:	18ddde04 	addi	r3,r3,30584
   80150:	100490fa 	slli	r2,r2,3
   80154:	10c5883a 	add	r2,r2,r3
   80158:	10800104 	addi	r2,r2,4
   8015c:	11000017 	ldw	r4,0(r2)
   80160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80164:	0005313a 	rdctl	r2,ipending
   80168:	e0bffb15 	stw	r2,-20(fp)

  return active;
   8016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   80170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   80174:	e0bfff17 	ldw	r2,-4(fp)
   80178:	1004c03a 	cmpne	r2,r2,zero
   8017c:	103fe31e 	bne	r2,zero,8010c <alt_irq_handler+0x20>
   80180:	00000706 	br	801a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   80184:	e0bffe17 	ldw	r2,-8(fp)
   80188:	1085883a 	add	r2,r2,r2
   8018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   80190:	e0bffd17 	ldw	r2,-12(fp)
   80194:	10800044 	addi	r2,r2,1
   80198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   8019c:	003fde06 	br	80118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   801a0:	e037883a 	mov	sp,fp
   801a4:	dfc00117 	ldw	ra,4(sp)
   801a8:	df000017 	ldw	fp,0(sp)
   801ac:	dec00204 	addi	sp,sp,8
   801b0:	f800283a 	ret

Disassembly of section .text:

000801b4 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   801b4:	06c00434 	movhi	sp,16
    ori sp, sp, %lo(__alt_stack_pointer)
   801b8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
   801bc:	06800274 	movhi	gp,9
    ori gp, gp, %lo(_gp)
   801c0:	d6b68814 	ori	gp,gp,55840
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   801c4:	00800274 	movhi	r2,9
    ori r2, r2, %lo(__bss_start)
   801c8:	109d8514 	ori	r2,r2,30228

    movhi r3, %hi(__bss_end)
   801cc:	00c00274 	movhi	r3,9
    ori r3, r3, %lo(__bss_end)
   801d0:	18de8214 	ori	r3,r3,31240

    beq r2, r3, 1f
   801d4:	10c00326 	beq	r2,r3,801e4 <_start+0x30>

0:
    stw zero, (r2)
   801d8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   801dc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   801e0:	10fffd36 	bltu	r2,r3,801d8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   801e4:	008ffe80 	call	8ffe8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   801e8:	00902280 	call	90228 <alt_main>

000801ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   801ec:	003fff06 	br	801ec <alt_after_alt_main>

000801f0 <main>:
#define STR(tok) 		STR_EXPAND(tok)
#define SET_POS(y,x) 	"\x1B[" STR(y) ";" STR(x) "H"
#define CLR_LINE() 		"\x1B[K"

int main()
{
   801f0:	deffbe04 	addi	sp,sp,-264
   801f4:	dfc04115 	stw	ra,260(sp)
   801f8:	df004015 	stw	fp,256(sp)
   801fc:	df004004 	addi	fp,sp,256
  printf("Ready!\n");
   80200:	01000274 	movhi	r4,9
   80204:	210df904 	addi	r4,r4,14308
   80208:	00822640 	call	82264 <puts>
   8020c:	00000006 	br	80210 <main+0x20>
  char buffer2[80];
  char buffer3[80];

  while(1)
  {
	  scanf("%s%s%s", buffer1, buffer2, buffer3);
   80210:	e17fc304 	addi	r5,fp,-244
   80214:	e1bfd704 	addi	r6,fp,-164
   80218:	e1ffeb04 	addi	r7,fp,-84
   8021c:	01000274 	movhi	r4,9
   80220:	210dfb04 	addi	r4,r4,14316
   80224:	00824fc0 	call	824fc <scanf>

	  if (!strcmp(buffer1, "exit"))
   80228:	e13fc304 	addi	r4,fp,-244
   8022c:	01400274 	movhi	r5,9
   80230:	294dfd04 	addi	r5,r5,14324
   80234:	00826900 	call	82690 <strcmp>
   80238:	1004c03a 	cmpne	r2,r2,zero
   8023c:	1000031e 	bne	r2,zero,8024c <main+0x5c>
		  return 0;
   80240:	0005883a 	mov	r2,zero
   80244:	e0bfff15 	stw	r2,-4(fp)
   80248:	00006d06 	br	80400 <main+0x210>

	  if (!strcmp(buffer1, "get"))
   8024c:	e13fc304 	addi	r4,fp,-244
   80250:	01400274 	movhi	r5,9
   80254:	294dff04 	addi	r5,r5,14332
   80258:	00826900 	call	82690 <strcmp>
   8025c:	1004c03a 	cmpne	r2,r2,zero
   80260:	1000081e 	bne	r2,zero,80284 <main+0x94>
	  {
		  long switches = IORD_ALTERA_AVALON_PIO_DATA(PIO_INPUT_0_BASE);
   80264:	00800434 	movhi	r2,16
   80268:	10841404 	addi	r2,r2,4176
   8026c:	10800037 	ldwio	r2,0(r2)
   80270:	e0bfc215 	stw	r2,-248(fp)
		  printf("Switch in decimal: %d\n", switches);
   80274:	01000274 	movhi	r4,9
   80278:	210e0004 	addi	r4,r4,14336
   8027c:	e17fc217 	ldw	r5,-248(fp)
   80280:	008214c0 	call	8214c <printf>
	  }

	  if(!strcmp(buffer1, "set"))
   80284:	e13fc304 	addi	r4,fp,-244
   80288:	01400274 	movhi	r5,9
   8028c:	294e0604 	addi	r5,r5,14360
   80290:	00826900 	call	82690 <strcmp>
   80294:	1004c03a 	cmpne	r2,r2,zero
   80298:	103fdd1e 	bne	r2,zero,80210 <main+0x20>
	  {
		  if(!strcmp(buffer2, "led"))
   8029c:	e13fd704 	addi	r4,fp,-164
   802a0:	01400274 	movhi	r5,9
   802a4:	294e0704 	addi	r5,r5,14364
   802a8:	00826900 	call	82690 <strcmp>
   802ac:	1004c03a 	cmpne	r2,r2,zero
   802b0:	1000061e 	bne	r2,zero,802cc <main+0xdc>
		  {
			  IOWR_ALTERA_AVALON_PIO_DATA(PIO_OUTPUT_0_BASE, atoi(buffer3));
   802b4:	e13feb04 	addi	r4,fp,-84
   802b8:	00804240 	call	80424 <atoi>
   802bc:	1007883a 	mov	r3,r2
   802c0:	00800434 	movhi	r2,16
   802c4:	10841c04 	addi	r2,r2,4208
   802c8:	10c00035 	stwio	r3,0(r2)
		  }

		  if(!strcmp(buffer2, "lcd1"))
   802cc:	e13fd704 	addi	r4,fp,-164
   802d0:	01400274 	movhi	r5,9
   802d4:	294e0804 	addi	r5,r5,14368
   802d8:	00826900 	call	82690 <strcmp>
   802dc:	1004c03a 	cmpne	r2,r2,zero
   802e0:	1000201e 	bne	r2,zero,80364 <main+0x174>
		  {
			  FILE* fp;
			  fp = fopen(LCD_0_NAME, "w");
   802e4:	01000274 	movhi	r4,9
   802e8:	210e0a04 	addi	r4,r4,14376
   802ec:	01400274 	movhi	r5,9
   802f0:	294e0d04 	addi	r5,r5,14388
   802f4:	0080b6c0 	call	80b6c <fopen>
   802f8:	e0bfc115 	stw	r2,-252(fp)
			  if(fp != NULL)
   802fc:	e0bfc117 	ldw	r2,-252(fp)
   80300:	1005003a 	cmpeq	r2,r2,zero
   80304:	1000121e 	bne	r2,zero,80350 <main+0x160>
			  {
				  fprintf(fp, SET_POS(1,1));
   80308:	01000274 	movhi	r4,9
   8030c:	210e0e04 	addi	r4,r4,14392
   80310:	01400044 	movi	r5,1
   80314:	01800184 	movi	r6,6
   80318:	e1ffc117 	ldw	r7,-252(fp)
   8031c:	00817280 	call	81728 <fwrite>
				  fprintf(fp, CLR_LINE());
   80320:	01000274 	movhi	r4,9
   80324:	210e1004 	addi	r4,r4,14400
   80328:	01400044 	movi	r5,1
   8032c:	018000c4 	movi	r6,3
   80330:	e1ffc117 	ldw	r7,-252(fp)
   80334:	00817280 	call	81728 <fwrite>
				  fprintf(fp, buffer3);
   80338:	e17feb04 	addi	r5,fp,-84
   8033c:	e13fc117 	ldw	r4,-252(fp)
   80340:	0080b880 	call	80b88 <fprintf>
				  fclose(fp);
   80344:	e13fc117 	ldw	r4,-252(fp)
   80348:	00805400 	call	80540 <fclose>
   8034c:	00000506 	br	80364 <main+0x174>
			  }
			  else
				  printf("Could not write to %s \n", LCD_0_NAME);
   80350:	01000274 	movhi	r4,9
   80354:	210e1104 	addi	r4,r4,14404
   80358:	01400274 	movhi	r5,9
   8035c:	294e0a04 	addi	r5,r5,14376
   80360:	008214c0 	call	8214c <printf>
		  }

		  if(!strcmp(buffer2, "lcd2"))
   80364:	e13fd704 	addi	r4,fp,-164
   80368:	01400274 	movhi	r5,9
   8036c:	294e1704 	addi	r5,r5,14428
   80370:	00826900 	call	82690 <strcmp>
   80374:	1004c03a 	cmpne	r2,r2,zero
   80378:	103fa51e 	bne	r2,zero,80210 <main+0x20>
		  {
			  FILE* fp;
			  fp = fopen(LCD_0_NAME, "w");
   8037c:	01000274 	movhi	r4,9
   80380:	210e0a04 	addi	r4,r4,14376
   80384:	01400274 	movhi	r5,9
   80388:	294e0d04 	addi	r5,r5,14388
   8038c:	0080b6c0 	call	80b6c <fopen>
   80390:	e0bfc015 	stw	r2,-256(fp)
			  if(fp != NULL)
   80394:	e0bfc017 	ldw	r2,-256(fp)
   80398:	1005003a 	cmpeq	r2,r2,zero
   8039c:	1000121e 	bne	r2,zero,803e8 <main+0x1f8>
			  {

				  fprintf(fp, SET_POS(2,1));
   803a0:	01000274 	movhi	r4,9
   803a4:	210e1904 	addi	r4,r4,14436
   803a8:	01400044 	movi	r5,1
   803ac:	01800184 	movi	r6,6
   803b0:	e1ffc017 	ldw	r7,-256(fp)
   803b4:	00817280 	call	81728 <fwrite>
				  fprintf(fp, CLR_LINE());
   803b8:	01000274 	movhi	r4,9
   803bc:	210e1004 	addi	r4,r4,14400
   803c0:	01400044 	movi	r5,1
   803c4:	018000c4 	movi	r6,3
   803c8:	e1ffc017 	ldw	r7,-256(fp)
   803cc:	00817280 	call	81728 <fwrite>
				  fprintf(fp, buffer3);
   803d0:	e17feb04 	addi	r5,fp,-84
   803d4:	e13fc017 	ldw	r4,-256(fp)
   803d8:	0080b880 	call	80b88 <fprintf>
				  fclose(fp);
   803dc:	e13fc017 	ldw	r4,-256(fp)
   803e0:	00805400 	call	80540 <fclose>
   803e4:	003f8a06 	br	80210 <main+0x20>
			  }
			  else
				  printf("Could not write to %s \n", LCD_0_NAME);
   803e8:	01000274 	movhi	r4,9
   803ec:	210e1104 	addi	r4,r4,14404
   803f0:	01400274 	movhi	r5,9
   803f4:	294e0a04 	addi	r5,r5,14376
   803f8:	008214c0 	call	8214c <printf>
		  }
	  }
  }
   803fc:	003f8406 	br	80210 <main+0x20>

  return 0;
}
   80400:	e0bfff17 	ldw	r2,-4(fp)
   80404:	e037883a 	mov	sp,fp
   80408:	dfc00117 	ldw	ra,4(sp)
   8040c:	df000017 	ldw	fp,0(sp)
   80410:	dec00204 	addi	sp,sp,8
   80414:	f800283a 	ret

00080418 <_atoi_r>:
   80418:	000d883a 	mov	r6,zero
   8041c:	01c00284 	movi	r7,10
   80420:	00827c01 	jmpi	827c0 <_strtol_r>

00080424 <atoi>:
   80424:	000b883a 	mov	r5,zero
   80428:	01800284 	movi	r6,10
   8042c:	0082a101 	jmpi	82a10 <strtol>

00080430 <_fclose_r>:
   80430:	defffc04 	addi	sp,sp,-16
   80434:	dc400115 	stw	r17,4(sp)
   80438:	dc000015 	stw	r16,0(sp)
   8043c:	dfc00315 	stw	ra,12(sp)
   80440:	dc800215 	stw	r18,8(sp)
   80444:	2821883a 	mov	r16,r5
   80448:	2023883a 	mov	r17,r4
   8044c:	28002926 	beq	r5,zero,804f4 <_fclose_r+0xc4>
   80450:	00807dc0 	call	807dc <__sfp_lock_acquire>
   80454:	88000226 	beq	r17,zero,80460 <_fclose_r+0x30>
   80458:	88800e17 	ldw	r2,56(r17)
   8045c:	10002d26 	beq	r2,zero,80514 <_fclose_r+0xe4>
   80460:	8080030f 	ldh	r2,12(r16)
   80464:	10002226 	beq	r2,zero,804f0 <_fclose_r+0xc0>
   80468:	8809883a 	mov	r4,r17
   8046c:	800b883a 	mov	r5,r16
   80470:	00805540 	call	80554 <_fflush_r>
   80474:	1025883a 	mov	r18,r2
   80478:	80800b17 	ldw	r2,44(r16)
   8047c:	10000426 	beq	r2,zero,80490 <_fclose_r+0x60>
   80480:	81400717 	ldw	r5,28(r16)
   80484:	8809883a 	mov	r4,r17
   80488:	103ee83a 	callr	r2
   8048c:	10002a16 	blt	r2,zero,80538 <_fclose_r+0x108>
   80490:	8080030b 	ldhu	r2,12(r16)
   80494:	1080200c 	andi	r2,r2,128
   80498:	1000231e 	bne	r2,zero,80528 <_fclose_r+0xf8>
   8049c:	81400c17 	ldw	r5,48(r16)
   804a0:	28000526 	beq	r5,zero,804b8 <_fclose_r+0x88>
   804a4:	80801004 	addi	r2,r16,64
   804a8:	28800226 	beq	r5,r2,804b4 <_fclose_r+0x84>
   804ac:	8809883a 	mov	r4,r17
   804b0:	0080d140 	call	80d14 <_free_r>
   804b4:	80000c15 	stw	zero,48(r16)
   804b8:	81401117 	ldw	r5,68(r16)
   804bc:	28000326 	beq	r5,zero,804cc <_fclose_r+0x9c>
   804c0:	8809883a 	mov	r4,r17
   804c4:	0080d140 	call	80d14 <_free_r>
   804c8:	80001115 	stw	zero,68(r16)
   804cc:	8000030d 	sth	zero,12(r16)
   804d0:	00807e00 	call	807e0 <__sfp_lock_release>
   804d4:	9005883a 	mov	r2,r18
   804d8:	dfc00317 	ldw	ra,12(sp)
   804dc:	dc800217 	ldw	r18,8(sp)
   804e0:	dc400117 	ldw	r17,4(sp)
   804e4:	dc000017 	ldw	r16,0(sp)
   804e8:	dec00404 	addi	sp,sp,16
   804ec:	f800283a 	ret
   804f0:	00807e00 	call	807e0 <__sfp_lock_release>
   804f4:	0025883a 	mov	r18,zero
   804f8:	9005883a 	mov	r2,r18
   804fc:	dfc00317 	ldw	ra,12(sp)
   80500:	dc800217 	ldw	r18,8(sp)
   80504:	dc400117 	ldw	r17,4(sp)
   80508:	dc000017 	ldw	r16,0(sp)
   8050c:	dec00404 	addi	sp,sp,16
   80510:	f800283a 	ret
   80514:	8809883a 	mov	r4,r17
   80518:	00807ec0 	call	807ec <__sinit>
   8051c:	8080030f 	ldh	r2,12(r16)
   80520:	103fd11e 	bne	r2,zero,80468 <_fclose_r+0x38>
   80524:	003ff206 	br	804f0 <_fclose_r+0xc0>
   80528:	81400417 	ldw	r5,16(r16)
   8052c:	8809883a 	mov	r4,r17
   80530:	0080d140 	call	80d14 <_free_r>
   80534:	003fd906 	br	8049c <_fclose_r+0x6c>
   80538:	04bfffc4 	movi	r18,-1
   8053c:	003fd406 	br	80490 <_fclose_r+0x60>

00080540 <fclose>:
   80540:	00800274 	movhi	r2,9
   80544:	10968804 	addi	r2,r2,23072
   80548:	200b883a 	mov	r5,r4
   8054c:	11000017 	ldw	r4,0(r2)
   80550:	00804301 	jmpi	80430 <_fclose_r>

00080554 <_fflush_r>:
   80554:	defffb04 	addi	sp,sp,-20
   80558:	dcc00315 	stw	r19,12(sp)
   8055c:	dc800215 	stw	r18,8(sp)
   80560:	dfc00415 	stw	ra,16(sp)
   80564:	dc400115 	stw	r17,4(sp)
   80568:	dc000015 	stw	r16,0(sp)
   8056c:	2027883a 	mov	r19,r4
   80570:	2825883a 	mov	r18,r5
   80574:	20000226 	beq	r4,zero,80580 <_fflush_r+0x2c>
   80578:	20800e17 	ldw	r2,56(r4)
   8057c:	10005626 	beq	r2,zero,806d8 <_fflush_r+0x184>
   80580:	9100030b 	ldhu	r4,12(r18)
   80584:	20ffffcc 	andi	r3,r4,65535
   80588:	18e0001c 	xori	r3,r3,32768
   8058c:	18e00004 	addi	r3,r3,-32768
   80590:	1880020c 	andi	r2,r3,8
   80594:	1000261e 	bne	r2,zero,80630 <_fflush_r+0xdc>
   80598:	90c00117 	ldw	r3,4(r18)
   8059c:	20820014 	ori	r2,r4,2048
   805a0:	9080030d 	sth	r2,12(r18)
   805a4:	1009883a 	mov	r4,r2
   805a8:	00c0400e 	bge	zero,r3,806ac <_fflush_r+0x158>
   805ac:	92000a17 	ldw	r8,40(r18)
   805b0:	40004026 	beq	r8,zero,806b4 <_fflush_r+0x160>
   805b4:	2084000c 	andi	r2,r4,4096
   805b8:	10005326 	beq	r2,zero,80708 <_fflush_r+0x1b4>
   805bc:	94001417 	ldw	r16,80(r18)
   805c0:	9080030b 	ldhu	r2,12(r18)
   805c4:	1080010c 	andi	r2,r2,4
   805c8:	1000481e 	bne	r2,zero,806ec <_fflush_r+0x198>
   805cc:	91400717 	ldw	r5,28(r18)
   805d0:	9809883a 	mov	r4,r19
   805d4:	800d883a 	mov	r6,r16
   805d8:	000f883a 	mov	r7,zero
   805dc:	403ee83a 	callr	r8
   805e0:	8080261e 	bne	r16,r2,8067c <_fflush_r+0x128>
   805e4:	9080030b 	ldhu	r2,12(r18)
   805e8:	91000417 	ldw	r4,16(r18)
   805ec:	90000115 	stw	zero,4(r18)
   805f0:	10bdffcc 	andi	r2,r2,63487
   805f4:	10ffffcc 	andi	r3,r2,65535
   805f8:	18c4000c 	andi	r3,r3,4096
   805fc:	9080030d 	sth	r2,12(r18)
   80600:	91000015 	stw	r4,0(r18)
   80604:	18002b26 	beq	r3,zero,806b4 <_fflush_r+0x160>
   80608:	0007883a 	mov	r3,zero
   8060c:	1805883a 	mov	r2,r3
   80610:	94001415 	stw	r16,80(r18)
   80614:	dfc00417 	ldw	ra,16(sp)
   80618:	dcc00317 	ldw	r19,12(sp)
   8061c:	dc800217 	ldw	r18,8(sp)
   80620:	dc400117 	ldw	r17,4(sp)
   80624:	dc000017 	ldw	r16,0(sp)
   80628:	dec00504 	addi	sp,sp,20
   8062c:	f800283a 	ret
   80630:	94400417 	ldw	r17,16(r18)
   80634:	88001f26 	beq	r17,zero,806b4 <_fflush_r+0x160>
   80638:	90800017 	ldw	r2,0(r18)
   8063c:	18c000cc 	andi	r3,r3,3
   80640:	94400015 	stw	r17,0(r18)
   80644:	1461c83a 	sub	r16,r2,r17
   80648:	18002526 	beq	r3,zero,806e0 <_fflush_r+0x18c>
   8064c:	0005883a 	mov	r2,zero
   80650:	90800215 	stw	r2,8(r18)
   80654:	0400170e 	bge	zero,r16,806b4 <_fflush_r+0x160>
   80658:	90c00917 	ldw	r3,36(r18)
   8065c:	91400717 	ldw	r5,28(r18)
   80660:	880d883a 	mov	r6,r17
   80664:	800f883a 	mov	r7,r16
   80668:	9809883a 	mov	r4,r19
   8066c:	183ee83a 	callr	r3
   80670:	88a3883a 	add	r17,r17,r2
   80674:	80a1c83a 	sub	r16,r16,r2
   80678:	00bff616 	blt	zero,r2,80654 <_fflush_r+0x100>
   8067c:	9080030b 	ldhu	r2,12(r18)
   80680:	00ffffc4 	movi	r3,-1
   80684:	10801014 	ori	r2,r2,64
   80688:	9080030d 	sth	r2,12(r18)
   8068c:	1805883a 	mov	r2,r3
   80690:	dfc00417 	ldw	ra,16(sp)
   80694:	dcc00317 	ldw	r19,12(sp)
   80698:	dc800217 	ldw	r18,8(sp)
   8069c:	dc400117 	ldw	r17,4(sp)
   806a0:	dc000017 	ldw	r16,0(sp)
   806a4:	dec00504 	addi	sp,sp,20
   806a8:	f800283a 	ret
   806ac:	90800f17 	ldw	r2,60(r18)
   806b0:	00bfbe16 	blt	zero,r2,805ac <_fflush_r+0x58>
   806b4:	0007883a 	mov	r3,zero
   806b8:	1805883a 	mov	r2,r3
   806bc:	dfc00417 	ldw	ra,16(sp)
   806c0:	dcc00317 	ldw	r19,12(sp)
   806c4:	dc800217 	ldw	r18,8(sp)
   806c8:	dc400117 	ldw	r17,4(sp)
   806cc:	dc000017 	ldw	r16,0(sp)
   806d0:	dec00504 	addi	sp,sp,20
   806d4:	f800283a 	ret
   806d8:	00807ec0 	call	807ec <__sinit>
   806dc:	003fa806 	br	80580 <_fflush_r+0x2c>
   806e0:	90800517 	ldw	r2,20(r18)
   806e4:	90800215 	stw	r2,8(r18)
   806e8:	003fda06 	br	80654 <_fflush_r+0x100>
   806ec:	90800117 	ldw	r2,4(r18)
   806f0:	90c00c17 	ldw	r3,48(r18)
   806f4:	80a1c83a 	sub	r16,r16,r2
   806f8:	183fb426 	beq	r3,zero,805cc <_fflush_r+0x78>
   806fc:	90800f17 	ldw	r2,60(r18)
   80700:	80a1c83a 	sub	r16,r16,r2
   80704:	003fb106 	br	805cc <_fflush_r+0x78>
   80708:	91400717 	ldw	r5,28(r18)
   8070c:	9809883a 	mov	r4,r19
   80710:	000d883a 	mov	r6,zero
   80714:	01c00044 	movi	r7,1
   80718:	403ee83a 	callr	r8
   8071c:	1021883a 	mov	r16,r2
   80720:	00bfffc4 	movi	r2,-1
   80724:	80800226 	beq	r16,r2,80730 <_fflush_r+0x1dc>
   80728:	92000a17 	ldw	r8,40(r18)
   8072c:	003fa406 	br	805c0 <_fflush_r+0x6c>
   80730:	98c00017 	ldw	r3,0(r19)
   80734:	00800744 	movi	r2,29
   80738:	18bfde26 	beq	r3,r2,806b4 <_fflush_r+0x160>
   8073c:	9080030b 	ldhu	r2,12(r18)
   80740:	8007883a 	mov	r3,r16
   80744:	10801014 	ori	r2,r2,64
   80748:	9080030d 	sth	r2,12(r18)
   8074c:	003fcf06 	br	8068c <_fflush_r+0x138>

00080750 <fflush>:
   80750:	01400234 	movhi	r5,8
   80754:	29415504 	addi	r5,r5,1364
   80758:	2007883a 	mov	r3,r4
   8075c:	20000526 	beq	r4,zero,80774 <fflush+0x24>
   80760:	00800274 	movhi	r2,9
   80764:	10968804 	addi	r2,r2,23072
   80768:	11000017 	ldw	r4,0(r2)
   8076c:	180b883a 	mov	r5,r3
   80770:	00805541 	jmpi	80554 <_fflush_r>
   80774:	00800274 	movhi	r2,9
   80778:	10968904 	addi	r2,r2,23076
   8077c:	11000017 	ldw	r4,0(r2)
   80780:	00814fc1 	jmpi	814fc <_fwalk_reent>

00080784 <std>:
   80784:	00800234 	movhi	r2,8
   80788:	10895104 	addi	r2,r2,9540
   8078c:	20800b15 	stw	r2,44(r4)
   80790:	00800234 	movhi	r2,8
   80794:	10898c04 	addi	r2,r2,9776
   80798:	20800815 	stw	r2,32(r4)
   8079c:	00c00234 	movhi	r3,8
   807a0:	18c96d04 	addi	r3,r3,9652
   807a4:	00800234 	movhi	r2,8
   807a8:	10895304 	addi	r2,r2,9548
   807ac:	2140030d 	sth	r5,12(r4)
   807b0:	2180038d 	sth	r6,14(r4)
   807b4:	20c00915 	stw	r3,36(r4)
   807b8:	20800a15 	stw	r2,40(r4)
   807bc:	20000015 	stw	zero,0(r4)
   807c0:	20000115 	stw	zero,4(r4)
   807c4:	20000215 	stw	zero,8(r4)
   807c8:	20000415 	stw	zero,16(r4)
   807cc:	20000515 	stw	zero,20(r4)
   807d0:	20000615 	stw	zero,24(r4)
   807d4:	21000715 	stw	r4,28(r4)
   807d8:	f800283a 	ret

000807dc <__sfp_lock_acquire>:
   807dc:	f800283a 	ret

000807e0 <__sfp_lock_release>:
   807e0:	f800283a 	ret

000807e4 <__sinit_lock_acquire>:
   807e4:	f800283a 	ret

000807e8 <__sinit_lock_release>:
   807e8:	f800283a 	ret

000807ec <__sinit>:
   807ec:	20800e17 	ldw	r2,56(r4)
   807f0:	defffd04 	addi	sp,sp,-12
   807f4:	dc400115 	stw	r17,4(sp)
   807f8:	dc000015 	stw	r16,0(sp)
   807fc:	dfc00215 	stw	ra,8(sp)
   80800:	04400044 	movi	r17,1
   80804:	01400104 	movi	r5,4
   80808:	000d883a 	mov	r6,zero
   8080c:	2021883a 	mov	r16,r4
   80810:	2200bb04 	addi	r8,r4,748
   80814:	200f883a 	mov	r7,r4
   80818:	10000526 	beq	r2,zero,80830 <__sinit+0x44>
   8081c:	dfc00217 	ldw	ra,8(sp)
   80820:	dc400117 	ldw	r17,4(sp)
   80824:	dc000017 	ldw	r16,0(sp)
   80828:	dec00304 	addi	sp,sp,12
   8082c:	f800283a 	ret
   80830:	21000117 	ldw	r4,4(r4)
   80834:	00800234 	movhi	r2,8
   80838:	10823404 	addi	r2,r2,2256
   8083c:	00c000c4 	movi	r3,3
   80840:	80800f15 	stw	r2,60(r16)
   80844:	80c0b915 	stw	r3,740(r16)
   80848:	8200ba15 	stw	r8,744(r16)
   8084c:	84400e15 	stw	r17,56(r16)
   80850:	8000b815 	stw	zero,736(r16)
   80854:	00807840 	call	80784 <std>
   80858:	81000217 	ldw	r4,8(r16)
   8085c:	880d883a 	mov	r6,r17
   80860:	800f883a 	mov	r7,r16
   80864:	01400284 	movi	r5,10
   80868:	00807840 	call	80784 <std>
   8086c:	81000317 	ldw	r4,12(r16)
   80870:	800f883a 	mov	r7,r16
   80874:	01400484 	movi	r5,18
   80878:	01800084 	movi	r6,2
   8087c:	dfc00217 	ldw	ra,8(sp)
   80880:	dc400117 	ldw	r17,4(sp)
   80884:	dc000017 	ldw	r16,0(sp)
   80888:	dec00304 	addi	sp,sp,12
   8088c:	00807841 	jmpi	80784 <std>

00080890 <__fp_lock>:
   80890:	0005883a 	mov	r2,zero
   80894:	f800283a 	ret

00080898 <__fp_unlock>:
   80898:	0005883a 	mov	r2,zero
   8089c:	f800283a 	ret

000808a0 <__fp_unlock_all>:
   808a0:	00800274 	movhi	r2,9
   808a4:	10968804 	addi	r2,r2,23072
   808a8:	11000017 	ldw	r4,0(r2)
   808ac:	01400234 	movhi	r5,8
   808b0:	29422604 	addi	r5,r5,2200
   808b4:	00815c41 	jmpi	815c4 <_fwalk>

000808b8 <__fp_lock_all>:
   808b8:	00800274 	movhi	r2,9
   808bc:	10968804 	addi	r2,r2,23072
   808c0:	11000017 	ldw	r4,0(r2)
   808c4:	01400234 	movhi	r5,8
   808c8:	29422404 	addi	r5,r5,2192
   808cc:	00815c41 	jmpi	815c4 <_fwalk>

000808d0 <_cleanup_r>:
   808d0:	01400234 	movhi	r5,8
   808d4:	29415004 	addi	r5,r5,1344
   808d8:	00815c41 	jmpi	815c4 <_fwalk>

000808dc <_cleanup>:
   808dc:	00800274 	movhi	r2,9
   808e0:	10968904 	addi	r2,r2,23076
   808e4:	11000017 	ldw	r4,0(r2)
   808e8:	00808d01 	jmpi	808d0 <_cleanup_r>

000808ec <__sfmoreglue>:
   808ec:	defffc04 	addi	sp,sp,-16
   808f0:	dc000015 	stw	r16,0(sp)
   808f4:	2821883a 	mov	r16,r5
   808f8:	dc400115 	stw	r17,4(sp)
   808fc:	01401704 	movi	r5,92
   80900:	2023883a 	mov	r17,r4
   80904:	8009883a 	mov	r4,r16
   80908:	dfc00315 	stw	ra,12(sp)
   8090c:	dcc00215 	stw	r19,8(sp)
   80910:	008f3380 	call	8f338 <__mulsi3>
   80914:	11400304 	addi	r5,r2,12
   80918:	8809883a 	mov	r4,r17
   8091c:	1027883a 	mov	r19,r2
   80920:	00818fc0 	call	818fc <_malloc_r>
   80924:	10c00304 	addi	r3,r2,12
   80928:	1023883a 	mov	r17,r2
   8092c:	1809883a 	mov	r4,r3
   80930:	980d883a 	mov	r6,r19
   80934:	000b883a 	mov	r5,zero
   80938:	10000b26 	beq	r2,zero,80968 <__sfmoreglue+0x7c>
   8093c:	14000115 	stw	r16,4(r2)
   80940:	10c00215 	stw	r3,8(r2)
   80944:	10000015 	stw	zero,0(r2)
   80948:	008203c0 	call	8203c <memset>
   8094c:	8805883a 	mov	r2,r17
   80950:	dfc00317 	ldw	ra,12(sp)
   80954:	dcc00217 	ldw	r19,8(sp)
   80958:	dc400117 	ldw	r17,4(sp)
   8095c:	dc000017 	ldw	r16,0(sp)
   80960:	dec00404 	addi	sp,sp,16
   80964:	f800283a 	ret
   80968:	0023883a 	mov	r17,zero
   8096c:	8805883a 	mov	r2,r17
   80970:	dfc00317 	ldw	ra,12(sp)
   80974:	dcc00217 	ldw	r19,8(sp)
   80978:	dc400117 	ldw	r17,4(sp)
   8097c:	dc000017 	ldw	r16,0(sp)
   80980:	dec00404 	addi	sp,sp,16
   80984:	f800283a 	ret

00080988 <__sfp>:
   80988:	defffd04 	addi	sp,sp,-12
   8098c:	00800274 	movhi	r2,9
   80990:	10968904 	addi	r2,r2,23076
   80994:	dc000015 	stw	r16,0(sp)
   80998:	14000017 	ldw	r16,0(r2)
   8099c:	dc400115 	stw	r17,4(sp)
   809a0:	dfc00215 	stw	ra,8(sp)
   809a4:	80800e17 	ldw	r2,56(r16)
   809a8:	2023883a 	mov	r17,r4
   809ac:	10002626 	beq	r2,zero,80a48 <__sfp+0xc0>
   809b0:	8400b804 	addi	r16,r16,736
   809b4:	80800117 	ldw	r2,4(r16)
   809b8:	81000217 	ldw	r4,8(r16)
   809bc:	10ffffc4 	addi	r3,r2,-1
   809c0:	18000916 	blt	r3,zero,809e8 <__sfp+0x60>
   809c4:	2080030f 	ldh	r2,12(r4)
   809c8:	10000b26 	beq	r2,zero,809f8 <__sfp+0x70>
   809cc:	017fffc4 	movi	r5,-1
   809d0:	00000206 	br	809dc <__sfp+0x54>
   809d4:	2080030f 	ldh	r2,12(r4)
   809d8:	10000726 	beq	r2,zero,809f8 <__sfp+0x70>
   809dc:	18ffffc4 	addi	r3,r3,-1
   809e0:	21001704 	addi	r4,r4,92
   809e4:	197ffb1e 	bne	r3,r5,809d4 <__sfp+0x4c>
   809e8:	80800017 	ldw	r2,0(r16)
   809ec:	10001926 	beq	r2,zero,80a54 <__sfp+0xcc>
   809f0:	1021883a 	mov	r16,r2
   809f4:	003fef06 	br	809b4 <__sfp+0x2c>
   809f8:	00bfffc4 	movi	r2,-1
   809fc:	00c00044 	movi	r3,1
   80a00:	2080038d 	sth	r2,14(r4)
   80a04:	20c0030d 	sth	r3,12(r4)
   80a08:	20000015 	stw	zero,0(r4)
   80a0c:	20000215 	stw	zero,8(r4)
   80a10:	20000115 	stw	zero,4(r4)
   80a14:	20000415 	stw	zero,16(r4)
   80a18:	20000515 	stw	zero,20(r4)
   80a1c:	20000615 	stw	zero,24(r4)
   80a20:	20000c15 	stw	zero,48(r4)
   80a24:	20000d15 	stw	zero,52(r4)
   80a28:	20001115 	stw	zero,68(r4)
   80a2c:	20001215 	stw	zero,72(r4)
   80a30:	2005883a 	mov	r2,r4
   80a34:	dfc00217 	ldw	ra,8(sp)
   80a38:	dc400117 	ldw	r17,4(sp)
   80a3c:	dc000017 	ldw	r16,0(sp)
   80a40:	dec00304 	addi	sp,sp,12
   80a44:	f800283a 	ret
   80a48:	8009883a 	mov	r4,r16
   80a4c:	00807ec0 	call	807ec <__sinit>
   80a50:	003fd706 	br	809b0 <__sfp+0x28>
   80a54:	8809883a 	mov	r4,r17
   80a58:	01400104 	movi	r5,4
   80a5c:	00808ec0 	call	808ec <__sfmoreglue>
   80a60:	80800015 	stw	r2,0(r16)
   80a64:	103fe21e 	bne	r2,zero,809f0 <__sfp+0x68>
   80a68:	00800304 	movi	r2,12
   80a6c:	0009883a 	mov	r4,zero
   80a70:	88800015 	stw	r2,0(r17)
   80a74:	003fee06 	br	80a30 <__sfp+0xa8>

00080a78 <_fopen_r>:
   80a78:	defffa04 	addi	sp,sp,-24
   80a7c:	dcc00415 	stw	r19,16(sp)
   80a80:	2827883a 	mov	r19,r5
   80a84:	300b883a 	mov	r5,r6
   80a88:	d80d883a 	mov	r6,sp
   80a8c:	dc800315 	stw	r18,12(sp)
   80a90:	dc400215 	stw	r17,8(sp)
   80a94:	dc000115 	stw	r16,4(sp)
   80a98:	dfc00515 	stw	ra,20(sp)
   80a9c:	2021883a 	mov	r16,r4
   80aa0:	0087b180 	call	87b18 <__sflags>
   80aa4:	1025883a 	mov	r18,r2
   80aa8:	8009883a 	mov	r4,r16
   80aac:	0023883a 	mov	r17,zero
   80ab0:	1000081e 	bne	r2,zero,80ad4 <_fopen_r+0x5c>
   80ab4:	8805883a 	mov	r2,r17
   80ab8:	dfc00517 	ldw	ra,20(sp)
   80abc:	dcc00417 	ldw	r19,16(sp)
   80ac0:	dc800317 	ldw	r18,12(sp)
   80ac4:	dc400217 	ldw	r17,8(sp)
   80ac8:	dc000117 	ldw	r16,4(sp)
   80acc:	dec00604 	addi	sp,sp,24
   80ad0:	f800283a 	ret
   80ad4:	00809880 	call	80988 <__sfp>
   80ad8:	1023883a 	mov	r17,r2
   80adc:	980b883a 	mov	r5,r19
   80ae0:	8009883a 	mov	r4,r16
   80ae4:	01c06d84 	movi	r7,438
   80ae8:	103ff226 	beq	r2,zero,80ab4 <_fopen_r+0x3c>
   80aec:	d9800017 	ldw	r6,0(sp)
   80af0:	00820d40 	call	820d4 <_open_r>
   80af4:	10001816 	blt	r2,zero,80b58 <_fopen_r+0xe0>
   80af8:	00c00234 	movhi	r3,8
   80afc:	18c96d04 	addi	r3,r3,9652
   80b00:	923fffcc 	andi	r8,r18,65535
   80b04:	8880038d 	sth	r2,14(r17)
   80b08:	00800234 	movhi	r2,8
   80b0c:	10898c04 	addi	r2,r2,9776
   80b10:	88800815 	stw	r2,32(r17)
   80b14:	88c00915 	stw	r3,36(r17)
   80b18:	00800234 	movhi	r2,8
   80b1c:	10895304 	addi	r2,r2,9548
   80b20:	00c00234 	movhi	r3,8
   80b24:	18c95104 	addi	r3,r3,9540
   80b28:	4200400c 	andi	r8,r8,256
   80b2c:	8c80030d 	sth	r18,12(r17)
   80b30:	8009883a 	mov	r4,r16
   80b34:	880b883a 	mov	r5,r17
   80b38:	000d883a 	mov	r6,zero
   80b3c:	01c00084 	movi	r7,2
   80b40:	88800a15 	stw	r2,40(r17)
   80b44:	88c00b15 	stw	r3,44(r17)
   80b48:	8c400715 	stw	r17,28(r17)
   80b4c:	403fd926 	beq	r8,zero,80ab4 <_fopen_r+0x3c>
   80b50:	00810280 	call	81028 <_fseek_r>
   80b54:	003fd706 	br	80ab4 <_fopen_r+0x3c>
   80b58:	00807dc0 	call	807dc <__sfp_lock_acquire>
   80b5c:	8800030d 	sth	zero,12(r17)
   80b60:	00807e00 	call	807e0 <__sfp_lock_release>
   80b64:	0023883a 	mov	r17,zero
   80b68:	003fd206 	br	80ab4 <_fopen_r+0x3c>

00080b6c <fopen>:
   80b6c:	01800274 	movhi	r6,9
   80b70:	31968804 	addi	r6,r6,23072
   80b74:	2007883a 	mov	r3,r4
   80b78:	31000017 	ldw	r4,0(r6)
   80b7c:	280d883a 	mov	r6,r5
   80b80:	180b883a 	mov	r5,r3
   80b84:	0080a781 	jmpi	80a78 <_fopen_r>

00080b88 <fprintf>:
   80b88:	defffc04 	addi	sp,sp,-16
   80b8c:	dfc00115 	stw	ra,4(sp)
   80b90:	d9800215 	stw	r6,8(sp)
   80b94:	d9c00315 	stw	r7,12(sp)
   80b98:	d8800204 	addi	r2,sp,8
   80b9c:	100d883a 	mov	r6,r2
   80ba0:	d8800015 	stw	r2,0(sp)
   80ba4:	00849500 	call	84950 <__vfprintf_internal>
   80ba8:	dfc00117 	ldw	ra,4(sp)
   80bac:	dec00404 	addi	sp,sp,16
   80bb0:	f800283a 	ret

00080bb4 <_fprintf_r>:
   80bb4:	defffd04 	addi	sp,sp,-12
   80bb8:	2807883a 	mov	r3,r5
   80bbc:	dfc00115 	stw	ra,4(sp)
   80bc0:	d9c00215 	stw	r7,8(sp)
   80bc4:	d8800204 	addi	r2,sp,8
   80bc8:	300b883a 	mov	r5,r6
   80bcc:	1809883a 	mov	r4,r3
   80bd0:	100d883a 	mov	r6,r2
   80bd4:	d8800015 	stw	r2,0(sp)
   80bd8:	00849500 	call	84950 <__vfprintf_internal>
   80bdc:	dfc00117 	ldw	ra,4(sp)
   80be0:	dec00304 	addi	sp,sp,12
   80be4:	f800283a 	ret

00080be8 <_malloc_trim_r>:
   80be8:	defffb04 	addi	sp,sp,-20
   80bec:	dcc00315 	stw	r19,12(sp)
   80bf0:	04c00274 	movhi	r19,9
   80bf4:	9cd0af04 	addi	r19,r19,17084
   80bf8:	dc800215 	stw	r18,8(sp)
   80bfc:	dc400115 	stw	r17,4(sp)
   80c00:	dc000015 	stw	r16,0(sp)
   80c04:	2823883a 	mov	r17,r5
   80c08:	2025883a 	mov	r18,r4
   80c0c:	dfc00415 	stw	ra,16(sp)
   80c10:	00902940 	call	90294 <__malloc_lock>
   80c14:	98800217 	ldw	r2,8(r19)
   80c18:	9009883a 	mov	r4,r18
   80c1c:	000b883a 	mov	r5,zero
   80c20:	10c00117 	ldw	r3,4(r2)
   80c24:	00bfff04 	movi	r2,-4
   80c28:	18a0703a 	and	r16,r3,r2
   80c2c:	8463c83a 	sub	r17,r16,r17
   80c30:	8c43fbc4 	addi	r17,r17,4079
   80c34:	8822d33a 	srli	r17,r17,12
   80c38:	0083ffc4 	movi	r2,4095
   80c3c:	8c7fffc4 	addi	r17,r17,-1
   80c40:	8822933a 	slli	r17,r17,12
   80c44:	1440060e 	bge	r2,r17,80c60 <_malloc_trim_r+0x78>
   80c48:	00824580 	call	82458 <_sbrk_r>
   80c4c:	98c00217 	ldw	r3,8(r19)
   80c50:	9009883a 	mov	r4,r18
   80c54:	044bc83a 	sub	r5,zero,r17
   80c58:	80c7883a 	add	r3,r16,r3
   80c5c:	10c00926 	beq	r2,r3,80c84 <_malloc_trim_r+0x9c>
   80c60:	00902b40 	call	902b4 <__malloc_unlock>
   80c64:	0005883a 	mov	r2,zero
   80c68:	dfc00417 	ldw	ra,16(sp)
   80c6c:	dcc00317 	ldw	r19,12(sp)
   80c70:	dc800217 	ldw	r18,8(sp)
   80c74:	dc400117 	ldw	r17,4(sp)
   80c78:	dc000017 	ldw	r16,0(sp)
   80c7c:	dec00504 	addi	sp,sp,20
   80c80:	f800283a 	ret
   80c84:	9009883a 	mov	r4,r18
   80c88:	00824580 	call	82458 <_sbrk_r>
   80c8c:	844dc83a 	sub	r6,r16,r17
   80c90:	00ffffc4 	movi	r3,-1
   80c94:	9009883a 	mov	r4,r18
   80c98:	000b883a 	mov	r5,zero
   80c9c:	01c00274 	movhi	r7,9
   80ca0:	39dd9404 	addi	r7,r7,30288
   80ca4:	31800054 	ori	r6,r6,1
   80ca8:	10c00926 	beq	r2,r3,80cd0 <_malloc_trim_r+0xe8>
   80cac:	38800017 	ldw	r2,0(r7)
   80cb0:	98c00217 	ldw	r3,8(r19)
   80cb4:	9009883a 	mov	r4,r18
   80cb8:	1445c83a 	sub	r2,r2,r17
   80cbc:	38800015 	stw	r2,0(r7)
   80cc0:	19800115 	stw	r6,4(r3)
   80cc4:	00902b40 	call	902b4 <__malloc_unlock>
   80cc8:	00800044 	movi	r2,1
   80ccc:	003fe606 	br	80c68 <_malloc_trim_r+0x80>
   80cd0:	00824580 	call	82458 <_sbrk_r>
   80cd4:	99800217 	ldw	r6,8(r19)
   80cd8:	100f883a 	mov	r7,r2
   80cdc:	9009883a 	mov	r4,r18
   80ce0:	1187c83a 	sub	r3,r2,r6
   80ce4:	008003c4 	movi	r2,15
   80ce8:	19400054 	ori	r5,r3,1
   80cec:	10ffdc0e 	bge	r2,r3,80c60 <_malloc_trim_r+0x78>
   80cf0:	00800274 	movhi	r2,9
   80cf4:	10968b04 	addi	r2,r2,23084
   80cf8:	10c00017 	ldw	r3,0(r2)
   80cfc:	00800274 	movhi	r2,9
   80d00:	109d9404 	addi	r2,r2,30288
   80d04:	31400115 	stw	r5,4(r6)
   80d08:	38c7c83a 	sub	r3,r7,r3
   80d0c:	10c00015 	stw	r3,0(r2)
   80d10:	003fd306 	br	80c60 <_malloc_trim_r+0x78>

00080d14 <_free_r>:
   80d14:	defffd04 	addi	sp,sp,-12
   80d18:	dc400115 	stw	r17,4(sp)
   80d1c:	dc000015 	stw	r16,0(sp)
   80d20:	dfc00215 	stw	ra,8(sp)
   80d24:	2821883a 	mov	r16,r5
   80d28:	2023883a 	mov	r17,r4
   80d2c:	28005a26 	beq	r5,zero,80e98 <_free_r+0x184>
   80d30:	00902940 	call	90294 <__malloc_lock>
   80d34:	823ffe04 	addi	r8,r16,-8
   80d38:	41400117 	ldw	r5,4(r8)
   80d3c:	00bfff84 	movi	r2,-2
   80d40:	02800274 	movhi	r10,9
   80d44:	5290af04 	addi	r10,r10,17084
   80d48:	288e703a 	and	r7,r5,r2
   80d4c:	41cd883a 	add	r6,r8,r7
   80d50:	30c00117 	ldw	r3,4(r6)
   80d54:	51000217 	ldw	r4,8(r10)
   80d58:	00bfff04 	movi	r2,-4
   80d5c:	1892703a 	and	r9,r3,r2
   80d60:	5017883a 	mov	r11,r10
   80d64:	31006726 	beq	r6,r4,80f04 <_free_r+0x1f0>
   80d68:	2880004c 	andi	r2,r5,1
   80d6c:	1005003a 	cmpeq	r2,r2,zero
   80d70:	32400115 	stw	r9,4(r6)
   80d74:	10001a1e 	bne	r2,zero,80de0 <_free_r+0xcc>
   80d78:	000b883a 	mov	r5,zero
   80d7c:	3247883a 	add	r3,r6,r9
   80d80:	18800117 	ldw	r2,4(r3)
   80d84:	1080004c 	andi	r2,r2,1
   80d88:	1000231e 	bne	r2,zero,80e18 <_free_r+0x104>
   80d8c:	280ac03a 	cmpne	r5,r5,zero
   80d90:	3a4f883a 	add	r7,r7,r9
   80d94:	2800451e 	bne	r5,zero,80eac <_free_r+0x198>
   80d98:	31000217 	ldw	r4,8(r6)
   80d9c:	00800274 	movhi	r2,9
   80da0:	1090b104 	addi	r2,r2,17092
   80da4:	20807b26 	beq	r4,r2,80f94 <_free_r+0x280>
   80da8:	30800317 	ldw	r2,12(r6)
   80dac:	3a07883a 	add	r3,r7,r8
   80db0:	19c00015 	stw	r7,0(r3)
   80db4:	11000215 	stw	r4,8(r2)
   80db8:	20800315 	stw	r2,12(r4)
   80dbc:	38800054 	ori	r2,r7,1
   80dc0:	40800115 	stw	r2,4(r8)
   80dc4:	28001a26 	beq	r5,zero,80e30 <_free_r+0x11c>
   80dc8:	8809883a 	mov	r4,r17
   80dcc:	dfc00217 	ldw	ra,8(sp)
   80dd0:	dc400117 	ldw	r17,4(sp)
   80dd4:	dc000017 	ldw	r16,0(sp)
   80dd8:	dec00304 	addi	sp,sp,12
   80ddc:	00902b41 	jmpi	902b4 <__malloc_unlock>
   80de0:	80bffe17 	ldw	r2,-8(r16)
   80de4:	50c00204 	addi	r3,r10,8
   80de8:	4091c83a 	sub	r8,r8,r2
   80dec:	41000217 	ldw	r4,8(r8)
   80df0:	388f883a 	add	r7,r7,r2
   80df4:	20c06126 	beq	r4,r3,80f7c <_free_r+0x268>
   80df8:	40800317 	ldw	r2,12(r8)
   80dfc:	3247883a 	add	r3,r6,r9
   80e00:	000b883a 	mov	r5,zero
   80e04:	11000215 	stw	r4,8(r2)
   80e08:	20800315 	stw	r2,12(r4)
   80e0c:	18800117 	ldw	r2,4(r3)
   80e10:	1080004c 	andi	r2,r2,1
   80e14:	103fdd26 	beq	r2,zero,80d8c <_free_r+0x78>
   80e18:	38800054 	ori	r2,r7,1
   80e1c:	3a07883a 	add	r3,r7,r8
   80e20:	280ac03a 	cmpne	r5,r5,zero
   80e24:	40800115 	stw	r2,4(r8)
   80e28:	19c00015 	stw	r7,0(r3)
   80e2c:	283fe61e 	bne	r5,zero,80dc8 <_free_r+0xb4>
   80e30:	00807fc4 	movi	r2,511
   80e34:	11c01f2e 	bgeu	r2,r7,80eb4 <_free_r+0x1a0>
   80e38:	3806d27a 	srli	r3,r7,9
   80e3c:	1800481e 	bne	r3,zero,80f60 <_free_r+0x24c>
   80e40:	3804d0fa 	srli	r2,r7,3
   80e44:	100690fa 	slli	r3,r2,3
   80e48:	1acd883a 	add	r6,r3,r11
   80e4c:	31400217 	ldw	r5,8(r6)
   80e50:	31405926 	beq	r6,r5,80fb8 <_free_r+0x2a4>
   80e54:	28800117 	ldw	r2,4(r5)
   80e58:	00ffff04 	movi	r3,-4
   80e5c:	10c4703a 	and	r2,r2,r3
   80e60:	3880022e 	bgeu	r7,r2,80e6c <_free_r+0x158>
   80e64:	29400217 	ldw	r5,8(r5)
   80e68:	317ffa1e 	bne	r6,r5,80e54 <_free_r+0x140>
   80e6c:	29800317 	ldw	r6,12(r5)
   80e70:	41800315 	stw	r6,12(r8)
   80e74:	41400215 	stw	r5,8(r8)
   80e78:	8809883a 	mov	r4,r17
   80e7c:	2a000315 	stw	r8,12(r5)
   80e80:	32000215 	stw	r8,8(r6)
   80e84:	dfc00217 	ldw	ra,8(sp)
   80e88:	dc400117 	ldw	r17,4(sp)
   80e8c:	dc000017 	ldw	r16,0(sp)
   80e90:	dec00304 	addi	sp,sp,12
   80e94:	00902b41 	jmpi	902b4 <__malloc_unlock>
   80e98:	dfc00217 	ldw	ra,8(sp)
   80e9c:	dc400117 	ldw	r17,4(sp)
   80ea0:	dc000017 	ldw	r16,0(sp)
   80ea4:	dec00304 	addi	sp,sp,12
   80ea8:	f800283a 	ret
   80eac:	31000217 	ldw	r4,8(r6)
   80eb0:	003fbd06 	br	80da8 <_free_r+0x94>
   80eb4:	3806d0fa 	srli	r3,r7,3
   80eb8:	00800044 	movi	r2,1
   80ebc:	51400117 	ldw	r5,4(r10)
   80ec0:	180890fa 	slli	r4,r3,3
   80ec4:	1807d0ba 	srai	r3,r3,2
   80ec8:	22c9883a 	add	r4,r4,r11
   80ecc:	21800217 	ldw	r6,8(r4)
   80ed0:	10c4983a 	sll	r2,r2,r3
   80ed4:	41000315 	stw	r4,12(r8)
   80ed8:	41800215 	stw	r6,8(r8)
   80edc:	288ab03a 	or	r5,r5,r2
   80ee0:	22000215 	stw	r8,8(r4)
   80ee4:	8809883a 	mov	r4,r17
   80ee8:	51400115 	stw	r5,4(r10)
   80eec:	32000315 	stw	r8,12(r6)
   80ef0:	dfc00217 	ldw	ra,8(sp)
   80ef4:	dc400117 	ldw	r17,4(sp)
   80ef8:	dc000017 	ldw	r16,0(sp)
   80efc:	dec00304 	addi	sp,sp,12
   80f00:	00902b41 	jmpi	902b4 <__malloc_unlock>
   80f04:	2880004c 	andi	r2,r5,1
   80f08:	3a4d883a 	add	r6,r7,r9
   80f0c:	1000071e 	bne	r2,zero,80f2c <_free_r+0x218>
   80f10:	80bffe17 	ldw	r2,-8(r16)
   80f14:	4091c83a 	sub	r8,r8,r2
   80f18:	41000317 	ldw	r4,12(r8)
   80f1c:	40c00217 	ldw	r3,8(r8)
   80f20:	308d883a 	add	r6,r6,r2
   80f24:	20c00215 	stw	r3,8(r4)
   80f28:	19000315 	stw	r4,12(r3)
   80f2c:	00800274 	movhi	r2,9
   80f30:	10968a04 	addi	r2,r2,23080
   80f34:	11000017 	ldw	r4,0(r2)
   80f38:	30c00054 	ori	r3,r6,1
   80f3c:	52000215 	stw	r8,8(r10)
   80f40:	40c00115 	stw	r3,4(r8)
   80f44:	313fa036 	bltu	r6,r4,80dc8 <_free_r+0xb4>
   80f48:	00800274 	movhi	r2,9
   80f4c:	109d8604 	addi	r2,r2,30232
   80f50:	11400017 	ldw	r5,0(r2)
   80f54:	8809883a 	mov	r4,r17
   80f58:	0080be80 	call	80be8 <_malloc_trim_r>
   80f5c:	003f9a06 	br	80dc8 <_free_r+0xb4>
   80f60:	00800104 	movi	r2,4
   80f64:	10c0072e 	bgeu	r2,r3,80f84 <_free_r+0x270>
   80f68:	00800504 	movi	r2,20
   80f6c:	10c01936 	bltu	r2,r3,80fd4 <_free_r+0x2c0>
   80f70:	188016c4 	addi	r2,r3,91
   80f74:	100690fa 	slli	r3,r2,3
   80f78:	003fb306 	br	80e48 <_free_r+0x134>
   80f7c:	01400044 	movi	r5,1
   80f80:	003f7e06 	br	80d7c <_free_r+0x68>
   80f84:	3804d1ba 	srli	r2,r7,6
   80f88:	10800e04 	addi	r2,r2,56
   80f8c:	100690fa 	slli	r3,r2,3
   80f90:	003fad06 	br	80e48 <_free_r+0x134>
   80f94:	22000315 	stw	r8,12(r4)
   80f98:	22000215 	stw	r8,8(r4)
   80f9c:	3a05883a 	add	r2,r7,r8
   80fa0:	38c00054 	ori	r3,r7,1
   80fa4:	11c00015 	stw	r7,0(r2)
   80fa8:	41000215 	stw	r4,8(r8)
   80fac:	40c00115 	stw	r3,4(r8)
   80fb0:	41000315 	stw	r4,12(r8)
   80fb4:	003f8406 	br	80dc8 <_free_r+0xb4>
   80fb8:	1005d0ba 	srai	r2,r2,2
   80fbc:	00c00044 	movi	r3,1
   80fc0:	51000117 	ldw	r4,4(r10)
   80fc4:	1886983a 	sll	r3,r3,r2
   80fc8:	20c8b03a 	or	r4,r4,r3
   80fcc:	51000115 	stw	r4,4(r10)
   80fd0:	003fa706 	br	80e70 <_free_r+0x15c>
   80fd4:	00801504 	movi	r2,84
   80fd8:	10c00436 	bltu	r2,r3,80fec <_free_r+0x2d8>
   80fdc:	3804d33a 	srli	r2,r7,12
   80fe0:	10801b84 	addi	r2,r2,110
   80fe4:	100690fa 	slli	r3,r2,3
   80fe8:	003f9706 	br	80e48 <_free_r+0x134>
   80fec:	00805504 	movi	r2,340
   80ff0:	10c00436 	bltu	r2,r3,81004 <_free_r+0x2f0>
   80ff4:	3804d3fa 	srli	r2,r7,15
   80ff8:	10801dc4 	addi	r2,r2,119
   80ffc:	100690fa 	slli	r3,r2,3
   81000:	003f9106 	br	80e48 <_free_r+0x134>
   81004:	00815504 	movi	r2,1364
   81008:	10c0032e 	bgeu	r2,r3,81018 <_free_r+0x304>
   8100c:	00801f84 	movi	r2,126
   81010:	00c0fc04 	movi	r3,1008
   81014:	003f8c06 	br	80e48 <_free_r+0x134>
   81018:	3804d4ba 	srli	r2,r7,18
   8101c:	10801f04 	addi	r2,r2,124
   81020:	100690fa 	slli	r3,r2,3
   81024:	003f8806 	br	80e48 <_free_r+0x134>

00081028 <_fseek_r>:
   81028:	deffe804 	addi	sp,sp,-96
   8102c:	dd801515 	stw	r22,84(sp)
   81030:	dcc01215 	stw	r19,72(sp)
   81034:	dc801115 	stw	r18,68(sp)
   81038:	dc000f15 	stw	r16,60(sp)
   8103c:	dfc01715 	stw	ra,92(sp)
   81040:	ddc01615 	stw	r23,88(sp)
   81044:	dd401415 	stw	r21,80(sp)
   81048:	dd001315 	stw	r20,76(sp)
   8104c:	dc401015 	stw	r17,64(sp)
   81050:	2025883a 	mov	r18,r4
   81054:	2821883a 	mov	r16,r5
   81058:	302d883a 	mov	r22,r6
   8105c:	3827883a 	mov	r19,r7
   81060:	20000226 	beq	r4,zero,8106c <_fseek_r+0x44>
   81064:	20800e17 	ldw	r2,56(r4)
   81068:	10007826 	beq	r2,zero,8124c <_fseek_r+0x224>
   8106c:	8080030b 	ldhu	r2,12(r16)
   81070:	00c04204 	movi	r3,264
   81074:	1080420c 	andi	r2,r2,264
   81078:	10c07926 	beq	r2,r3,81260 <_fseek_r+0x238>
   8107c:	85400a17 	ldw	r21,40(r16)
   81080:	a800ea26 	beq	r21,zero,8142c <_fseek_r+0x404>
   81084:	00800044 	movi	r2,1
   81088:	98805f26 	beq	r19,r2,81208 <_fseek_r+0x1e0>
   8108c:	00800084 	movi	r2,2
   81090:	98801026 	beq	r19,r2,810d4 <_fseek_r+0xac>
   81094:	98000f26 	beq	r19,zero,810d4 <_fseek_r+0xac>
   81098:	00800584 	movi	r2,22
   8109c:	013fffc4 	movi	r4,-1
   810a0:	90800015 	stw	r2,0(r18)
   810a4:	2005883a 	mov	r2,r4
   810a8:	dfc01717 	ldw	ra,92(sp)
   810ac:	ddc01617 	ldw	r23,88(sp)
   810b0:	dd801517 	ldw	r22,84(sp)
   810b4:	dd401417 	ldw	r21,80(sp)
   810b8:	dd001317 	ldw	r20,76(sp)
   810bc:	dcc01217 	ldw	r19,72(sp)
   810c0:	dc801117 	ldw	r18,68(sp)
   810c4:	dc401017 	ldw	r17,64(sp)
   810c8:	dc000f17 	ldw	r16,60(sp)
   810cc:	dec01804 	addi	sp,sp,96
   810d0:	f800283a 	ret
   810d4:	81800417 	ldw	r6,16(r16)
   810d8:	0023883a 	mov	r17,zero
   810dc:	002f883a 	mov	r23,zero
   810e0:	3000a626 	beq	r6,zero,8137c <_fseek_r+0x354>
   810e4:	8100030b 	ldhu	r4,12(r16)
   810e8:	2082068c 	andi	r2,r4,2074
   810ec:	1000081e 	bne	r2,zero,81110 <_fseek_r+0xe8>
   810f0:	2081000c 	andi	r2,r4,1024
   810f4:	10001b1e 	bne	r2,zero,81164 <_fseek_r+0x13c>
   810f8:	00800234 	movhi	r2,8
   810fc:	10895304 	addi	r2,r2,9548
   81100:	a8800926 	beq	r21,r2,81128 <_fseek_r+0x100>
   81104:	8080030b 	ldhu	r2,12(r16)
   81108:	10820014 	ori	r2,r2,2048
   8110c:	8080030d 	sth	r2,12(r16)
   81110:	9009883a 	mov	r4,r18
   81114:	800b883a 	mov	r5,r16
   81118:	00805540 	call	80554 <_fflush_r>
   8111c:	1000a326 	beq	r2,zero,813ac <_fseek_r+0x384>
   81120:	013fffc4 	movi	r4,-1
   81124:	003fdf06 	br	810a4 <_fseek_r+0x7c>
   81128:	8140038f 	ldh	r5,14(r16)
   8112c:	283ff516 	blt	r5,zero,81104 <_fseek_r+0xdc>
   81130:	9009883a 	mov	r4,r18
   81134:	d80d883a 	mov	r6,sp
   81138:	00814880 	call	81488 <_fstat_r>
   8113c:	103ff11e 	bne	r2,zero,81104 <_fseek_r+0xdc>
   81140:	d8800117 	ldw	r2,4(sp)
   81144:	00e00014 	movui	r3,32768
   81148:	10bc000c 	andi	r2,r2,61440
   8114c:	10ffed1e 	bne	r2,r3,81104 <_fseek_r+0xdc>
   81150:	80c0030b 	ldhu	r3,12(r16)
   81154:	00810004 	movi	r2,1024
   81158:	80801315 	stw	r2,76(r16)
   8115c:	1886b03a 	or	r3,r3,r2
   81160:	80c0030d 	sth	r3,12(r16)
   81164:	9800701e 	bne	r19,zero,81328 <_fseek_r+0x300>
   81168:	b029883a 	mov	r20,r22
   8116c:	b804c03a 	cmpne	r2,r23,zero
   81170:	10003f1e 	bne	r2,zero,81270 <_fseek_r+0x248>
   81174:	8100030b 	ldhu	r4,12(r16)
   81178:	2084000c 	andi	r2,r4,4096
   8117c:	1000a126 	beq	r2,zero,81404 <_fseek_r+0x3dc>
   81180:	81801417 	ldw	r6,80(r16)
   81184:	80c00117 	ldw	r3,4(r16)
   81188:	81400c17 	ldw	r5,48(r16)
   8118c:	30e3c83a 	sub	r17,r6,r3
   81190:	28008026 	beq	r5,zero,81394 <_fseek_r+0x36c>
   81194:	81c00f17 	ldw	r7,60(r16)
   81198:	89e3c83a 	sub	r17,r17,r7
   8119c:	80800e17 	ldw	r2,56(r16)
   811a0:	81800417 	ldw	r6,16(r16)
   811a4:	88c7883a 	add	r3,r17,r3
   811a8:	1185c83a 	sub	r2,r2,r6
   811ac:	11cf883a 	add	r7,r2,r7
   811b0:	1887c83a 	sub	r3,r3,r2
   811b4:	2088000c 	andi	r2,r4,8192
   811b8:	10003e1e 	bne	r2,zero,812b4 <_fseek_r+0x28c>
   811bc:	a0c03d16 	blt	r20,r3,812b4 <_fseek_r+0x28c>
   811c0:	38c5883a 	add	r2,r7,r3
   811c4:	a0803b2e 	bgeu	r20,r2,812b4 <_fseek_r+0x28c>
   811c8:	a0c5c83a 	sub	r2,r20,r3
   811cc:	3887c83a 	sub	r3,r7,r2
   811d0:	3085883a 	add	r2,r6,r2
   811d4:	80800015 	stw	r2,0(r16)
   811d8:	80c00115 	stw	r3,4(r16)
   811dc:	28000526 	beq	r5,zero,811f4 <_fseek_r+0x1cc>
   811e0:	80801004 	addi	r2,r16,64
   811e4:	28800226 	beq	r5,r2,811f0 <_fseek_r+0x1c8>
   811e8:	9009883a 	mov	r4,r18
   811ec:	0080d140 	call	80d14 <_free_r>
   811f0:	80000c15 	stw	zero,48(r16)
   811f4:	8080030b 	ldhu	r2,12(r16)
   811f8:	0009883a 	mov	r4,zero
   811fc:	10bff7cc 	andi	r2,r2,65503
   81200:	8080030d 	sth	r2,12(r16)
   81204:	003fa706 	br	810a4 <_fseek_r+0x7c>
   81208:	9009883a 	mov	r4,r18
   8120c:	800b883a 	mov	r5,r16
   81210:	00805540 	call	80554 <_fflush_r>
   81214:	8100030b 	ldhu	r4,12(r16)
   81218:	2084000c 	andi	r2,r4,4096
   8121c:	10008726 	beq	r2,zero,8143c <_fseek_r+0x414>
   81220:	84401417 	ldw	r17,80(r16)
   81224:	2080010c 	andi	r2,r4,4
   81228:	1000171e 	bne	r2,zero,81288 <_fseek_r+0x260>
   8122c:	2080020c 	andi	r2,r4,8
   81230:	10003b26 	beq	r2,zero,81320 <_fseek_r+0x2f8>
   81234:	80800017 	ldw	r2,0(r16)
   81238:	10003926 	beq	r2,zero,81320 <_fseek_r+0x2f8>
   8123c:	81800417 	ldw	r6,16(r16)
   81240:	1185c83a 	sub	r2,r2,r6
   81244:	88a3883a 	add	r17,r17,r2
   81248:	00001606 	br	812a4 <_fseek_r+0x27c>
   8124c:	00807ec0 	call	807ec <__sinit>
   81250:	8080030b 	ldhu	r2,12(r16)
   81254:	00c04204 	movi	r3,264
   81258:	1080420c 	andi	r2,r2,264
   8125c:	10ff871e 	bne	r2,r3,8107c <_fseek_r+0x54>
   81260:	9009883a 	mov	r4,r18
   81264:	800b883a 	mov	r5,r16
   81268:	00805540 	call	80554 <_fflush_r>
   8126c:	003f8306 	br	8107c <_fseek_r+0x54>
   81270:	81400c17 	ldw	r5,48(r16)
   81274:	28004526 	beq	r5,zero,8138c <_fseek_r+0x364>
   81278:	8100030b 	ldhu	r4,12(r16)
   8127c:	80c00117 	ldw	r3,4(r16)
   81280:	81c00f17 	ldw	r7,60(r16)
   81284:	003fc506 	br	8119c <_fseek_r+0x174>
   81288:	80c00117 	ldw	r3,4(r16)
   8128c:	80800c17 	ldw	r2,48(r16)
   81290:	88e3c83a 	sub	r17,r17,r3
   81294:	10002226 	beq	r2,zero,81320 <_fseek_r+0x2f8>
   81298:	81c00f17 	ldw	r7,60(r16)
   8129c:	81800417 	ldw	r6,16(r16)
   812a0:	89e3c83a 	sub	r17,r17,r7
   812a4:	b46d883a 	add	r22,r22,r17
   812a8:	0027883a 	mov	r19,zero
   812ac:	05c00044 	movi	r23,1
   812b0:	003f8b06 	br	810e0 <_fseek_r+0xb8>
   812b4:	80801317 	ldw	r2,76(r16)
   812b8:	81400717 	ldw	r5,28(r16)
   812bc:	9009883a 	mov	r4,r18
   812c0:	0085c83a 	sub	r2,zero,r2
   812c4:	a0a2703a 	and	r17,r20,r2
   812c8:	880d883a 	mov	r6,r17
   812cc:	000f883a 	mov	r7,zero
   812d0:	a83ee83a 	callr	r21
   812d4:	00ffffc4 	movi	r3,-1
   812d8:	10ff8d26 	beq	r2,r3,81110 <_fseek_r+0xe8>
   812dc:	80800417 	ldw	r2,16(r16)
   812e0:	81400c17 	ldw	r5,48(r16)
   812e4:	80000115 	stw	zero,4(r16)
   812e8:	80800015 	stw	r2,0(r16)
   812ec:	28000526 	beq	r5,zero,81304 <_fseek_r+0x2dc>
   812f0:	80801004 	addi	r2,r16,64
   812f4:	28800226 	beq	r5,r2,81300 <_fseek_r+0x2d8>
   812f8:	9009883a 	mov	r4,r18
   812fc:	0080d140 	call	80d14 <_free_r>
   81300:	80000c15 	stw	zero,48(r16)
   81304:	8080030b 	ldhu	r2,12(r16)
   81308:	a463c83a 	sub	r17,r20,r17
   8130c:	10bff7cc 	andi	r2,r2,65503
   81310:	8080030d 	sth	r2,12(r16)
   81314:	88000c1e 	bne	r17,zero,81348 <_fseek_r+0x320>
   81318:	0009883a 	mov	r4,zero
   8131c:	003f6106 	br	810a4 <_fseek_r+0x7c>
   81320:	81800417 	ldw	r6,16(r16)
   81324:	003fdf06 	br	812a4 <_fseek_r+0x27c>
   81328:	8140038f 	ldh	r5,14(r16)
   8132c:	9009883a 	mov	r4,r18
   81330:	d80d883a 	mov	r6,sp
   81334:	00814880 	call	81488 <_fstat_r>
   81338:	103f751e 	bne	r2,zero,81110 <_fseek_r+0xe8>
   8133c:	d8800417 	ldw	r2,16(sp)
   81340:	b0a9883a 	add	r20,r22,r2
   81344:	003f8906 	br	8116c <_fseek_r+0x144>
   81348:	9009883a 	mov	r4,r18
   8134c:	800b883a 	mov	r5,r16
   81350:	00822780 	call	82278 <__srefill_r>
   81354:	103f6e1e 	bne	r2,zero,81110 <_fseek_r+0xe8>
   81358:	80c00117 	ldw	r3,4(r16)
   8135c:	1c7f6c36 	bltu	r3,r17,81110 <_fseek_r+0xe8>
   81360:	80800017 	ldw	r2,0(r16)
   81364:	1c47c83a 	sub	r3,r3,r17
   81368:	0009883a 	mov	r4,zero
   8136c:	1445883a 	add	r2,r2,r17
   81370:	80c00115 	stw	r3,4(r16)
   81374:	80800015 	stw	r2,0(r16)
   81378:	003f4a06 	br	810a4 <_fseek_r+0x7c>
   8137c:	9009883a 	mov	r4,r18
   81380:	800b883a 	mov	r5,r16
   81384:	00817680 	call	81768 <__smakebuf_r>
   81388:	003f5606 	br	810e4 <_fseek_r+0xbc>
   8138c:	8100030b 	ldhu	r4,12(r16)
   81390:	80c00117 	ldw	r3,4(r16)
   81394:	80800017 	ldw	r2,0(r16)
   81398:	81800417 	ldw	r6,16(r16)
   8139c:	1185c83a 	sub	r2,r2,r6
   813a0:	10cf883a 	add	r7,r2,r3
   813a4:	8887c83a 	sub	r3,r17,r2
   813a8:	003f8206 	br	811b4 <_fseek_r+0x18c>
   813ac:	81400717 	ldw	r5,28(r16)
   813b0:	b00d883a 	mov	r6,r22
   813b4:	980f883a 	mov	r7,r19
   813b8:	9009883a 	mov	r4,r18
   813bc:	a83ee83a 	callr	r21
   813c0:	00ffffc4 	movi	r3,-1
   813c4:	10ff5626 	beq	r2,r3,81120 <_fseek_r+0xf8>
   813c8:	81400c17 	ldw	r5,48(r16)
   813cc:	28000526 	beq	r5,zero,813e4 <_fseek_r+0x3bc>
   813d0:	80801004 	addi	r2,r16,64
   813d4:	28800226 	beq	r5,r2,813e0 <_fseek_r+0x3b8>
   813d8:	9009883a 	mov	r4,r18
   813dc:	0080d140 	call	80d14 <_free_r>
   813e0:	80000c15 	stw	zero,48(r16)
   813e4:	8080030b 	ldhu	r2,12(r16)
   813e8:	80c00417 	ldw	r3,16(r16)
   813ec:	0009883a 	mov	r4,zero
   813f0:	10bdf7cc 	andi	r2,r2,63455
   813f4:	8080030d 	sth	r2,12(r16)
   813f8:	80c00015 	stw	r3,0(r16)
   813fc:	80000115 	stw	zero,4(r16)
   81400:	003f2806 	br	810a4 <_fseek_r+0x7c>
   81404:	81400717 	ldw	r5,28(r16)
   81408:	000d883a 	mov	r6,zero
   8140c:	9009883a 	mov	r4,r18
   81410:	01c00044 	movi	r7,1
   81414:	a83ee83a 	callr	r21
   81418:	100d883a 	mov	r6,r2
   8141c:	00bfffc4 	movi	r2,-1
   81420:	30bf3b26 	beq	r6,r2,81110 <_fseek_r+0xe8>
   81424:	8100030b 	ldhu	r4,12(r16)
   81428:	003f5606 	br	81184 <_fseek_r+0x15c>
   8142c:	00800744 	movi	r2,29
   81430:	013fffc4 	movi	r4,-1
   81434:	90800015 	stw	r2,0(r18)
   81438:	003f1a06 	br	810a4 <_fseek_r+0x7c>
   8143c:	81400717 	ldw	r5,28(r16)
   81440:	980f883a 	mov	r7,r19
   81444:	9009883a 	mov	r4,r18
   81448:	000d883a 	mov	r6,zero
   8144c:	a83ee83a 	callr	r21
   81450:	1023883a 	mov	r17,r2
   81454:	00bfffc4 	movi	r2,-1
   81458:	88bf3126 	beq	r17,r2,81120 <_fseek_r+0xf8>
   8145c:	8100030b 	ldhu	r4,12(r16)
   81460:	003f7006 	br	81224 <_fseek_r+0x1fc>

00081464 <fseek>:
   81464:	00800274 	movhi	r2,9
   81468:	10968804 	addi	r2,r2,23072
   8146c:	2013883a 	mov	r9,r4
   81470:	11000017 	ldw	r4,0(r2)
   81474:	2805883a 	mov	r2,r5
   81478:	300f883a 	mov	r7,r6
   8147c:	480b883a 	mov	r5,r9
   81480:	100d883a 	mov	r6,r2
   81484:	00810281 	jmpi	81028 <_fseek_r>

00081488 <_fstat_r>:
   81488:	defffd04 	addi	sp,sp,-12
   8148c:	dc000015 	stw	r16,0(sp)
   81490:	04000274 	movhi	r16,9
   81494:	841d8504 	addi	r16,r16,30228
   81498:	dc400115 	stw	r17,4(sp)
   8149c:	80000015 	stw	zero,0(r16)
   814a0:	2023883a 	mov	r17,r4
   814a4:	2809883a 	mov	r4,r5
   814a8:	300b883a 	mov	r5,r6
   814ac:	dfc00215 	stw	ra,8(sp)
   814b0:	008fd8c0 	call	8fd8c <fstat>
   814b4:	1007883a 	mov	r3,r2
   814b8:	00bfffc4 	movi	r2,-1
   814bc:	18800626 	beq	r3,r2,814d8 <_fstat_r+0x50>
   814c0:	1805883a 	mov	r2,r3
   814c4:	dfc00217 	ldw	ra,8(sp)
   814c8:	dc400117 	ldw	r17,4(sp)
   814cc:	dc000017 	ldw	r16,0(sp)
   814d0:	dec00304 	addi	sp,sp,12
   814d4:	f800283a 	ret
   814d8:	80800017 	ldw	r2,0(r16)
   814dc:	103ff826 	beq	r2,zero,814c0 <_fstat_r+0x38>
   814e0:	88800015 	stw	r2,0(r17)
   814e4:	1805883a 	mov	r2,r3
   814e8:	dfc00217 	ldw	ra,8(sp)
   814ec:	dc400117 	ldw	r17,4(sp)
   814f0:	dc000017 	ldw	r16,0(sp)
   814f4:	dec00304 	addi	sp,sp,12
   814f8:	f800283a 	ret

000814fc <_fwalk_reent>:
   814fc:	defff704 	addi	sp,sp,-36
   81500:	dcc00315 	stw	r19,12(sp)
   81504:	24c0b804 	addi	r19,r4,736
   81508:	dd800615 	stw	r22,24(sp)
   8150c:	dd400515 	stw	r21,20(sp)
   81510:	dfc00815 	stw	ra,32(sp)
   81514:	ddc00715 	stw	r23,28(sp)
   81518:	dd000415 	stw	r20,16(sp)
   8151c:	dc800215 	stw	r18,8(sp)
   81520:	dc400115 	stw	r17,4(sp)
   81524:	dc000015 	stw	r16,0(sp)
   81528:	202b883a 	mov	r21,r4
   8152c:	282d883a 	mov	r22,r5
   81530:	00807dc0 	call	807dc <__sfp_lock_acquire>
   81534:	98002126 	beq	r19,zero,815bc <_fwalk_reent+0xc0>
   81538:	002f883a 	mov	r23,zero
   8153c:	9c800117 	ldw	r18,4(r19)
   81540:	9c000217 	ldw	r16,8(r19)
   81544:	90bfffc4 	addi	r2,r18,-1
   81548:	10000d16 	blt	r2,zero,81580 <_fwalk_reent+0x84>
   8154c:	0023883a 	mov	r17,zero
   81550:	053fffc4 	movi	r20,-1
   81554:	8080030f 	ldh	r2,12(r16)
   81558:	8c400044 	addi	r17,r17,1
   8155c:	10000626 	beq	r2,zero,81578 <_fwalk_reent+0x7c>
   81560:	8080038f 	ldh	r2,14(r16)
   81564:	800b883a 	mov	r5,r16
   81568:	a809883a 	mov	r4,r21
   8156c:	15000226 	beq	r2,r20,81578 <_fwalk_reent+0x7c>
   81570:	b03ee83a 	callr	r22
   81574:	b8aeb03a 	or	r23,r23,r2
   81578:	84001704 	addi	r16,r16,92
   8157c:	947ff51e 	bne	r18,r17,81554 <_fwalk_reent+0x58>
   81580:	9cc00017 	ldw	r19,0(r19)
   81584:	983fed1e 	bne	r19,zero,8153c <_fwalk_reent+0x40>
   81588:	00807e00 	call	807e0 <__sfp_lock_release>
   8158c:	b805883a 	mov	r2,r23
   81590:	dfc00817 	ldw	ra,32(sp)
   81594:	ddc00717 	ldw	r23,28(sp)
   81598:	dd800617 	ldw	r22,24(sp)
   8159c:	dd400517 	ldw	r21,20(sp)
   815a0:	dd000417 	ldw	r20,16(sp)
   815a4:	dcc00317 	ldw	r19,12(sp)
   815a8:	dc800217 	ldw	r18,8(sp)
   815ac:	dc400117 	ldw	r17,4(sp)
   815b0:	dc000017 	ldw	r16,0(sp)
   815b4:	dec00904 	addi	sp,sp,36
   815b8:	f800283a 	ret
   815bc:	002f883a 	mov	r23,zero
   815c0:	003ff106 	br	81588 <_fwalk_reent+0x8c>

000815c4 <_fwalk>:
   815c4:	defff804 	addi	sp,sp,-32
   815c8:	dcc00315 	stw	r19,12(sp)
   815cc:	24c0b804 	addi	r19,r4,736
   815d0:	dd400515 	stw	r21,20(sp)
   815d4:	dfc00715 	stw	ra,28(sp)
   815d8:	dd800615 	stw	r22,24(sp)
   815dc:	dd000415 	stw	r20,16(sp)
   815e0:	dc800215 	stw	r18,8(sp)
   815e4:	dc400115 	stw	r17,4(sp)
   815e8:	dc000015 	stw	r16,0(sp)
   815ec:	282b883a 	mov	r21,r5
   815f0:	00807dc0 	call	807dc <__sfp_lock_acquire>
   815f4:	98001f26 	beq	r19,zero,81674 <_fwalk+0xb0>
   815f8:	002d883a 	mov	r22,zero
   815fc:	9c800117 	ldw	r18,4(r19)
   81600:	9c000217 	ldw	r16,8(r19)
   81604:	90bfffc4 	addi	r2,r18,-1
   81608:	10000c16 	blt	r2,zero,8163c <_fwalk+0x78>
   8160c:	0023883a 	mov	r17,zero
   81610:	053fffc4 	movi	r20,-1
   81614:	8080030f 	ldh	r2,12(r16)
   81618:	8c400044 	addi	r17,r17,1
   8161c:	10000526 	beq	r2,zero,81634 <_fwalk+0x70>
   81620:	8080038f 	ldh	r2,14(r16)
   81624:	8009883a 	mov	r4,r16
   81628:	15000226 	beq	r2,r20,81634 <_fwalk+0x70>
   8162c:	a83ee83a 	callr	r21
   81630:	b0acb03a 	or	r22,r22,r2
   81634:	84001704 	addi	r16,r16,92
   81638:	947ff61e 	bne	r18,r17,81614 <_fwalk+0x50>
   8163c:	9cc00017 	ldw	r19,0(r19)
   81640:	983fee1e 	bne	r19,zero,815fc <_fwalk+0x38>
   81644:	00807e00 	call	807e0 <__sfp_lock_release>
   81648:	b005883a 	mov	r2,r22
   8164c:	dfc00717 	ldw	ra,28(sp)
   81650:	dd800617 	ldw	r22,24(sp)
   81654:	dd400517 	ldw	r21,20(sp)
   81658:	dd000417 	ldw	r20,16(sp)
   8165c:	dcc00317 	ldw	r19,12(sp)
   81660:	dc800217 	ldw	r18,8(sp)
   81664:	dc400117 	ldw	r17,4(sp)
   81668:	dc000017 	ldw	r16,0(sp)
   8166c:	dec00804 	addi	sp,sp,32
   81670:	f800283a 	ret
   81674:	002d883a 	mov	r22,zero
   81678:	003ff206 	br	81644 <_fwalk+0x80>

0008167c <_fwrite_r>:
   8167c:	defff604 	addi	sp,sp,-40
   81680:	dc000515 	stw	r16,20(sp)
   81684:	d9400015 	stw	r5,0(sp)
   81688:	2021883a 	mov	r16,r4
   8168c:	300b883a 	mov	r5,r6
   81690:	3809883a 	mov	r4,r7
   81694:	dcc00815 	stw	r19,32(sp)
   81698:	dc800715 	stw	r18,28(sp)
   8169c:	dc400615 	stw	r17,24(sp)
   816a0:	dfc00915 	stw	ra,36(sp)
   816a4:	3825883a 	mov	r18,r7
   816a8:	3027883a 	mov	r19,r6
   816ac:	008f3380 	call	8f338 <__mulsi3>
   816b0:	1023883a 	mov	r17,r2
   816b4:	00800044 	movi	r2,1
   816b8:	d8800315 	stw	r2,12(sp)
   816bc:	dc400115 	stw	r17,4(sp)
   816c0:	dc400415 	stw	r17,16(sp)
   816c4:	dec00215 	stw	sp,8(sp)
   816c8:	80000326 	beq	r16,zero,816d8 <_fwrite_r+0x5c>
   816cc:	80800e17 	ldw	r2,56(r16)
   816d0:	8009883a 	mov	r4,r16
   816d4:	10001226 	beq	r2,zero,81720 <_fwrite_r+0xa4>
   816d8:	d9400a17 	ldw	r5,40(sp)
   816dc:	8009883a 	mov	r4,r16
   816e0:	d9800204 	addi	r6,sp,8
   816e4:	0087e040 	call	87e04 <__sfvwrite_r>
   816e8:	980b883a 	mov	r5,r19
   816ec:	10000426 	beq	r2,zero,81700 <_fwrite_r+0x84>
   816f0:	d9000417 	ldw	r4,16(sp)
   816f4:	8909c83a 	sub	r4,r17,r4
   816f8:	008f3280 	call	8f328 <__udivsi3>
   816fc:	1025883a 	mov	r18,r2
   81700:	9005883a 	mov	r2,r18
   81704:	dfc00917 	ldw	ra,36(sp)
   81708:	dcc00817 	ldw	r19,32(sp)
   8170c:	dc800717 	ldw	r18,28(sp)
   81710:	dc400617 	ldw	r17,24(sp)
   81714:	dc000517 	ldw	r16,20(sp)
   81718:	dec00a04 	addi	sp,sp,40
   8171c:	f800283a 	ret
   81720:	00807ec0 	call	807ec <__sinit>
   81724:	003fec06 	br	816d8 <_fwrite_r+0x5c>

00081728 <fwrite>:
   81728:	00800274 	movhi	r2,9
   8172c:	10968804 	addi	r2,r2,23072
   81730:	2017883a 	mov	r11,r4
   81734:	11000017 	ldw	r4,0(r2)
   81738:	defffe04 	addi	sp,sp,-8
   8173c:	3013883a 	mov	r9,r6
   81740:	2805883a 	mov	r2,r5
   81744:	d9c00015 	stw	r7,0(sp)
   81748:	580b883a 	mov	r5,r11
   8174c:	100d883a 	mov	r6,r2
   81750:	480f883a 	mov	r7,r9
   81754:	dfc00115 	stw	ra,4(sp)
   81758:	008167c0 	call	8167c <_fwrite_r>
   8175c:	dfc00117 	ldw	ra,4(sp)
   81760:	dec00204 	addi	sp,sp,8
   81764:	f800283a 	ret

00081768 <__smakebuf_r>:
   81768:	2880030b 	ldhu	r2,12(r5)
   8176c:	deffed04 	addi	sp,sp,-76
   81770:	dc401015 	stw	r17,64(sp)
   81774:	1080008c 	andi	r2,r2,2
   81778:	dc000f15 	stw	r16,60(sp)
   8177c:	dfc01215 	stw	ra,72(sp)
   81780:	dc801115 	stw	r18,68(sp)
   81784:	2821883a 	mov	r16,r5
   81788:	2023883a 	mov	r17,r4
   8178c:	10000b26 	beq	r2,zero,817bc <__smakebuf_r+0x54>
   81790:	28c010c4 	addi	r3,r5,67
   81794:	00800044 	movi	r2,1
   81798:	28800515 	stw	r2,20(r5)
   8179c:	28c00415 	stw	r3,16(r5)
   817a0:	28c00015 	stw	r3,0(r5)
   817a4:	dfc01217 	ldw	ra,72(sp)
   817a8:	dc801117 	ldw	r18,68(sp)
   817ac:	dc401017 	ldw	r17,64(sp)
   817b0:	dc000f17 	ldw	r16,60(sp)
   817b4:	dec01304 	addi	sp,sp,76
   817b8:	f800283a 	ret
   817bc:	2940038f 	ldh	r5,14(r5)
   817c0:	28002116 	blt	r5,zero,81848 <__smakebuf_r+0xe0>
   817c4:	d80d883a 	mov	r6,sp
   817c8:	00814880 	call	81488 <_fstat_r>
   817cc:	10001e16 	blt	r2,zero,81848 <__smakebuf_r+0xe0>
   817d0:	d8800117 	ldw	r2,4(sp)
   817d4:	00e00014 	movui	r3,32768
   817d8:	113c000c 	andi	r4,r2,61440
   817dc:	20c03126 	beq	r4,r3,818a4 <__smakebuf_r+0x13c>
   817e0:	8080030b 	ldhu	r2,12(r16)
   817e4:	00c80004 	movi	r3,8192
   817e8:	10820014 	ori	r2,r2,2048
   817ec:	8080030d 	sth	r2,12(r16)
   817f0:	20c01e26 	beq	r4,r3,8186c <__smakebuf_r+0x104>
   817f4:	04810004 	movi	r18,1024
   817f8:	8809883a 	mov	r4,r17
   817fc:	900b883a 	mov	r5,r18
   81800:	00818fc0 	call	818fc <_malloc_r>
   81804:	1009883a 	mov	r4,r2
   81808:	10003126 	beq	r2,zero,818d0 <__smakebuf_r+0x168>
   8180c:	80c0030b 	ldhu	r3,12(r16)
   81810:	00800234 	movhi	r2,8
   81814:	10823404 	addi	r2,r2,2256
   81818:	88800f15 	stw	r2,60(r17)
   8181c:	18c02014 	ori	r3,r3,128
   81820:	84800515 	stw	r18,20(r16)
   81824:	80c0030d 	sth	r3,12(r16)
   81828:	81000415 	stw	r4,16(r16)
   8182c:	81000015 	stw	r4,0(r16)
   81830:	dfc01217 	ldw	ra,72(sp)
   81834:	dc801117 	ldw	r18,68(sp)
   81838:	dc401017 	ldw	r17,64(sp)
   8183c:	dc000f17 	ldw	r16,60(sp)
   81840:	dec01304 	addi	sp,sp,76
   81844:	f800283a 	ret
   81848:	80c0030b 	ldhu	r3,12(r16)
   8184c:	1880200c 	andi	r2,r3,128
   81850:	10000426 	beq	r2,zero,81864 <__smakebuf_r+0xfc>
   81854:	04801004 	movi	r18,64
   81858:	18820014 	ori	r2,r3,2048
   8185c:	8080030d 	sth	r2,12(r16)
   81860:	003fe506 	br	817f8 <__smakebuf_r+0x90>
   81864:	04810004 	movi	r18,1024
   81868:	003ffb06 	br	81858 <__smakebuf_r+0xf0>
   8186c:	8140038f 	ldh	r5,14(r16)
   81870:	8809883a 	mov	r4,r17
   81874:	00882a00 	call	882a0 <_isatty_r>
   81878:	103fde26 	beq	r2,zero,817f4 <__smakebuf_r+0x8c>
   8187c:	8080030b 	ldhu	r2,12(r16)
   81880:	80c010c4 	addi	r3,r16,67
   81884:	04810004 	movi	r18,1024
   81888:	10800054 	ori	r2,r2,1
   8188c:	8080030d 	sth	r2,12(r16)
   81890:	00800044 	movi	r2,1
   81894:	80c00415 	stw	r3,16(r16)
   81898:	80800515 	stw	r2,20(r16)
   8189c:	80c00015 	stw	r3,0(r16)
   818a0:	003fd506 	br	817f8 <__smakebuf_r+0x90>
   818a4:	80c00a17 	ldw	r3,40(r16)
   818a8:	00800234 	movhi	r2,8
   818ac:	10895304 	addi	r2,r2,9548
   818b0:	18bfcb1e 	bne	r3,r2,817e0 <__smakebuf_r+0x78>
   818b4:	8080030b 	ldhu	r2,12(r16)
   818b8:	00c10004 	movi	r3,1024
   818bc:	1825883a 	mov	r18,r3
   818c0:	10c4b03a 	or	r2,r2,r3
   818c4:	8080030d 	sth	r2,12(r16)
   818c8:	80c01315 	stw	r3,76(r16)
   818cc:	003fca06 	br	817f8 <__smakebuf_r+0x90>
   818d0:	8100030b 	ldhu	r4,12(r16)
   818d4:	2080800c 	andi	r2,r4,512
   818d8:	103fb21e 	bne	r2,zero,817a4 <__smakebuf_r+0x3c>
   818dc:	80c010c4 	addi	r3,r16,67
   818e0:	21000094 	ori	r4,r4,2
   818e4:	00800044 	movi	r2,1
   818e8:	80800515 	stw	r2,20(r16)
   818ec:	8100030d 	sth	r4,12(r16)
   818f0:	80c00415 	stw	r3,16(r16)
   818f4:	80c00015 	stw	r3,0(r16)
   818f8:	003faa06 	br	817a4 <__smakebuf_r+0x3c>

000818fc <_malloc_r>:
   818fc:	defff604 	addi	sp,sp,-40
   81900:	28c002c4 	addi	r3,r5,11
   81904:	00800584 	movi	r2,22
   81908:	dc800215 	stw	r18,8(sp)
   8190c:	dfc00915 	stw	ra,36(sp)
   81910:	df000815 	stw	fp,32(sp)
   81914:	ddc00715 	stw	r23,28(sp)
   81918:	dd800615 	stw	r22,24(sp)
   8191c:	dd400515 	stw	r21,20(sp)
   81920:	dd000415 	stw	r20,16(sp)
   81924:	dcc00315 	stw	r19,12(sp)
   81928:	dc400115 	stw	r17,4(sp)
   8192c:	dc000015 	stw	r16,0(sp)
   81930:	2025883a 	mov	r18,r4
   81934:	10c01236 	bltu	r2,r3,81980 <_malloc_r+0x84>
   81938:	04400404 	movi	r17,16
   8193c:	8940142e 	bgeu	r17,r5,81990 <_malloc_r+0x94>
   81940:	00800304 	movi	r2,12
   81944:	0007883a 	mov	r3,zero
   81948:	90800015 	stw	r2,0(r18)
   8194c:	1805883a 	mov	r2,r3
   81950:	dfc00917 	ldw	ra,36(sp)
   81954:	df000817 	ldw	fp,32(sp)
   81958:	ddc00717 	ldw	r23,28(sp)
   8195c:	dd800617 	ldw	r22,24(sp)
   81960:	dd400517 	ldw	r21,20(sp)
   81964:	dd000417 	ldw	r20,16(sp)
   81968:	dcc00317 	ldw	r19,12(sp)
   8196c:	dc800217 	ldw	r18,8(sp)
   81970:	dc400117 	ldw	r17,4(sp)
   81974:	dc000017 	ldw	r16,0(sp)
   81978:	dec00a04 	addi	sp,sp,40
   8197c:	f800283a 	ret
   81980:	00bffe04 	movi	r2,-8
   81984:	18a2703a 	and	r17,r3,r2
   81988:	883fed16 	blt	r17,zero,81940 <_malloc_r+0x44>
   8198c:	897fec36 	bltu	r17,r5,81940 <_malloc_r+0x44>
   81990:	9009883a 	mov	r4,r18
   81994:	00902940 	call	90294 <__malloc_lock>
   81998:	00807dc4 	movi	r2,503
   8199c:	14402b2e 	bgeu	r2,r17,81a4c <_malloc_r+0x150>
   819a0:	8806d27a 	srli	r3,r17,9
   819a4:	18003f1e 	bne	r3,zero,81aa4 <_malloc_r+0x1a8>
   819a8:	880cd0fa 	srli	r6,r17,3
   819ac:	300490fa 	slli	r2,r6,3
   819b0:	02c00274 	movhi	r11,9
   819b4:	5ad0af04 	addi	r11,r11,17084
   819b8:	12cb883a 	add	r5,r2,r11
   819bc:	2c000317 	ldw	r16,12(r5)
   819c0:	580f883a 	mov	r7,r11
   819c4:	2c00041e 	bne	r5,r16,819d8 <_malloc_r+0xdc>
   819c8:	00000a06 	br	819f4 <_malloc_r+0xf8>
   819cc:	1800860e 	bge	r3,zero,81be8 <_malloc_r+0x2ec>
   819d0:	84000317 	ldw	r16,12(r16)
   819d4:	2c000726 	beq	r5,r16,819f4 <_malloc_r+0xf8>
   819d8:	80800117 	ldw	r2,4(r16)
   819dc:	00ffff04 	movi	r3,-4
   819e0:	10c8703a 	and	r4,r2,r3
   819e4:	2447c83a 	sub	r3,r4,r17
   819e8:	008003c4 	movi	r2,15
   819ec:	10fff70e 	bge	r2,r3,819cc <_malloc_r+0xd0>
   819f0:	31bfffc4 	addi	r6,r6,-1
   819f4:	32400044 	addi	r9,r6,1
   819f8:	02800274 	movhi	r10,9
   819fc:	5290b104 	addi	r10,r10,17092
   81a00:	54000217 	ldw	r16,8(r10)
   81a04:	8280a026 	beq	r16,r10,81c88 <_malloc_r+0x38c>
   81a08:	80800117 	ldw	r2,4(r16)
   81a0c:	00ffff04 	movi	r3,-4
   81a10:	10ca703a 	and	r5,r2,r3
   81a14:	2c4dc83a 	sub	r6,r5,r17
   81a18:	008003c4 	movi	r2,15
   81a1c:	11808316 	blt	r2,r6,81c2c <_malloc_r+0x330>
   81a20:	52800315 	stw	r10,12(r10)
   81a24:	52800215 	stw	r10,8(r10)
   81a28:	30002916 	blt	r6,zero,81ad0 <_malloc_r+0x1d4>
   81a2c:	8147883a 	add	r3,r16,r5
   81a30:	18800117 	ldw	r2,4(r3)
   81a34:	9009883a 	mov	r4,r18
   81a38:	10800054 	ori	r2,r2,1
   81a3c:	18800115 	stw	r2,4(r3)
   81a40:	00902b40 	call	902b4 <__malloc_unlock>
   81a44:	80c00204 	addi	r3,r16,8
   81a48:	003fc006 	br	8194c <_malloc_r+0x50>
   81a4c:	02c00274 	movhi	r11,9
   81a50:	5ad0af04 	addi	r11,r11,17084
   81a54:	8ac5883a 	add	r2,r17,r11
   81a58:	14000317 	ldw	r16,12(r2)
   81a5c:	580f883a 	mov	r7,r11
   81a60:	8806d0fa 	srli	r3,r17,3
   81a64:	14006c26 	beq	r2,r16,81c18 <_malloc_r+0x31c>
   81a68:	80c00117 	ldw	r3,4(r16)
   81a6c:	00bfff04 	movi	r2,-4
   81a70:	81800317 	ldw	r6,12(r16)
   81a74:	1886703a 	and	r3,r3,r2
   81a78:	80c7883a 	add	r3,r16,r3
   81a7c:	18800117 	ldw	r2,4(r3)
   81a80:	81400217 	ldw	r5,8(r16)
   81a84:	9009883a 	mov	r4,r18
   81a88:	10800054 	ori	r2,r2,1
   81a8c:	18800115 	stw	r2,4(r3)
   81a90:	31400215 	stw	r5,8(r6)
   81a94:	29800315 	stw	r6,12(r5)
   81a98:	00902b40 	call	902b4 <__malloc_unlock>
   81a9c:	80c00204 	addi	r3,r16,8
   81aa0:	003faa06 	br	8194c <_malloc_r+0x50>
   81aa4:	00800104 	movi	r2,4
   81aa8:	10c0052e 	bgeu	r2,r3,81ac0 <_malloc_r+0x1c4>
   81aac:	00800504 	movi	r2,20
   81ab0:	10c07836 	bltu	r2,r3,81c94 <_malloc_r+0x398>
   81ab4:	198016c4 	addi	r6,r3,91
   81ab8:	300490fa 	slli	r2,r6,3
   81abc:	003fbc06 	br	819b0 <_malloc_r+0xb4>
   81ac0:	8804d1ba 	srli	r2,r17,6
   81ac4:	11800e04 	addi	r6,r2,56
   81ac8:	300490fa 	slli	r2,r6,3
   81acc:	003fb806 	br	819b0 <_malloc_r+0xb4>
   81ad0:	00807fc4 	movi	r2,511
   81ad4:	1140bb36 	bltu	r2,r5,81dc4 <_malloc_r+0x4c8>
   81ad8:	2806d0fa 	srli	r3,r5,3
   81adc:	573ffe04 	addi	fp,r10,-8
   81ae0:	00800044 	movi	r2,1
   81ae4:	180890fa 	slli	r4,r3,3
   81ae8:	1807d0ba 	srai	r3,r3,2
   81aec:	e1c00117 	ldw	r7,4(fp)
   81af0:	5909883a 	add	r4,r11,r4
   81af4:	21400217 	ldw	r5,8(r4)
   81af8:	10c4983a 	sll	r2,r2,r3
   81afc:	81000315 	stw	r4,12(r16)
   81b00:	81400215 	stw	r5,8(r16)
   81b04:	388eb03a 	or	r7,r7,r2
   81b08:	2c000315 	stw	r16,12(r5)
   81b0c:	24000215 	stw	r16,8(r4)
   81b10:	e1c00115 	stw	r7,4(fp)
   81b14:	4807883a 	mov	r3,r9
   81b18:	4800cd16 	blt	r9,zero,81e50 <_malloc_r+0x554>
   81b1c:	1807d0ba 	srai	r3,r3,2
   81b20:	00800044 	movi	r2,1
   81b24:	10c8983a 	sll	r4,r2,r3
   81b28:	39004436 	bltu	r7,r4,81c3c <_malloc_r+0x340>
   81b2c:	21c4703a 	and	r2,r4,r7
   81b30:	10000a1e 	bne	r2,zero,81b5c <_malloc_r+0x260>
   81b34:	2109883a 	add	r4,r4,r4
   81b38:	00bfff04 	movi	r2,-4
   81b3c:	4884703a 	and	r2,r9,r2
   81b40:	3906703a 	and	r3,r7,r4
   81b44:	12400104 	addi	r9,r2,4
   81b48:	1800041e 	bne	r3,zero,81b5c <_malloc_r+0x260>
   81b4c:	2109883a 	add	r4,r4,r4
   81b50:	3904703a 	and	r2,r7,r4
   81b54:	4a400104 	addi	r9,r9,4
   81b58:	103ffc26 	beq	r2,zero,81b4c <_malloc_r+0x250>
   81b5c:	480490fa 	slli	r2,r9,3
   81b60:	4819883a 	mov	r12,r9
   81b64:	023fff04 	movi	r8,-4
   81b68:	589b883a 	add	r13,r11,r2
   81b6c:	6807883a 	mov	r3,r13
   81b70:	014003c4 	movi	r5,15
   81b74:	1c000317 	ldw	r16,12(r3)
   81b78:	1c00041e 	bne	r3,r16,81b8c <_malloc_r+0x290>
   81b7c:	0000a706 	br	81e1c <_malloc_r+0x520>
   81b80:	3000ab0e 	bge	r6,zero,81e30 <_malloc_r+0x534>
   81b84:	84000317 	ldw	r16,12(r16)
   81b88:	1c00a426 	beq	r3,r16,81e1c <_malloc_r+0x520>
   81b8c:	80800117 	ldw	r2,4(r16)
   81b90:	1204703a 	and	r2,r2,r8
   81b94:	144dc83a 	sub	r6,r2,r17
   81b98:	29bff90e 	bge	r5,r6,81b80 <_malloc_r+0x284>
   81b9c:	81000317 	ldw	r4,12(r16)
   81ba0:	80c00217 	ldw	r3,8(r16)
   81ba4:	89400054 	ori	r5,r17,1
   81ba8:	8445883a 	add	r2,r16,r17
   81bac:	20c00215 	stw	r3,8(r4)
   81bb0:	19000315 	stw	r4,12(r3)
   81bb4:	81400115 	stw	r5,4(r16)
   81bb8:	1187883a 	add	r3,r2,r6
   81bbc:	31000054 	ori	r4,r6,1
   81bc0:	50800315 	stw	r2,12(r10)
   81bc4:	50800215 	stw	r2,8(r10)
   81bc8:	19800015 	stw	r6,0(r3)
   81bcc:	11000115 	stw	r4,4(r2)
   81bd0:	12800215 	stw	r10,8(r2)
   81bd4:	12800315 	stw	r10,12(r2)
   81bd8:	9009883a 	mov	r4,r18
   81bdc:	00902b40 	call	902b4 <__malloc_unlock>
   81be0:	80c00204 	addi	r3,r16,8
   81be4:	003f5906 	br	8194c <_malloc_r+0x50>
   81be8:	8109883a 	add	r4,r16,r4
   81bec:	20800117 	ldw	r2,4(r4)
   81bf0:	80c00217 	ldw	r3,8(r16)
   81bf4:	81400317 	ldw	r5,12(r16)
   81bf8:	10800054 	ori	r2,r2,1
   81bfc:	20800115 	stw	r2,4(r4)
   81c00:	28c00215 	stw	r3,8(r5)
   81c04:	19400315 	stw	r5,12(r3)
   81c08:	9009883a 	mov	r4,r18
   81c0c:	00902b40 	call	902b4 <__malloc_unlock>
   81c10:	80c00204 	addi	r3,r16,8
   81c14:	003f4d06 	br	8194c <_malloc_r+0x50>
   81c18:	80800204 	addi	r2,r16,8
   81c1c:	14000317 	ldw	r16,12(r2)
   81c20:	143f911e 	bne	r2,r16,81a68 <_malloc_r+0x16c>
   81c24:	1a400084 	addi	r9,r3,2
   81c28:	003f7306 	br	819f8 <_malloc_r+0xfc>
   81c2c:	88c00054 	ori	r3,r17,1
   81c30:	8445883a 	add	r2,r16,r17
   81c34:	80c00115 	stw	r3,4(r16)
   81c38:	003fdf06 	br	81bb8 <_malloc_r+0x2bc>
   81c3c:	e4000217 	ldw	r16,8(fp)
   81c40:	00bfff04 	movi	r2,-4
   81c44:	80c00117 	ldw	r3,4(r16)
   81c48:	802d883a 	mov	r22,r16
   81c4c:	18aa703a 	and	r21,r3,r2
   81c50:	ac401636 	bltu	r21,r17,81cac <_malloc_r+0x3b0>
   81c54:	ac49c83a 	sub	r4,r21,r17
   81c58:	008003c4 	movi	r2,15
   81c5c:	1100130e 	bge	r2,r4,81cac <_malloc_r+0x3b0>
   81c60:	88800054 	ori	r2,r17,1
   81c64:	8447883a 	add	r3,r16,r17
   81c68:	80800115 	stw	r2,4(r16)
   81c6c:	20800054 	ori	r2,r4,1
   81c70:	18800115 	stw	r2,4(r3)
   81c74:	e0c00215 	stw	r3,8(fp)
   81c78:	9009883a 	mov	r4,r18
   81c7c:	00902b40 	call	902b4 <__malloc_unlock>
   81c80:	80c00204 	addi	r3,r16,8
   81c84:	003f3106 	br	8194c <_malloc_r+0x50>
   81c88:	39c00117 	ldw	r7,4(r7)
   81c8c:	573ffe04 	addi	fp,r10,-8
   81c90:	003fa006 	br	81b14 <_malloc_r+0x218>
   81c94:	00801504 	movi	r2,84
   81c98:	10c06736 	bltu	r2,r3,81e38 <_malloc_r+0x53c>
   81c9c:	8804d33a 	srli	r2,r17,12
   81ca0:	11801b84 	addi	r6,r2,110
   81ca4:	300490fa 	slli	r2,r6,3
   81ca8:	003f4106 	br	819b0 <_malloc_r+0xb4>
   81cac:	d0a6fe17 	ldw	r2,-25608(gp)
   81cb0:	d0e00317 	ldw	r3,-32756(gp)
   81cb4:	053fffc4 	movi	r20,-1
   81cb8:	10800404 	addi	r2,r2,16
   81cbc:	88a7883a 	add	r19,r17,r2
   81cc0:	1d000326 	beq	r3,r20,81cd0 <_malloc_r+0x3d4>
   81cc4:	98c3ffc4 	addi	r3,r19,4095
   81cc8:	00bc0004 	movi	r2,-4096
   81ccc:	18a6703a 	and	r19,r3,r2
   81cd0:	9009883a 	mov	r4,r18
   81cd4:	980b883a 	mov	r5,r19
   81cd8:	00824580 	call	82458 <_sbrk_r>
   81cdc:	1009883a 	mov	r4,r2
   81ce0:	15000426 	beq	r2,r20,81cf4 <_malloc_r+0x3f8>
   81ce4:	854b883a 	add	r5,r16,r21
   81ce8:	1029883a 	mov	r20,r2
   81cec:	11405a2e 	bgeu	r2,r5,81e58 <_malloc_r+0x55c>
   81cf0:	87000c26 	beq	r16,fp,81d24 <_malloc_r+0x428>
   81cf4:	e4000217 	ldw	r16,8(fp)
   81cf8:	80c00117 	ldw	r3,4(r16)
   81cfc:	00bfff04 	movi	r2,-4
   81d00:	1884703a 	and	r2,r3,r2
   81d04:	14400336 	bltu	r2,r17,81d14 <_malloc_r+0x418>
   81d08:	1449c83a 	sub	r4,r2,r17
   81d0c:	008003c4 	movi	r2,15
   81d10:	113fd316 	blt	r2,r4,81c60 <_malloc_r+0x364>
   81d14:	9009883a 	mov	r4,r18
   81d18:	00902b40 	call	902b4 <__malloc_unlock>
   81d1c:	0007883a 	mov	r3,zero
   81d20:	003f0a06 	br	8194c <_malloc_r+0x50>
   81d24:	05c00274 	movhi	r23,9
   81d28:	bddd9404 	addi	r23,r23,30288
   81d2c:	b8800017 	ldw	r2,0(r23)
   81d30:	988d883a 	add	r6,r19,r2
   81d34:	b9800015 	stw	r6,0(r23)
   81d38:	d0e00317 	ldw	r3,-32756(gp)
   81d3c:	00bfffc4 	movi	r2,-1
   81d40:	18808e26 	beq	r3,r2,81f7c <_malloc_r+0x680>
   81d44:	2145c83a 	sub	r2,r4,r5
   81d48:	3085883a 	add	r2,r6,r2
   81d4c:	b8800015 	stw	r2,0(r23)
   81d50:	20c001cc 	andi	r3,r4,7
   81d54:	18005f1e 	bne	r3,zero,81ed4 <_malloc_r+0x5d8>
   81d58:	000b883a 	mov	r5,zero
   81d5c:	a4c5883a 	add	r2,r20,r19
   81d60:	1083ffcc 	andi	r2,r2,4095
   81d64:	00c40004 	movi	r3,4096
   81d68:	1887c83a 	sub	r3,r3,r2
   81d6c:	28e7883a 	add	r19,r5,r3
   81d70:	9009883a 	mov	r4,r18
   81d74:	980b883a 	mov	r5,r19
   81d78:	00824580 	call	82458 <_sbrk_r>
   81d7c:	1007883a 	mov	r3,r2
   81d80:	00bfffc4 	movi	r2,-1
   81d84:	18807a26 	beq	r3,r2,81f70 <_malloc_r+0x674>
   81d88:	1d05c83a 	sub	r2,r3,r20
   81d8c:	9885883a 	add	r2,r19,r2
   81d90:	10c00054 	ori	r3,r2,1
   81d94:	b8800017 	ldw	r2,0(r23)
   81d98:	a021883a 	mov	r16,r20
   81d9c:	a0c00115 	stw	r3,4(r20)
   81da0:	9885883a 	add	r2,r19,r2
   81da4:	b8800015 	stw	r2,0(r23)
   81da8:	e5000215 	stw	r20,8(fp)
   81dac:	b7003626 	beq	r22,fp,81e88 <_malloc_r+0x58c>
   81db0:	018003c4 	movi	r6,15
   81db4:	35404b36 	bltu	r6,r21,81ee4 <_malloc_r+0x5e8>
   81db8:	00800044 	movi	r2,1
   81dbc:	a0800115 	stw	r2,4(r20)
   81dc0:	003fcd06 	br	81cf8 <_malloc_r+0x3fc>
   81dc4:	2808d27a 	srli	r4,r5,9
   81dc8:	2000371e 	bne	r4,zero,81ea8 <_malloc_r+0x5ac>
   81dcc:	2808d0fa 	srli	r4,r5,3
   81dd0:	200690fa 	slli	r3,r4,3
   81dd4:	1ad1883a 	add	r8,r3,r11
   81dd8:	41800217 	ldw	r6,8(r8)
   81ddc:	41805b26 	beq	r8,r6,81f4c <_malloc_r+0x650>
   81de0:	30800117 	ldw	r2,4(r6)
   81de4:	00ffff04 	movi	r3,-4
   81de8:	10c4703a 	and	r2,r2,r3
   81dec:	2880022e 	bgeu	r5,r2,81df8 <_malloc_r+0x4fc>
   81df0:	31800217 	ldw	r6,8(r6)
   81df4:	41bffa1e 	bne	r8,r6,81de0 <_malloc_r+0x4e4>
   81df8:	32000317 	ldw	r8,12(r6)
   81dfc:	39c00117 	ldw	r7,4(r7)
   81e00:	82000315 	stw	r8,12(r16)
   81e04:	81800215 	stw	r6,8(r16)
   81e08:	07000274 	movhi	fp,9
   81e0c:	e710af04 	addi	fp,fp,17084
   81e10:	34000315 	stw	r16,12(r6)
   81e14:	44000215 	stw	r16,8(r8)
   81e18:	003f3e06 	br	81b14 <_malloc_r+0x218>
   81e1c:	63000044 	addi	r12,r12,1
   81e20:	608000cc 	andi	r2,r12,3
   81e24:	10005d26 	beq	r2,zero,81f9c <_malloc_r+0x6a0>
   81e28:	18c00204 	addi	r3,r3,8
   81e2c:	003f5106 	br	81b74 <_malloc_r+0x278>
   81e30:	8089883a 	add	r4,r16,r2
   81e34:	003f6d06 	br	81bec <_malloc_r+0x2f0>
   81e38:	00805504 	movi	r2,340
   81e3c:	10c02036 	bltu	r2,r3,81ec0 <_malloc_r+0x5c4>
   81e40:	8804d3fa 	srli	r2,r17,15
   81e44:	11801dc4 	addi	r6,r2,119
   81e48:	300490fa 	slli	r2,r6,3
   81e4c:	003ed806 	br	819b0 <_malloc_r+0xb4>
   81e50:	48c000c4 	addi	r3,r9,3
   81e54:	003f3106 	br	81b1c <_malloc_r+0x220>
   81e58:	05c00274 	movhi	r23,9
   81e5c:	bddd9404 	addi	r23,r23,30288
   81e60:	b8800017 	ldw	r2,0(r23)
   81e64:	988d883a 	add	r6,r19,r2
   81e68:	b9800015 	stw	r6,0(r23)
   81e6c:	293fb21e 	bne	r5,r4,81d38 <_malloc_r+0x43c>
   81e70:	2083ffcc 	andi	r2,r4,4095
   81e74:	103fb01e 	bne	r2,zero,81d38 <_malloc_r+0x43c>
   81e78:	e4000217 	ldw	r16,8(fp)
   81e7c:	9d45883a 	add	r2,r19,r21
   81e80:	10800054 	ori	r2,r2,1
   81e84:	80800115 	stw	r2,4(r16)
   81e88:	b8c00017 	ldw	r3,0(r23)
   81e8c:	d0a6ff17 	ldw	r2,-25604(gp)
   81e90:	10c0012e 	bgeu	r2,r3,81e98 <_malloc_r+0x59c>
   81e94:	d0e6ff15 	stw	r3,-25604(gp)
   81e98:	d0a70017 	ldw	r2,-25600(gp)
   81e9c:	10ff962e 	bgeu	r2,r3,81cf8 <_malloc_r+0x3fc>
   81ea0:	d0e70015 	stw	r3,-25600(gp)
   81ea4:	003f9406 	br	81cf8 <_malloc_r+0x3fc>
   81ea8:	00800104 	movi	r2,4
   81eac:	11001e36 	bltu	r2,r4,81f28 <_malloc_r+0x62c>
   81eb0:	2804d1ba 	srli	r2,r5,6
   81eb4:	11000e04 	addi	r4,r2,56
   81eb8:	200690fa 	slli	r3,r4,3
   81ebc:	003fc506 	br	81dd4 <_malloc_r+0x4d8>
   81ec0:	00815504 	movi	r2,1364
   81ec4:	10c01d2e 	bgeu	r2,r3,81f3c <_malloc_r+0x640>
   81ec8:	01801f84 	movi	r6,126
   81ecc:	0080fc04 	movi	r2,1008
   81ed0:	003eb706 	br	819b0 <_malloc_r+0xb4>
   81ed4:	00800204 	movi	r2,8
   81ed8:	10cbc83a 	sub	r5,r2,r3
   81edc:	2169883a 	add	r20,r4,r5
   81ee0:	003f9e06 	br	81d5c <_malloc_r+0x460>
   81ee4:	00bffe04 	movi	r2,-8
   81ee8:	a93ffd04 	addi	r4,r21,-12
   81eec:	2088703a 	and	r4,r4,r2
   81ef0:	b10b883a 	add	r5,r22,r4
   81ef4:	00c00144 	movi	r3,5
   81ef8:	28c00215 	stw	r3,8(r5)
   81efc:	28c00115 	stw	r3,4(r5)
   81f00:	b0800117 	ldw	r2,4(r22)
   81f04:	1080004c 	andi	r2,r2,1
   81f08:	2084b03a 	or	r2,r4,r2
   81f0c:	b0800115 	stw	r2,4(r22)
   81f10:	313fdd2e 	bgeu	r6,r4,81e88 <_malloc_r+0x58c>
   81f14:	b1400204 	addi	r5,r22,8
   81f18:	9009883a 	mov	r4,r18
   81f1c:	0080d140 	call	80d14 <_free_r>
   81f20:	e4000217 	ldw	r16,8(fp)
   81f24:	003fd806 	br	81e88 <_malloc_r+0x58c>
   81f28:	00800504 	movi	r2,20
   81f2c:	11001536 	bltu	r2,r4,81f84 <_malloc_r+0x688>
   81f30:	210016c4 	addi	r4,r4,91
   81f34:	200690fa 	slli	r3,r4,3
   81f38:	003fa606 	br	81dd4 <_malloc_r+0x4d8>
   81f3c:	8804d4ba 	srli	r2,r17,18
   81f40:	11801f04 	addi	r6,r2,124
   81f44:	300490fa 	slli	r2,r6,3
   81f48:	003e9906 	br	819b0 <_malloc_r+0xb4>
   81f4c:	2009d0ba 	srai	r4,r4,2
   81f50:	01400274 	movhi	r5,9
   81f54:	2950af04 	addi	r5,r5,17084
   81f58:	00c00044 	movi	r3,1
   81f5c:	28800117 	ldw	r2,4(r5)
   81f60:	1906983a 	sll	r3,r3,r4
   81f64:	10c4b03a 	or	r2,r2,r3
   81f68:	28800115 	stw	r2,4(r5)
   81f6c:	003fa306 	br	81dfc <_malloc_r+0x500>
   81f70:	0027883a 	mov	r19,zero
   81f74:	00c00044 	movi	r3,1
   81f78:	003f8606 	br	81d94 <_malloc_r+0x498>
   81f7c:	d1200315 	stw	r4,-32756(gp)
   81f80:	003f7306 	br	81d50 <_malloc_r+0x454>
   81f84:	00801504 	movi	r2,84
   81f88:	11001936 	bltu	r2,r4,81ff0 <_malloc_r+0x6f4>
   81f8c:	2804d33a 	srli	r2,r5,12
   81f90:	11001b84 	addi	r4,r2,110
   81f94:	200690fa 	slli	r3,r4,3
   81f98:	003f8e06 	br	81dd4 <_malloc_r+0x4d8>
   81f9c:	480b883a 	mov	r5,r9
   81fa0:	6807883a 	mov	r3,r13
   81fa4:	288000cc 	andi	r2,r5,3
   81fa8:	18fffe04 	addi	r3,r3,-8
   81fac:	297fffc4 	addi	r5,r5,-1
   81fb0:	10001526 	beq	r2,zero,82008 <_malloc_r+0x70c>
   81fb4:	18800217 	ldw	r2,8(r3)
   81fb8:	10fffa26 	beq	r2,r3,81fa4 <_malloc_r+0x6a8>
   81fbc:	2109883a 	add	r4,r4,r4
   81fc0:	393f1e36 	bltu	r7,r4,81c3c <_malloc_r+0x340>
   81fc4:	203f1d26 	beq	r4,zero,81c3c <_malloc_r+0x340>
   81fc8:	21c4703a 	and	r2,r4,r7
   81fcc:	10000226 	beq	r2,zero,81fd8 <_malloc_r+0x6dc>
   81fd0:	6013883a 	mov	r9,r12
   81fd4:	003ee106 	br	81b5c <_malloc_r+0x260>
   81fd8:	2109883a 	add	r4,r4,r4
   81fdc:	3904703a 	and	r2,r7,r4
   81fe0:	63000104 	addi	r12,r12,4
   81fe4:	103ffc26 	beq	r2,zero,81fd8 <_malloc_r+0x6dc>
   81fe8:	6013883a 	mov	r9,r12
   81fec:	003edb06 	br	81b5c <_malloc_r+0x260>
   81ff0:	00805504 	movi	r2,340
   81ff4:	11000836 	bltu	r2,r4,82018 <_malloc_r+0x71c>
   81ff8:	2804d3fa 	srli	r2,r5,15
   81ffc:	11001dc4 	addi	r4,r2,119
   82000:	200690fa 	slli	r3,r4,3
   82004:	003f7306 	br	81dd4 <_malloc_r+0x4d8>
   82008:	0104303a 	nor	r2,zero,r4
   8200c:	388e703a 	and	r7,r7,r2
   82010:	e1c00115 	stw	r7,4(fp)
   82014:	003fe906 	br	81fbc <_malloc_r+0x6c0>
   82018:	00815504 	movi	r2,1364
   8201c:	1100032e 	bgeu	r2,r4,8202c <_malloc_r+0x730>
   82020:	01001f84 	movi	r4,126
   82024:	00c0fc04 	movi	r3,1008
   82028:	003f6a06 	br	81dd4 <_malloc_r+0x4d8>
   8202c:	2804d4ba 	srli	r2,r5,18
   82030:	11001f04 	addi	r4,r2,124
   82034:	200690fa 	slli	r3,r4,3
   82038:	003f6606 	br	81dd4 <_malloc_r+0x4d8>

0008203c <memset>:
   8203c:	008000c4 	movi	r2,3
   82040:	29403fcc 	andi	r5,r5,255
   82044:	2007883a 	mov	r3,r4
   82048:	1180022e 	bgeu	r2,r6,82054 <memset+0x18>
   8204c:	2084703a 	and	r2,r4,r2
   82050:	10000826 	beq	r2,zero,82074 <memset+0x38>
   82054:	30000526 	beq	r6,zero,8206c <memset+0x30>
   82058:	2805883a 	mov	r2,r5
   8205c:	30cd883a 	add	r6,r6,r3
   82060:	18800005 	stb	r2,0(r3)
   82064:	18c00044 	addi	r3,r3,1
   82068:	19bffd1e 	bne	r3,r6,82060 <memset+0x24>
   8206c:	2005883a 	mov	r2,r4
   82070:	f800283a 	ret
   82074:	2804923a 	slli	r2,r5,8
   82078:	020003c4 	movi	r8,15
   8207c:	200f883a 	mov	r7,r4
   82080:	2884b03a 	or	r2,r5,r2
   82084:	1006943a 	slli	r3,r2,16
   82088:	10c6b03a 	or	r3,r2,r3
   8208c:	41800a2e 	bgeu	r8,r6,820b8 <memset+0x7c>
   82090:	4005883a 	mov	r2,r8
   82094:	31bffc04 	addi	r6,r6,-16
   82098:	38c00015 	stw	r3,0(r7)
   8209c:	38c00115 	stw	r3,4(r7)
   820a0:	38c00215 	stw	r3,8(r7)
   820a4:	38c00315 	stw	r3,12(r7)
   820a8:	39c00404 	addi	r7,r7,16
   820ac:	11bff936 	bltu	r2,r6,82094 <memset+0x58>
   820b0:	008000c4 	movi	r2,3
   820b4:	1180052e 	bgeu	r2,r6,820cc <memset+0x90>
   820b8:	31bfff04 	addi	r6,r6,-4
   820bc:	008000c4 	movi	r2,3
   820c0:	38c00015 	stw	r3,0(r7)
   820c4:	39c00104 	addi	r7,r7,4
   820c8:	11bffb36 	bltu	r2,r6,820b8 <memset+0x7c>
   820cc:	3807883a 	mov	r3,r7
   820d0:	003fe006 	br	82054 <memset+0x18>

000820d4 <_open_r>:
   820d4:	defffd04 	addi	sp,sp,-12
   820d8:	dc000015 	stw	r16,0(sp)
   820dc:	04000274 	movhi	r16,9
   820e0:	841d8504 	addi	r16,r16,30228
   820e4:	dc400115 	stw	r17,4(sp)
   820e8:	80000015 	stw	zero,0(r16)
   820ec:	2023883a 	mov	r17,r4
   820f0:	2809883a 	mov	r4,r5
   820f4:	300b883a 	mov	r5,r6
   820f8:	380d883a 	mov	r6,r7
   820fc:	dfc00215 	stw	ra,8(sp)
   82100:	00903cc0 	call	903cc <open>
   82104:	1007883a 	mov	r3,r2
   82108:	00bfffc4 	movi	r2,-1
   8210c:	18800626 	beq	r3,r2,82128 <_open_r+0x54>
   82110:	1805883a 	mov	r2,r3
   82114:	dfc00217 	ldw	ra,8(sp)
   82118:	dc400117 	ldw	r17,4(sp)
   8211c:	dc000017 	ldw	r16,0(sp)
   82120:	dec00304 	addi	sp,sp,12
   82124:	f800283a 	ret
   82128:	80800017 	ldw	r2,0(r16)
   8212c:	103ff826 	beq	r2,zero,82110 <_open_r+0x3c>
   82130:	88800015 	stw	r2,0(r17)
   82134:	1805883a 	mov	r2,r3
   82138:	dfc00217 	ldw	ra,8(sp)
   8213c:	dc400117 	ldw	r17,4(sp)
   82140:	dc000017 	ldw	r16,0(sp)
   82144:	dec00304 	addi	sp,sp,12
   82148:	f800283a 	ret

0008214c <printf>:
   8214c:	defffb04 	addi	sp,sp,-20
   82150:	dfc00115 	stw	ra,4(sp)
   82154:	d9400215 	stw	r5,8(sp)
   82158:	d9800315 	stw	r6,12(sp)
   8215c:	d9c00415 	stw	r7,16(sp)
   82160:	00800274 	movhi	r2,9
   82164:	10968804 	addi	r2,r2,23072
   82168:	10c00017 	ldw	r3,0(r2)
   8216c:	200b883a 	mov	r5,r4
   82170:	d8800204 	addi	r2,sp,8
   82174:	19000217 	ldw	r4,8(r3)
   82178:	100d883a 	mov	r6,r2
   8217c:	d8800015 	stw	r2,0(sp)
   82180:	00849500 	call	84950 <__vfprintf_internal>
   82184:	dfc00117 	ldw	ra,4(sp)
   82188:	dec00504 	addi	sp,sp,20
   8218c:	f800283a 	ret

00082190 <_printf_r>:
   82190:	defffc04 	addi	sp,sp,-16
   82194:	dfc00115 	stw	ra,4(sp)
   82198:	d9800215 	stw	r6,8(sp)
   8219c:	d9c00315 	stw	r7,12(sp)
   821a0:	280d883a 	mov	r6,r5
   821a4:	21400217 	ldw	r5,8(r4)
   821a8:	d8c00204 	addi	r3,sp,8
   821ac:	180f883a 	mov	r7,r3
   821b0:	d8c00015 	stw	r3,0(sp)
   821b4:	0082a8c0 	call	82a8c <___vfprintf_internal_r>
   821b8:	dfc00117 	ldw	ra,4(sp)
   821bc:	dec00404 	addi	sp,sp,16
   821c0:	f800283a 	ret

000821c4 <_puts_r>:
   821c4:	defff604 	addi	sp,sp,-40
   821c8:	dc400715 	stw	r17,28(sp)
   821cc:	2023883a 	mov	r17,r4
   821d0:	2809883a 	mov	r4,r5
   821d4:	dfc00915 	stw	ra,36(sp)
   821d8:	dcc00815 	stw	r19,32(sp)
   821dc:	2827883a 	mov	r19,r5
   821e0:	008274c0 	call	8274c <strlen>
   821e4:	89400217 	ldw	r5,8(r17)
   821e8:	00c00274 	movhi	r3,9
   821ec:	18ce1c04 	addi	r3,r3,14448
   821f0:	01c00044 	movi	r7,1
   821f4:	12000044 	addi	r8,r2,1
   821f8:	d8c00515 	stw	r3,20(sp)
   821fc:	d9c00615 	stw	r7,24(sp)
   82200:	d8c00304 	addi	r3,sp,12
   82204:	01c00084 	movi	r7,2
   82208:	8809883a 	mov	r4,r17
   8220c:	d80d883a 	mov	r6,sp
   82210:	d8c00015 	stw	r3,0(sp)
   82214:	dcc00315 	stw	r19,12(sp)
   82218:	da000215 	stw	r8,8(sp)
   8221c:	d9c00115 	stw	r7,4(sp)
   82220:	d8800415 	stw	r2,16(sp)
   82224:	0087e040 	call	87e04 <__sfvwrite_r>
   82228:	00ffffc4 	movi	r3,-1
   8222c:	10000626 	beq	r2,zero,82248 <_puts_r+0x84>
   82230:	1805883a 	mov	r2,r3
   82234:	dfc00917 	ldw	ra,36(sp)
   82238:	dcc00817 	ldw	r19,32(sp)
   8223c:	dc400717 	ldw	r17,28(sp)
   82240:	dec00a04 	addi	sp,sp,40
   82244:	f800283a 	ret
   82248:	00c00284 	movi	r3,10
   8224c:	1805883a 	mov	r2,r3
   82250:	dfc00917 	ldw	ra,36(sp)
   82254:	dcc00817 	ldw	r19,32(sp)
   82258:	dc400717 	ldw	r17,28(sp)
   8225c:	dec00a04 	addi	sp,sp,40
   82260:	f800283a 	ret

00082264 <puts>:
   82264:	00800274 	movhi	r2,9
   82268:	10968804 	addi	r2,r2,23072
   8226c:	200b883a 	mov	r5,r4
   82270:	11000017 	ldw	r4,0(r2)
   82274:	00821c41 	jmpi	821c4 <_puts_r>

00082278 <__srefill_r>:
   82278:	defffd04 	addi	sp,sp,-12
   8227c:	dc400115 	stw	r17,4(sp)
   82280:	dc000015 	stw	r16,0(sp)
   82284:	dfc00215 	stw	ra,8(sp)
   82288:	2023883a 	mov	r17,r4
   8228c:	2821883a 	mov	r16,r5
   82290:	20000226 	beq	r4,zero,8229c <__srefill_r+0x24>
   82294:	20800e17 	ldw	r2,56(r4)
   82298:	10004126 	beq	r2,zero,823a0 <__srefill_r+0x128>
   8229c:	80c0030b 	ldhu	r3,12(r16)
   822a0:	80000115 	stw	zero,4(r16)
   822a4:	1880080c 	andi	r2,r3,32
   822a8:	1000361e 	bne	r2,zero,82384 <__srefill_r+0x10c>
   822ac:	1880010c 	andi	r2,r3,4
   822b0:	1000211e 	bne	r2,zero,82338 <__srefill_r+0xc0>
   822b4:	1880040c 	andi	r2,r3,16
   822b8:	10005026 	beq	r2,zero,823fc <__srefill_r+0x184>
   822bc:	1880020c 	andi	r2,r3,8
   822c0:	1000541e 	bne	r2,zero,82414 <__srefill_r+0x19c>
   822c4:	8080030b 	ldhu	r2,12(r16)
   822c8:	10800114 	ori	r2,r2,4
   822cc:	8080030d 	sth	r2,12(r16)
   822d0:	80800417 	ldw	r2,16(r16)
   822d4:	10004526 	beq	r2,zero,823ec <__srefill_r+0x174>
   822d8:	8080030b 	ldhu	r2,12(r16)
   822dc:	108000cc 	andi	r2,r2,3
   822e0:	1000361e 	bne	r2,zero,823bc <__srefill_r+0x144>
   822e4:	81800417 	ldw	r6,16(r16)
   822e8:	80c00817 	ldw	r3,32(r16)
   822ec:	81400717 	ldw	r5,28(r16)
   822f0:	81c00517 	ldw	r7,20(r16)
   822f4:	8809883a 	mov	r4,r17
   822f8:	81800015 	stw	r6,0(r16)
   822fc:	183ee83a 	callr	r3
   82300:	80c0030b 	ldhu	r3,12(r16)
   82304:	1009883a 	mov	r4,r2
   82308:	80800115 	stw	r2,4(r16)
   8230c:	00b7ffc4 	movi	r2,-8193
   82310:	1884703a 	and	r2,r3,r2
   82314:	8080030d 	sth	r2,12(r16)
   82318:	0100230e 	bge	zero,r4,823a8 <__srefill_r+0x130>
   8231c:	0009883a 	mov	r4,zero
   82320:	2005883a 	mov	r2,r4
   82324:	dfc00217 	ldw	ra,8(sp)
   82328:	dc400117 	ldw	r17,4(sp)
   8232c:	dc000017 	ldw	r16,0(sp)
   82330:	dec00304 	addi	sp,sp,12
   82334:	f800283a 	ret
   82338:	81400c17 	ldw	r5,48(r16)
   8233c:	283fe426 	beq	r5,zero,822d0 <__srefill_r+0x58>
   82340:	80801004 	addi	r2,r16,64
   82344:	28800226 	beq	r5,r2,82350 <__srefill_r+0xd8>
   82348:	8809883a 	mov	r4,r17
   8234c:	0080d140 	call	80d14 <_free_r>
   82350:	80800f17 	ldw	r2,60(r16)
   82354:	80000c15 	stw	zero,48(r16)
   82358:	80800115 	stw	r2,4(r16)
   8235c:	103fdc26 	beq	r2,zero,822d0 <__srefill_r+0x58>
   82360:	80800e17 	ldw	r2,56(r16)
   82364:	0009883a 	mov	r4,zero
   82368:	80800015 	stw	r2,0(r16)
   8236c:	2005883a 	mov	r2,r4
   82370:	dfc00217 	ldw	ra,8(sp)
   82374:	dc400117 	ldw	r17,4(sp)
   82378:	dc000017 	ldw	r16,0(sp)
   8237c:	dec00304 	addi	sp,sp,12
   82380:	f800283a 	ret
   82384:	013fffc4 	movi	r4,-1
   82388:	2005883a 	mov	r2,r4
   8238c:	dfc00217 	ldw	ra,8(sp)
   82390:	dc400117 	ldw	r17,4(sp)
   82394:	dc000017 	ldw	r16,0(sp)
   82398:	dec00304 	addi	sp,sp,12
   8239c:	f800283a 	ret
   823a0:	00807ec0 	call	807ec <__sinit>
   823a4:	003fbd06 	br	8229c <__srefill_r+0x24>
   823a8:	20000b1e 	bne	r4,zero,823d8 <__srefill_r+0x160>
   823ac:	10800814 	ori	r2,r2,32
   823b0:	013fffc4 	movi	r4,-1
   823b4:	8080030d 	sth	r2,12(r16)
   823b8:	003fd906 	br	82320 <__srefill_r+0xa8>
   823bc:	00800274 	movhi	r2,9
   823c0:	10968904 	addi	r2,r2,23076
   823c4:	11000017 	ldw	r4,0(r2)
   823c8:	01400234 	movhi	r5,8
   823cc:	29490f04 	addi	r5,r5,9276
   823d0:	00815c40 	call	815c4 <_fwalk>
   823d4:	003fc306 	br	822e4 <__srefill_r+0x6c>
   823d8:	10801014 	ori	r2,r2,64
   823dc:	013fffc4 	movi	r4,-1
   823e0:	8080030d 	sth	r2,12(r16)
   823e4:	80000115 	stw	zero,4(r16)
   823e8:	003fcd06 	br	82320 <__srefill_r+0xa8>
   823ec:	8809883a 	mov	r4,r17
   823f0:	800b883a 	mov	r5,r16
   823f4:	00817680 	call	81768 <__smakebuf_r>
   823f8:	003fb706 	br	822d8 <__srefill_r+0x60>
   823fc:	18c01014 	ori	r3,r3,64
   82400:	00800244 	movi	r2,9
   82404:	013fffc4 	movi	r4,-1
   82408:	88800015 	stw	r2,0(r17)
   8240c:	80c0030d 	sth	r3,12(r16)
   82410:	003fc306 	br	82320 <__srefill_r+0xa8>
   82414:	8809883a 	mov	r4,r17
   82418:	800b883a 	mov	r5,r16
   8241c:	00805540 	call	80554 <_fflush_r>
   82420:	103fd81e 	bne	r2,zero,82384 <__srefill_r+0x10c>
   82424:	8080030b 	ldhu	r2,12(r16)
   82428:	80000215 	stw	zero,8(r16)
   8242c:	80000615 	stw	zero,24(r16)
   82430:	10bffdcc 	andi	r2,r2,65527
   82434:	8080030d 	sth	r2,12(r16)
   82438:	003fa206 	br	822c4 <__srefill_r+0x4c>

0008243c <lflush>:
   8243c:	20c0030b 	ldhu	r3,12(r4)
   82440:	01400244 	movi	r5,9
   82444:	0005883a 	mov	r2,zero
   82448:	18c0024c 	andi	r3,r3,9
   8244c:	19400126 	beq	r3,r5,82454 <lflush+0x18>
   82450:	f800283a 	ret
   82454:	00807501 	jmpi	80750 <fflush>

00082458 <_sbrk_r>:
   82458:	defffd04 	addi	sp,sp,-12
   8245c:	dc000015 	stw	r16,0(sp)
   82460:	04000274 	movhi	r16,9
   82464:	841d8504 	addi	r16,r16,30228
   82468:	dc400115 	stw	r17,4(sp)
   8246c:	80000015 	stw	zero,0(r16)
   82470:	2023883a 	mov	r17,r4
   82474:	2809883a 	mov	r4,r5
   82478:	dfc00215 	stw	ra,8(sp)
   8247c:	00907b40 	call	907b4 <sbrk>
   82480:	1007883a 	mov	r3,r2
   82484:	00bfffc4 	movi	r2,-1
   82488:	18800626 	beq	r3,r2,824a4 <_sbrk_r+0x4c>
   8248c:	1805883a 	mov	r2,r3
   82490:	dfc00217 	ldw	ra,8(sp)
   82494:	dc400117 	ldw	r17,4(sp)
   82498:	dc000017 	ldw	r16,0(sp)
   8249c:	dec00304 	addi	sp,sp,12
   824a0:	f800283a 	ret
   824a4:	80800017 	ldw	r2,0(r16)
   824a8:	103ff826 	beq	r2,zero,8248c <_sbrk_r+0x34>
   824ac:	88800015 	stw	r2,0(r17)
   824b0:	1805883a 	mov	r2,r3
   824b4:	dfc00217 	ldw	ra,8(sp)
   824b8:	dc400117 	ldw	r17,4(sp)
   824bc:	dc000017 	ldw	r16,0(sp)
   824c0:	dec00304 	addi	sp,sp,12
   824c4:	f800283a 	ret

000824c8 <_scanf_r>:
   824c8:	defffc04 	addi	sp,sp,-16
   824cc:	dfc00115 	stw	ra,4(sp)
   824d0:	d9800215 	stw	r6,8(sp)
   824d4:	d9c00315 	stw	r7,12(sp)
   824d8:	280d883a 	mov	r6,r5
   824dc:	21400117 	ldw	r5,4(r4)
   824e0:	d8c00204 	addi	r3,sp,8
   824e4:	180f883a 	mov	r7,r3
   824e8:	d8c00015 	stw	r3,0(sp)
   824ec:	00849740 	call	84974 <__svfscanf_r>
   824f0:	dfc00117 	ldw	ra,4(sp)
   824f4:	dec00404 	addi	sp,sp,16
   824f8:	f800283a 	ret

000824fc <scanf>:
   824fc:	defffb04 	addi	sp,sp,-20
   82500:	dfc00115 	stw	ra,4(sp)
   82504:	d9400215 	stw	r5,8(sp)
   82508:	d9800315 	stw	r6,12(sp)
   8250c:	d9c00415 	stw	r7,16(sp)
   82510:	00800274 	movhi	r2,9
   82514:	10968804 	addi	r2,r2,23072
   82518:	11400017 	ldw	r5,0(r2)
   8251c:	200d883a 	mov	r6,r4
   82520:	d8800204 	addi	r2,sp,8
   82524:	2809883a 	mov	r4,r5
   82528:	29400117 	ldw	r5,4(r5)
   8252c:	100f883a 	mov	r7,r2
   82530:	d8800015 	stw	r2,0(sp)
   82534:	00849740 	call	84974 <__svfscanf_r>
   82538:	dfc00117 	ldw	ra,4(sp)
   8253c:	dec00504 	addi	sp,sp,20
   82540:	f800283a 	ret

00082544 <__sclose>:
   82544:	2940038f 	ldh	r5,14(r5)
   82548:	00862b01 	jmpi	862b0 <_close_r>

0008254c <__sseek>:
   8254c:	defffe04 	addi	sp,sp,-8
   82550:	dc000015 	stw	r16,0(sp)
   82554:	2821883a 	mov	r16,r5
   82558:	2940038f 	ldh	r5,14(r5)
   8255c:	dfc00115 	stw	ra,4(sp)
   82560:	00884000 	call	88400 <_lseek_r>
   82564:	1007883a 	mov	r3,r2
   82568:	00bfffc4 	movi	r2,-1
   8256c:	18800926 	beq	r3,r2,82594 <__sseek+0x48>
   82570:	8080030b 	ldhu	r2,12(r16)
   82574:	80c01415 	stw	r3,80(r16)
   82578:	10840014 	ori	r2,r2,4096
   8257c:	8080030d 	sth	r2,12(r16)
   82580:	1805883a 	mov	r2,r3
   82584:	dfc00117 	ldw	ra,4(sp)
   82588:	dc000017 	ldw	r16,0(sp)
   8258c:	dec00204 	addi	sp,sp,8
   82590:	f800283a 	ret
   82594:	8080030b 	ldhu	r2,12(r16)
   82598:	10bbffcc 	andi	r2,r2,61439
   8259c:	8080030d 	sth	r2,12(r16)
   825a0:	1805883a 	mov	r2,r3
   825a4:	dfc00117 	ldw	ra,4(sp)
   825a8:	dc000017 	ldw	r16,0(sp)
   825ac:	dec00204 	addi	sp,sp,8
   825b0:	f800283a 	ret

000825b4 <__swrite>:
   825b4:	2880030b 	ldhu	r2,12(r5)
   825b8:	defffb04 	addi	sp,sp,-20
   825bc:	dcc00315 	stw	r19,12(sp)
   825c0:	1080400c 	andi	r2,r2,256
   825c4:	dc800215 	stw	r18,8(sp)
   825c8:	dc400115 	stw	r17,4(sp)
   825cc:	dc000015 	stw	r16,0(sp)
   825d0:	3027883a 	mov	r19,r6
   825d4:	3825883a 	mov	r18,r7
   825d8:	dfc00415 	stw	ra,16(sp)
   825dc:	2821883a 	mov	r16,r5
   825e0:	000d883a 	mov	r6,zero
   825e4:	01c00084 	movi	r7,2
   825e8:	2023883a 	mov	r17,r4
   825ec:	10000226 	beq	r2,zero,825f8 <__swrite+0x44>
   825f0:	2940038f 	ldh	r5,14(r5)
   825f4:	00884000 	call	88400 <_lseek_r>
   825f8:	8080030b 	ldhu	r2,12(r16)
   825fc:	8140038f 	ldh	r5,14(r16)
   82600:	8809883a 	mov	r4,r17
   82604:	10bbffcc 	andi	r2,r2,61439
   82608:	980d883a 	mov	r6,r19
   8260c:	900f883a 	mov	r7,r18
   82610:	8080030d 	sth	r2,12(r16)
   82614:	dfc00417 	ldw	ra,16(sp)
   82618:	dcc00317 	ldw	r19,12(sp)
   8261c:	dc800217 	ldw	r18,8(sp)
   82620:	dc400117 	ldw	r17,4(sp)
   82624:	dc000017 	ldw	r16,0(sp)
   82628:	dec00504 	addi	sp,sp,20
   8262c:	00860fc1 	jmpi	860fc <_write_r>

00082630 <__sread>:
   82630:	defffe04 	addi	sp,sp,-8
   82634:	dc000015 	stw	r16,0(sp)
   82638:	2821883a 	mov	r16,r5
   8263c:	2940038f 	ldh	r5,14(r5)
   82640:	dfc00115 	stw	ra,4(sp)
   82644:	00898680 	call	89868 <_read_r>
   82648:	1007883a 	mov	r3,r2
   8264c:	10000816 	blt	r2,zero,82670 <__sread+0x40>
   82650:	80801417 	ldw	r2,80(r16)
   82654:	10c5883a 	add	r2,r2,r3
   82658:	80801415 	stw	r2,80(r16)
   8265c:	1805883a 	mov	r2,r3
   82660:	dfc00117 	ldw	ra,4(sp)
   82664:	dc000017 	ldw	r16,0(sp)
   82668:	dec00204 	addi	sp,sp,8
   8266c:	f800283a 	ret
   82670:	8080030b 	ldhu	r2,12(r16)
   82674:	10bbffcc 	andi	r2,r2,61439
   82678:	8080030d 	sth	r2,12(r16)
   8267c:	1805883a 	mov	r2,r3
   82680:	dfc00117 	ldw	ra,4(sp)
   82684:	dc000017 	ldw	r16,0(sp)
   82688:	dec00204 	addi	sp,sp,8
   8268c:	f800283a 	ret

00082690 <strcmp>:
   82690:	2144b03a 	or	r2,r4,r5
   82694:	108000cc 	andi	r2,r2,3
   82698:	10001d1e 	bne	r2,zero,82710 <strcmp+0x80>
   8269c:	200f883a 	mov	r7,r4
   826a0:	28800017 	ldw	r2,0(r5)
   826a4:	21000017 	ldw	r4,0(r4)
   826a8:	280d883a 	mov	r6,r5
   826ac:	2080161e 	bne	r4,r2,82708 <strcmp+0x78>
   826b0:	023fbff4 	movhi	r8,65279
   826b4:	423fbfc4 	addi	r8,r8,-257
   826b8:	2207883a 	add	r3,r4,r8
   826bc:	01602074 	movhi	r5,32897
   826c0:	29602004 	addi	r5,r5,-32640
   826c4:	1946703a 	and	r3,r3,r5
   826c8:	0104303a 	nor	r2,zero,r4
   826cc:	10c4703a 	and	r2,r2,r3
   826d0:	10001c1e 	bne	r2,zero,82744 <strcmp+0xb4>
   826d4:	4013883a 	mov	r9,r8
   826d8:	2811883a 	mov	r8,r5
   826dc:	00000106 	br	826e4 <strcmp+0x54>
   826e0:	1800181e 	bne	r3,zero,82744 <strcmp+0xb4>
   826e4:	39c00104 	addi	r7,r7,4
   826e8:	39000017 	ldw	r4,0(r7)
   826ec:	31800104 	addi	r6,r6,4
   826f0:	31400017 	ldw	r5,0(r6)
   826f4:	2245883a 	add	r2,r4,r9
   826f8:	1204703a 	and	r2,r2,r8
   826fc:	0106303a 	nor	r3,zero,r4
   82700:	1886703a 	and	r3,r3,r2
   82704:	217ff626 	beq	r4,r5,826e0 <strcmp+0x50>
   82708:	3809883a 	mov	r4,r7
   8270c:	300b883a 	mov	r5,r6
   82710:	20c00007 	ldb	r3,0(r4)
   82714:	1800051e 	bne	r3,zero,8272c <strcmp+0x9c>
   82718:	00000606 	br	82734 <strcmp+0xa4>
   8271c:	21000044 	addi	r4,r4,1
   82720:	20c00007 	ldb	r3,0(r4)
   82724:	29400044 	addi	r5,r5,1
   82728:	18000226 	beq	r3,zero,82734 <strcmp+0xa4>
   8272c:	28800007 	ldb	r2,0(r5)
   82730:	18bffa26 	beq	r3,r2,8271c <strcmp+0x8c>
   82734:	20c00003 	ldbu	r3,0(r4)
   82738:	28800003 	ldbu	r2,0(r5)
   8273c:	1885c83a 	sub	r2,r3,r2
   82740:	f800283a 	ret
   82744:	0005883a 	mov	r2,zero
   82748:	f800283a 	ret

0008274c <strlen>:
   8274c:	208000cc 	andi	r2,r4,3
   82750:	2011883a 	mov	r8,r4
   82754:	1000161e 	bne	r2,zero,827b0 <strlen+0x64>
   82758:	20c00017 	ldw	r3,0(r4)
   8275c:	017fbff4 	movhi	r5,65279
   82760:	297fbfc4 	addi	r5,r5,-257
   82764:	01e02074 	movhi	r7,32897
   82768:	39e02004 	addi	r7,r7,-32640
   8276c:	1945883a 	add	r2,r3,r5
   82770:	11c4703a 	and	r2,r2,r7
   82774:	00c6303a 	nor	r3,zero,r3
   82778:	1886703a 	and	r3,r3,r2
   8277c:	18000c1e 	bne	r3,zero,827b0 <strlen+0x64>
   82780:	280d883a 	mov	r6,r5
   82784:	380b883a 	mov	r5,r7
   82788:	21000104 	addi	r4,r4,4
   8278c:	20800017 	ldw	r2,0(r4)
   82790:	1187883a 	add	r3,r2,r6
   82794:	1946703a 	and	r3,r3,r5
   82798:	0084303a 	nor	r2,zero,r2
   8279c:	10c4703a 	and	r2,r2,r3
   827a0:	103ff926 	beq	r2,zero,82788 <strlen+0x3c>
   827a4:	20800007 	ldb	r2,0(r4)
   827a8:	10000326 	beq	r2,zero,827b8 <strlen+0x6c>
   827ac:	21000044 	addi	r4,r4,1
   827b0:	20800007 	ldb	r2,0(r4)
   827b4:	103ffd1e 	bne	r2,zero,827ac <strlen+0x60>
   827b8:	2205c83a 	sub	r2,r4,r8
   827bc:	f800283a 	ret

000827c0 <_strtol_r>:
   827c0:	defff304 	addi	sp,sp,-52
   827c4:	00800274 	movhi	r2,9
   827c8:	10968c04 	addi	r2,r2,23088
   827cc:	dd000715 	stw	r20,28(sp)
   827d0:	15000017 	ldw	r20,0(r2)
   827d4:	ddc00a15 	stw	r23,40(sp)
   827d8:	dc800515 	stw	r18,20(sp)
   827dc:	dc400415 	stw	r17,16(sp)
   827e0:	dfc00c15 	stw	ra,48(sp)
   827e4:	df000b15 	stw	fp,44(sp)
   827e8:	dd800915 	stw	r22,36(sp)
   827ec:	dd400815 	stw	r21,32(sp)
   827f0:	dcc00615 	stw	r19,24(sp)
   827f4:	dc000315 	stw	r16,12(sp)
   827f8:	282f883a 	mov	r23,r5
   827fc:	d9000115 	stw	r4,4(sp)
   82800:	d9800215 	stw	r6,8(sp)
   82804:	3825883a 	mov	r18,r7
   82808:	2823883a 	mov	r17,r5
   8280c:	8c000007 	ldb	r16,0(r17)
   82810:	8c400044 	addi	r17,r17,1
   82814:	a407883a 	add	r3,r20,r16
   82818:	18800003 	ldbu	r2,0(r3)
   8281c:	1080020c 	andi	r2,r2,8
   82820:	103ffa1e 	bne	r2,zero,8280c <_strtol_r+0x4c>
   82824:	00800b44 	movi	r2,45
   82828:	80805c26 	beq	r16,r2,8299c <_strtol_r+0x1dc>
   8282c:	00800ac4 	movi	r2,43
   82830:	80805726 	beq	r16,r2,82990 <_strtol_r+0x1d0>
   82834:	d8000015 	stw	zero,0(sp)
   82838:	9007003a 	cmpeq	r3,r18,zero
   8283c:	1800431e 	bne	r3,zero,8294c <_strtol_r+0x18c>
   82840:	00800404 	movi	r2,16
   82844:	90804126 	beq	r18,r2,8294c <_strtol_r+0x18c>
   82848:	902b883a 	mov	r21,r18
   8284c:	d8c00017 	ldw	r3,0(sp)
   82850:	1838c03a 	cmpne	fp,r3,zero
   82854:	e0004a1e 	bne	fp,zero,82980 <_strtol_r+0x1c0>
   82858:	04e00034 	movhi	r19,32768
   8285c:	9cffffc4 	addi	r19,r19,-1
   82860:	9809883a 	mov	r4,r19
   82864:	a80b883a 	mov	r5,r21
   82868:	008f3300 	call	8f330 <__umodsi3>
   8286c:	9809883a 	mov	r4,r19
   82870:	a80b883a 	mov	r5,r21
   82874:	102d883a 	mov	r22,r2
   82878:	008f3280 	call	8f328 <__udivsi3>
   8287c:	1027883a 	mov	r19,r2
   82880:	a405883a 	add	r2,r20,r16
   82884:	11400003 	ldbu	r5,0(r2)
   82888:	0009883a 	mov	r4,zero
   8288c:	000d883a 	mov	r6,zero
   82890:	28c0010c 	andi	r3,r5,4
   82894:	18000f26 	beq	r3,zero,828d4 <_strtol_r+0x114>
   82898:	843ff404 	addi	r16,r16,-48
   8289c:	8480150e 	bge	r16,r18,828f4 <_strtol_r+0x134>
   828a0:	30003216 	blt	r6,zero,8296c <_strtol_r+0x1ac>
   828a4:	99003136 	bltu	r19,r4,8296c <_strtol_r+0x1ac>
   828a8:	24c02f26 	beq	r4,r19,82968 <_strtol_r+0x1a8>
   828ac:	a80b883a 	mov	r5,r21
   828b0:	008f3380 	call	8f338 <__mulsi3>
   828b4:	1409883a 	add	r4,r2,r16
   828b8:	01800044 	movi	r6,1
   828bc:	8c000007 	ldb	r16,0(r17)
   828c0:	8c400044 	addi	r17,r17,1
   828c4:	a405883a 	add	r2,r20,r16
   828c8:	11400003 	ldbu	r5,0(r2)
   828cc:	28c0010c 	andi	r3,r5,4
   828d0:	183ff11e 	bne	r3,zero,82898 <_strtol_r+0xd8>
   828d4:	288000cc 	andi	r2,r5,3
   828d8:	10000626 	beq	r2,zero,828f4 <_strtol_r+0x134>
   828dc:	2880004c 	andi	r2,r5,1
   828e0:	1005003a 	cmpeq	r2,r2,zero
   828e4:	1000231e 	bne	r2,zero,82974 <_strtol_r+0x1b4>
   828e8:	00800dc4 	movi	r2,55
   828ec:	80a1c83a 	sub	r16,r16,r2
   828f0:	84bfeb16 	blt	r16,r18,828a0 <_strtol_r+0xe0>
   828f4:	30002e16 	blt	r6,zero,829b0 <_strtol_r+0x1f0>
   828f8:	e000231e 	bne	fp,zero,82988 <_strtol_r+0x1c8>
   828fc:	2007883a 	mov	r3,r4
   82900:	d8800217 	ldw	r2,8(sp)
   82904:	10000426 	beq	r2,zero,82918 <_strtol_r+0x158>
   82908:	30000126 	beq	r6,zero,82910 <_strtol_r+0x150>
   8290c:	8dffffc4 	addi	r23,r17,-1
   82910:	d9000217 	ldw	r4,8(sp)
   82914:	25c00015 	stw	r23,0(r4)
   82918:	1805883a 	mov	r2,r3
   8291c:	dfc00c17 	ldw	ra,48(sp)
   82920:	df000b17 	ldw	fp,44(sp)
   82924:	ddc00a17 	ldw	r23,40(sp)
   82928:	dd800917 	ldw	r22,36(sp)
   8292c:	dd400817 	ldw	r21,32(sp)
   82930:	dd000717 	ldw	r20,28(sp)
   82934:	dcc00617 	ldw	r19,24(sp)
   82938:	dc800517 	ldw	r18,20(sp)
   8293c:	dc400417 	ldw	r17,16(sp)
   82940:	dc000317 	ldw	r16,12(sp)
   82944:	dec00d04 	addi	sp,sp,52
   82948:	f800283a 	ret
   8294c:	00800c04 	movi	r2,48
   82950:	80801f26 	beq	r16,r2,829d0 <_strtol_r+0x210>
   82954:	183fbc26 	beq	r3,zero,82848 <_strtol_r+0x88>
   82958:	00800c04 	movi	r2,48
   8295c:	80802926 	beq	r16,r2,82a04 <_strtol_r+0x244>
   82960:	04800284 	movi	r18,10
   82964:	003fb806 	br	82848 <_strtol_r+0x88>
   82968:	b43fd00e 	bge	r22,r16,828ac <_strtol_r+0xec>
   8296c:	01bfffc4 	movi	r6,-1
   82970:	003fd206 	br	828bc <_strtol_r+0xfc>
   82974:	008015c4 	movi	r2,87
   82978:	80a1c83a 	sub	r16,r16,r2
   8297c:	003fdc06 	br	828f0 <_strtol_r+0x130>
   82980:	04e00034 	movhi	r19,32768
   82984:	003fb606 	br	82860 <_strtol_r+0xa0>
   82988:	0107c83a 	sub	r3,zero,r4
   8298c:	003fdc06 	br	82900 <_strtol_r+0x140>
   82990:	8c000007 	ldb	r16,0(r17)
   82994:	8c400044 	addi	r17,r17,1
   82998:	003fa606 	br	82834 <_strtol_r+0x74>
   8299c:	8c000007 	ldb	r16,0(r17)
   829a0:	00800044 	movi	r2,1
   829a4:	8c400044 	addi	r17,r17,1
   829a8:	d8800015 	stw	r2,0(sp)
   829ac:	003fa206 	br	82838 <_strtol_r+0x78>
   829b0:	d9000017 	ldw	r4,0(sp)
   829b4:	2005003a 	cmpeq	r2,r4,zero
   829b8:	10000f1e 	bne	r2,zero,829f8 <_strtol_r+0x238>
   829bc:	00e00034 	movhi	r3,32768
   829c0:	d9000117 	ldw	r4,4(sp)
   829c4:	00800884 	movi	r2,34
   829c8:	20800015 	stw	r2,0(r4)
   829cc:	003fcc06 	br	82900 <_strtol_r+0x140>
   829d0:	89000007 	ldb	r4,0(r17)
   829d4:	00801e04 	movi	r2,120
   829d8:	20800226 	beq	r4,r2,829e4 <_strtol_r+0x224>
   829dc:	00801604 	movi	r2,88
   829e0:	20bfdc1e 	bne	r4,r2,82954 <_strtol_r+0x194>
   829e4:	8c000047 	ldb	r16,1(r17)
   829e8:	04800404 	movi	r18,16
   829ec:	8c400084 	addi	r17,r17,2
   829f0:	902b883a 	mov	r21,r18
   829f4:	003f9506 	br	8284c <_strtol_r+0x8c>
   829f8:	00e00034 	movhi	r3,32768
   829fc:	18ffffc4 	addi	r3,r3,-1
   82a00:	003fef06 	br	829c0 <_strtol_r+0x200>
   82a04:	04800204 	movi	r18,8
   82a08:	902b883a 	mov	r21,r18
   82a0c:	003f8f06 	br	8284c <_strtol_r+0x8c>

00082a10 <strtol>:
   82a10:	00800274 	movhi	r2,9
   82a14:	10968804 	addi	r2,r2,23072
   82a18:	2013883a 	mov	r9,r4
   82a1c:	11000017 	ldw	r4,0(r2)
   82a20:	2805883a 	mov	r2,r5
   82a24:	300f883a 	mov	r7,r6
   82a28:	480b883a 	mov	r5,r9
   82a2c:	100d883a 	mov	r6,r2
   82a30:	00827c01 	jmpi	827c0 <_strtol_r>

00082a34 <__sprint_r>:
   82a34:	30800217 	ldw	r2,8(r6)
   82a38:	defffe04 	addi	sp,sp,-8
   82a3c:	dc000015 	stw	r16,0(sp)
   82a40:	dfc00115 	stw	ra,4(sp)
   82a44:	3021883a 	mov	r16,r6
   82a48:	0007883a 	mov	r3,zero
   82a4c:	1000061e 	bne	r2,zero,82a68 <__sprint_r+0x34>
   82a50:	1805883a 	mov	r2,r3
   82a54:	30000115 	stw	zero,4(r6)
   82a58:	dfc00117 	ldw	ra,4(sp)
   82a5c:	dc000017 	ldw	r16,0(sp)
   82a60:	dec00204 	addi	sp,sp,8
   82a64:	f800283a 	ret
   82a68:	0087e040 	call	87e04 <__sfvwrite_r>
   82a6c:	1007883a 	mov	r3,r2
   82a70:	1805883a 	mov	r2,r3
   82a74:	80000115 	stw	zero,4(r16)
   82a78:	80000215 	stw	zero,8(r16)
   82a7c:	dfc00117 	ldw	ra,4(sp)
   82a80:	dc000017 	ldw	r16,0(sp)
   82a84:	dec00204 	addi	sp,sp,8
   82a88:	f800283a 	ret

00082a8c <___vfprintf_internal_r>:
   82a8c:	defea404 	addi	sp,sp,-1392
   82a90:	dd815815 	stw	r22,1376(sp)
   82a94:	dc015215 	stw	r16,1352(sp)
   82a98:	d9c15115 	stw	r7,1348(sp)
   82a9c:	dfc15b15 	stw	ra,1388(sp)
   82aa0:	df015a15 	stw	fp,1384(sp)
   82aa4:	ddc15915 	stw	r23,1380(sp)
   82aa8:	dd415715 	stw	r21,1372(sp)
   82aac:	dd015615 	stw	r20,1368(sp)
   82ab0:	dcc15515 	stw	r19,1364(sp)
   82ab4:	dc815415 	stw	r18,1360(sp)
   82ab8:	dc415315 	stw	r17,1356(sp)
   82abc:	282d883a 	mov	r22,r5
   82ac0:	3021883a 	mov	r16,r6
   82ac4:	d9014f15 	stw	r4,1340(sp)
   82ac8:	00883440 	call	88344 <_localeconv_r>
   82acc:	10800017 	ldw	r2,0(r2)
   82ad0:	d9c15117 	ldw	r7,1348(sp)
   82ad4:	d8814915 	stw	r2,1316(sp)
   82ad8:	d8814f17 	ldw	r2,1340(sp)
   82adc:	10000226 	beq	r2,zero,82ae8 <___vfprintf_internal_r+0x5c>
   82ae0:	10800e17 	ldw	r2,56(r2)
   82ae4:	10020d26 	beq	r2,zero,8331c <___vfprintf_internal_r+0x890>
   82ae8:	b080030b 	ldhu	r2,12(r22)
   82aec:	1080020c 	andi	r2,r2,8
   82af0:	10020e26 	beq	r2,zero,8332c <___vfprintf_internal_r+0x8a0>
   82af4:	b0800417 	ldw	r2,16(r22)
   82af8:	10020c26 	beq	r2,zero,8332c <___vfprintf_internal_r+0x8a0>
   82afc:	b200030b 	ldhu	r8,12(r22)
   82b00:	00800284 	movi	r2,10
   82b04:	40c0068c 	andi	r3,r8,26
   82b08:	18802f1e 	bne	r3,r2,82bc8 <___vfprintf_internal_r+0x13c>
   82b0c:	b080038f 	ldh	r2,14(r22)
   82b10:	10002d16 	blt	r2,zero,82bc8 <___vfprintf_internal_r+0x13c>
   82b14:	b240038b 	ldhu	r9,14(r22)
   82b18:	b2800717 	ldw	r10,28(r22)
   82b1c:	b2c00917 	ldw	r11,36(r22)
   82b20:	d9014f17 	ldw	r4,1340(sp)
   82b24:	dc402904 	addi	r17,sp,164
   82b28:	d8804004 	addi	r2,sp,256
   82b2c:	00c10004 	movi	r3,1024
   82b30:	423fff4c 	andi	r8,r8,65533
   82b34:	800d883a 	mov	r6,r16
   82b38:	880b883a 	mov	r5,r17
   82b3c:	da002c0d 	sth	r8,176(sp)
   82b40:	da402c8d 	sth	r9,178(sp)
   82b44:	da803015 	stw	r10,192(sp)
   82b48:	dac03215 	stw	r11,200(sp)
   82b4c:	d8802d15 	stw	r2,180(sp)
   82b50:	d8c02e15 	stw	r3,184(sp)
   82b54:	d8802915 	stw	r2,164(sp)
   82b58:	d8c02b15 	stw	r3,172(sp)
   82b5c:	d8002f15 	stw	zero,188(sp)
   82b60:	0082a8c0 	call	82a8c <___vfprintf_internal_r>
   82b64:	d8814b15 	stw	r2,1324(sp)
   82b68:	10000416 	blt	r2,zero,82b7c <___vfprintf_internal_r+0xf0>
   82b6c:	d9014f17 	ldw	r4,1340(sp)
   82b70:	880b883a 	mov	r5,r17
   82b74:	00805540 	call	80554 <_fflush_r>
   82b78:	1002321e 	bne	r2,zero,83444 <___vfprintf_internal_r+0x9b8>
   82b7c:	d8802c0b 	ldhu	r2,176(sp)
   82b80:	1080100c 	andi	r2,r2,64
   82b84:	10000326 	beq	r2,zero,82b94 <___vfprintf_internal_r+0x108>
   82b88:	b080030b 	ldhu	r2,12(r22)
   82b8c:	10801014 	ori	r2,r2,64
   82b90:	b080030d 	sth	r2,12(r22)
   82b94:	d8814b17 	ldw	r2,1324(sp)
   82b98:	dfc15b17 	ldw	ra,1388(sp)
   82b9c:	df015a17 	ldw	fp,1384(sp)
   82ba0:	ddc15917 	ldw	r23,1380(sp)
   82ba4:	dd815817 	ldw	r22,1376(sp)
   82ba8:	dd415717 	ldw	r21,1372(sp)
   82bac:	dd015617 	ldw	r20,1368(sp)
   82bb0:	dcc15517 	ldw	r19,1364(sp)
   82bb4:	dc815417 	ldw	r18,1360(sp)
   82bb8:	dc415317 	ldw	r17,1356(sp)
   82bbc:	dc015217 	ldw	r16,1352(sp)
   82bc0:	dec15c04 	addi	sp,sp,1392
   82bc4:	f800283a 	ret
   82bc8:	0005883a 	mov	r2,zero
   82bcc:	0007883a 	mov	r3,zero
   82bd0:	dd401904 	addi	r21,sp,100
   82bd4:	d8814215 	stw	r2,1288(sp)
   82bd8:	802f883a 	mov	r23,r16
   82bdc:	d8c14315 	stw	r3,1292(sp)
   82be0:	d8014b15 	stw	zero,1324(sp)
   82be4:	d8014815 	stw	zero,1312(sp)
   82be8:	d8014415 	stw	zero,1296(sp)
   82bec:	d8014715 	stw	zero,1308(sp)
   82bf0:	dd400c15 	stw	r21,48(sp)
   82bf4:	d8000e15 	stw	zero,56(sp)
   82bf8:	d8000d15 	stw	zero,52(sp)
   82bfc:	b8800007 	ldb	r2,0(r23)
   82c00:	10001926 	beq	r2,zero,82c68 <___vfprintf_internal_r+0x1dc>
   82c04:	00c00944 	movi	r3,37
   82c08:	10c01726 	beq	r2,r3,82c68 <___vfprintf_internal_r+0x1dc>
   82c0c:	b821883a 	mov	r16,r23
   82c10:	00000106 	br	82c18 <___vfprintf_internal_r+0x18c>
   82c14:	10c00326 	beq	r2,r3,82c24 <___vfprintf_internal_r+0x198>
   82c18:	84000044 	addi	r16,r16,1
   82c1c:	80800007 	ldb	r2,0(r16)
   82c20:	103ffc1e 	bne	r2,zero,82c14 <___vfprintf_internal_r+0x188>
   82c24:	85e7c83a 	sub	r19,r16,r23
   82c28:	98000e26 	beq	r19,zero,82c64 <___vfprintf_internal_r+0x1d8>
   82c2c:	dc800e17 	ldw	r18,56(sp)
   82c30:	dc400d17 	ldw	r17,52(sp)
   82c34:	008001c4 	movi	r2,7
   82c38:	94e5883a 	add	r18,r18,r19
   82c3c:	8c400044 	addi	r17,r17,1
   82c40:	adc00015 	stw	r23,0(r21)
   82c44:	dc800e15 	stw	r18,56(sp)
   82c48:	acc00115 	stw	r19,4(r21)
   82c4c:	dc400d15 	stw	r17,52(sp)
   82c50:	14428b16 	blt	r2,r17,83680 <___vfprintf_internal_r+0xbf4>
   82c54:	ad400204 	addi	r21,r21,8
   82c58:	d9014b17 	ldw	r4,1324(sp)
   82c5c:	24c9883a 	add	r4,r4,r19
   82c60:	d9014b15 	stw	r4,1324(sp)
   82c64:	802f883a 	mov	r23,r16
   82c68:	b8800007 	ldb	r2,0(r23)
   82c6c:	10013c26 	beq	r2,zero,83160 <___vfprintf_internal_r+0x6d4>
   82c70:	bdc00044 	addi	r23,r23,1
   82c74:	d8000405 	stb	zero,16(sp)
   82c78:	b8c00007 	ldb	r3,0(r23)
   82c7c:	04ffffc4 	movi	r19,-1
   82c80:	d8014c15 	stw	zero,1328(sp)
   82c84:	d8014a15 	stw	zero,1320(sp)
   82c88:	d8c14d15 	stw	r3,1332(sp)
   82c8c:	bdc00044 	addi	r23,r23,1
   82c90:	d9414d17 	ldw	r5,1332(sp)
   82c94:	00801604 	movi	r2,88
   82c98:	28fff804 	addi	r3,r5,-32
   82c9c:	10c06036 	bltu	r2,r3,82e20 <___vfprintf_internal_r+0x394>
   82ca0:	18c5883a 	add	r2,r3,r3
   82ca4:	1085883a 	add	r2,r2,r2
   82ca8:	00c00234 	movhi	r3,8
   82cac:	18cb2f04 	addi	r3,r3,11452
   82cb0:	10c5883a 	add	r2,r2,r3
   82cb4:	11000017 	ldw	r4,0(r2)
   82cb8:	2000683a 	jmp	r4
   82cbc:	00083c30 	cmpltui	zero,zero,8432
   82cc0:	00082e20 	cmpeqi	zero,zero,8376
   82cc4:	00082e20 	cmpeqi	zero,zero,8376
   82cc8:	00083c1c 	xori	zero,zero,8432
   82ccc:	00082e20 	cmpeqi	zero,zero,8376
   82cd0:	00082e20 	cmpeqi	zero,zero,8376
   82cd4:	00082e20 	cmpeqi	zero,zero,8376
   82cd8:	00082e20 	cmpeqi	zero,zero,8376
   82cdc:	00082e20 	cmpeqi	zero,zero,8376
   82ce0:	00082e20 	cmpeqi	zero,zero,8376
   82ce4:	000839fc 	xorhi	zero,zero,8423
   82ce8:	00083c0c 	andi	zero,zero,8432
   82cec:	00082e20 	cmpeqi	zero,zero,8376
   82cf0:	00083a14 	movui	zero,8424
   82cf4:	00083cb4 	movhi	zero,8434
   82cf8:	00082e20 	cmpeqi	zero,zero,8376
   82cfc:	00083ca0 	cmpeqi	zero,zero,8434
   82d00:	00083c5c 	xori	zero,zero,8433
   82d04:	00083c5c 	xori	zero,zero,8433
   82d08:	00083c5c 	xori	zero,zero,8433
   82d0c:	00083c5c 	xori	zero,zero,8433
   82d10:	00083c5c 	xori	zero,zero,8433
   82d14:	00083c5c 	xori	zero,zero,8433
   82d18:	00083c5c 	xori	zero,zero,8433
   82d1c:	00083c5c 	xori	zero,zero,8433
   82d20:	00083c5c 	xori	zero,zero,8433
   82d24:	00082e20 	cmpeqi	zero,zero,8376
   82d28:	00082e20 	cmpeqi	zero,zero,8376
   82d2c:	00082e20 	cmpeqi	zero,zero,8376
   82d30:	00082e20 	cmpeqi	zero,zero,8376
   82d34:	00082e20 	cmpeqi	zero,zero,8376
   82d38:	00082e20 	cmpeqi	zero,zero,8376
   82d3c:	00082e20 	cmpeqi	zero,zero,8376
   82d40:	00082e20 	cmpeqi	zero,zero,8376
   82d44:	00082e20 	cmpeqi	zero,zero,8376
   82d48:	00082e20 	cmpeqi	zero,zero,8376
   82d4c:	00083478 	rdprs	zero,zero,8401
   82d50:	00083ae4 	muli	zero,zero,8427
   82d54:	00082e20 	cmpeqi	zero,zero,8376
   82d58:	00083ae4 	muli	zero,zero,8427
   82d5c:	00082e20 	cmpeqi	zero,zero,8376
   82d60:	00082e20 	cmpeqi	zero,zero,8376
   82d64:	00082e20 	cmpeqi	zero,zero,8376
   82d68:	00082e20 	cmpeqi	zero,zero,8376
   82d6c:	00083c48 	cmpgei	zero,zero,8433
   82d70:	00082e20 	cmpeqi	zero,zero,8376
   82d74:	00082e20 	cmpeqi	zero,zero,8376
   82d78:	0008352c 	andhi	zero,zero,8404
   82d7c:	00082e20 	cmpeqi	zero,zero,8376
   82d80:	00082e20 	cmpeqi	zero,zero,8376
   82d84:	00082e20 	cmpeqi	zero,zero,8376
   82d88:	00082e20 	cmpeqi	zero,zero,8376
   82d8c:	00082e20 	cmpeqi	zero,zero,8376
   82d90:	00083578 	rdprs	zero,zero,8405
   82d94:	00082e20 	cmpeqi	zero,zero,8376
   82d98:	00082e20 	cmpeqi	zero,zero,8376
   82d9c:	00083b98 	cmpnei	zero,zero,8430
   82da0:	00082e20 	cmpeqi	zero,zero,8376
   82da4:	00082e20 	cmpeqi	zero,zero,8376
   82da8:	00082e20 	cmpeqi	zero,zero,8376
   82dac:	00082e20 	cmpeqi	zero,zero,8376
   82db0:	00082e20 	cmpeqi	zero,zero,8376
   82db4:	00082e20 	cmpeqi	zero,zero,8376
   82db8:	00082e20 	cmpeqi	zero,zero,8376
   82dbc:	00082e20 	cmpeqi	zero,zero,8376
   82dc0:	00082e20 	cmpeqi	zero,zero,8376
   82dc4:	00082e20 	cmpeqi	zero,zero,8376
   82dc8:	00083b6c 	andhi	zero,zero,8429
   82dcc:	00083484 	movi	zero,8402
   82dd0:	00083ae4 	muli	zero,zero,8427
   82dd4:	00083ae4 	muli	zero,zero,8427
   82dd8:	00083ae4 	muli	zero,zero,8427
   82ddc:	00083ad0 	cmplti	zero,zero,8427
   82de0:	00083484 	movi	zero,8402
   82de4:	00082e20 	cmpeqi	zero,zero,8376
   82de8:	00082e20 	cmpeqi	zero,zero,8376
   82dec:	00083a58 	cmpnei	zero,zero,8425
   82df0:	00082e20 	cmpeqi	zero,zero,8376
   82df4:	00083a28 	cmpgeui	zero,zero,8424
   82df8:	00083538 	rdprs	zero,zero,8404
   82dfc:	00083a88 	cmpgei	zero,zero,8426
   82e00:	00083a74 	movhi	zero,8425
   82e04:	00082e20 	cmpeqi	zero,zero,8376
   82e08:	00083d1c 	xori	zero,zero,8436
   82e0c:	00082e20 	cmpeqi	zero,zero,8376
   82e10:	00083584 	movi	zero,8406
   82e14:	00082e20 	cmpeqi	zero,zero,8376
   82e18:	00082e20 	cmpeqi	zero,zero,8376
   82e1c:	00083bfc 	xorhi	zero,zero,8431
   82e20:	d9014d17 	ldw	r4,1332(sp)
   82e24:	2000ce26 	beq	r4,zero,83160 <___vfprintf_internal_r+0x6d4>
   82e28:	01400044 	movi	r5,1
   82e2c:	d9800f04 	addi	r6,sp,60
   82e30:	d9c14015 	stw	r7,1280(sp)
   82e34:	d9414515 	stw	r5,1300(sp)
   82e38:	d9814115 	stw	r6,1284(sp)
   82e3c:	280f883a 	mov	r7,r5
   82e40:	d9000f05 	stb	r4,60(sp)
   82e44:	d8000405 	stb	zero,16(sp)
   82e48:	d8014615 	stw	zero,1304(sp)
   82e4c:	d8c14c17 	ldw	r3,1328(sp)
   82e50:	1880008c 	andi	r2,r3,2
   82e54:	1005003a 	cmpeq	r2,r2,zero
   82e58:	d8815015 	stw	r2,1344(sp)
   82e5c:	1000031e 	bne	r2,zero,82e6c <___vfprintf_internal_r+0x3e0>
   82e60:	d9014517 	ldw	r4,1300(sp)
   82e64:	21000084 	addi	r4,r4,2
   82e68:	d9014515 	stw	r4,1300(sp)
   82e6c:	d9414c17 	ldw	r5,1328(sp)
   82e70:	2940210c 	andi	r5,r5,132
   82e74:	d9414e15 	stw	r5,1336(sp)
   82e78:	28002d1e 	bne	r5,zero,82f30 <___vfprintf_internal_r+0x4a4>
   82e7c:	d9814a17 	ldw	r6,1320(sp)
   82e80:	d8814517 	ldw	r2,1300(sp)
   82e84:	30a1c83a 	sub	r16,r6,r2
   82e88:	0400290e 	bge	zero,r16,82f30 <___vfprintf_internal_r+0x4a4>
   82e8c:	00800404 	movi	r2,16
   82e90:	14045e0e 	bge	r2,r16,8400c <___vfprintf_internal_r+0x1580>
   82e94:	dc800e17 	ldw	r18,56(sp)
   82e98:	dc400d17 	ldw	r17,52(sp)
   82e9c:	1027883a 	mov	r19,r2
   82ea0:	07000274 	movhi	fp,9
   82ea4:	e70e3884 	addi	fp,fp,14562
   82ea8:	050001c4 	movi	r20,7
   82eac:	00000306 	br	82ebc <___vfprintf_internal_r+0x430>
   82eb0:	843ffc04 	addi	r16,r16,-16
   82eb4:	ad400204 	addi	r21,r21,8
   82eb8:	9c00130e 	bge	r19,r16,82f08 <___vfprintf_internal_r+0x47c>
   82ebc:	94800404 	addi	r18,r18,16
   82ec0:	8c400044 	addi	r17,r17,1
   82ec4:	af000015 	stw	fp,0(r21)
   82ec8:	acc00115 	stw	r19,4(r21)
   82ecc:	dc800e15 	stw	r18,56(sp)
   82ed0:	dc400d15 	stw	r17,52(sp)
   82ed4:	a47ff60e 	bge	r20,r17,82eb0 <___vfprintf_internal_r+0x424>
   82ed8:	d9014f17 	ldw	r4,1340(sp)
   82edc:	b00b883a 	mov	r5,r22
   82ee0:	d9800c04 	addi	r6,sp,48
   82ee4:	d9c15115 	stw	r7,1348(sp)
   82ee8:	0082a340 	call	82a34 <__sprint_r>
   82eec:	d9c15117 	ldw	r7,1348(sp)
   82ef0:	10009e1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   82ef4:	843ffc04 	addi	r16,r16,-16
   82ef8:	dc800e17 	ldw	r18,56(sp)
   82efc:	dc400d17 	ldw	r17,52(sp)
   82f00:	dd401904 	addi	r21,sp,100
   82f04:	9c3fed16 	blt	r19,r16,82ebc <___vfprintf_internal_r+0x430>
   82f08:	9425883a 	add	r18,r18,r16
   82f0c:	8c400044 	addi	r17,r17,1
   82f10:	008001c4 	movi	r2,7
   82f14:	af000015 	stw	fp,0(r21)
   82f18:	ac000115 	stw	r16,4(r21)
   82f1c:	dc800e15 	stw	r18,56(sp)
   82f20:	dc400d15 	stw	r17,52(sp)
   82f24:	1441f516 	blt	r2,r17,836fc <___vfprintf_internal_r+0xc70>
   82f28:	ad400204 	addi	r21,r21,8
   82f2c:	00000206 	br	82f38 <___vfprintf_internal_r+0x4ac>
   82f30:	dc800e17 	ldw	r18,56(sp)
   82f34:	dc400d17 	ldw	r17,52(sp)
   82f38:	d8800407 	ldb	r2,16(sp)
   82f3c:	10000b26 	beq	r2,zero,82f6c <___vfprintf_internal_r+0x4e0>
   82f40:	00800044 	movi	r2,1
   82f44:	94800044 	addi	r18,r18,1
   82f48:	8c400044 	addi	r17,r17,1
   82f4c:	a8800115 	stw	r2,4(r21)
   82f50:	d8c00404 	addi	r3,sp,16
   82f54:	008001c4 	movi	r2,7
   82f58:	a8c00015 	stw	r3,0(r21)
   82f5c:	dc800e15 	stw	r18,56(sp)
   82f60:	dc400d15 	stw	r17,52(sp)
   82f64:	1441da16 	blt	r2,r17,836d0 <___vfprintf_internal_r+0xc44>
   82f68:	ad400204 	addi	r21,r21,8
   82f6c:	d9015017 	ldw	r4,1344(sp)
   82f70:	20000b1e 	bne	r4,zero,82fa0 <___vfprintf_internal_r+0x514>
   82f74:	d8800444 	addi	r2,sp,17
   82f78:	94800084 	addi	r18,r18,2
   82f7c:	8c400044 	addi	r17,r17,1
   82f80:	a8800015 	stw	r2,0(r21)
   82f84:	00c00084 	movi	r3,2
   82f88:	008001c4 	movi	r2,7
   82f8c:	a8c00115 	stw	r3,4(r21)
   82f90:	dc800e15 	stw	r18,56(sp)
   82f94:	dc400d15 	stw	r17,52(sp)
   82f98:	1441c216 	blt	r2,r17,836a4 <___vfprintf_internal_r+0xc18>
   82f9c:	ad400204 	addi	r21,r21,8
   82fa0:	d9414e17 	ldw	r5,1336(sp)
   82fa4:	00802004 	movi	r2,128
   82fa8:	2880b126 	beq	r5,r2,83270 <___vfprintf_internal_r+0x7e4>
   82fac:	d8c14617 	ldw	r3,1304(sp)
   82fb0:	19e1c83a 	sub	r16,r3,r7
   82fb4:	0400260e 	bge	zero,r16,83050 <___vfprintf_internal_r+0x5c4>
   82fb8:	00800404 	movi	r2,16
   82fbc:	1403cf0e 	bge	r2,r16,83efc <___vfprintf_internal_r+0x1470>
   82fc0:	1027883a 	mov	r19,r2
   82fc4:	07000274 	movhi	fp,9
   82fc8:	e70e3484 	addi	fp,fp,14546
   82fcc:	050001c4 	movi	r20,7
   82fd0:	00000306 	br	82fe0 <___vfprintf_internal_r+0x554>
   82fd4:	843ffc04 	addi	r16,r16,-16
   82fd8:	ad400204 	addi	r21,r21,8
   82fdc:	9c00130e 	bge	r19,r16,8302c <___vfprintf_internal_r+0x5a0>
   82fe0:	94800404 	addi	r18,r18,16
   82fe4:	8c400044 	addi	r17,r17,1
   82fe8:	af000015 	stw	fp,0(r21)
   82fec:	acc00115 	stw	r19,4(r21)
   82ff0:	dc800e15 	stw	r18,56(sp)
   82ff4:	dc400d15 	stw	r17,52(sp)
   82ff8:	a47ff60e 	bge	r20,r17,82fd4 <___vfprintf_internal_r+0x548>
   82ffc:	d9014f17 	ldw	r4,1340(sp)
   83000:	b00b883a 	mov	r5,r22
   83004:	d9800c04 	addi	r6,sp,48
   83008:	d9c15115 	stw	r7,1348(sp)
   8300c:	0082a340 	call	82a34 <__sprint_r>
   83010:	d9c15117 	ldw	r7,1348(sp)
   83014:	1000551e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83018:	843ffc04 	addi	r16,r16,-16
   8301c:	dc800e17 	ldw	r18,56(sp)
   83020:	dc400d17 	ldw	r17,52(sp)
   83024:	dd401904 	addi	r21,sp,100
   83028:	9c3fed16 	blt	r19,r16,82fe0 <___vfprintf_internal_r+0x554>
   8302c:	9425883a 	add	r18,r18,r16
   83030:	8c400044 	addi	r17,r17,1
   83034:	008001c4 	movi	r2,7
   83038:	af000015 	stw	fp,0(r21)
   8303c:	ac000115 	stw	r16,4(r21)
   83040:	dc800e15 	stw	r18,56(sp)
   83044:	dc400d15 	stw	r17,52(sp)
   83048:	14418216 	blt	r2,r17,83654 <___vfprintf_internal_r+0xbc8>
   8304c:	ad400204 	addi	r21,r21,8
   83050:	d9014c17 	ldw	r4,1328(sp)
   83054:	2080400c 	andi	r2,r4,256
   83058:	10004a1e 	bne	r2,zero,83184 <___vfprintf_internal_r+0x6f8>
   8305c:	d9414117 	ldw	r5,1284(sp)
   83060:	91e5883a 	add	r18,r18,r7
   83064:	8c400044 	addi	r17,r17,1
   83068:	008001c4 	movi	r2,7
   8306c:	a9400015 	stw	r5,0(r21)
   83070:	a9c00115 	stw	r7,4(r21)
   83074:	dc800e15 	stw	r18,56(sp)
   83078:	dc400d15 	stw	r17,52(sp)
   8307c:	14416716 	blt	r2,r17,8361c <___vfprintf_internal_r+0xb90>
   83080:	a8c00204 	addi	r3,r21,8
   83084:	d9814c17 	ldw	r6,1328(sp)
   83088:	3080010c 	andi	r2,r6,4
   8308c:	10002826 	beq	r2,zero,83130 <___vfprintf_internal_r+0x6a4>
   83090:	d8814a17 	ldw	r2,1320(sp)
   83094:	d9014517 	ldw	r4,1300(sp)
   83098:	1121c83a 	sub	r16,r2,r4
   8309c:	0400240e 	bge	zero,r16,83130 <___vfprintf_internal_r+0x6a4>
   830a0:	00800404 	movi	r2,16
   830a4:	1404550e 	bge	r2,r16,841fc <___vfprintf_internal_r+0x1770>
   830a8:	dc400d17 	ldw	r17,52(sp)
   830ac:	1027883a 	mov	r19,r2
   830b0:	07000274 	movhi	fp,9
   830b4:	e70e3884 	addi	fp,fp,14562
   830b8:	050001c4 	movi	r20,7
   830bc:	00000306 	br	830cc <___vfprintf_internal_r+0x640>
   830c0:	843ffc04 	addi	r16,r16,-16
   830c4:	18c00204 	addi	r3,r3,8
   830c8:	9c00110e 	bge	r19,r16,83110 <___vfprintf_internal_r+0x684>
   830cc:	94800404 	addi	r18,r18,16
   830d0:	8c400044 	addi	r17,r17,1
   830d4:	1f000015 	stw	fp,0(r3)
   830d8:	1cc00115 	stw	r19,4(r3)
   830dc:	dc800e15 	stw	r18,56(sp)
   830e0:	dc400d15 	stw	r17,52(sp)
   830e4:	a47ff60e 	bge	r20,r17,830c0 <___vfprintf_internal_r+0x634>
   830e8:	d9014f17 	ldw	r4,1340(sp)
   830ec:	b00b883a 	mov	r5,r22
   830f0:	d9800c04 	addi	r6,sp,48
   830f4:	0082a340 	call	82a34 <__sprint_r>
   830f8:	10001c1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   830fc:	843ffc04 	addi	r16,r16,-16
   83100:	dc800e17 	ldw	r18,56(sp)
   83104:	dc400d17 	ldw	r17,52(sp)
   83108:	d8c01904 	addi	r3,sp,100
   8310c:	9c3fef16 	blt	r19,r16,830cc <___vfprintf_internal_r+0x640>
   83110:	9425883a 	add	r18,r18,r16
   83114:	8c400044 	addi	r17,r17,1
   83118:	008001c4 	movi	r2,7
   8311c:	1f000015 	stw	fp,0(r3)
   83120:	1c000115 	stw	r16,4(r3)
   83124:	dc800e15 	stw	r18,56(sp)
   83128:	dc400d15 	stw	r17,52(sp)
   8312c:	1440cb16 	blt	r2,r17,8345c <___vfprintf_internal_r+0x9d0>
   83130:	d8814a17 	ldw	r2,1320(sp)
   83134:	d9414517 	ldw	r5,1300(sp)
   83138:	1140010e 	bge	r2,r5,83140 <___vfprintf_internal_r+0x6b4>
   8313c:	2805883a 	mov	r2,r5
   83140:	d9814b17 	ldw	r6,1324(sp)
   83144:	308d883a 	add	r6,r6,r2
   83148:	d9814b15 	stw	r6,1324(sp)
   8314c:	90013b1e 	bne	r18,zero,8363c <___vfprintf_internal_r+0xbb0>
   83150:	d9c14017 	ldw	r7,1280(sp)
   83154:	dd401904 	addi	r21,sp,100
   83158:	d8000d15 	stw	zero,52(sp)
   8315c:	003ea706 	br	82bfc <___vfprintf_internal_r+0x170>
   83160:	d8800e17 	ldw	r2,56(sp)
   83164:	1005451e 	bne	r2,zero,8467c <___vfprintf_internal_r+0x1bf0>
   83168:	d8000d15 	stw	zero,52(sp)
   8316c:	b080030b 	ldhu	r2,12(r22)
   83170:	1080100c 	andi	r2,r2,64
   83174:	103e8726 	beq	r2,zero,82b94 <___vfprintf_internal_r+0x108>
   83178:	00bfffc4 	movi	r2,-1
   8317c:	d8814b15 	stw	r2,1324(sp)
   83180:	003e8406 	br	82b94 <___vfprintf_internal_r+0x108>
   83184:	d9814d17 	ldw	r6,1332(sp)
   83188:	00801944 	movi	r2,101
   8318c:	11806e16 	blt	r2,r6,83348 <___vfprintf_internal_r+0x8bc>
   83190:	d9414717 	ldw	r5,1308(sp)
   83194:	00c00044 	movi	r3,1
   83198:	1943490e 	bge	r3,r5,83ec0 <___vfprintf_internal_r+0x1434>
   8319c:	d8814117 	ldw	r2,1284(sp)
   831a0:	94800044 	addi	r18,r18,1
   831a4:	8c400044 	addi	r17,r17,1
   831a8:	a8800015 	stw	r2,0(r21)
   831ac:	008001c4 	movi	r2,7
   831b0:	a8c00115 	stw	r3,4(r21)
   831b4:	dc800e15 	stw	r18,56(sp)
   831b8:	dc400d15 	stw	r17,52(sp)
   831bc:	1441ca16 	blt	r2,r17,838e8 <___vfprintf_internal_r+0xe5c>
   831c0:	a8c00204 	addi	r3,r21,8
   831c4:	d9014917 	ldw	r4,1316(sp)
   831c8:	00800044 	movi	r2,1
   831cc:	94800044 	addi	r18,r18,1
   831d0:	8c400044 	addi	r17,r17,1
   831d4:	18800115 	stw	r2,4(r3)
   831d8:	008001c4 	movi	r2,7
   831dc:	19000015 	stw	r4,0(r3)
   831e0:	dc800e15 	stw	r18,56(sp)
   831e4:	dc400d15 	stw	r17,52(sp)
   831e8:	1441b616 	blt	r2,r17,838c4 <___vfprintf_internal_r+0xe38>
   831ec:	1cc00204 	addi	r19,r3,8
   831f0:	d9014217 	ldw	r4,1288(sp)
   831f4:	d9414317 	ldw	r5,1292(sp)
   831f8:	000d883a 	mov	r6,zero
   831fc:	000f883a 	mov	r7,zero
   83200:	008eb6c0 	call	8eb6c <__nedf2>
   83204:	10017426 	beq	r2,zero,837d8 <___vfprintf_internal_r+0xd4c>
   83208:	d9414717 	ldw	r5,1308(sp)
   8320c:	d9814117 	ldw	r6,1284(sp)
   83210:	8c400044 	addi	r17,r17,1
   83214:	2c85883a 	add	r2,r5,r18
   83218:	14bfffc4 	addi	r18,r2,-1
   8321c:	28bfffc4 	addi	r2,r5,-1
   83220:	30c00044 	addi	r3,r6,1
   83224:	98800115 	stw	r2,4(r19)
   83228:	008001c4 	movi	r2,7
   8322c:	98c00015 	stw	r3,0(r19)
   83230:	dc800e15 	stw	r18,56(sp)
   83234:	dc400d15 	stw	r17,52(sp)
   83238:	14418e16 	blt	r2,r17,83874 <___vfprintf_internal_r+0xde8>
   8323c:	9cc00204 	addi	r19,r19,8
   83240:	d9414817 	ldw	r5,1312(sp)
   83244:	d8800804 	addi	r2,sp,32
   83248:	8c400044 	addi	r17,r17,1
   8324c:	9165883a 	add	r18,r18,r5
   83250:	98800015 	stw	r2,0(r19)
   83254:	008001c4 	movi	r2,7
   83258:	99400115 	stw	r5,4(r19)
   8325c:	dc800e15 	stw	r18,56(sp)
   83260:	dc400d15 	stw	r17,52(sp)
   83264:	1440ed16 	blt	r2,r17,8361c <___vfprintf_internal_r+0xb90>
   83268:	98c00204 	addi	r3,r19,8
   8326c:	003f8506 	br	83084 <___vfprintf_internal_r+0x5f8>
   83270:	d9814a17 	ldw	r6,1320(sp)
   83274:	d8814517 	ldw	r2,1300(sp)
   83278:	30a1c83a 	sub	r16,r6,r2
   8327c:	043f4b0e 	bge	zero,r16,82fac <___vfprintf_internal_r+0x520>
   83280:	00800404 	movi	r2,16
   83284:	14043a0e 	bge	r2,r16,84370 <___vfprintf_internal_r+0x18e4>
   83288:	1027883a 	mov	r19,r2
   8328c:	07000274 	movhi	fp,9
   83290:	e70e3484 	addi	fp,fp,14546
   83294:	050001c4 	movi	r20,7
   83298:	00000306 	br	832a8 <___vfprintf_internal_r+0x81c>
   8329c:	843ffc04 	addi	r16,r16,-16
   832a0:	ad400204 	addi	r21,r21,8
   832a4:	9c00130e 	bge	r19,r16,832f4 <___vfprintf_internal_r+0x868>
   832a8:	94800404 	addi	r18,r18,16
   832ac:	8c400044 	addi	r17,r17,1
   832b0:	af000015 	stw	fp,0(r21)
   832b4:	acc00115 	stw	r19,4(r21)
   832b8:	dc800e15 	stw	r18,56(sp)
   832bc:	dc400d15 	stw	r17,52(sp)
   832c0:	a47ff60e 	bge	r20,r17,8329c <___vfprintf_internal_r+0x810>
   832c4:	d9014f17 	ldw	r4,1340(sp)
   832c8:	b00b883a 	mov	r5,r22
   832cc:	d9800c04 	addi	r6,sp,48
   832d0:	d9c15115 	stw	r7,1348(sp)
   832d4:	0082a340 	call	82a34 <__sprint_r>
   832d8:	d9c15117 	ldw	r7,1348(sp)
   832dc:	103fa31e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   832e0:	843ffc04 	addi	r16,r16,-16
   832e4:	dc800e17 	ldw	r18,56(sp)
   832e8:	dc400d17 	ldw	r17,52(sp)
   832ec:	dd401904 	addi	r21,sp,100
   832f0:	9c3fed16 	blt	r19,r16,832a8 <___vfprintf_internal_r+0x81c>
   832f4:	9425883a 	add	r18,r18,r16
   832f8:	8c400044 	addi	r17,r17,1
   832fc:	008001c4 	movi	r2,7
   83300:	af000015 	stw	fp,0(r21)
   83304:	ac000115 	stw	r16,4(r21)
   83308:	dc800e15 	stw	r18,56(sp)
   8330c:	dc400d15 	stw	r17,52(sp)
   83310:	14416116 	blt	r2,r17,83898 <___vfprintf_internal_r+0xe0c>
   83314:	ad400204 	addi	r21,r21,8
   83318:	003f2406 	br	82fac <___vfprintf_internal_r+0x520>
   8331c:	d9014f17 	ldw	r4,1340(sp)
   83320:	00807ec0 	call	807ec <__sinit>
   83324:	d9c15117 	ldw	r7,1348(sp)
   83328:	003def06 	br	82ae8 <___vfprintf_internal_r+0x5c>
   8332c:	d9014f17 	ldw	r4,1340(sp)
   83330:	b00b883a 	mov	r5,r22
   83334:	d9c15115 	stw	r7,1348(sp)
   83338:	00861740 	call	86174 <__swsetup_r>
   8333c:	d9c15117 	ldw	r7,1348(sp)
   83340:	103dee26 	beq	r2,zero,82afc <___vfprintf_internal_r+0x70>
   83344:	003f8c06 	br	83178 <___vfprintf_internal_r+0x6ec>
   83348:	d9014217 	ldw	r4,1288(sp)
   8334c:	d9414317 	ldw	r5,1292(sp)
   83350:	000d883a 	mov	r6,zero
   83354:	000f883a 	mov	r7,zero
   83358:	008eae40 	call	8eae4 <__eqdf2>
   8335c:	1000f21e 	bne	r2,zero,83728 <___vfprintf_internal_r+0xc9c>
   83360:	00800274 	movhi	r2,9
   83364:	108e3404 	addi	r2,r2,14544
   83368:	94800044 	addi	r18,r18,1
   8336c:	8c400044 	addi	r17,r17,1
   83370:	a8800015 	stw	r2,0(r21)
   83374:	00c00044 	movi	r3,1
   83378:	008001c4 	movi	r2,7
   8337c:	a8c00115 	stw	r3,4(r21)
   83380:	dc800e15 	stw	r18,56(sp)
   83384:	dc400d15 	stw	r17,52(sp)
   83388:	14430016 	blt	r2,r17,83f8c <___vfprintf_internal_r+0x1500>
   8338c:	a8c00204 	addi	r3,r21,8
   83390:	d8800517 	ldw	r2,20(sp)
   83394:	d9014717 	ldw	r4,1308(sp)
   83398:	11015c0e 	bge	r2,r4,8390c <___vfprintf_internal_r+0xe80>
   8339c:	dc400d17 	ldw	r17,52(sp)
   833a0:	d9814917 	ldw	r6,1316(sp)
   833a4:	00800044 	movi	r2,1
   833a8:	94800044 	addi	r18,r18,1
   833ac:	8c400044 	addi	r17,r17,1
   833b0:	18800115 	stw	r2,4(r3)
   833b4:	008001c4 	movi	r2,7
   833b8:	19800015 	stw	r6,0(r3)
   833bc:	dc800e15 	stw	r18,56(sp)
   833c0:	dc400d15 	stw	r17,52(sp)
   833c4:	14431616 	blt	r2,r17,84020 <___vfprintf_internal_r+0x1594>
   833c8:	18c00204 	addi	r3,r3,8
   833cc:	d8814717 	ldw	r2,1308(sp)
   833d0:	143fffc4 	addi	r16,r2,-1
   833d4:	043f2b0e 	bge	zero,r16,83084 <___vfprintf_internal_r+0x5f8>
   833d8:	00800404 	movi	r2,16
   833dc:	1402a80e 	bge	r2,r16,83e80 <___vfprintf_internal_r+0x13f4>
   833e0:	dc400d17 	ldw	r17,52(sp)
   833e4:	1027883a 	mov	r19,r2
   833e8:	07000274 	movhi	fp,9
   833ec:	e70e3484 	addi	fp,fp,14546
   833f0:	050001c4 	movi	r20,7
   833f4:	00000306 	br	83404 <___vfprintf_internal_r+0x978>
   833f8:	18c00204 	addi	r3,r3,8
   833fc:	843ffc04 	addi	r16,r16,-16
   83400:	9c02a20e 	bge	r19,r16,83e8c <___vfprintf_internal_r+0x1400>
   83404:	94800404 	addi	r18,r18,16
   83408:	8c400044 	addi	r17,r17,1
   8340c:	1f000015 	stw	fp,0(r3)
   83410:	1cc00115 	stw	r19,4(r3)
   83414:	dc800e15 	stw	r18,56(sp)
   83418:	dc400d15 	stw	r17,52(sp)
   8341c:	a47ff60e 	bge	r20,r17,833f8 <___vfprintf_internal_r+0x96c>
   83420:	d9014f17 	ldw	r4,1340(sp)
   83424:	b00b883a 	mov	r5,r22
   83428:	d9800c04 	addi	r6,sp,48
   8342c:	0082a340 	call	82a34 <__sprint_r>
   83430:	103f4e1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83434:	dc800e17 	ldw	r18,56(sp)
   83438:	dc400d17 	ldw	r17,52(sp)
   8343c:	d8c01904 	addi	r3,sp,100
   83440:	003fee06 	br	833fc <___vfprintf_internal_r+0x970>
   83444:	d8802c0b 	ldhu	r2,176(sp)
   83448:	00ffffc4 	movi	r3,-1
   8344c:	d8c14b15 	stw	r3,1324(sp)
   83450:	1080100c 	andi	r2,r2,64
   83454:	103dcc1e 	bne	r2,zero,82b88 <___vfprintf_internal_r+0xfc>
   83458:	003dce06 	br	82b94 <___vfprintf_internal_r+0x108>
   8345c:	d9014f17 	ldw	r4,1340(sp)
   83460:	b00b883a 	mov	r5,r22
   83464:	d9800c04 	addi	r6,sp,48
   83468:	0082a340 	call	82a34 <__sprint_r>
   8346c:	103f3f1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83470:	dc800e17 	ldw	r18,56(sp)
   83474:	003f2e06 	br	83130 <___vfprintf_internal_r+0x6a4>
   83478:	d9414c17 	ldw	r5,1328(sp)
   8347c:	29400414 	ori	r5,r5,16
   83480:	d9414c15 	stw	r5,1328(sp)
   83484:	d9814c17 	ldw	r6,1328(sp)
   83488:	3080080c 	andi	r2,r6,32
   8348c:	10014f1e 	bne	r2,zero,839cc <___vfprintf_internal_r+0xf40>
   83490:	d8c14c17 	ldw	r3,1328(sp)
   83494:	1880040c 	andi	r2,r3,16
   83498:	1002f01e 	bne	r2,zero,8405c <___vfprintf_internal_r+0x15d0>
   8349c:	d9014c17 	ldw	r4,1328(sp)
   834a0:	2080100c 	andi	r2,r4,64
   834a4:	1002ed26 	beq	r2,zero,8405c <___vfprintf_internal_r+0x15d0>
   834a8:	3880000f 	ldh	r2,0(r7)
   834ac:	39c00104 	addi	r7,r7,4
   834b0:	d9c14015 	stw	r7,1280(sp)
   834b4:	1023d7fa 	srai	r17,r2,31
   834b8:	1021883a 	mov	r16,r2
   834bc:	88037816 	blt	r17,zero,842a0 <___vfprintf_internal_r+0x1814>
   834c0:	01000044 	movi	r4,1
   834c4:	98000416 	blt	r19,zero,834d8 <___vfprintf_internal_r+0xa4c>
   834c8:	d8c14c17 	ldw	r3,1328(sp)
   834cc:	00bfdfc4 	movi	r2,-129
   834d0:	1886703a 	and	r3,r3,r2
   834d4:	d8c14c15 	stw	r3,1328(sp)
   834d8:	8444b03a 	or	r2,r16,r17
   834dc:	10022c1e 	bne	r2,zero,83d90 <___vfprintf_internal_r+0x1304>
   834e0:	98022b1e 	bne	r19,zero,83d90 <___vfprintf_internal_r+0x1304>
   834e4:	20803fcc 	andi	r2,r4,255
   834e8:	1002a126 	beq	r2,zero,83f70 <___vfprintf_internal_r+0x14e4>
   834ec:	d8c01904 	addi	r3,sp,100
   834f0:	dd000f04 	addi	r20,sp,60
   834f4:	d8c14115 	stw	r3,1284(sp)
   834f8:	d8c14117 	ldw	r3,1284(sp)
   834fc:	dcc14515 	stw	r19,1300(sp)
   83500:	a0c5c83a 	sub	r2,r20,r3
   83504:	11c00a04 	addi	r7,r2,40
   83508:	99c0010e 	bge	r19,r7,83510 <___vfprintf_internal_r+0xa84>
   8350c:	d9c14515 	stw	r7,1300(sp)
   83510:	dcc14615 	stw	r19,1304(sp)
   83514:	d8800407 	ldb	r2,16(sp)
   83518:	103e4c26 	beq	r2,zero,82e4c <___vfprintf_internal_r+0x3c0>
   8351c:	d8814517 	ldw	r2,1300(sp)
   83520:	10800044 	addi	r2,r2,1
   83524:	d8814515 	stw	r2,1300(sp)
   83528:	003e4806 	br	82e4c <___vfprintf_internal_r+0x3c0>
   8352c:	d9814c17 	ldw	r6,1328(sp)
   83530:	31800414 	ori	r6,r6,16
   83534:	d9814c15 	stw	r6,1328(sp)
   83538:	d8c14c17 	ldw	r3,1328(sp)
   8353c:	1880080c 	andi	r2,r3,32
   83540:	1001271e 	bne	r2,zero,839e0 <___vfprintf_internal_r+0xf54>
   83544:	d9414c17 	ldw	r5,1328(sp)
   83548:	2880040c 	andi	r2,r5,16
   8354c:	1002bc1e 	bne	r2,zero,84040 <___vfprintf_internal_r+0x15b4>
   83550:	d9814c17 	ldw	r6,1328(sp)
   83554:	3080100c 	andi	r2,r6,64
   83558:	1002b926 	beq	r2,zero,84040 <___vfprintf_internal_r+0x15b4>
   8355c:	3c00000b 	ldhu	r16,0(r7)
   83560:	0009883a 	mov	r4,zero
   83564:	39c00104 	addi	r7,r7,4
   83568:	0023883a 	mov	r17,zero
   8356c:	d9c14015 	stw	r7,1280(sp)
   83570:	d8000405 	stb	zero,16(sp)
   83574:	003fd306 	br	834c4 <___vfprintf_internal_r+0xa38>
   83578:	d9014c17 	ldw	r4,1328(sp)
   8357c:	21000414 	ori	r4,r4,16
   83580:	d9014c15 	stw	r4,1328(sp)
   83584:	d9414c17 	ldw	r5,1328(sp)
   83588:	2880080c 	andi	r2,r5,32
   8358c:	1001081e 	bne	r2,zero,839b0 <___vfprintf_internal_r+0xf24>
   83590:	d8c14c17 	ldw	r3,1328(sp)
   83594:	1880040c 	andi	r2,r3,16
   83598:	1002b61e 	bne	r2,zero,84074 <___vfprintf_internal_r+0x15e8>
   8359c:	d9014c17 	ldw	r4,1328(sp)
   835a0:	2080100c 	andi	r2,r4,64
   835a4:	1002b326 	beq	r2,zero,84074 <___vfprintf_internal_r+0x15e8>
   835a8:	3c00000b 	ldhu	r16,0(r7)
   835ac:	01000044 	movi	r4,1
   835b0:	39c00104 	addi	r7,r7,4
   835b4:	0023883a 	mov	r17,zero
   835b8:	d9c14015 	stw	r7,1280(sp)
   835bc:	d8000405 	stb	zero,16(sp)
   835c0:	003fc006 	br	834c4 <___vfprintf_internal_r+0xa38>
   835c4:	d9014f17 	ldw	r4,1340(sp)
   835c8:	b00b883a 	mov	r5,r22
   835cc:	d9800c04 	addi	r6,sp,48
   835d0:	0082a340 	call	82a34 <__sprint_r>
   835d4:	103ee51e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   835d8:	dc800e17 	ldw	r18,56(sp)
   835dc:	d8c01904 	addi	r3,sp,100
   835e0:	d9814c17 	ldw	r6,1328(sp)
   835e4:	3080004c 	andi	r2,r6,1
   835e8:	1005003a 	cmpeq	r2,r2,zero
   835ec:	103ea51e 	bne	r2,zero,83084 <___vfprintf_internal_r+0x5f8>
   835f0:	00800044 	movi	r2,1
   835f4:	dc400d17 	ldw	r17,52(sp)
   835f8:	18800115 	stw	r2,4(r3)
   835fc:	d8814917 	ldw	r2,1316(sp)
   83600:	94800044 	addi	r18,r18,1
   83604:	8c400044 	addi	r17,r17,1
   83608:	18800015 	stw	r2,0(r3)
   8360c:	008001c4 	movi	r2,7
   83610:	dc800e15 	stw	r18,56(sp)
   83614:	dc400d15 	stw	r17,52(sp)
   83618:	1442240e 	bge	r2,r17,83eac <___vfprintf_internal_r+0x1420>
   8361c:	d9014f17 	ldw	r4,1340(sp)
   83620:	b00b883a 	mov	r5,r22
   83624:	d9800c04 	addi	r6,sp,48
   83628:	0082a340 	call	82a34 <__sprint_r>
   8362c:	103ecf1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83630:	dc800e17 	ldw	r18,56(sp)
   83634:	d8c01904 	addi	r3,sp,100
   83638:	003e9206 	br	83084 <___vfprintf_internal_r+0x5f8>
   8363c:	d9014f17 	ldw	r4,1340(sp)
   83640:	b00b883a 	mov	r5,r22
   83644:	d9800c04 	addi	r6,sp,48
   83648:	0082a340 	call	82a34 <__sprint_r>
   8364c:	103ec026 	beq	r2,zero,83150 <___vfprintf_internal_r+0x6c4>
   83650:	003ec606 	br	8316c <___vfprintf_internal_r+0x6e0>
   83654:	d9014f17 	ldw	r4,1340(sp)
   83658:	b00b883a 	mov	r5,r22
   8365c:	d9800c04 	addi	r6,sp,48
   83660:	d9c15115 	stw	r7,1348(sp)
   83664:	0082a340 	call	82a34 <__sprint_r>
   83668:	d9c15117 	ldw	r7,1348(sp)
   8366c:	103ebf1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83670:	dc800e17 	ldw	r18,56(sp)
   83674:	dc400d17 	ldw	r17,52(sp)
   83678:	dd401904 	addi	r21,sp,100
   8367c:	003e7406 	br	83050 <___vfprintf_internal_r+0x5c4>
   83680:	d9014f17 	ldw	r4,1340(sp)
   83684:	b00b883a 	mov	r5,r22
   83688:	d9800c04 	addi	r6,sp,48
   8368c:	d9c15115 	stw	r7,1348(sp)
   83690:	0082a340 	call	82a34 <__sprint_r>
   83694:	d9c15117 	ldw	r7,1348(sp)
   83698:	103eb41e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   8369c:	dd401904 	addi	r21,sp,100
   836a0:	003d6d06 	br	82c58 <___vfprintf_internal_r+0x1cc>
   836a4:	d9014f17 	ldw	r4,1340(sp)
   836a8:	b00b883a 	mov	r5,r22
   836ac:	d9800c04 	addi	r6,sp,48
   836b0:	d9c15115 	stw	r7,1348(sp)
   836b4:	0082a340 	call	82a34 <__sprint_r>
   836b8:	d9c15117 	ldw	r7,1348(sp)
   836bc:	103eab1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   836c0:	dc800e17 	ldw	r18,56(sp)
   836c4:	dc400d17 	ldw	r17,52(sp)
   836c8:	dd401904 	addi	r21,sp,100
   836cc:	003e3406 	br	82fa0 <___vfprintf_internal_r+0x514>
   836d0:	d9014f17 	ldw	r4,1340(sp)
   836d4:	b00b883a 	mov	r5,r22
   836d8:	d9800c04 	addi	r6,sp,48
   836dc:	d9c15115 	stw	r7,1348(sp)
   836e0:	0082a340 	call	82a34 <__sprint_r>
   836e4:	d9c15117 	ldw	r7,1348(sp)
   836e8:	103ea01e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   836ec:	dc800e17 	ldw	r18,56(sp)
   836f0:	dc400d17 	ldw	r17,52(sp)
   836f4:	dd401904 	addi	r21,sp,100
   836f8:	003e1c06 	br	82f6c <___vfprintf_internal_r+0x4e0>
   836fc:	d9014f17 	ldw	r4,1340(sp)
   83700:	b00b883a 	mov	r5,r22
   83704:	d9800c04 	addi	r6,sp,48
   83708:	d9c15115 	stw	r7,1348(sp)
   8370c:	0082a340 	call	82a34 <__sprint_r>
   83710:	d9c15117 	ldw	r7,1348(sp)
   83714:	103e951e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83718:	dc800e17 	ldw	r18,56(sp)
   8371c:	dc400d17 	ldw	r17,52(sp)
   83720:	dd401904 	addi	r21,sp,100
   83724:	003e0406 	br	82f38 <___vfprintf_internal_r+0x4ac>
   83728:	d9000517 	ldw	r4,20(sp)
   8372c:	0102580e 	bge	zero,r4,84090 <___vfprintf_internal_r+0x1604>
   83730:	d9814717 	ldw	r6,1308(sp)
   83734:	21807a16 	blt	r4,r6,83920 <___vfprintf_internal_r+0xe94>
   83738:	d8814117 	ldw	r2,1284(sp)
   8373c:	91a5883a 	add	r18,r18,r6
   83740:	8c400044 	addi	r17,r17,1
   83744:	a8800015 	stw	r2,0(r21)
   83748:	008001c4 	movi	r2,7
   8374c:	a9800115 	stw	r6,4(r21)
   83750:	dc800e15 	stw	r18,56(sp)
   83754:	dc400d15 	stw	r17,52(sp)
   83758:	1442fc16 	blt	r2,r17,8434c <___vfprintf_internal_r+0x18c0>
   8375c:	a8c00204 	addi	r3,r21,8
   83760:	d9414717 	ldw	r5,1308(sp)
   83764:	2161c83a 	sub	r16,r4,r5
   83768:	043f9d0e 	bge	zero,r16,835e0 <___vfprintf_internal_r+0xb54>
   8376c:	00800404 	movi	r2,16
   83770:	1402190e 	bge	r2,r16,83fd8 <___vfprintf_internal_r+0x154c>
   83774:	dc400d17 	ldw	r17,52(sp)
   83778:	1027883a 	mov	r19,r2
   8377c:	07000274 	movhi	fp,9
   83780:	e70e3484 	addi	fp,fp,14546
   83784:	050001c4 	movi	r20,7
   83788:	00000306 	br	83798 <___vfprintf_internal_r+0xd0c>
   8378c:	18c00204 	addi	r3,r3,8
   83790:	843ffc04 	addi	r16,r16,-16
   83794:	9c02130e 	bge	r19,r16,83fe4 <___vfprintf_internal_r+0x1558>
   83798:	94800404 	addi	r18,r18,16
   8379c:	8c400044 	addi	r17,r17,1
   837a0:	1f000015 	stw	fp,0(r3)
   837a4:	1cc00115 	stw	r19,4(r3)
   837a8:	dc800e15 	stw	r18,56(sp)
   837ac:	dc400d15 	stw	r17,52(sp)
   837b0:	a47ff60e 	bge	r20,r17,8378c <___vfprintf_internal_r+0xd00>
   837b4:	d9014f17 	ldw	r4,1340(sp)
   837b8:	b00b883a 	mov	r5,r22
   837bc:	d9800c04 	addi	r6,sp,48
   837c0:	0082a340 	call	82a34 <__sprint_r>
   837c4:	103e691e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   837c8:	dc800e17 	ldw	r18,56(sp)
   837cc:	dc400d17 	ldw	r17,52(sp)
   837d0:	d8c01904 	addi	r3,sp,100
   837d4:	003fee06 	br	83790 <___vfprintf_internal_r+0xd04>
   837d8:	d8814717 	ldw	r2,1308(sp)
   837dc:	143fffc4 	addi	r16,r2,-1
   837e0:	043e970e 	bge	zero,r16,83240 <___vfprintf_internal_r+0x7b4>
   837e4:	00800404 	movi	r2,16
   837e8:	1400180e 	bge	r2,r16,8384c <___vfprintf_internal_r+0xdc0>
   837ec:	1029883a 	mov	r20,r2
   837f0:	07000274 	movhi	fp,9
   837f4:	e70e3484 	addi	fp,fp,14546
   837f8:	054001c4 	movi	r21,7
   837fc:	00000306 	br	8380c <___vfprintf_internal_r+0xd80>
   83800:	9cc00204 	addi	r19,r19,8
   83804:	843ffc04 	addi	r16,r16,-16
   83808:	a400120e 	bge	r20,r16,83854 <___vfprintf_internal_r+0xdc8>
   8380c:	94800404 	addi	r18,r18,16
   83810:	8c400044 	addi	r17,r17,1
   83814:	9f000015 	stw	fp,0(r19)
   83818:	9d000115 	stw	r20,4(r19)
   8381c:	dc800e15 	stw	r18,56(sp)
   83820:	dc400d15 	stw	r17,52(sp)
   83824:	ac7ff60e 	bge	r21,r17,83800 <___vfprintf_internal_r+0xd74>
   83828:	d9014f17 	ldw	r4,1340(sp)
   8382c:	b00b883a 	mov	r5,r22
   83830:	d9800c04 	addi	r6,sp,48
   83834:	0082a340 	call	82a34 <__sprint_r>
   83838:	103e4c1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   8383c:	dc800e17 	ldw	r18,56(sp)
   83840:	dc400d17 	ldw	r17,52(sp)
   83844:	dcc01904 	addi	r19,sp,100
   83848:	003fee06 	br	83804 <___vfprintf_internal_r+0xd78>
   8384c:	07000274 	movhi	fp,9
   83850:	e70e3484 	addi	fp,fp,14546
   83854:	9425883a 	add	r18,r18,r16
   83858:	8c400044 	addi	r17,r17,1
   8385c:	008001c4 	movi	r2,7
   83860:	9f000015 	stw	fp,0(r19)
   83864:	9c000115 	stw	r16,4(r19)
   83868:	dc800e15 	stw	r18,56(sp)
   8386c:	dc400d15 	stw	r17,52(sp)
   83870:	147e720e 	bge	r2,r17,8323c <___vfprintf_internal_r+0x7b0>
   83874:	d9014f17 	ldw	r4,1340(sp)
   83878:	b00b883a 	mov	r5,r22
   8387c:	d9800c04 	addi	r6,sp,48
   83880:	0082a340 	call	82a34 <__sprint_r>
   83884:	103e391e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83888:	dc800e17 	ldw	r18,56(sp)
   8388c:	dc400d17 	ldw	r17,52(sp)
   83890:	dcc01904 	addi	r19,sp,100
   83894:	003e6a06 	br	83240 <___vfprintf_internal_r+0x7b4>
   83898:	d9014f17 	ldw	r4,1340(sp)
   8389c:	b00b883a 	mov	r5,r22
   838a0:	d9800c04 	addi	r6,sp,48
   838a4:	d9c15115 	stw	r7,1348(sp)
   838a8:	0082a340 	call	82a34 <__sprint_r>
   838ac:	d9c15117 	ldw	r7,1348(sp)
   838b0:	103e2e1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   838b4:	dc800e17 	ldw	r18,56(sp)
   838b8:	dc400d17 	ldw	r17,52(sp)
   838bc:	dd401904 	addi	r21,sp,100
   838c0:	003dba06 	br	82fac <___vfprintf_internal_r+0x520>
   838c4:	d9014f17 	ldw	r4,1340(sp)
   838c8:	b00b883a 	mov	r5,r22
   838cc:	d9800c04 	addi	r6,sp,48
   838d0:	0082a340 	call	82a34 <__sprint_r>
   838d4:	103e251e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   838d8:	dc800e17 	ldw	r18,56(sp)
   838dc:	dc400d17 	ldw	r17,52(sp)
   838e0:	dcc01904 	addi	r19,sp,100
   838e4:	003e4206 	br	831f0 <___vfprintf_internal_r+0x764>
   838e8:	d9014f17 	ldw	r4,1340(sp)
   838ec:	b00b883a 	mov	r5,r22
   838f0:	d9800c04 	addi	r6,sp,48
   838f4:	0082a340 	call	82a34 <__sprint_r>
   838f8:	103e1c1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   838fc:	dc800e17 	ldw	r18,56(sp)
   83900:	dc400d17 	ldw	r17,52(sp)
   83904:	d8c01904 	addi	r3,sp,100
   83908:	003e2e06 	br	831c4 <___vfprintf_internal_r+0x738>
   8390c:	d9414c17 	ldw	r5,1328(sp)
   83910:	2880004c 	andi	r2,r5,1
   83914:	1005003a 	cmpeq	r2,r2,zero
   83918:	103dda1e 	bne	r2,zero,83084 <___vfprintf_internal_r+0x5f8>
   8391c:	003e9f06 	br	8339c <___vfprintf_internal_r+0x910>
   83920:	d8c14117 	ldw	r3,1284(sp)
   83924:	9125883a 	add	r18,r18,r4
   83928:	8c400044 	addi	r17,r17,1
   8392c:	008001c4 	movi	r2,7
   83930:	a8c00015 	stw	r3,0(r21)
   83934:	a9000115 	stw	r4,4(r21)
   83938:	dc800e15 	stw	r18,56(sp)
   8393c:	dc400d15 	stw	r17,52(sp)
   83940:	14426c16 	blt	r2,r17,842f4 <___vfprintf_internal_r+0x1868>
   83944:	a8c00204 	addi	r3,r21,8
   83948:	d9414917 	ldw	r5,1316(sp)
   8394c:	00800044 	movi	r2,1
   83950:	94800044 	addi	r18,r18,1
   83954:	8c400044 	addi	r17,r17,1
   83958:	18800115 	stw	r2,4(r3)
   8395c:	008001c4 	movi	r2,7
   83960:	19400015 	stw	r5,0(r3)
   83964:	dc800e15 	stw	r18,56(sp)
   83968:	dc400d15 	stw	r17,52(sp)
   8396c:	2021883a 	mov	r16,r4
   83970:	14425616 	blt	r2,r17,842cc <___vfprintf_internal_r+0x1840>
   83974:	19400204 	addi	r5,r3,8
   83978:	d9814717 	ldw	r6,1308(sp)
   8397c:	8c400044 	addi	r17,r17,1
   83980:	dc400d15 	stw	r17,52(sp)
   83984:	3107c83a 	sub	r3,r6,r4
   83988:	d9014117 	ldw	r4,1284(sp)
   8398c:	90e5883a 	add	r18,r18,r3
   83990:	28c00115 	stw	r3,4(r5)
   83994:	8105883a 	add	r2,r16,r4
   83998:	28800015 	stw	r2,0(r5)
   8399c:	008001c4 	movi	r2,7
   839a0:	dc800e15 	stw	r18,56(sp)
   839a4:	147f1d16 	blt	r2,r17,8361c <___vfprintf_internal_r+0xb90>
   839a8:	28c00204 	addi	r3,r5,8
   839ac:	003db506 	br	83084 <___vfprintf_internal_r+0x5f8>
   839b0:	3c000017 	ldw	r16,0(r7)
   839b4:	3c400117 	ldw	r17,4(r7)
   839b8:	39800204 	addi	r6,r7,8
   839bc:	01000044 	movi	r4,1
   839c0:	d9814015 	stw	r6,1280(sp)
   839c4:	d8000405 	stb	zero,16(sp)
   839c8:	003ebe06 	br	834c4 <___vfprintf_internal_r+0xa38>
   839cc:	3c000017 	ldw	r16,0(r7)
   839d0:	3c400117 	ldw	r17,4(r7)
   839d4:	38800204 	addi	r2,r7,8
   839d8:	d8814015 	stw	r2,1280(sp)
   839dc:	003eb706 	br	834bc <___vfprintf_internal_r+0xa30>
   839e0:	3c000017 	ldw	r16,0(r7)
   839e4:	3c400117 	ldw	r17,4(r7)
   839e8:	39000204 	addi	r4,r7,8
   839ec:	d9014015 	stw	r4,1280(sp)
   839f0:	0009883a 	mov	r4,zero
   839f4:	d8000405 	stb	zero,16(sp)
   839f8:	003eb206 	br	834c4 <___vfprintf_internal_r+0xa38>
   839fc:	38c00017 	ldw	r3,0(r7)
   83a00:	39c00104 	addi	r7,r7,4
   83a04:	d8c14a15 	stw	r3,1320(sp)
   83a08:	1800d70e 	bge	r3,zero,83d68 <___vfprintf_internal_r+0x12dc>
   83a0c:	00c7c83a 	sub	r3,zero,r3
   83a10:	d8c14a15 	stw	r3,1320(sp)
   83a14:	d9014c17 	ldw	r4,1328(sp)
   83a18:	b8c00007 	ldb	r3,0(r23)
   83a1c:	21000114 	ori	r4,r4,4
   83a20:	d9014c15 	stw	r4,1328(sp)
   83a24:	003c9806 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83a28:	d9814c17 	ldw	r6,1328(sp)
   83a2c:	3080080c 	andi	r2,r6,32
   83a30:	1001f626 	beq	r2,zero,8420c <___vfprintf_internal_r+0x1780>
   83a34:	d9014b17 	ldw	r4,1324(sp)
   83a38:	38800017 	ldw	r2,0(r7)
   83a3c:	39c00104 	addi	r7,r7,4
   83a40:	d9c14015 	stw	r7,1280(sp)
   83a44:	2007d7fa 	srai	r3,r4,31
   83a48:	d9c14017 	ldw	r7,1280(sp)
   83a4c:	11000015 	stw	r4,0(r2)
   83a50:	10c00115 	stw	r3,4(r2)
   83a54:	003c6906 	br	82bfc <___vfprintf_internal_r+0x170>
   83a58:	b8c00007 	ldb	r3,0(r23)
   83a5c:	00801b04 	movi	r2,108
   83a60:	18825526 	beq	r3,r2,843b8 <___vfprintf_internal_r+0x192c>
   83a64:	d9414c17 	ldw	r5,1328(sp)
   83a68:	29400414 	ori	r5,r5,16
   83a6c:	d9414c15 	stw	r5,1328(sp)
   83a70:	003c8506 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83a74:	d9814c17 	ldw	r6,1328(sp)
   83a78:	b8c00007 	ldb	r3,0(r23)
   83a7c:	31800814 	ori	r6,r6,32
   83a80:	d9814c15 	stw	r6,1328(sp)
   83a84:	003c8006 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83a88:	d8814c17 	ldw	r2,1328(sp)
   83a8c:	3c000017 	ldw	r16,0(r7)
   83a90:	00c01e04 	movi	r3,120
   83a94:	10800094 	ori	r2,r2,2
   83a98:	d8814c15 	stw	r2,1328(sp)
   83a9c:	39c00104 	addi	r7,r7,4
   83aa0:	01400274 	movhi	r5,9
   83aa4:	294e1d04 	addi	r5,r5,14452
   83aa8:	00800c04 	movi	r2,48
   83aac:	0023883a 	mov	r17,zero
   83ab0:	01000084 	movi	r4,2
   83ab4:	d9c14015 	stw	r7,1280(sp)
   83ab8:	d8c14d15 	stw	r3,1332(sp)
   83abc:	d9414415 	stw	r5,1296(sp)
   83ac0:	d8800445 	stb	r2,17(sp)
   83ac4:	d8c00485 	stb	r3,18(sp)
   83ac8:	d8000405 	stb	zero,16(sp)
   83acc:	003e7d06 	br	834c4 <___vfprintf_internal_r+0xa38>
   83ad0:	d8814c17 	ldw	r2,1328(sp)
   83ad4:	b8c00007 	ldb	r3,0(r23)
   83ad8:	10801014 	ori	r2,r2,64
   83adc:	d8814c15 	stw	r2,1328(sp)
   83ae0:	003c6906 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83ae4:	d9414c17 	ldw	r5,1328(sp)
   83ae8:	2880020c 	andi	r2,r5,8
   83aec:	1001e526 	beq	r2,zero,84284 <___vfprintf_internal_r+0x17f8>
   83af0:	39800017 	ldw	r6,0(r7)
   83af4:	38800204 	addi	r2,r7,8
   83af8:	d8814015 	stw	r2,1280(sp)
   83afc:	d9814215 	stw	r6,1288(sp)
   83b00:	39c00117 	ldw	r7,4(r7)
   83b04:	d9c14315 	stw	r7,1292(sp)
   83b08:	d9014217 	ldw	r4,1288(sp)
   83b0c:	d9414317 	ldw	r5,1292(sp)
   83b10:	0089ed40 	call	89ed4 <__isinfd>
   83b14:	10021d26 	beq	r2,zero,8438c <___vfprintf_internal_r+0x1900>
   83b18:	d9014217 	ldw	r4,1288(sp)
   83b1c:	d9414317 	ldw	r5,1292(sp)
   83b20:	000d883a 	mov	r6,zero
   83b24:	000f883a 	mov	r7,zero
   83b28:	008ed040 	call	8ed04 <__ltdf2>
   83b2c:	1002d016 	blt	r2,zero,84670 <___vfprintf_internal_r+0x1be4>
   83b30:	d9414d17 	ldw	r5,1332(sp)
   83b34:	008011c4 	movi	r2,71
   83b38:	11421016 	blt	r2,r5,8437c <___vfprintf_internal_r+0x18f0>
   83b3c:	01800274 	movhi	r6,9
   83b40:	318e2204 	addi	r6,r6,14472
   83b44:	d9814115 	stw	r6,1284(sp)
   83b48:	d9014c17 	ldw	r4,1328(sp)
   83b4c:	00c000c4 	movi	r3,3
   83b50:	00bfdfc4 	movi	r2,-129
   83b54:	2088703a 	and	r4,r4,r2
   83b58:	180f883a 	mov	r7,r3
   83b5c:	d8c14515 	stw	r3,1300(sp)
   83b60:	d9014c15 	stw	r4,1328(sp)
   83b64:	d8014615 	stw	zero,1304(sp)
   83b68:	003e6a06 	br	83514 <___vfprintf_internal_r+0xa88>
   83b6c:	38800017 	ldw	r2,0(r7)
   83b70:	00c00044 	movi	r3,1
   83b74:	39c00104 	addi	r7,r7,4
   83b78:	d9c14015 	stw	r7,1280(sp)
   83b7c:	d9000f04 	addi	r4,sp,60
   83b80:	180f883a 	mov	r7,r3
   83b84:	d8c14515 	stw	r3,1300(sp)
   83b88:	d9014115 	stw	r4,1284(sp)
   83b8c:	d8800f05 	stb	r2,60(sp)
   83b90:	d8000405 	stb	zero,16(sp)
   83b94:	003cac06 	br	82e48 <___vfprintf_internal_r+0x3bc>
   83b98:	01400274 	movhi	r5,9
   83b9c:	294e2804 	addi	r5,r5,14496
   83ba0:	d9414415 	stw	r5,1296(sp)
   83ba4:	d9814c17 	ldw	r6,1328(sp)
   83ba8:	3080080c 	andi	r2,r6,32
   83bac:	1000ff26 	beq	r2,zero,83fac <___vfprintf_internal_r+0x1520>
   83bb0:	3c000017 	ldw	r16,0(r7)
   83bb4:	3c400117 	ldw	r17,4(r7)
   83bb8:	38800204 	addi	r2,r7,8
   83bbc:	d8814015 	stw	r2,1280(sp)
   83bc0:	d9414c17 	ldw	r5,1328(sp)
   83bc4:	2880004c 	andi	r2,r5,1
   83bc8:	1005003a 	cmpeq	r2,r2,zero
   83bcc:	1000b91e 	bne	r2,zero,83eb4 <___vfprintf_internal_r+0x1428>
   83bd0:	8444b03a 	or	r2,r16,r17
   83bd4:	1000b726 	beq	r2,zero,83eb4 <___vfprintf_internal_r+0x1428>
   83bd8:	d9814d17 	ldw	r6,1332(sp)
   83bdc:	29400094 	ori	r5,r5,2
   83be0:	00800c04 	movi	r2,48
   83be4:	01000084 	movi	r4,2
   83be8:	d9414c15 	stw	r5,1328(sp)
   83bec:	d8800445 	stb	r2,17(sp)
   83bf0:	d9800485 	stb	r6,18(sp)
   83bf4:	d8000405 	stb	zero,16(sp)
   83bf8:	003e3206 	br	834c4 <___vfprintf_internal_r+0xa38>
   83bfc:	01800274 	movhi	r6,9
   83c00:	318e1d04 	addi	r6,r6,14452
   83c04:	d9814415 	stw	r6,1296(sp)
   83c08:	003fe606 	br	83ba4 <___vfprintf_internal_r+0x1118>
   83c0c:	00800ac4 	movi	r2,43
   83c10:	d8800405 	stb	r2,16(sp)
   83c14:	b8c00007 	ldb	r3,0(r23)
   83c18:	003c1b06 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83c1c:	d8814c17 	ldw	r2,1328(sp)
   83c20:	b8c00007 	ldb	r3,0(r23)
   83c24:	10800054 	ori	r2,r2,1
   83c28:	d8814c15 	stw	r2,1328(sp)
   83c2c:	003c1606 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83c30:	d8800407 	ldb	r2,16(sp)
   83c34:	10004c1e 	bne	r2,zero,83d68 <___vfprintf_internal_r+0x12dc>
   83c38:	00800804 	movi	r2,32
   83c3c:	d8800405 	stb	r2,16(sp)
   83c40:	b8c00007 	ldb	r3,0(r23)
   83c44:	003c1006 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83c48:	d9814c17 	ldw	r6,1328(sp)
   83c4c:	b8c00007 	ldb	r3,0(r23)
   83c50:	31800214 	ori	r6,r6,8
   83c54:	d9814c15 	stw	r6,1328(sp)
   83c58:	003c0b06 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83c5c:	0009883a 	mov	r4,zero
   83c60:	04000244 	movi	r16,9
   83c64:	01400284 	movi	r5,10
   83c68:	d9c15115 	stw	r7,1348(sp)
   83c6c:	008f3380 	call	8f338 <__mulsi3>
   83c70:	b9000007 	ldb	r4,0(r23)
   83c74:	d8c14d17 	ldw	r3,1332(sp)
   83c78:	bdc00044 	addi	r23,r23,1
   83c7c:	d9014d15 	stw	r4,1332(sp)
   83c80:	d9414d17 	ldw	r5,1332(sp)
   83c84:	1885883a 	add	r2,r3,r2
   83c88:	113ff404 	addi	r4,r2,-48
   83c8c:	28bff404 	addi	r2,r5,-48
   83c90:	d9c15117 	ldw	r7,1348(sp)
   83c94:	80bff32e 	bgeu	r16,r2,83c64 <___vfprintf_internal_r+0x11d8>
   83c98:	d9014a15 	stw	r4,1320(sp)
   83c9c:	003bfc06 	br	82c90 <___vfprintf_internal_r+0x204>
   83ca0:	d8814c17 	ldw	r2,1328(sp)
   83ca4:	b8c00007 	ldb	r3,0(r23)
   83ca8:	10802014 	ori	r2,r2,128
   83cac:	d8814c15 	stw	r2,1328(sp)
   83cb0:	003bf506 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83cb4:	b8c00007 	ldb	r3,0(r23)
   83cb8:	00800a84 	movi	r2,42
   83cbc:	bdc00044 	addi	r23,r23,1
   83cc0:	18831826 	beq	r3,r2,84924 <___vfprintf_internal_r+0x1e98>
   83cc4:	d8c14d15 	stw	r3,1332(sp)
   83cc8:	18bff404 	addi	r2,r3,-48
   83ccc:	00c00244 	movi	r3,9
   83cd0:	18827b36 	bltu	r3,r2,846c0 <___vfprintf_internal_r+0x1c34>
   83cd4:	1821883a 	mov	r16,r3
   83cd8:	0009883a 	mov	r4,zero
   83cdc:	01400284 	movi	r5,10
   83ce0:	d9c15115 	stw	r7,1348(sp)
   83ce4:	008f3380 	call	8f338 <__mulsi3>
   83ce8:	d9414d17 	ldw	r5,1332(sp)
   83cec:	b9800007 	ldb	r6,0(r23)
   83cf0:	d9c15117 	ldw	r7,1348(sp)
   83cf4:	1145883a 	add	r2,r2,r5
   83cf8:	113ff404 	addi	r4,r2,-48
   83cfc:	30bff404 	addi	r2,r6,-48
   83d00:	d9814d15 	stw	r6,1332(sp)
   83d04:	bdc00044 	addi	r23,r23,1
   83d08:	80bff42e 	bgeu	r16,r2,83cdc <___vfprintf_internal_r+0x1250>
   83d0c:	2027883a 	mov	r19,r4
   83d10:	203bdf0e 	bge	r4,zero,82c90 <___vfprintf_internal_r+0x204>
   83d14:	04ffffc4 	movi	r19,-1
   83d18:	003bdd06 	br	82c90 <___vfprintf_internal_r+0x204>
   83d1c:	d8000405 	stb	zero,16(sp)
   83d20:	39800017 	ldw	r6,0(r7)
   83d24:	39c00104 	addi	r7,r7,4
   83d28:	d9c14015 	stw	r7,1280(sp)
   83d2c:	d9814115 	stw	r6,1284(sp)
   83d30:	3001c926 	beq	r6,zero,84458 <___vfprintf_internal_r+0x19cc>
   83d34:	98000e16 	blt	r19,zero,83d70 <___vfprintf_internal_r+0x12e4>
   83d38:	d9014117 	ldw	r4,1284(sp)
   83d3c:	000b883a 	mov	r5,zero
   83d40:	980d883a 	mov	r6,r19
   83d44:	00885780 	call	88578 <memchr>
   83d48:	10025926 	beq	r2,zero,846b0 <___vfprintf_internal_r+0x1c24>
   83d4c:	d8c14117 	ldw	r3,1284(sp)
   83d50:	10cfc83a 	sub	r7,r2,r3
   83d54:	99c19e16 	blt	r19,r7,843d0 <___vfprintf_internal_r+0x1944>
   83d58:	d9c14515 	stw	r7,1300(sp)
   83d5c:	38000916 	blt	r7,zero,83d84 <___vfprintf_internal_r+0x12f8>
   83d60:	d8014615 	stw	zero,1304(sp)
   83d64:	003deb06 	br	83514 <___vfprintf_internal_r+0xa88>
   83d68:	b8c00007 	ldb	r3,0(r23)
   83d6c:	003bc606 	br	82c88 <___vfprintf_internal_r+0x1fc>
   83d70:	d9014117 	ldw	r4,1284(sp)
   83d74:	008274c0 	call	8274c <strlen>
   83d78:	d8814515 	stw	r2,1300(sp)
   83d7c:	100f883a 	mov	r7,r2
   83d80:	103ff70e 	bge	r2,zero,83d60 <___vfprintf_internal_r+0x12d4>
   83d84:	d8014515 	stw	zero,1300(sp)
   83d88:	d8014615 	stw	zero,1304(sp)
   83d8c:	003de106 	br	83514 <___vfprintf_internal_r+0xa88>
   83d90:	20c03fcc 	andi	r3,r4,255
   83d94:	00800044 	movi	r2,1
   83d98:	18802d26 	beq	r3,r2,83e50 <___vfprintf_internal_r+0x13c4>
   83d9c:	18800e36 	bltu	r3,r2,83dd8 <___vfprintf_internal_r+0x134c>
   83da0:	00800084 	movi	r2,2
   83da4:	1880fa26 	beq	r3,r2,84190 <___vfprintf_internal_r+0x1704>
   83da8:	01000274 	movhi	r4,9
   83dac:	210e2d04 	addi	r4,r4,14516
   83db0:	008274c0 	call	8274c <strlen>
   83db4:	100f883a 	mov	r7,r2
   83db8:	dcc14515 	stw	r19,1300(sp)
   83dbc:	9880010e 	bge	r19,r2,83dc4 <___vfprintf_internal_r+0x1338>
   83dc0:	d8814515 	stw	r2,1300(sp)
   83dc4:	00800274 	movhi	r2,9
   83dc8:	108e2d04 	addi	r2,r2,14516
   83dcc:	dcc14615 	stw	r19,1304(sp)
   83dd0:	d8814115 	stw	r2,1284(sp)
   83dd4:	003dcf06 	br	83514 <___vfprintf_internal_r+0xa88>
   83dd8:	d9401904 	addi	r5,sp,100
   83ddc:	dd000f04 	addi	r20,sp,60
   83de0:	d9414115 	stw	r5,1284(sp)
   83de4:	880a977a 	slli	r5,r17,29
   83de8:	d9814117 	ldw	r6,1284(sp)
   83dec:	8004d0fa 	srli	r2,r16,3
   83df0:	8806d0fa 	srli	r3,r17,3
   83df4:	810001cc 	andi	r4,r16,7
   83df8:	2884b03a 	or	r2,r5,r2
   83dfc:	31bfffc4 	addi	r6,r6,-1
   83e00:	21000c04 	addi	r4,r4,48
   83e04:	d9814115 	stw	r6,1284(sp)
   83e08:	10cab03a 	or	r5,r2,r3
   83e0c:	31000005 	stb	r4,0(r6)
   83e10:	1021883a 	mov	r16,r2
   83e14:	1823883a 	mov	r17,r3
   83e18:	283ff21e 	bne	r5,zero,83de4 <___vfprintf_internal_r+0x1358>
   83e1c:	d8c14c17 	ldw	r3,1328(sp)
   83e20:	1880004c 	andi	r2,r3,1
   83e24:	1005003a 	cmpeq	r2,r2,zero
   83e28:	103db31e 	bne	r2,zero,834f8 <___vfprintf_internal_r+0xa6c>
   83e2c:	20803fcc 	andi	r2,r4,255
   83e30:	1080201c 	xori	r2,r2,128
   83e34:	10bfe004 	addi	r2,r2,-128
   83e38:	00c00c04 	movi	r3,48
   83e3c:	10fdae26 	beq	r2,r3,834f8 <___vfprintf_internal_r+0xa6c>
   83e40:	31bfffc4 	addi	r6,r6,-1
   83e44:	d9814115 	stw	r6,1284(sp)
   83e48:	30c00005 	stb	r3,0(r6)
   83e4c:	003daa06 	br	834f8 <___vfprintf_internal_r+0xa6c>
   83e50:	88800068 	cmpgeui	r2,r17,1
   83e54:	10002c1e 	bne	r2,zero,83f08 <___vfprintf_internal_r+0x147c>
   83e58:	8800021e 	bne	r17,zero,83e64 <___vfprintf_internal_r+0x13d8>
   83e5c:	00800244 	movi	r2,9
   83e60:	14002936 	bltu	r2,r16,83f08 <___vfprintf_internal_r+0x147c>
   83e64:	d90018c4 	addi	r4,sp,99
   83e68:	dd000f04 	addi	r20,sp,60
   83e6c:	d9014115 	stw	r4,1284(sp)
   83e70:	d9014117 	ldw	r4,1284(sp)
   83e74:	80800c04 	addi	r2,r16,48
   83e78:	20800005 	stb	r2,0(r4)
   83e7c:	003d9e06 	br	834f8 <___vfprintf_internal_r+0xa6c>
   83e80:	dc400d17 	ldw	r17,52(sp)
   83e84:	07000274 	movhi	fp,9
   83e88:	e70e3484 	addi	fp,fp,14546
   83e8c:	9425883a 	add	r18,r18,r16
   83e90:	8c400044 	addi	r17,r17,1
   83e94:	008001c4 	movi	r2,7
   83e98:	1f000015 	stw	fp,0(r3)
   83e9c:	1c000115 	stw	r16,4(r3)
   83ea0:	dc800e15 	stw	r18,56(sp)
   83ea4:	dc400d15 	stw	r17,52(sp)
   83ea8:	147ddc16 	blt	r2,r17,8361c <___vfprintf_internal_r+0xb90>
   83eac:	18c00204 	addi	r3,r3,8
   83eb0:	003c7406 	br	83084 <___vfprintf_internal_r+0x5f8>
   83eb4:	01000084 	movi	r4,2
   83eb8:	d8000405 	stb	zero,16(sp)
   83ebc:	003d8106 	br	834c4 <___vfprintf_internal_r+0xa38>
   83ec0:	d9814c17 	ldw	r6,1328(sp)
   83ec4:	30c4703a 	and	r2,r6,r3
   83ec8:	1005003a 	cmpeq	r2,r2,zero
   83ecc:	103cb326 	beq	r2,zero,8319c <___vfprintf_internal_r+0x710>
   83ed0:	d9014117 	ldw	r4,1284(sp)
   83ed4:	94800044 	addi	r18,r18,1
   83ed8:	8c400044 	addi	r17,r17,1
   83edc:	008001c4 	movi	r2,7
   83ee0:	a9000015 	stw	r4,0(r21)
   83ee4:	a8c00115 	stw	r3,4(r21)
   83ee8:	dc800e15 	stw	r18,56(sp)
   83eec:	dc400d15 	stw	r17,52(sp)
   83ef0:	147e6016 	blt	r2,r17,83874 <___vfprintf_internal_r+0xde8>
   83ef4:	acc00204 	addi	r19,r21,8
   83ef8:	003cd106 	br	83240 <___vfprintf_internal_r+0x7b4>
   83efc:	07000274 	movhi	fp,9
   83f00:	e70e3484 	addi	fp,fp,14546
   83f04:	003c4906 	br	8302c <___vfprintf_internal_r+0x5a0>
   83f08:	dd000f04 	addi	r20,sp,60
   83f0c:	dc801904 	addi	r18,sp,100
   83f10:	8009883a 	mov	r4,r16
   83f14:	880b883a 	mov	r5,r17
   83f18:	01800284 	movi	r6,10
   83f1c:	000f883a 	mov	r7,zero
   83f20:	008d7fc0 	call	8d7fc <__umoddi3>
   83f24:	12000c04 	addi	r8,r2,48
   83f28:	94bfffc4 	addi	r18,r18,-1
   83f2c:	8009883a 	mov	r4,r16
   83f30:	880b883a 	mov	r5,r17
   83f34:	01800284 	movi	r6,10
   83f38:	000f883a 	mov	r7,zero
   83f3c:	92000005 	stb	r8,0(r18)
   83f40:	008d1900 	call	8d190 <__udivdi3>
   83f44:	1009883a 	mov	r4,r2
   83f48:	1021883a 	mov	r16,r2
   83f4c:	18800068 	cmpgeui	r2,r3,1
   83f50:	1823883a 	mov	r17,r3
   83f54:	103fee1e 	bne	r2,zero,83f10 <___vfprintf_internal_r+0x1484>
   83f58:	1800021e 	bne	r3,zero,83f64 <___vfprintf_internal_r+0x14d8>
   83f5c:	00800244 	movi	r2,9
   83f60:	113feb36 	bltu	r2,r4,83f10 <___vfprintf_internal_r+0x1484>
   83f64:	94bfffc4 	addi	r18,r18,-1
   83f68:	dc814115 	stw	r18,1284(sp)
   83f6c:	003fc006 	br	83e70 <___vfprintf_internal_r+0x13e4>
   83f70:	d9014c17 	ldw	r4,1328(sp)
   83f74:	2080004c 	andi	r2,r4,1
   83f78:	10009a1e 	bne	r2,zero,841e4 <___vfprintf_internal_r+0x1758>
   83f7c:	d9401904 	addi	r5,sp,100
   83f80:	dd000f04 	addi	r20,sp,60
   83f84:	d9414115 	stw	r5,1284(sp)
   83f88:	003d5b06 	br	834f8 <___vfprintf_internal_r+0xa6c>
   83f8c:	d9014f17 	ldw	r4,1340(sp)
   83f90:	b00b883a 	mov	r5,r22
   83f94:	d9800c04 	addi	r6,sp,48
   83f98:	0082a340 	call	82a34 <__sprint_r>
   83f9c:	103c731e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   83fa0:	dc800e17 	ldw	r18,56(sp)
   83fa4:	d8c01904 	addi	r3,sp,100
   83fa8:	003cf906 	br	83390 <___vfprintf_internal_r+0x904>
   83fac:	d8c14c17 	ldw	r3,1328(sp)
   83fb0:	1880040c 	andi	r2,r3,16
   83fb4:	1000711e 	bne	r2,zero,8417c <___vfprintf_internal_r+0x16f0>
   83fb8:	d9014c17 	ldw	r4,1328(sp)
   83fbc:	2080100c 	andi	r2,r4,64
   83fc0:	10006e26 	beq	r2,zero,8417c <___vfprintf_internal_r+0x16f0>
   83fc4:	3c00000b 	ldhu	r16,0(r7)
   83fc8:	0023883a 	mov	r17,zero
   83fcc:	39c00104 	addi	r7,r7,4
   83fd0:	d9c14015 	stw	r7,1280(sp)
   83fd4:	003efa06 	br	83bc0 <___vfprintf_internal_r+0x1134>
   83fd8:	dc400d17 	ldw	r17,52(sp)
   83fdc:	07000274 	movhi	fp,9
   83fe0:	e70e3484 	addi	fp,fp,14546
   83fe4:	9425883a 	add	r18,r18,r16
   83fe8:	8c400044 	addi	r17,r17,1
   83fec:	008001c4 	movi	r2,7
   83ff0:	1f000015 	stw	fp,0(r3)
   83ff4:	1c000115 	stw	r16,4(r3)
   83ff8:	dc800e15 	stw	r18,56(sp)
   83ffc:	dc400d15 	stw	r17,52(sp)
   84000:	147d7016 	blt	r2,r17,835c4 <___vfprintf_internal_r+0xb38>
   84004:	18c00204 	addi	r3,r3,8
   84008:	003d7506 	br	835e0 <___vfprintf_internal_r+0xb54>
   8400c:	dc800e17 	ldw	r18,56(sp)
   84010:	dc400d17 	ldw	r17,52(sp)
   84014:	07000274 	movhi	fp,9
   84018:	e70e3884 	addi	fp,fp,14562
   8401c:	003bba06 	br	82f08 <___vfprintf_internal_r+0x47c>
   84020:	d9014f17 	ldw	r4,1340(sp)
   84024:	b00b883a 	mov	r5,r22
   84028:	d9800c04 	addi	r6,sp,48
   8402c:	0082a340 	call	82a34 <__sprint_r>
   84030:	103c4e1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   84034:	dc800e17 	ldw	r18,56(sp)
   84038:	d8c01904 	addi	r3,sp,100
   8403c:	003ce306 	br	833cc <___vfprintf_internal_r+0x940>
   84040:	3c000017 	ldw	r16,0(r7)
   84044:	0009883a 	mov	r4,zero
   84048:	39c00104 	addi	r7,r7,4
   8404c:	0023883a 	mov	r17,zero
   84050:	d9c14015 	stw	r7,1280(sp)
   84054:	d8000405 	stb	zero,16(sp)
   84058:	003d1a06 	br	834c4 <___vfprintf_internal_r+0xa38>
   8405c:	38800017 	ldw	r2,0(r7)
   84060:	39c00104 	addi	r7,r7,4
   84064:	d9c14015 	stw	r7,1280(sp)
   84068:	1023d7fa 	srai	r17,r2,31
   8406c:	1021883a 	mov	r16,r2
   84070:	003d1206 	br	834bc <___vfprintf_internal_r+0xa30>
   84074:	3c000017 	ldw	r16,0(r7)
   84078:	01000044 	movi	r4,1
   8407c:	39c00104 	addi	r7,r7,4
   84080:	0023883a 	mov	r17,zero
   84084:	d9c14015 	stw	r7,1280(sp)
   84088:	d8000405 	stb	zero,16(sp)
   8408c:	003d0d06 	br	834c4 <___vfprintf_internal_r+0xa38>
   84090:	00800274 	movhi	r2,9
   84094:	108e3404 	addi	r2,r2,14544
   84098:	94800044 	addi	r18,r18,1
   8409c:	8c400044 	addi	r17,r17,1
   840a0:	a8800015 	stw	r2,0(r21)
   840a4:	00c00044 	movi	r3,1
   840a8:	008001c4 	movi	r2,7
   840ac:	a8c00115 	stw	r3,4(r21)
   840b0:	dc800e15 	stw	r18,56(sp)
   840b4:	dc400d15 	stw	r17,52(sp)
   840b8:	1440ca16 	blt	r2,r17,843e4 <___vfprintf_internal_r+0x1958>
   840bc:	a8c00204 	addi	r3,r21,8
   840c0:	2000061e 	bne	r4,zero,840dc <___vfprintf_internal_r+0x1650>
   840c4:	d9414717 	ldw	r5,1308(sp)
   840c8:	2800041e 	bne	r5,zero,840dc <___vfprintf_internal_r+0x1650>
   840cc:	d9814c17 	ldw	r6,1328(sp)
   840d0:	3080004c 	andi	r2,r6,1
   840d4:	1005003a 	cmpeq	r2,r2,zero
   840d8:	103bea1e 	bne	r2,zero,83084 <___vfprintf_internal_r+0x5f8>
   840dc:	00800044 	movi	r2,1
   840e0:	dc400d17 	ldw	r17,52(sp)
   840e4:	18800115 	stw	r2,4(r3)
   840e8:	d8814917 	ldw	r2,1316(sp)
   840ec:	94800044 	addi	r18,r18,1
   840f0:	8c400044 	addi	r17,r17,1
   840f4:	18800015 	stw	r2,0(r3)
   840f8:	008001c4 	movi	r2,7
   840fc:	dc800e15 	stw	r18,56(sp)
   84100:	dc400d15 	stw	r17,52(sp)
   84104:	1440ca16 	blt	r2,r17,84430 <___vfprintf_internal_r+0x19a4>
   84108:	18c00204 	addi	r3,r3,8
   8410c:	0121c83a 	sub	r16,zero,r4
   84110:	0400500e 	bge	zero,r16,84254 <___vfprintf_internal_r+0x17c8>
   84114:	00800404 	movi	r2,16
   84118:	1400800e 	bge	r2,r16,8431c <___vfprintf_internal_r+0x1890>
   8411c:	1027883a 	mov	r19,r2
   84120:	07000274 	movhi	fp,9
   84124:	e70e3484 	addi	fp,fp,14546
   84128:	050001c4 	movi	r20,7
   8412c:	00000306 	br	8413c <___vfprintf_internal_r+0x16b0>
   84130:	18c00204 	addi	r3,r3,8
   84134:	843ffc04 	addi	r16,r16,-16
   84138:	9c007a0e 	bge	r19,r16,84324 <___vfprintf_internal_r+0x1898>
   8413c:	94800404 	addi	r18,r18,16
   84140:	8c400044 	addi	r17,r17,1
   84144:	1f000015 	stw	fp,0(r3)
   84148:	1cc00115 	stw	r19,4(r3)
   8414c:	dc800e15 	stw	r18,56(sp)
   84150:	dc400d15 	stw	r17,52(sp)
   84154:	a47ff60e 	bge	r20,r17,84130 <___vfprintf_internal_r+0x16a4>
   84158:	d9014f17 	ldw	r4,1340(sp)
   8415c:	b00b883a 	mov	r5,r22
   84160:	d9800c04 	addi	r6,sp,48
   84164:	0082a340 	call	82a34 <__sprint_r>
   84168:	103c001e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   8416c:	dc800e17 	ldw	r18,56(sp)
   84170:	dc400d17 	ldw	r17,52(sp)
   84174:	d8c01904 	addi	r3,sp,100
   84178:	003fee06 	br	84134 <___vfprintf_internal_r+0x16a8>
   8417c:	3c000017 	ldw	r16,0(r7)
   84180:	0023883a 	mov	r17,zero
   84184:	39c00104 	addi	r7,r7,4
   84188:	d9c14015 	stw	r7,1280(sp)
   8418c:	003e8c06 	br	83bc0 <___vfprintf_internal_r+0x1134>
   84190:	d9401904 	addi	r5,sp,100
   84194:	dd000f04 	addi	r20,sp,60
   84198:	d9414115 	stw	r5,1284(sp)
   8419c:	d9814417 	ldw	r6,1296(sp)
   841a0:	880a973a 	slli	r5,r17,28
   841a4:	8004d13a 	srli	r2,r16,4
   841a8:	810003cc 	andi	r4,r16,15
   841ac:	3109883a 	add	r4,r6,r4
   841b0:	2884b03a 	or	r2,r5,r2
   841b4:	21400003 	ldbu	r5,0(r4)
   841b8:	d9014117 	ldw	r4,1284(sp)
   841bc:	8806d13a 	srli	r3,r17,4
   841c0:	1021883a 	mov	r16,r2
   841c4:	213fffc4 	addi	r4,r4,-1
   841c8:	d9014115 	stw	r4,1284(sp)
   841cc:	d9814117 	ldw	r6,1284(sp)
   841d0:	10c8b03a 	or	r4,r2,r3
   841d4:	1823883a 	mov	r17,r3
   841d8:	31400005 	stb	r5,0(r6)
   841dc:	203fef1e 	bne	r4,zero,8419c <___vfprintf_internal_r+0x1710>
   841e0:	003cc506 	br	834f8 <___vfprintf_internal_r+0xa6c>
   841e4:	00800c04 	movi	r2,48
   841e8:	d98018c4 	addi	r6,sp,99
   841ec:	dd000f04 	addi	r20,sp,60
   841f0:	d88018c5 	stb	r2,99(sp)
   841f4:	d9814115 	stw	r6,1284(sp)
   841f8:	003cbf06 	br	834f8 <___vfprintf_internal_r+0xa6c>
   841fc:	dc400d17 	ldw	r17,52(sp)
   84200:	07000274 	movhi	fp,9
   84204:	e70e3884 	addi	fp,fp,14562
   84208:	003bc106 	br	83110 <___vfprintf_internal_r+0x684>
   8420c:	d9414c17 	ldw	r5,1328(sp)
   84210:	2880040c 	andi	r2,r5,16
   84214:	10007c26 	beq	r2,zero,84408 <___vfprintf_internal_r+0x197c>
   84218:	38800017 	ldw	r2,0(r7)
   8421c:	39c00104 	addi	r7,r7,4
   84220:	d9c14015 	stw	r7,1280(sp)
   84224:	d9814b17 	ldw	r6,1324(sp)
   84228:	d9c14017 	ldw	r7,1280(sp)
   8422c:	11800015 	stw	r6,0(r2)
   84230:	003a7206 	br	82bfc <___vfprintf_internal_r+0x170>
   84234:	d9014f17 	ldw	r4,1340(sp)
   84238:	b00b883a 	mov	r5,r22
   8423c:	d9800c04 	addi	r6,sp,48
   84240:	0082a340 	call	82a34 <__sprint_r>
   84244:	103bc91e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   84248:	dc800e17 	ldw	r18,56(sp)
   8424c:	dc400d17 	ldw	r17,52(sp)
   84250:	d8c01904 	addi	r3,sp,100
   84254:	d9014717 	ldw	r4,1308(sp)
   84258:	d9414117 	ldw	r5,1284(sp)
   8425c:	8c400044 	addi	r17,r17,1
   84260:	9125883a 	add	r18,r18,r4
   84264:	008001c4 	movi	r2,7
   84268:	19400015 	stw	r5,0(r3)
   8426c:	19000115 	stw	r4,4(r3)
   84270:	dc800e15 	stw	r18,56(sp)
   84274:	dc400d15 	stw	r17,52(sp)
   84278:	147ce816 	blt	r2,r17,8361c <___vfprintf_internal_r+0xb90>
   8427c:	18c00204 	addi	r3,r3,8
   84280:	003b8006 	br	83084 <___vfprintf_internal_r+0x5f8>
   84284:	38c00017 	ldw	r3,0(r7)
   84288:	39000204 	addi	r4,r7,8
   8428c:	d9014015 	stw	r4,1280(sp)
   84290:	d8c14215 	stw	r3,1288(sp)
   84294:	39c00117 	ldw	r7,4(r7)
   84298:	d9c14315 	stw	r7,1292(sp)
   8429c:	003e1a06 	br	83b08 <___vfprintf_internal_r+0x107c>
   842a0:	0005883a 	mov	r2,zero
   842a4:	1409c83a 	sub	r4,r2,r16
   842a8:	1105803a 	cmpltu	r2,r2,r4
   842ac:	044bc83a 	sub	r5,zero,r17
   842b0:	2885c83a 	sub	r2,r5,r2
   842b4:	2021883a 	mov	r16,r4
   842b8:	1023883a 	mov	r17,r2
   842bc:	01000044 	movi	r4,1
   842c0:	00800b44 	movi	r2,45
   842c4:	d8800405 	stb	r2,16(sp)
   842c8:	003c7e06 	br	834c4 <___vfprintf_internal_r+0xa38>
   842cc:	d9014f17 	ldw	r4,1340(sp)
   842d0:	b00b883a 	mov	r5,r22
   842d4:	d9800c04 	addi	r6,sp,48
   842d8:	0082a340 	call	82a34 <__sprint_r>
   842dc:	103ba31e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   842e0:	dc800e17 	ldw	r18,56(sp)
   842e4:	dc400d17 	ldw	r17,52(sp)
   842e8:	d9000517 	ldw	r4,20(sp)
   842ec:	d9401904 	addi	r5,sp,100
   842f0:	003da106 	br	83978 <___vfprintf_internal_r+0xeec>
   842f4:	d9014f17 	ldw	r4,1340(sp)
   842f8:	b00b883a 	mov	r5,r22
   842fc:	d9800c04 	addi	r6,sp,48
   84300:	0082a340 	call	82a34 <__sprint_r>
   84304:	103b991e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   84308:	dc800e17 	ldw	r18,56(sp)
   8430c:	dc400d17 	ldw	r17,52(sp)
   84310:	d9000517 	ldw	r4,20(sp)
   84314:	d8c01904 	addi	r3,sp,100
   84318:	003d8b06 	br	83948 <___vfprintf_internal_r+0xebc>
   8431c:	07000274 	movhi	fp,9
   84320:	e70e3484 	addi	fp,fp,14546
   84324:	9425883a 	add	r18,r18,r16
   84328:	8c400044 	addi	r17,r17,1
   8432c:	008001c4 	movi	r2,7
   84330:	1f000015 	stw	fp,0(r3)
   84334:	1c000115 	stw	r16,4(r3)
   84338:	dc800e15 	stw	r18,56(sp)
   8433c:	dc400d15 	stw	r17,52(sp)
   84340:	147fbc16 	blt	r2,r17,84234 <___vfprintf_internal_r+0x17a8>
   84344:	18c00204 	addi	r3,r3,8
   84348:	003fc206 	br	84254 <___vfprintf_internal_r+0x17c8>
   8434c:	d9014f17 	ldw	r4,1340(sp)
   84350:	b00b883a 	mov	r5,r22
   84354:	d9800c04 	addi	r6,sp,48
   84358:	0082a340 	call	82a34 <__sprint_r>
   8435c:	103b831e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   84360:	dc800e17 	ldw	r18,56(sp)
   84364:	d9000517 	ldw	r4,20(sp)
   84368:	d8c01904 	addi	r3,sp,100
   8436c:	003cfc06 	br	83760 <___vfprintf_internal_r+0xcd4>
   84370:	07000274 	movhi	fp,9
   84374:	e70e3484 	addi	fp,fp,14546
   84378:	003bde06 	br	832f4 <___vfprintf_internal_r+0x868>
   8437c:	00800274 	movhi	r2,9
   84380:	108e2304 	addi	r2,r2,14476
   84384:	d8814115 	stw	r2,1284(sp)
   84388:	003def06 	br	83b48 <___vfprintf_internal_r+0x10bc>
   8438c:	d9014217 	ldw	r4,1288(sp)
   84390:	d9414317 	ldw	r5,1292(sp)
   84394:	0089f140 	call	89f14 <__isnand>
   84398:	10003926 	beq	r2,zero,84480 <___vfprintf_internal_r+0x19f4>
   8439c:	d9414d17 	ldw	r5,1332(sp)
   843a0:	008011c4 	movi	r2,71
   843a4:	1140ce16 	blt	r2,r5,846e0 <___vfprintf_internal_r+0x1c54>
   843a8:	01800274 	movhi	r6,9
   843ac:	318e2404 	addi	r6,r6,14480
   843b0:	d9814115 	stw	r6,1284(sp)
   843b4:	003de406 	br	83b48 <___vfprintf_internal_r+0x10bc>
   843b8:	d9014c17 	ldw	r4,1328(sp)
   843bc:	bdc00044 	addi	r23,r23,1
   843c0:	b8c00007 	ldb	r3,0(r23)
   843c4:	21000814 	ori	r4,r4,32
   843c8:	d9014c15 	stw	r4,1328(sp)
   843cc:	003a2e06 	br	82c88 <___vfprintf_internal_r+0x1fc>
   843d0:	dcc14515 	stw	r19,1300(sp)
   843d4:	98011016 	blt	r19,zero,84818 <___vfprintf_internal_r+0x1d8c>
   843d8:	980f883a 	mov	r7,r19
   843dc:	d8014615 	stw	zero,1304(sp)
   843e0:	003c4c06 	br	83514 <___vfprintf_internal_r+0xa88>
   843e4:	d9014f17 	ldw	r4,1340(sp)
   843e8:	b00b883a 	mov	r5,r22
   843ec:	d9800c04 	addi	r6,sp,48
   843f0:	0082a340 	call	82a34 <__sprint_r>
   843f4:	103b5d1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   843f8:	dc800e17 	ldw	r18,56(sp)
   843fc:	d9000517 	ldw	r4,20(sp)
   84400:	d8c01904 	addi	r3,sp,100
   84404:	003f2e06 	br	840c0 <___vfprintf_internal_r+0x1634>
   84408:	d8c14c17 	ldw	r3,1328(sp)
   8440c:	1880100c 	andi	r2,r3,64
   84410:	1000a026 	beq	r2,zero,84694 <___vfprintf_internal_r+0x1c08>
   84414:	38800017 	ldw	r2,0(r7)
   84418:	39c00104 	addi	r7,r7,4
   8441c:	d9c14015 	stw	r7,1280(sp)
   84420:	d9014b17 	ldw	r4,1324(sp)
   84424:	d9c14017 	ldw	r7,1280(sp)
   84428:	1100000d 	sth	r4,0(r2)
   8442c:	0039f306 	br	82bfc <___vfprintf_internal_r+0x170>
   84430:	d9014f17 	ldw	r4,1340(sp)
   84434:	b00b883a 	mov	r5,r22
   84438:	d9800c04 	addi	r6,sp,48
   8443c:	0082a340 	call	82a34 <__sprint_r>
   84440:	103b4a1e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   84444:	dc800e17 	ldw	r18,56(sp)
   84448:	dc400d17 	ldw	r17,52(sp)
   8444c:	d9000517 	ldw	r4,20(sp)
   84450:	d8c01904 	addi	r3,sp,100
   84454:	003f2d06 	br	8410c <___vfprintf_internal_r+0x1680>
   84458:	00800184 	movi	r2,6
   8445c:	14c09a36 	bltu	r2,r19,846c8 <___vfprintf_internal_r+0x1c3c>
   84460:	dcc14515 	stw	r19,1300(sp)
   84464:	9800010e 	bge	r19,zero,8446c <___vfprintf_internal_r+0x19e0>
   84468:	d8014515 	stw	zero,1300(sp)
   8446c:	00800274 	movhi	r2,9
   84470:	108e2604 	addi	r2,r2,14488
   84474:	980f883a 	mov	r7,r19
   84478:	d8814115 	stw	r2,1284(sp)
   8447c:	003a7206 	br	82e48 <___vfprintf_internal_r+0x3bc>
   84480:	00bfffc4 	movi	r2,-1
   84484:	9880e226 	beq	r19,r2,84810 <___vfprintf_internal_r+0x1d84>
   84488:	d9414d17 	ldw	r5,1332(sp)
   8448c:	008019c4 	movi	r2,103
   84490:	2880dc26 	beq	r5,r2,84804 <___vfprintf_internal_r+0x1d78>
   84494:	008011c4 	movi	r2,71
   84498:	2880da26 	beq	r5,r2,84804 <___vfprintf_internal_r+0x1d78>
   8449c:	d9414c17 	ldw	r5,1328(sp)
   844a0:	d9014317 	ldw	r4,1292(sp)
   844a4:	d9814217 	ldw	r6,1288(sp)
   844a8:	29404014 	ori	r5,r5,256
   844ac:	d9414c15 	stw	r5,1328(sp)
   844b0:	2000cc16 	blt	r4,zero,847e4 <___vfprintf_internal_r+0x1d58>
   844b4:	3021883a 	mov	r16,r6
   844b8:	2023883a 	mov	r17,r4
   844bc:	0039883a 	mov	fp,zero
   844c0:	d9414d17 	ldw	r5,1332(sp)
   844c4:	00801984 	movi	r2,102
   844c8:	2880b726 	beq	r5,r2,847a8 <___vfprintf_internal_r+0x1d1c>
   844cc:	00801184 	movi	r2,70
   844d0:	2880b526 	beq	r5,r2,847a8 <___vfprintf_internal_r+0x1d1c>
   844d4:	00801944 	movi	r2,101
   844d8:	2880c826 	beq	r5,r2,847fc <___vfprintf_internal_r+0x1d70>
   844dc:	00801144 	movi	r2,69
   844e0:	2880c626 	beq	r5,r2,847fc <___vfprintf_internal_r+0x1d70>
   844e4:	9829883a 	mov	r20,r19
   844e8:	d9014f17 	ldw	r4,1340(sp)
   844ec:	d8800504 	addi	r2,sp,20
   844f0:	880d883a 	mov	r6,r17
   844f4:	d8800115 	stw	r2,4(sp)
   844f8:	d8c00604 	addi	r3,sp,24
   844fc:	d8800704 	addi	r2,sp,28
   84500:	800b883a 	mov	r5,r16
   84504:	01c00084 	movi	r7,2
   84508:	d8c00215 	stw	r3,8(sp)
   8450c:	d8800315 	stw	r2,12(sp)
   84510:	dd000015 	stw	r20,0(sp)
   84514:	00865640 	call	86564 <_dtoa_r>
   84518:	d9814d17 	ldw	r6,1332(sp)
   8451c:	d8814115 	stw	r2,1284(sp)
   84520:	008019c4 	movi	r2,103
   84524:	30809526 	beq	r6,r2,8477c <___vfprintf_internal_r+0x1cf0>
   84528:	d8c14d17 	ldw	r3,1332(sp)
   8452c:	008011c4 	movi	r2,71
   84530:	18809226 	beq	r3,r2,8477c <___vfprintf_internal_r+0x1cf0>
   84534:	d9414117 	ldw	r5,1284(sp)
   84538:	d9814d17 	ldw	r6,1332(sp)
   8453c:	00801984 	movi	r2,102
   84540:	2d25883a 	add	r18,r5,r20
   84544:	30808626 	beq	r6,r2,84760 <___vfprintf_internal_r+0x1cd4>
   84548:	00801184 	movi	r2,70
   8454c:	30808426 	beq	r6,r2,84760 <___vfprintf_internal_r+0x1cd4>
   84550:	000d883a 	mov	r6,zero
   84554:	000f883a 	mov	r7,zero
   84558:	880b883a 	mov	r5,r17
   8455c:	8009883a 	mov	r4,r16
   84560:	008eae40 	call	8eae4 <__eqdf2>
   84564:	1000751e 	bne	r2,zero,8473c <___vfprintf_internal_r+0x1cb0>
   84568:	9005883a 	mov	r2,r18
   8456c:	dc800715 	stw	r18,28(sp)
   84570:	d9014117 	ldw	r4,1284(sp)
   84574:	d9414d17 	ldw	r5,1332(sp)
   84578:	00c019c4 	movi	r3,103
   8457c:	1125c83a 	sub	r18,r2,r4
   84580:	28c06826 	beq	r5,r3,84724 <___vfprintf_internal_r+0x1c98>
   84584:	008011c4 	movi	r2,71
   84588:	28806626 	beq	r5,r2,84724 <___vfprintf_internal_r+0x1c98>
   8458c:	d9000517 	ldw	r4,20(sp)
   84590:	d8c14d17 	ldw	r3,1332(sp)
   84594:	00801944 	movi	r2,101
   84598:	10c05516 	blt	r2,r3,846f0 <___vfprintf_internal_r+0x1c64>
   8459c:	213fffc4 	addi	r4,r4,-1
   845a0:	d9000515 	stw	r4,20(sp)
   845a4:	d8c00805 	stb	r3,32(sp)
   845a8:	2021883a 	mov	r16,r4
   845ac:	2000c116 	blt	r4,zero,848b4 <___vfprintf_internal_r+0x1e28>
   845b0:	00800ac4 	movi	r2,43
   845b4:	d8800845 	stb	r2,33(sp)
   845b8:	00800244 	movi	r2,9
   845bc:	1400af0e 	bge	r2,r16,8487c <___vfprintf_internal_r+0x1df0>
   845c0:	1027883a 	mov	r19,r2
   845c4:	dc400b84 	addi	r17,sp,46
   845c8:	8009883a 	mov	r4,r16
   845cc:	01400284 	movi	r5,10
   845d0:	008f2c80 	call	8f2c8 <__modsi3>
   845d4:	10800c04 	addi	r2,r2,48
   845d8:	8c7fffc4 	addi	r17,r17,-1
   845dc:	8009883a 	mov	r4,r16
   845e0:	01400284 	movi	r5,10
   845e4:	88800005 	stb	r2,0(r17)
   845e8:	008f2680 	call	8f268 <__divsi3>
   845ec:	1021883a 	mov	r16,r2
   845f0:	98bff516 	blt	r19,r2,845c8 <___vfprintf_internal_r+0x1b3c>
   845f4:	10c00c04 	addi	r3,r2,48
   845f8:	d88009c4 	addi	r2,sp,39
   845fc:	108001c4 	addi	r2,r2,7
   84600:	897fffc4 	addi	r5,r17,-1
   84604:	88ffffc5 	stb	r3,-1(r17)
   84608:	2880a72e 	bgeu	r5,r2,848a8 <___vfprintf_internal_r+0x1e1c>
   8460c:	1009883a 	mov	r4,r2
   84610:	d9800804 	addi	r6,sp,32
   84614:	d8c00884 	addi	r3,sp,34
   84618:	28800003 	ldbu	r2,0(r5)
   8461c:	29400044 	addi	r5,r5,1
   84620:	18800005 	stb	r2,0(r3)
   84624:	18c00044 	addi	r3,r3,1
   84628:	293ffb36 	bltu	r5,r4,84618 <___vfprintf_internal_r+0x1b8c>
   8462c:	1987c83a 	sub	r3,r3,r6
   84630:	00800044 	movi	r2,1
   84634:	d8c14815 	stw	r3,1312(sp)
   84638:	90cf883a 	add	r7,r18,r3
   8463c:	1480960e 	bge	r2,r18,84898 <___vfprintf_internal_r+0x1e0c>
   84640:	39c00044 	addi	r7,r7,1
   84644:	d9c14515 	stw	r7,1300(sp)
   84648:	38003416 	blt	r7,zero,8471c <___vfprintf_internal_r+0x1c90>
   8464c:	e0803fcc 	andi	r2,fp,255
   84650:	1080201c 	xori	r2,r2,128
   84654:	10bfe004 	addi	r2,r2,-128
   84658:	10004e26 	beq	r2,zero,84794 <___vfprintf_internal_r+0x1d08>
   8465c:	00800b44 	movi	r2,45
   84660:	dc814715 	stw	r18,1308(sp)
   84664:	d8014615 	stw	zero,1304(sp)
   84668:	d8800405 	stb	r2,16(sp)
   8466c:	003bab06 	br	8351c <___vfprintf_internal_r+0xa90>
   84670:	00800b44 	movi	r2,45
   84674:	d8800405 	stb	r2,16(sp)
   84678:	003d2d06 	br	83b30 <___vfprintf_internal_r+0x10a4>
   8467c:	d9014f17 	ldw	r4,1340(sp)
   84680:	b00b883a 	mov	r5,r22
   84684:	d9800c04 	addi	r6,sp,48
   84688:	0082a340 	call	82a34 <__sprint_r>
   8468c:	103ab71e 	bne	r2,zero,8316c <___vfprintf_internal_r+0x6e0>
   84690:	003ab506 	br	83168 <___vfprintf_internal_r+0x6dc>
   84694:	38800017 	ldw	r2,0(r7)
   84698:	39c00104 	addi	r7,r7,4
   8469c:	d9c14015 	stw	r7,1280(sp)
   846a0:	d9414b17 	ldw	r5,1324(sp)
   846a4:	d9c14017 	ldw	r7,1280(sp)
   846a8:	11400015 	stw	r5,0(r2)
   846ac:	00395306 	br	82bfc <___vfprintf_internal_r+0x170>
   846b0:	980f883a 	mov	r7,r19
   846b4:	dcc14515 	stw	r19,1300(sp)
   846b8:	d8014615 	stw	zero,1304(sp)
   846bc:	003b9506 	br	83514 <___vfprintf_internal_r+0xa88>
   846c0:	0027883a 	mov	r19,zero
   846c4:	00397206 	br	82c90 <___vfprintf_internal_r+0x204>
   846c8:	00c00274 	movhi	r3,9
   846cc:	18ce2604 	addi	r3,r3,14488
   846d0:	100f883a 	mov	r7,r2
   846d4:	d8814515 	stw	r2,1300(sp)
   846d8:	d8c14115 	stw	r3,1284(sp)
   846dc:	0039da06 	br	82e48 <___vfprintf_internal_r+0x3bc>
   846e0:	00800274 	movhi	r2,9
   846e4:	108e2504 	addi	r2,r2,14484
   846e8:	d8814115 	stw	r2,1284(sp)
   846ec:	003d1606 	br	83b48 <___vfprintf_internal_r+0x10bc>
   846f0:	d9414d17 	ldw	r5,1332(sp)
   846f4:	00801984 	movi	r2,102
   846f8:	28804926 	beq	r5,r2,84820 <___vfprintf_internal_r+0x1d94>
   846fc:	200f883a 	mov	r7,r4
   84700:	24805716 	blt	r4,r18,84860 <___vfprintf_internal_r+0x1dd4>
   84704:	d9414c17 	ldw	r5,1328(sp)
   84708:	2880004c 	andi	r2,r5,1
   8470c:	10000126 	beq	r2,zero,84714 <___vfprintf_internal_r+0x1c88>
   84710:	21c00044 	addi	r7,r4,1
   84714:	d9c14515 	stw	r7,1300(sp)
   84718:	383fcc0e 	bge	r7,zero,8464c <___vfprintf_internal_r+0x1bc0>
   8471c:	d8014515 	stw	zero,1300(sp)
   84720:	003fca06 	br	8464c <___vfprintf_internal_r+0x1bc0>
   84724:	d9000517 	ldw	r4,20(sp)
   84728:	00bfff04 	movi	r2,-4
   8472c:	1100480e 	bge	r2,r4,84850 <___vfprintf_internal_r+0x1dc4>
   84730:	99004716 	blt	r19,r4,84850 <___vfprintf_internal_r+0x1dc4>
   84734:	d8c14d15 	stw	r3,1332(sp)
   84738:	003ff006 	br	846fc <___vfprintf_internal_r+0x1c70>
   8473c:	d8800717 	ldw	r2,28(sp)
   84740:	14bf8b2e 	bgeu	r2,r18,84570 <___vfprintf_internal_r+0x1ae4>
   84744:	9007883a 	mov	r3,r18
   84748:	01000c04 	movi	r4,48
   8474c:	11000005 	stb	r4,0(r2)
   84750:	10800044 	addi	r2,r2,1
   84754:	d8800715 	stw	r2,28(sp)
   84758:	18bffc1e 	bne	r3,r2,8474c <___vfprintf_internal_r+0x1cc0>
   8475c:	003f8406 	br	84570 <___vfprintf_internal_r+0x1ae4>
   84760:	d8814117 	ldw	r2,1284(sp)
   84764:	10c00007 	ldb	r3,0(r2)
   84768:	00800c04 	movi	r2,48
   8476c:	18805b26 	beq	r3,r2,848dc <___vfprintf_internal_r+0x1e50>
   84770:	d9000517 	ldw	r4,20(sp)
   84774:	9125883a 	add	r18,r18,r4
   84778:	003f7506 	br	84550 <___vfprintf_internal_r+0x1ac4>
   8477c:	d9014c17 	ldw	r4,1328(sp)
   84780:	2080004c 	andi	r2,r4,1
   84784:	1005003a 	cmpeq	r2,r2,zero
   84788:	103f6a26 	beq	r2,zero,84534 <___vfprintf_internal_r+0x1aa8>
   8478c:	d8800717 	ldw	r2,28(sp)
   84790:	003f7706 	br	84570 <___vfprintf_internal_r+0x1ae4>
   84794:	d9c14515 	stw	r7,1300(sp)
   84798:	38004d16 	blt	r7,zero,848d0 <___vfprintf_internal_r+0x1e44>
   8479c:	dc814715 	stw	r18,1308(sp)
   847a0:	d8014615 	stw	zero,1304(sp)
   847a4:	003b5b06 	br	83514 <___vfprintf_internal_r+0xa88>
   847a8:	d9014f17 	ldw	r4,1340(sp)
   847ac:	d8800504 	addi	r2,sp,20
   847b0:	d8800115 	stw	r2,4(sp)
   847b4:	d8c00604 	addi	r3,sp,24
   847b8:	d8800704 	addi	r2,sp,28
   847bc:	800b883a 	mov	r5,r16
   847c0:	880d883a 	mov	r6,r17
   847c4:	01c000c4 	movi	r7,3
   847c8:	d8c00215 	stw	r3,8(sp)
   847cc:	d8800315 	stw	r2,12(sp)
   847d0:	dcc00015 	stw	r19,0(sp)
   847d4:	9829883a 	mov	r20,r19
   847d8:	00865640 	call	86564 <_dtoa_r>
   847dc:	d8814115 	stw	r2,1284(sp)
   847e0:	003f5106 	br	84528 <___vfprintf_internal_r+0x1a9c>
   847e4:	d8c14217 	ldw	r3,1288(sp)
   847e8:	d9014317 	ldw	r4,1292(sp)
   847ec:	07000b44 	movi	fp,45
   847f0:	1821883a 	mov	r16,r3
   847f4:	2460003c 	xorhi	r17,r4,32768
   847f8:	003f3106 	br	844c0 <___vfprintf_internal_r+0x1a34>
   847fc:	9d000044 	addi	r20,r19,1
   84800:	003f3906 	br	844e8 <___vfprintf_internal_r+0x1a5c>
   84804:	983f251e 	bne	r19,zero,8449c <___vfprintf_internal_r+0x1a10>
   84808:	04c00044 	movi	r19,1
   8480c:	003f2306 	br	8449c <___vfprintf_internal_r+0x1a10>
   84810:	04c00184 	movi	r19,6
   84814:	003f2106 	br	8449c <___vfprintf_internal_r+0x1a10>
   84818:	d8014515 	stw	zero,1300(sp)
   8481c:	003eee06 	br	843d8 <___vfprintf_internal_r+0x194c>
   84820:	200f883a 	mov	r7,r4
   84824:	0100370e 	bge	zero,r4,84904 <___vfprintf_internal_r+0x1e78>
   84828:	9800031e 	bne	r19,zero,84838 <___vfprintf_internal_r+0x1dac>
   8482c:	d9814c17 	ldw	r6,1328(sp)
   84830:	3080004c 	andi	r2,r6,1
   84834:	103fb726 	beq	r2,zero,84714 <___vfprintf_internal_r+0x1c88>
   84838:	20800044 	addi	r2,r4,1
   8483c:	98a7883a 	add	r19,r19,r2
   84840:	dcc14515 	stw	r19,1300(sp)
   84844:	980f883a 	mov	r7,r19
   84848:	983f800e 	bge	r19,zero,8464c <___vfprintf_internal_r+0x1bc0>
   8484c:	003fb306 	br	8471c <___vfprintf_internal_r+0x1c90>
   84850:	d9814d17 	ldw	r6,1332(sp)
   84854:	31bfff84 	addi	r6,r6,-2
   84858:	d9814d15 	stw	r6,1332(sp)
   8485c:	003f4c06 	br	84590 <___vfprintf_internal_r+0x1b04>
   84860:	0100180e 	bge	zero,r4,848c4 <___vfprintf_internal_r+0x1e38>
   84864:	00800044 	movi	r2,1
   84868:	1485883a 	add	r2,r2,r18
   8486c:	d8814515 	stw	r2,1300(sp)
   84870:	100f883a 	mov	r7,r2
   84874:	103f750e 	bge	r2,zero,8464c <___vfprintf_internal_r+0x1bc0>
   84878:	003fa806 	br	8471c <___vfprintf_internal_r+0x1c90>
   8487c:	80c00c04 	addi	r3,r16,48
   84880:	00800c04 	movi	r2,48
   84884:	d8c008c5 	stb	r3,35(sp)
   84888:	d9800804 	addi	r6,sp,32
   8488c:	d8c00904 	addi	r3,sp,36
   84890:	d8800885 	stb	r2,34(sp)
   84894:	003f6506 	br	8462c <___vfprintf_internal_r+0x1ba0>
   84898:	d9014c17 	ldw	r4,1328(sp)
   8489c:	2084703a 	and	r2,r4,r2
   848a0:	103f9c26 	beq	r2,zero,84714 <___vfprintf_internal_r+0x1c88>
   848a4:	003f6606 	br	84640 <___vfprintf_internal_r+0x1bb4>
   848a8:	d9800804 	addi	r6,sp,32
   848ac:	d8c00884 	addi	r3,sp,34
   848b0:	003f5e06 	br	8462c <___vfprintf_internal_r+0x1ba0>
   848b4:	00800b44 	movi	r2,45
   848b8:	0121c83a 	sub	r16,zero,r4
   848bc:	d8800845 	stb	r2,33(sp)
   848c0:	003f3d06 	br	845b8 <___vfprintf_internal_r+0x1b2c>
   848c4:	00800084 	movi	r2,2
   848c8:	1105c83a 	sub	r2,r2,r4
   848cc:	003fe606 	br	84868 <___vfprintf_internal_r+0x1ddc>
   848d0:	d8014515 	stw	zero,1300(sp)
   848d4:	dc814715 	stw	r18,1308(sp)
   848d8:	003fb106 	br	847a0 <___vfprintf_internal_r+0x1d14>
   848dc:	000d883a 	mov	r6,zero
   848e0:	000f883a 	mov	r7,zero
   848e4:	8009883a 	mov	r4,r16
   848e8:	880b883a 	mov	r5,r17
   848ec:	008eb6c0 	call	8eb6c <__nedf2>
   848f0:	103f9f26 	beq	r2,zero,84770 <___vfprintf_internal_r+0x1ce4>
   848f4:	00800044 	movi	r2,1
   848f8:	1509c83a 	sub	r4,r2,r20
   848fc:	d9000515 	stw	r4,20(sp)
   84900:	003f9b06 	br	84770 <___vfprintf_internal_r+0x1ce4>
   84904:	98000d1e 	bne	r19,zero,8493c <___vfprintf_internal_r+0x1eb0>
   84908:	d8c14c17 	ldw	r3,1328(sp)
   8490c:	1880004c 	andi	r2,r3,1
   84910:	10000a1e 	bne	r2,zero,8493c <___vfprintf_internal_r+0x1eb0>
   84914:	01000044 	movi	r4,1
   84918:	200f883a 	mov	r7,r4
   8491c:	d9014515 	stw	r4,1300(sp)
   84920:	003f4a06 	br	8464c <___vfprintf_internal_r+0x1bc0>
   84924:	3cc00017 	ldw	r19,0(r7)
   84928:	39c00104 	addi	r7,r7,4
   8492c:	983d0e0e 	bge	r19,zero,83d68 <___vfprintf_internal_r+0x12dc>
   84930:	b8c00007 	ldb	r3,0(r23)
   84934:	04ffffc4 	movi	r19,-1
   84938:	0038d306 	br	82c88 <___vfprintf_internal_r+0x1fc>
   8493c:	9cc00084 	addi	r19,r19,2
   84940:	dcc14515 	stw	r19,1300(sp)
   84944:	980f883a 	mov	r7,r19
   84948:	983f400e 	bge	r19,zero,8464c <___vfprintf_internal_r+0x1bc0>
   8494c:	003f7306 	br	8471c <___vfprintf_internal_r+0x1c90>

00084950 <__vfprintf_internal>:
   84950:	00800274 	movhi	r2,9
   84954:	10968804 	addi	r2,r2,23072
   84958:	2013883a 	mov	r9,r4
   8495c:	11000017 	ldw	r4,0(r2)
   84960:	2805883a 	mov	r2,r5
   84964:	300f883a 	mov	r7,r6
   84968:	480b883a 	mov	r5,r9
   8496c:	100d883a 	mov	r6,r2
   84970:	0082a8c1 	jmpi	82a8c <___vfprintf_internal_r>

00084974 <__svfscanf_r>:
   84974:	deff4e04 	addi	sp,sp,-712
   84978:	dd80ae15 	stw	r22,696(sp)
   8497c:	dd00ac15 	stw	r20,688(sp)
   84980:	dc40a915 	stw	r17,676(sp)
   84984:	dc00a815 	stw	r16,672(sp)
   84988:	dfc0b115 	stw	ra,708(sp)
   8498c:	df00b015 	stw	fp,704(sp)
   84990:	ddc0af15 	stw	r23,700(sp)
   84994:	dd40ad15 	stw	r21,692(sp)
   84998:	dcc0ab15 	stw	r19,684(sp)
   8499c:	dc80aa15 	stw	r18,680(sp)
   849a0:	202d883a 	mov	r22,r4
   849a4:	2821883a 	mov	r16,r5
   849a8:	d9c0a415 	stw	r7,656(sp)
   849ac:	3029883a 	mov	r20,r6
   849b0:	d800a215 	stw	zero,648(sp)
   849b4:	0023883a 	mov	r17,zero
   849b8:	d800a115 	stw	zero,644(sp)
   849bc:	d800a015 	stw	zero,640(sp)
   849c0:	a1000007 	ldb	r4,0(r20)
   849c4:	d9000115 	stw	r4,4(sp)
   849c8:	20001f26 	beq	r4,zero,84a48 <__svfscanf_r+0xd4>
   849cc:	04c00274 	movhi	r19,9
   849d0:	9cd68c04 	addi	r19,r19,23088
   849d4:	9c800017 	ldw	r18,0(r19)
   849d8:	a5000044 	addi	r20,r20,1
   849dc:	9107883a 	add	r3,r18,r4
   849e0:	18800003 	ldbu	r2,0(r3)
   849e4:	1080020c 	andi	r2,r2,8
   849e8:	10002426 	beq	r2,zero,84a7c <__svfscanf_r+0x108>
   849ec:	80c00117 	ldw	r3,4(r16)
   849f0:	00c00e0e 	bge	zero,r3,84a2c <__svfscanf_r+0xb8>
   849f4:	81400017 	ldw	r5,0(r16)
   849f8:	98800017 	ldw	r2,0(r19)
   849fc:	28c00003 	ldbu	r3,0(r5)
   84a00:	1887883a 	add	r3,r3,r2
   84a04:	19000003 	ldbu	r4,0(r3)
   84a08:	2100020c 	andi	r4,r4,8
   84a0c:	203fec26 	beq	r4,zero,849c0 <__svfscanf_r+0x4c>
   84a10:	80c00117 	ldw	r3,4(r16)
   84a14:	29800044 	addi	r6,r5,1
   84a18:	8c400044 	addi	r17,r17,1
   84a1c:	18ffffc4 	addi	r3,r3,-1
   84a20:	81800015 	stw	r6,0(r16)
   84a24:	80c00115 	stw	r3,4(r16)
   84a28:	00fff216 	blt	zero,r3,849f4 <__svfscanf_r+0x80>
   84a2c:	b009883a 	mov	r4,r22
   84a30:	800b883a 	mov	r5,r16
   84a34:	00822780 	call	82278 <__srefill_r>
   84a38:	103fee26 	beq	r2,zero,849f4 <__svfscanf_r+0x80>
   84a3c:	a1000007 	ldb	r4,0(r20)
   84a40:	d9000115 	stw	r4,4(sp)
   84a44:	203fe11e 	bne	r4,zero,849cc <__svfscanf_r+0x58>
   84a48:	d880a217 	ldw	r2,648(sp)
   84a4c:	dfc0b117 	ldw	ra,708(sp)
   84a50:	df00b017 	ldw	fp,704(sp)
   84a54:	ddc0af17 	ldw	r23,700(sp)
   84a58:	dd80ae17 	ldw	r22,696(sp)
   84a5c:	dd40ad17 	ldw	r21,692(sp)
   84a60:	dd00ac17 	ldw	r20,688(sp)
   84a64:	dcc0ab17 	ldw	r19,684(sp)
   84a68:	dc80aa17 	ldw	r18,680(sp)
   84a6c:	dc40a917 	ldw	r17,676(sp)
   84a70:	dc00a817 	ldw	r16,672(sp)
   84a74:	dec0b204 	addi	sp,sp,712
   84a78:	f800283a 	ret
   84a7c:	00800944 	movi	r2,37
   84a80:	20801626 	beq	r4,r2,84adc <__svfscanf_r+0x168>
   84a84:	80800117 	ldw	r2,4(r16)
   84a88:	00800b0e 	bge	zero,r2,84ab8 <__svfscanf_r+0x144>
   84a8c:	81000017 	ldw	r4,0(r16)
   84a90:	a0ffffc7 	ldb	r3,-1(r20)
   84a94:	20800003 	ldbu	r2,0(r4)
   84a98:	10ffeb1e 	bne	r2,r3,84a48 <__svfscanf_r+0xd4>
   84a9c:	80c00117 	ldw	r3,4(r16)
   84aa0:	21800044 	addi	r6,r4,1
   84aa4:	8c400044 	addi	r17,r17,1
   84aa8:	18ffffc4 	addi	r3,r3,-1
   84aac:	80c00115 	stw	r3,4(r16)
   84ab0:	81800015 	stw	r6,0(r16)
   84ab4:	003fc206 	br	849c0 <__svfscanf_r+0x4c>
   84ab8:	b009883a 	mov	r4,r22
   84abc:	800b883a 	mov	r5,r16
   84ac0:	00822780 	call	82278 <__srefill_r>
   84ac4:	103ff126 	beq	r2,zero,84a8c <__svfscanf_r+0x118>
   84ac8:	d900a217 	ldw	r4,648(sp)
   84acc:	2004981e 	bne	r4,zero,85d30 <__svfscanf_r+0x13bc>
   84ad0:	00bfffc4 	movi	r2,-1
   84ad4:	d880a215 	stw	r2,648(sp)
   84ad8:	003fdb06 	br	84a48 <__svfscanf_r+0xd4>
   84adc:	d800a315 	stw	zero,652(sp)
   84ae0:	002b883a 	mov	r21,zero
   84ae4:	a0c00003 	ldbu	r3,0(r20)
   84ae8:	00801e04 	movi	r2,120
   84aec:	a5000044 	addi	r20,r20,1
   84af0:	1dc03fcc 	andi	r23,r3,255
   84af4:	bdc0201c 	xori	r23,r23,128
   84af8:	bdffe004 	addi	r23,r23,-128
   84afc:	10c08036 	bltu	r2,r3,84d00 <__svfscanf_r+0x38c>
   84b00:	18c5883a 	add	r2,r3,r3
   84b04:	1085883a 	add	r2,r2,r2
   84b08:	00c00234 	movhi	r3,8
   84b0c:	18d2c704 	addi	r3,r3,19228
   84b10:	10c5883a 	add	r2,r2,r3
   84b14:	11000017 	ldw	r4,0(r2)
   84b18:	2000683a 	jmp	r4
   84b1c:	00084ad0 	cmplti	zero,zero,8491
   84b20:	00084d00 	call	84d0 <__reset-0x77b30>
   84b24:	00084d00 	call	84d0 <__reset-0x77b30>
   84b28:	00084d00 	call	84d0 <__reset-0x77b30>
   84b2c:	00084d00 	call	84d0 <__reset-0x77b30>
   84b30:	00084d00 	call	84d0 <__reset-0x77b30>
   84b34:	00084d00 	call	84d0 <__reset-0x77b30>
   84b38:	00084d00 	call	84d0 <__reset-0x77b30>
   84b3c:	00084d00 	call	84d0 <__reset-0x77b30>
   84b40:	00084d00 	call	84d0 <__reset-0x77b30>
   84b44:	00084d00 	call	84d0 <__reset-0x77b30>
   84b48:	00084d00 	call	84d0 <__reset-0x77b30>
   84b4c:	00084d00 	call	84d0 <__reset-0x77b30>
   84b50:	00084d00 	call	84d0 <__reset-0x77b30>
   84b54:	00084d00 	call	84d0 <__reset-0x77b30>
   84b58:	00084d00 	call	84d0 <__reset-0x77b30>
   84b5c:	00084d00 	call	84d0 <__reset-0x77b30>
   84b60:	00084d00 	call	84d0 <__reset-0x77b30>
   84b64:	00084d00 	call	84d0 <__reset-0x77b30>
   84b68:	00084d00 	call	84d0 <__reset-0x77b30>
   84b6c:	00084d00 	call	84d0 <__reset-0x77b30>
   84b70:	00084d00 	call	84d0 <__reset-0x77b30>
   84b74:	00084d00 	call	84d0 <__reset-0x77b30>
   84b78:	00084d00 	call	84d0 <__reset-0x77b30>
   84b7c:	00084d00 	call	84d0 <__reset-0x77b30>
   84b80:	00084d00 	call	84d0 <__reset-0x77b30>
   84b84:	00084d00 	call	84d0 <__reset-0x77b30>
   84b88:	00084d00 	call	84d0 <__reset-0x77b30>
   84b8c:	00084d00 	call	84d0 <__reset-0x77b30>
   84b90:	00084d00 	call	84d0 <__reset-0x77b30>
   84b94:	00084d00 	call	84d0 <__reset-0x77b30>
   84b98:	00084d00 	call	84d0 <__reset-0x77b30>
   84b9c:	00084d00 	call	84d0 <__reset-0x77b30>
   84ba0:	00084d00 	call	84d0 <__reset-0x77b30>
   84ba4:	00084d00 	call	84d0 <__reset-0x77b30>
   84ba8:	00084d00 	call	84d0 <__reset-0x77b30>
   84bac:	00084d00 	call	84d0 <__reset-0x77b30>
   84bb0:	00084a84 	movi	zero,8490
   84bb4:	00084d00 	call	84d0 <__reset-0x77b30>
   84bb8:	00084d00 	call	84d0 <__reset-0x77b30>
   84bbc:	00084d00 	call	84d0 <__reset-0x77b30>
   84bc0:	00084d00 	call	84d0 <__reset-0x77b30>
   84bc4:	00085ba0 	cmpeqi	zero,zero,8558
   84bc8:	00084d00 	call	84d0 <__reset-0x77b30>
   84bcc:	00084d00 	call	84d0 <__reset-0x77b30>
   84bd0:	00084d00 	call	84d0 <__reset-0x77b30>
   84bd4:	00084d00 	call	84d0 <__reset-0x77b30>
   84bd8:	00084d00 	call	84d0 <__reset-0x77b30>
   84bdc:	00085b84 	movi	zero,8558
   84be0:	00085b84 	movi	zero,8558
   84be4:	00085b84 	movi	zero,8558
   84be8:	00085b84 	movi	zero,8558
   84bec:	00085b84 	movi	zero,8558
   84bf0:	00085b84 	movi	zero,8558
   84bf4:	00085b84 	movi	zero,8558
   84bf8:	00085b84 	movi	zero,8558
   84bfc:	00085b84 	movi	zero,8558
   84c00:	00085b84 	movi	zero,8558
   84c04:	00084d00 	call	84d0 <__reset-0x77b30>
   84c08:	00084d00 	call	84d0 <__reset-0x77b30>
   84c0c:	00084d00 	call	84d0 <__reset-0x77b30>
   84c10:	00084d00 	call	84d0 <__reset-0x77b30>
   84c14:	00084d00 	call	84d0 <__reset-0x77b30>
   84c18:	00084d00 	call	84d0 <__reset-0x77b30>
   84c1c:	00084d00 	call	84d0 <__reset-0x77b30>
   84c20:	00084d00 	call	84d0 <__reset-0x77b30>
   84c24:	00084d00 	call	84d0 <__reset-0x77b30>
   84c28:	00084d00 	call	84d0 <__reset-0x77b30>
   84c2c:	00084d14 	movui	zero,8500
   84c30:	00085c88 	cmpgei	zero,zero,8562
   84c34:	00084d00 	call	84d0 <__reset-0x77b30>
   84c38:	00085c88 	cmpgei	zero,zero,8562
   84c3c:	00084d00 	call	84d0 <__reset-0x77b30>
   84c40:	00084d00 	call	84d0 <__reset-0x77b30>
   84c44:	00084d00 	call	84d0 <__reset-0x77b30>
   84c48:	00084d00 	call	84d0 <__reset-0x77b30>
   84c4c:	00085b7c 	xorhi	zero,zero,8557
   84c50:	00084d00 	call	84d0 <__reset-0x77b30>
   84c54:	00084d00 	call	84d0 <__reset-0x77b30>
   84c58:	00085b5c 	xori	zero,zero,8557
   84c5c:	00084d00 	call	84d0 <__reset-0x77b30>
   84c60:	00084d00 	call	84d0 <__reset-0x77b30>
   84c64:	00084d00 	call	84d0 <__reset-0x77b30>
   84c68:	00084d00 	call	84d0 <__reset-0x77b30>
   84c6c:	00084d00 	call	84d0 <__reset-0x77b30>
   84c70:	00084d00 	call	84d0 <__reset-0x77b30>
   84c74:	00084d00 	call	84d0 <__reset-0x77b30>
   84c78:	00084d00 	call	84d0 <__reset-0x77b30>
   84c7c:	00085ba8 	cmpgeui	zero,zero,8558
   84c80:	00084d00 	call	84d0 <__reset-0x77b30>
   84c84:	00084d00 	call	84d0 <__reset-0x77b30>
   84c88:	00085b40 	call	85b4 <__reset-0x77a4c>
   84c8c:	00084d00 	call	84d0 <__reset-0x77b30>
   84c90:	00084d00 	call	84d0 <__reset-0x77b30>
   84c94:	00084d00 	call	84d0 <__reset-0x77b30>
   84c98:	00084d00 	call	84d0 <__reset-0x77b30>
   84c9c:	00084d00 	call	84d0 <__reset-0x77b30>
   84ca0:	00084d00 	call	84d0 <__reset-0x77b30>
   84ca4:	00084d00 	call	84d0 <__reset-0x77b30>
   84ca8:	00085c90 	cmplti	zero,zero,8562
   84cac:	00084d18 	cmpnei	zero,zero,8500
   84cb0:	00085c88 	cmpgei	zero,zero,8562
   84cb4:	00085c88 	cmpgei	zero,zero,8562
   84cb8:	00085c88 	cmpgei	zero,zero,8562
   84cbc:	00085c9c 	xori	zero,zero,8562
   84cc0:	00085be4 	muli	zero,zero,8559
   84cc4:	00084d00 	call	84d0 <__reset-0x77b30>
   84cc8:	00084d00 	call	84d0 <__reset-0x77b30>
   84ccc:	000852ac 	andhi	zero,zero,8522
   84cd0:	00084d00 	call	84d0 <__reset-0x77b30>
   84cd4:	00085d98 	cmpnei	zero,zero,8566
   84cd8:	00085d54 	movui	zero,8565
   84cdc:	00085d78 	rdprs	zero,zero,8565
   84ce0:	00084d00 	call	84d0 <__reset-0x77b30>
   84ce4:	00084d00 	call	84d0 <__reset-0x77b30>
   84ce8:	00085d70 	cmpltui	zero,zero,8565
   84cec:	00084d00 	call	84d0 <__reset-0x77b30>
   84cf0:	00085bc8 	cmpgei	zero,zero,8559
   84cf4:	00084d00 	call	84d0 <__reset-0x77b30>
   84cf8:	00084d00 	call	84d0 <__reset-0x77b30>
   84cfc:	00085ba8 	cmpgeui	zero,zero,8558
   84d00:	bc87883a 	add	r3,r23,r18
   84d04:	18800003 	ldbu	r2,0(r3)
   84d08:	1080004c 	andi	r2,r2,1
   84d0c:	1005003a 	cmpeq	r2,r2,zero
   84d10:	1000011e 	bne	r2,zero,84d18 <__svfscanf_r+0x3a4>
   84d14:	ad400054 	ori	r21,r21,1
   84d18:	01000234 	movhi	r4,8
   84d1c:	2109f004 	addi	r4,r4,10176
   84d20:	00800284 	movi	r2,10
   84d24:	d900a015 	stw	r4,640(sp)
   84d28:	048000c4 	movi	r18,3
   84d2c:	d880a115 	stw	r2,644(sp)
   84d30:	80c00117 	ldw	r3,4(r16)
   84d34:	00c13f0e 	bge	zero,r3,85234 <__svfscanf_r+0x8c0>
   84d38:	a880100c 	andi	r2,r21,64
   84d3c:	10001326 	beq	r2,zero,84d8c <__svfscanf_r+0x418>
   84d40:	00800104 	movi	r2,4
   84d44:	14bf1e36 	bltu	r2,r18,849c0 <__svfscanf_r+0x4c>
   84d48:	9485883a 	add	r2,r18,r18
   84d4c:	1085883a 	add	r2,r2,r2
   84d50:	00c00234 	movhi	r3,8
   84d54:	18d35904 	addi	r3,r3,19812
   84d58:	10c5883a 	add	r2,r2,r3
   84d5c:	11000017 	ldw	r4,0(r2)
   84d60:	2000683a 	jmp	r4
   84d64:	00084dc8 	cmpgei	zero,zero,8503
   84d68:	00084ec8 	cmpgei	zero,zero,8507
   84d6c:	000850d8 	cmpnei	zero,zero,8515
   84d70:	00084f3c 	xorhi	zero,zero,8508
   84d74:	00085210 	cmplti	zero,zero,8520
   84d78:	b009883a 	mov	r4,r22
   84d7c:	800b883a 	mov	r5,r16
   84d80:	00822780 	call	82278 <__srefill_r>
   84d84:	103f501e 	bne	r2,zero,84ac8 <__svfscanf_r+0x154>
   84d88:	8c400044 	addi	r17,r17,1
   84d8c:	81400017 	ldw	r5,0(r16)
   84d90:	98800017 	ldw	r2,0(r19)
   84d94:	28c00003 	ldbu	r3,0(r5)
   84d98:	1887883a 	add	r3,r3,r2
   84d9c:	19000003 	ldbu	r4,0(r3)
   84da0:	2100020c 	andi	r4,r4,8
   84da4:	203fe626 	beq	r4,zero,84d40 <__svfscanf_r+0x3cc>
   84da8:	80c00117 	ldw	r3,4(r16)
   84dac:	18ffffc4 	addi	r3,r3,-1
   84db0:	80c00115 	stw	r3,4(r16)
   84db4:	00fff00e 	bge	zero,r3,84d78 <__svfscanf_r+0x404>
   84db8:	29800044 	addi	r6,r5,1
   84dbc:	8c400044 	addi	r17,r17,1
   84dc0:	81800015 	stw	r6,0(r16)
   84dc4:	003ff106 	br	84d8c <__svfscanf_r+0x418>
   84dc8:	d8c0a317 	ldw	r3,652(sp)
   84dcc:	1800021e 	bne	r3,zero,84dd8 <__svfscanf_r+0x464>
   84dd0:	01000044 	movi	r4,1
   84dd4:	d900a315 	stw	r4,652(sp)
   84dd8:	a880004c 	andi	r2,r21,1
   84ddc:	1005003a 	cmpeq	r2,r2,zero
   84de0:	1002811e 	bne	r2,zero,857e8 <__svfscanf_r+0xe74>
   84de4:	ad40040c 	andi	r21,r21,16
   84de8:	a805003a 	cmpeq	r2,r21,zero
   84dec:	d880a615 	stw	r2,664(sp)
   84df0:	1003d31e 	bne	r2,zero,85d40 <__svfscanf_r+0x13cc>
   84df4:	0027883a 	mov	r19,zero
   84df8:	d900a317 	ldw	r4,652(sp)
   84dfc:	2003c726 	beq	r4,zero,85d1c <__svfscanf_r+0x13a8>
   84e00:	07000274 	movhi	fp,9
   84e04:	e7168d04 	addi	fp,fp,23092
   84e08:	e0800017 	ldw	r2,0(fp)
   84e0c:	103f2e26 	beq	r2,zero,84ac8 <__svfscanf_r+0x154>
   84e10:	d8804404 	addi	r2,sp,272
   84e14:	0025883a 	mov	r18,zero
   84e18:	d880a515 	stw	r2,660(sp)
   84e1c:	05ffffc4 	movi	r23,-1
   84e20:	80800017 	ldw	r2,0(r16)
   84e24:	80c00117 	ldw	r3,4(r16)
   84e28:	d900a517 	ldw	r4,660(sp)
   84e2c:	12000003 	ldbu	r8,0(r2)
   84e30:	18ffffc4 	addi	r3,r3,-1
   84e34:	11800044 	addi	r6,r2,1
   84e38:	248f883a 	add	r7,r4,r18
   84e3c:	80c00115 	stw	r3,4(r16)
   84e40:	81800015 	stw	r6,0(r16)
   84e44:	3a000005 	stb	r8,0(r7)
   84e48:	d9000204 	addi	r4,sp,8
   84e4c:	000b883a 	mov	r5,zero
   84e50:	01800204 	movi	r6,8
   84e54:	008203c0 	call	8203c <memset>
   84e58:	d980a517 	ldw	r6,660(sp)
   84e5c:	94800044 	addi	r18,r18,1
   84e60:	d8800204 	addi	r2,sp,8
   84e64:	b009883a 	mov	r4,r22
   84e68:	980b883a 	mov	r5,r19
   84e6c:	900f883a 	mov	r7,r18
   84e70:	d8800015 	stw	r2,0(sp)
   84e74:	00884780 	call	88478 <_mbrtowc_r>
   84e78:	1007883a 	mov	r3,r2
   84e7c:	15ff1226 	beq	r2,r23,84ac8 <__svfscanf_r+0x154>
   84e80:	10039e1e 	bne	r2,zero,85cfc <__svfscanf_r+0x1388>
   84e84:	a800011e 	bne	r21,zero,84e8c <__svfscanf_r+0x518>
   84e88:	98000015 	stw	zero,0(r19)
   84e8c:	d8c0a317 	ldw	r3,652(sp)
   84e90:	d900a617 	ldw	r4,664(sp)
   84e94:	8ca3883a 	add	r17,r17,r18
   84e98:	18ffffc4 	addi	r3,r3,-1
   84e9c:	d8c0a315 	stw	r3,652(sp)
   84ea0:	20000126 	beq	r4,zero,84ea8 <__svfscanf_r+0x534>
   84ea4:	9cc00104 	addi	r19,r19,4
   84ea8:	0025883a 	mov	r18,zero
   84eac:	80c00117 	ldw	r3,4(r16)
   84eb0:	00c3950e 	bge	zero,r3,85d08 <__svfscanf_r+0x1394>
   84eb4:	d880a317 	ldw	r2,652(sp)
   84eb8:	10039826 	beq	r2,zero,85d1c <__svfscanf_r+0x13a8>
   84ebc:	e0800017 	ldw	r2,0(fp)
   84ec0:	90bfd71e 	bne	r18,r2,84e20 <__svfscanf_r+0x4ac>
   84ec4:	003f0006 	br	84ac8 <__svfscanf_r+0x154>
   84ec8:	d880a317 	ldw	r2,652(sp)
   84ecc:	1000021e 	bne	r2,zero,84ed8 <__svfscanf_r+0x564>
   84ed0:	00ffffc4 	movi	r3,-1
   84ed4:	d8c0a315 	stw	r3,652(sp)
   84ed8:	a880040c 	andi	r2,r21,16
   84edc:	1003b826 	beq	r2,zero,85dc0 <__svfscanf_r+0x144c>
   84ee0:	0027883a 	mov	r19,zero
   84ee4:	dd400404 	addi	r21,sp,16
   84ee8:	81000017 	ldw	r4,0(r16)
   84eec:	20800003 	ldbu	r2,0(r4)
   84ef0:	a885883a 	add	r2,r21,r2
   84ef4:	10c00007 	ldb	r3,0(r2)
   84ef8:	18037d26 	beq	r3,zero,85cf0 <__svfscanf_r+0x137c>
   84efc:	80c00117 	ldw	r3,4(r16)
   84f00:	21800044 	addi	r6,r4,1
   84f04:	d900a317 	ldw	r4,652(sp)
   84f08:	18ffffc4 	addi	r3,r3,-1
   84f0c:	9cc00044 	addi	r19,r19,1
   84f10:	81800015 	stw	r6,0(r16)
   84f14:	80c00115 	stw	r3,4(r16)
   84f18:	24c37526 	beq	r4,r19,85cf0 <__svfscanf_r+0x137c>
   84f1c:	00fff216 	blt	zero,r3,84ee8 <__svfscanf_r+0x574>
   84f20:	b009883a 	mov	r4,r22
   84f24:	800b883a 	mov	r5,r16
   84f28:	00822780 	call	82278 <__srefill_r>
   84f2c:	103fee26 	beq	r2,zero,84ee8 <__svfscanf_r+0x574>
   84f30:	983ee526 	beq	r19,zero,84ac8 <__svfscanf_r+0x154>
   84f34:	8ce3883a 	add	r17,r17,r19
   84f38:	003ea106 	br	849c0 <__svfscanf_r+0x4c>
   84f3c:	d900a317 	ldw	r4,652(sp)
   84f40:	00805704 	movi	r2,348
   84f44:	20ffffc4 	addi	r3,r4,-1
   84f48:	10c0bf2e 	bgeu	r2,r3,85248 <__svfscanf_r+0x8d4>
   84f4c:	00805744 	movi	r2,349
   84f50:	24ffa8c4 	addi	r19,r4,-349
   84f54:	ac836014 	ori	r18,r21,3456
   84f58:	d880a315 	stw	r2,652(sp)
   84f5c:	d8c04404 	addi	r3,sp,272
   84f60:	d8c0a515 	stw	r3,660(sp)
   84f64:	002f883a 	mov	r23,zero
   84f68:	182b883a 	mov	r21,r3
   84f6c:	81800017 	ldw	r6,0(r16)
   84f70:	00c01344 	movi	r3,77
   84f74:	31400003 	ldbu	r5,0(r6)
   84f78:	28bff544 	addi	r2,r5,-43
   84f7c:	10803fcc 	andi	r2,r2,255
   84f80:	1880b836 	bltu	r3,r2,85264 <__svfscanf_r+0x8f0>
   84f84:	1085883a 	add	r2,r2,r2
   84f88:	1085883a 	add	r2,r2,r2
   84f8c:	00c00234 	movhi	r3,8
   84f90:	18d3e804 	addi	r3,r3,20384
   84f94:	10c5883a 	add	r2,r2,r3
   84f98:	11000017 	ldw	r4,0(r2)
   84f9c:	2000683a 	jmp	r4
   84fa0:	000853b4 	movhi	zero,8526
   84fa4:	00085264 	muli	zero,zero,8521
   84fa8:	000853b4 	movhi	zero,8526
   84fac:	00085264 	muli	zero,zero,8521
   84fb0:	00085264 	muli	zero,zero,8521
   84fb4:	000853f8 	rdprs	zero,zero,8527
   84fb8:	00085bfc 	xorhi	zero,zero,8559
   84fbc:	00085bfc 	xorhi	zero,zero,8559
   84fc0:	00085bfc 	xorhi	zero,zero,8559
   84fc4:	00085bfc 	xorhi	zero,zero,8559
   84fc8:	00085bfc 	xorhi	zero,zero,8559
   84fcc:	00085bfc 	xorhi	zero,zero,8559
   84fd0:	00085bfc 	xorhi	zero,zero,8559
   84fd4:	00085c24 	muli	zero,zero,8560
   84fd8:	00085c24 	muli	zero,zero,8560
   84fdc:	00085264 	muli	zero,zero,8521
   84fe0:	00085264 	muli	zero,zero,8521
   84fe4:	00085264 	muli	zero,zero,8521
   84fe8:	00085264 	muli	zero,zero,8521
   84fec:	00085264 	muli	zero,zero,8521
   84ff0:	00085264 	muli	zero,zero,8521
   84ff4:	00085264 	muli	zero,zero,8521
   84ff8:	00085c54 	movui	zero,8561
   84ffc:	00085c54 	movui	zero,8561
   85000:	00085c54 	movui	zero,8561
   85004:	00085c54 	movui	zero,8561
   85008:	00085c54 	movui	zero,8561
   8500c:	00085c54 	movui	zero,8561
   85010:	00085264 	muli	zero,zero,8521
   85014:	00085264 	muli	zero,zero,8521
   85018:	00085264 	muli	zero,zero,8521
   8501c:	00085264 	muli	zero,zero,8521
   85020:	00085264 	muli	zero,zero,8521
   85024:	00085264 	muli	zero,zero,8521
   85028:	00085264 	muli	zero,zero,8521
   8502c:	00085264 	muli	zero,zero,8521
   85030:	00085264 	muli	zero,zero,8521
   85034:	00085264 	muli	zero,zero,8521
   85038:	00085264 	muli	zero,zero,8521
   8503c:	00085264 	muli	zero,zero,8521
   85040:	00085264 	muli	zero,zero,8521
   85044:	00085264 	muli	zero,zero,8521
   85048:	00085264 	muli	zero,zero,8521
   8504c:	00085264 	muli	zero,zero,8521
   85050:	00085264 	muli	zero,zero,8521
   85054:	00085c64 	muli	zero,zero,8561
   85058:	00085264 	muli	zero,zero,8521
   8505c:	00085264 	muli	zero,zero,8521
   85060:	00085264 	muli	zero,zero,8521
   85064:	00085264 	muli	zero,zero,8521
   85068:	00085264 	muli	zero,zero,8521
   8506c:	00085264 	muli	zero,zero,8521
   85070:	00085264 	muli	zero,zero,8521
   85074:	00085264 	muli	zero,zero,8521
   85078:	00085c54 	movui	zero,8561
   8507c:	00085c54 	movui	zero,8561
   85080:	00085c54 	movui	zero,8561
   85084:	00085c54 	movui	zero,8561
   85088:	00085c54 	movui	zero,8561
   8508c:	00085c54 	movui	zero,8561
   85090:	00085264 	muli	zero,zero,8521
   85094:	00085264 	muli	zero,zero,8521
   85098:	00085264 	muli	zero,zero,8521
   8509c:	00085264 	muli	zero,zero,8521
   850a0:	00085264 	muli	zero,zero,8521
   850a4:	00085264 	muli	zero,zero,8521
   850a8:	00085264 	muli	zero,zero,8521
   850ac:	00085264 	muli	zero,zero,8521
   850b0:	00085264 	muli	zero,zero,8521
   850b4:	00085264 	muli	zero,zero,8521
   850b8:	00085264 	muli	zero,zero,8521
   850bc:	00085264 	muli	zero,zero,8521
   850c0:	00085264 	muli	zero,zero,8521
   850c4:	00085264 	muli	zero,zero,8521
   850c8:	00085264 	muli	zero,zero,8521
   850cc:	00085264 	muli	zero,zero,8521
   850d0:	00085264 	muli	zero,zero,8521
   850d4:	00085c64 	muli	zero,zero,8561
   850d8:	d900a317 	ldw	r4,652(sp)
   850dc:	2000021e 	bne	r4,zero,850e8 <__svfscanf_r+0x774>
   850e0:	00bfffc4 	movi	r2,-1
   850e4:	d880a315 	stw	r2,652(sp)
   850e8:	a880004c 	andi	r2,r21,1
   850ec:	1005003a 	cmpeq	r2,r2,zero
   850f0:	1003651e 	bne	r2,zero,85e88 <__svfscanf_r+0x1514>
   850f4:	adc0040c 	andi	r23,r21,16
   850f8:	b807003a 	cmpeq	r3,r23,zero
   850fc:	d8c0a715 	stw	r3,668(sp)
   85100:	1802f61e 	bne	r3,zero,85cdc <__svfscanf_r+0x1368>
   85104:	dd400104 	addi	r21,sp,4
   85108:	0025883a 	mov	r18,zero
   8510c:	073fffc4 	movi	fp,-1
   85110:	81400017 	ldw	r5,0(r16)
   85114:	98800017 	ldw	r2,0(r19)
   85118:	29c00003 	ldbu	r7,0(r5)
   8511c:	38c03fcc 	andi	r3,r7,255
   85120:	1887883a 	add	r3,r3,r2
   85124:	19000003 	ldbu	r4,0(r3)
   85128:	2100020c 	andi	r4,r4,8
   8512c:	2000321e 	bne	r4,zero,851f8 <__svfscanf_r+0x884>
   85130:	d8c0a317 	ldw	r3,652(sp)
   85134:	18003026 	beq	r3,zero,851f8 <__svfscanf_r+0x884>
   85138:	00800274 	movhi	r2,9
   8513c:	10968d04 	addi	r2,r2,23092
   85140:	10c00017 	ldw	r3,0(r2)
   85144:	90fe6026 	beq	r18,r3,84ac8 <__svfscanf_r+0x154>
   85148:	d8c04404 	addi	r3,sp,272
   8514c:	80800117 	ldw	r2,4(r16)
   85150:	d8c0a515 	stw	r3,660(sp)
   85154:	d900a517 	ldw	r4,660(sp)
   85158:	10ffffc4 	addi	r3,r2,-1
   8515c:	29800044 	addi	r6,r5,1
   85160:	80c00115 	stw	r3,4(r16)
   85164:	2485883a 	add	r2,r4,r18
   85168:	81800015 	stw	r6,0(r16)
   8516c:	d9000204 	addi	r4,sp,8
   85170:	000b883a 	mov	r5,zero
   85174:	01800204 	movi	r6,8
   85178:	11c00005 	stb	r7,0(r2)
   8517c:	008203c0 	call	8203c <memset>
   85180:	d980a517 	ldw	r6,660(sp)
   85184:	94800044 	addi	r18,r18,1
   85188:	d8800204 	addi	r2,sp,8
   8518c:	b009883a 	mov	r4,r22
   85190:	a80b883a 	mov	r5,r21
   85194:	900f883a 	mov	r7,r18
   85198:	d8800015 	stw	r2,0(sp)
   8519c:	00884780 	call	88478 <_mbrtowc_r>
   851a0:	1007883a 	mov	r3,r2
   851a4:	173e4826 	beq	r2,fp,84ac8 <__svfscanf_r+0x154>
   851a8:	1002c91e 	bne	r2,zero,85cd0 <__svfscanf_r+0x135c>
   851ac:	a8000015 	stw	zero,0(r21)
   851b0:	a9000017 	ldw	r4,0(r21)
   851b4:	00883100 	call	88310 <iswspace>
   851b8:	1002bc1e 	bne	r2,zero,85cac <__svfscanf_r+0x1338>
   851bc:	d900a317 	ldw	r4,652(sp)
   851c0:	d880a717 	ldw	r2,668(sp)
   851c4:	8ca3883a 	add	r17,r17,r18
   851c8:	213fffc4 	addi	r4,r4,-1
   851cc:	d900a315 	stw	r4,652(sp)
   851d0:	10000126 	beq	r2,zero,851d8 <__svfscanf_r+0x864>
   851d4:	ad400104 	addi	r21,r21,4
   851d8:	0025883a 	mov	r18,zero
   851dc:	80c00117 	ldw	r3,4(r16)
   851e0:	00ffcb16 	blt	zero,r3,85110 <__svfscanf_r+0x79c>
   851e4:	b009883a 	mov	r4,r22
   851e8:	800b883a 	mov	r5,r16
   851ec:	00822780 	call	82278 <__srefill_r>
   851f0:	103fc726 	beq	r2,zero,85110 <__svfscanf_r+0x79c>
   851f4:	903e341e 	bne	r18,zero,84ac8 <__svfscanf_r+0x154>
   851f8:	b83df11e 	bne	r23,zero,849c0 <__svfscanf_r+0x4c>
   851fc:	d900a217 	ldw	r4,648(sp)
   85200:	a8000015 	stw	zero,0(r21)
   85204:	21000044 	addi	r4,r4,1
   85208:	d900a215 	stw	r4,648(sp)
   8520c:	003dec06 	br	849c0 <__svfscanf_r+0x4c>
   85210:	d900a317 	ldw	r4,652(sp)
   85214:	00805704 	movi	r2,348
   85218:	20ffffc4 	addi	r3,r4,-1
   8521c:	10c0902e 	bgeu	r2,r3,85460 <__svfscanf_r+0xaec>
   85220:	00805744 	movi	r2,349
   85224:	24ffa8c4 	addi	r19,r4,-349
   85228:	ad41e014 	ori	r21,r21,1920
   8522c:	d880a315 	stw	r2,652(sp)
   85230:	00010806 	br	85654 <__svfscanf_r+0xce0>
   85234:	b009883a 	mov	r4,r22
   85238:	800b883a 	mov	r5,r16
   8523c:	00822780 	call	82278 <__srefill_r>
   85240:	103ebd26 	beq	r2,zero,84d38 <__svfscanf_r+0x3c4>
   85244:	003e2006 	br	84ac8 <__svfscanf_r+0x154>
   85248:	d900a317 	ldw	r4,652(sp)
   8524c:	ac836014 	ori	r18,r21,3456
   85250:	2002941e 	bne	r4,zero,85ca4 <__svfscanf_r+0x1330>
   85254:	d8804404 	addi	r2,sp,272
   85258:	d880a515 	stw	r2,660(sp)
   8525c:	002f883a 	mov	r23,zero
   85260:	102b883a 	mov	r21,r2
   85264:	9080400c 	andi	r2,r18,256
   85268:	10000926 	beq	r2,zero,85290 <__svfscanf_r+0x91c>
   8526c:	d8c0a517 	ldw	r3,660(sp)
   85270:	1d40052e 	bgeu	r3,r21,85288 <__svfscanf_r+0x914>
   85274:	ad7fffc4 	addi	r21,r21,-1
   85278:	a9400007 	ldb	r5,0(r21)
   8527c:	b009883a 	mov	r4,r22
   85280:	800d883a 	mov	r6,r16
   85284:	008c17c0 	call	8c17c <_ungetc_r>
   85288:	d900a517 	ldw	r4,660(sp)
   8528c:	257dee26 	beq	r4,r21,84a48 <__svfscanf_r+0xd4>
   85290:	9080040c 	andi	r2,r18,16
   85294:	10000a26 	beq	r2,zero,852c0 <__svfscanf_r+0x94c>
   85298:	d8c0a517 	ldw	r3,660(sp)
   8529c:	a8c5c83a 	sub	r2,r21,r3
   852a0:	b885883a 	add	r2,r23,r2
   852a4:	88a3883a 	add	r17,r17,r2
   852a8:	003dc506 	br	849c0 <__svfscanf_r+0x4c>
   852ac:	a0c00007 	ldb	r3,0(r20)
   852b0:	00801b04 	movi	r2,108
   852b4:	18801726 	beq	r3,r2,85314 <__svfscanf_r+0x9a0>
   852b8:	ad400054 	ori	r21,r21,1
   852bc:	003e0906 	br	84ae4 <__svfscanf_r+0x170>
   852c0:	a8000005 	stb	zero,0(r21)
   852c4:	d8c0a017 	ldw	r3,640(sp)
   852c8:	d940a517 	ldw	r5,660(sp)
   852cc:	d9c0a117 	ldw	r7,644(sp)
   852d0:	b009883a 	mov	r4,r22
   852d4:	000d883a 	mov	r6,zero
   852d8:	183ee83a 	callr	r3
   852dc:	1007883a 	mov	r3,r2
   852e0:	9080080c 	andi	r2,r18,32
   852e4:	1000251e 	bne	r2,zero,8537c <__svfscanf_r+0xa08>
   852e8:	9080010c 	andi	r2,r18,4
   852ec:	10000c26 	beq	r2,zero,85320 <__svfscanf_r+0x9ac>
   852f0:	d900a417 	ldw	r4,656(sp)
   852f4:	20800017 	ldw	r2,0(r4)
   852f8:	21000104 	addi	r4,r4,4
   852fc:	d900a415 	stw	r4,656(sp)
   85300:	10c0000d 	sth	r3,0(r2)
   85304:	d880a217 	ldw	r2,648(sp)
   85308:	10800044 	addi	r2,r2,1
   8530c:	d880a215 	stw	r2,648(sp)
   85310:	003fe106 	br	85298 <__svfscanf_r+0x924>
   85314:	a5000044 	addi	r20,r20,1
   85318:	ad400094 	ori	r21,r21,2
   8531c:	003df106 	br	84ae4 <__svfscanf_r+0x170>
   85320:	9080004c 	andi	r2,r18,1
   85324:	1005003a 	cmpeq	r2,r2,zero
   85328:	10001426 	beq	r2,zero,8537c <__svfscanf_r+0xa08>
   8532c:	9080008c 	andi	r2,r18,2
   85330:	10001226 	beq	r2,zero,8537c <__svfscanf_r+0xa08>
   85334:	d8c0a017 	ldw	r3,640(sp)
   85338:	00800274 	movhi	r2,9
   8533c:	10aed304 	addi	r2,r2,-17588
   85340:	18801426 	beq	r3,r2,85394 <__svfscanf_r+0xa20>
   85344:	d9c0a117 	ldw	r7,644(sp)
   85348:	d940a517 	ldw	r5,660(sp)
   8534c:	000d883a 	mov	r6,zero
   85350:	b009883a 	mov	r4,r22
   85354:	008b8340 	call	8b834 <_strtoll_r>
   85358:	100d883a 	mov	r6,r2
   8535c:	180f883a 	mov	r7,r3
   85360:	d900a417 	ldw	r4,656(sp)
   85364:	20800017 	ldw	r2,0(r4)
   85368:	21000104 	addi	r4,r4,4
   8536c:	d900a415 	stw	r4,656(sp)
   85370:	11c00115 	stw	r7,4(r2)
   85374:	11800015 	stw	r6,0(r2)
   85378:	003fe206 	br	85304 <__svfscanf_r+0x990>
   8537c:	d900a417 	ldw	r4,656(sp)
   85380:	20800017 	ldw	r2,0(r4)
   85384:	21000104 	addi	r4,r4,4
   85388:	d900a415 	stw	r4,656(sp)
   8538c:	10c00015 	stw	r3,0(r2)
   85390:	003fdc06 	br	85304 <__svfscanf_r+0x990>
   85394:	d9c0a117 	ldw	r7,644(sp)
   85398:	d940a517 	ldw	r5,660(sp)
   8539c:	000d883a 	mov	r6,zero
   853a0:	b009883a 	mov	r4,r22
   853a4:	008bdb00 	call	8bdb0 <_strtoull_r>
   853a8:	100d883a 	mov	r6,r2
   853ac:	180f883a 	mov	r7,r3
   853b0:	003feb06 	br	85360 <__svfscanf_r+0x9ec>
   853b4:	9080200c 	andi	r2,r18,128
   853b8:	103faa26 	beq	r2,zero,85264 <__svfscanf_r+0x8f0>
   853bc:	00bfdfc4 	movi	r2,-129
   853c0:	90a4703a 	and	r18,r18,r2
   853c4:	a9400005 	stb	r5,0(r21)
   853c8:	ad400044 	addi	r21,r21,1
   853cc:	80c00117 	ldw	r3,4(r16)
   853d0:	18ffffc4 	addi	r3,r3,-1
   853d4:	80c00115 	stw	r3,4(r16)
   853d8:	00c0130e 	bge	zero,r3,85428 <__svfscanf_r+0xab4>
   853dc:	31800044 	addi	r6,r6,1
   853e0:	81800015 	stw	r6,0(r16)
   853e4:	d880a317 	ldw	r2,652(sp)
   853e8:	10bfffc4 	addi	r2,r2,-1
   853ec:	d880a315 	stw	r2,652(sp)
   853f0:	103ede1e 	bne	r2,zero,84f6c <__svfscanf_r+0x5f8>
   853f4:	003f9b06 	br	85264 <__svfscanf_r+0x8f0>
   853f8:	9082000c 	andi	r2,r18,2048
   853fc:	103ff126 	beq	r2,zero,853c4 <__svfscanf_r+0xa50>
   85400:	d8c0a117 	ldw	r3,644(sp)
   85404:	1800031e 	bne	r3,zero,85414 <__svfscanf_r+0xaa0>
   85408:	01000204 	movi	r4,8
   8540c:	94808014 	ori	r18,r18,512
   85410:	d900a115 	stw	r4,644(sp)
   85414:	9081000c 	andi	r2,r18,1024
   85418:	10000826 	beq	r2,zero,8543c <__svfscanf_r+0xac8>
   8541c:	00be9fc4 	movi	r2,-1409
   85420:	90a4703a 	and	r18,r18,r2
   85424:	003fe706 	br	853c4 <__svfscanf_r+0xa50>
   85428:	b009883a 	mov	r4,r22
   8542c:	800b883a 	mov	r5,r16
   85430:	00822780 	call	82278 <__srefill_r>
   85434:	103feb26 	beq	r2,zero,853e4 <__svfscanf_r+0xa70>
   85438:	003f8a06 	br	85264 <__svfscanf_r+0x8f0>
   8543c:	98000426 	beq	r19,zero,85450 <__svfscanf_r+0xadc>
   85440:	d880a317 	ldw	r2,652(sp)
   85444:	9cffffc4 	addi	r19,r19,-1
   85448:	10800044 	addi	r2,r2,1
   8544c:	d880a315 	stw	r2,652(sp)
   85450:	00bf1fc4 	movi	r2,-897
   85454:	90a4703a 	and	r18,r18,r2
   85458:	bdc00044 	addi	r23,r23,1
   8545c:	003fdb06 	br	853cc <__svfscanf_r+0xa58>
   85460:	d900a317 	ldw	r4,652(sp)
   85464:	ad41e014 	ori	r21,r21,1920
   85468:	2000791e 	bne	r4,zero,85650 <__svfscanf_r+0xcdc>
   8546c:	d8c04404 	addi	r3,sp,272
   85470:	d8c0a515 	stw	r3,660(sp)
   85474:	182f883a 	mov	r23,r3
   85478:	d8009c15 	stw	zero,624(sp)
   8547c:	d8009d15 	stw	zero,628(sp)
   85480:	d8009f15 	stw	zero,636(sp)
   85484:	d8009e15 	stw	zero,632(sp)
   85488:	0039883a 	mov	fp,zero
   8548c:	e1003fcc 	andi	r4,fp,255
   85490:	2100201c 	xori	r4,r4,128
   85494:	213fe004 	addi	r4,r4,-128
   85498:	20ffffc4 	addi	r3,r4,-1
   8549c:	00800184 	movi	r2,6
   854a0:	10c01736 	bltu	r2,r3,85500 <__svfscanf_r+0xb8c>
   854a4:	00c00084 	movi	r3,2
   854a8:	19026d0e 	bge	r3,r4,85e60 <__svfscanf_r+0x14ec>
   854ac:	008000c4 	movi	r2,3
   854b0:	1100130e 	bge	r2,r4,85500 <__svfscanf_r+0xb8c>
   854b4:	e4ffffc4 	addi	r19,fp,-1
   854b8:	b825883a 	mov	r18,r23
   854bc:	94bfffc4 	addi	r18,r18,-1
   854c0:	91400007 	ldb	r5,0(r18)
   854c4:	b009883a 	mov	r4,r22
   854c8:	800d883a 	mov	r6,r16
   854cc:	008c17c0 	call	8c17c <_ungetc_r>
   854d0:	9cffffc4 	addi	r19,r19,-1
   854d4:	98c03fcc 	andi	r3,r19,255
   854d8:	18c0201c 	xori	r3,r3,128
   854dc:	18ffe004 	addi	r3,r3,-128
   854e0:	00800084 	movi	r2,2
   854e4:	18bff51e 	bne	r3,r2,854bc <__svfscanf_r+0xb48>
   854e8:	e0bfff04 	addi	r2,fp,-4
   854ec:	10803fcc 	andi	r2,r2,255
   854f0:	b887c83a 	sub	r3,r23,r2
   854f4:	8885c83a 	sub	r2,r17,r2
   854f8:	147fffc4 	addi	r17,r2,-1
   854fc:	1dffffc4 	addi	r23,r3,-1
   85500:	a880400c 	andi	r2,r21,256
   85504:	10001226 	beq	r2,zero,85550 <__svfscanf_r+0xbdc>
   85508:	a881000c 	andi	r2,r21,1024
   8550c:	10002b1e 	bne	r2,zero,855bc <__svfscanf_r+0xc48>
   85510:	bdffffc4 	addi	r23,r23,-1
   85514:	b9400007 	ldb	r5,0(r23)
   85518:	00801944 	movi	r2,101
   8551c:	8c7fffc4 	addi	r17,r17,-1
   85520:	28800826 	beq	r5,r2,85544 <__svfscanf_r+0xbd0>
   85524:	00801144 	movi	r2,69
   85528:	28800626 	beq	r5,r2,85544 <__svfscanf_r+0xbd0>
   8552c:	bdffffc4 	addi	r23,r23,-1
   85530:	b009883a 	mov	r4,r22
   85534:	800d883a 	mov	r6,r16
   85538:	008c17c0 	call	8c17c <_ungetc_r>
   8553c:	b9400007 	ldb	r5,0(r23)
   85540:	8c7fffc4 	addi	r17,r17,-1
   85544:	b009883a 	mov	r4,r22
   85548:	800d883a 	mov	r6,r16
   8554c:	008c17c0 	call	8c17c <_ungetc_r>
   85550:	a880040c 	andi	r2,r21,16
   85554:	103d1a1e 	bne	r2,zero,849c0 <__svfscanf_r+0x4c>
   85558:	a8c1800c 	andi	r3,r21,1536
   8555c:	00810004 	movi	r2,1024
   85560:	b8000005 	stb	zero,0(r23)
   85564:	18813326 	beq	r3,r2,85a34 <__svfscanf_r+0x10c0>
   85568:	d8809d17 	ldw	r2,628(sp)
   8556c:	1000251e 	bne	r2,zero,85604 <__svfscanf_r+0xc90>
   85570:	d940a517 	ldw	r5,660(sp)
   85574:	b009883a 	mov	r4,r22
   85578:	000d883a 	mov	r6,zero
   8557c:	008a1280 	call	8a128 <_strtod_r>
   85580:	a900004c 	andi	r4,r21,1
   85584:	2009003a 	cmpeq	r4,r4,zero
   85588:	1025883a 	mov	r18,r2
   8558c:	1827883a 	mov	r19,r3
   85590:	2000141e 	bne	r4,zero,855e4 <__svfscanf_r+0xc70>
   85594:	d8c0a417 	ldw	r3,656(sp)
   85598:	18800017 	ldw	r2,0(r3)
   8559c:	1d400104 	addi	r21,r3,4
   855a0:	14c00115 	stw	r19,4(r2)
   855a4:	14800015 	stw	r18,0(r2)
   855a8:	d8c0a217 	ldw	r3,648(sp)
   855ac:	dd40a415 	stw	r21,656(sp)
   855b0:	18c00044 	addi	r3,r3,1
   855b4:	d8c0a215 	stw	r3,648(sp)
   855b8:	003d0106 	br	849c0 <__svfscanf_r+0x4c>
   855bc:	d900a517 	ldw	r4,660(sp)
   855c0:	25fd212e 	bgeu	r4,r23,84a48 <__svfscanf_r+0xd4>
   855c4:	bdffffc4 	addi	r23,r23,-1
   855c8:	b9400007 	ldb	r5,0(r23)
   855cc:	b009883a 	mov	r4,r22
   855d0:	800d883a 	mov	r6,r16
   855d4:	008c17c0 	call	8c17c <_ungetc_r>
   855d8:	d880a517 	ldw	r2,660(sp)
   855dc:	15fff936 	bltu	r2,r23,855c4 <__svfscanf_r+0xc50>
   855e0:	003d1906 	br	84a48 <__svfscanf_r+0xd4>
   855e4:	a880008c 	andi	r2,r21,2
   855e8:	10011926 	beq	r2,zero,85a50 <__svfscanf_r+0x10dc>
   855ec:	d900a417 	ldw	r4,656(sp)
   855f0:	20800017 	ldw	r2,0(r4)
   855f4:	25400104 	addi	r21,r4,4
   855f8:	10c00115 	stw	r3,4(r2)
   855fc:	14800015 	stw	r18,0(r2)
   85600:	003fe906 	br	855a8 <__svfscanf_r+0xc34>
   85604:	d8c09c17 	ldw	r3,624(sp)
   85608:	b009883a 	mov	r4,r22
   8560c:	000d883a 	mov	r6,zero
   85610:	19400044 	addi	r5,r3,1
   85614:	01c00284 	movi	r7,10
   85618:	00827c00 	call	827c0 <_strtol_r>
   8561c:	d9009d17 	ldw	r4,628(sp)
   85620:	110dc83a 	sub	r6,r2,r4
   85624:	d8c0a517 	ldw	r3,660(sp)
   85628:	d9009c17 	ldw	r4,624(sp)
   8562c:	188054c4 	addi	r2,r3,339
   85630:	20800236 	bltu	r4,r2,8563c <__svfscanf_r+0xcc8>
   85634:	18805484 	addi	r2,r3,338
   85638:	d8809c15 	stw	r2,624(sp)
   8563c:	d9009c17 	ldw	r4,624(sp)
   85640:	01400274 	movhi	r5,9
   85644:	294e3d04 	addi	r5,r5,14580
   85648:	008a00c0 	call	8a00c <sprintf>
   8564c:	003fc806 	br	85570 <__svfscanf_r+0xbfc>
   85650:	0027883a 	mov	r19,zero
   85654:	d8c04404 	addi	r3,sp,272
   85658:	d8c0a515 	stw	r3,660(sp)
   8565c:	182f883a 	mov	r23,r3
   85660:	d8009f15 	stw	zero,636(sp)
   85664:	d8009e15 	stw	zero,632(sp)
   85668:	d8009d15 	stw	zero,628(sp)
   8566c:	d8009c15 	stw	zero,624(sp)
   85670:	0039883a 	mov	fp,zero
   85674:	0025883a 	mov	r18,zero
   85678:	80800017 	ldw	r2,0(r16)
   8567c:	11400003 	ldbu	r5,0(r2)
   85680:	00801384 	movi	r2,78
   85684:	28fff544 	addi	r3,r5,-43
   85688:	18c03fcc 	andi	r3,r3,255
   8568c:	10c08336 	bltu	r2,r3,8589c <__svfscanf_r+0xf28>
   85690:	18c5883a 	add	r2,r3,r3
   85694:	1085883a 	add	r2,r2,r2
   85698:	00c00234 	movhi	r3,8
   8569c:	18d5ab04 	addi	r3,r3,22188
   856a0:	10c5883a 	add	r2,r2,r3
   856a4:	11000017 	ldw	r4,0(r2)
   856a8:	2000683a 	jmp	r4
   856ac:	00085854 	movui	zero,8545
   856b0:	0008589c 	xori	zero,zero,8546
   856b4:	00085854 	movui	zero,8545
   856b8:	000858e0 	cmpeqi	zero,zero,8547
   856bc:	0008589c 	xori	zero,zero,8546
   856c0:	0008594c 	andi	zero,zero,8549
   856c4:	00085980 	call	8598 <__reset-0x77a68>
   856c8:	00085980 	call	8598 <__reset-0x77a68>
   856cc:	00085980 	call	8598 <__reset-0x77a68>
   856d0:	00085980 	call	8598 <__reset-0x77a68>
   856d4:	00085980 	call	8598 <__reset-0x77a68>
   856d8:	00085980 	call	8598 <__reset-0x77a68>
   856dc:	00085980 	call	8598 <__reset-0x77a68>
   856e0:	00085980 	call	8598 <__reset-0x77a68>
   856e4:	00085980 	call	8598 <__reset-0x77a68>
   856e8:	0008589c 	xori	zero,zero,8546
   856ec:	0008589c 	xori	zero,zero,8546
   856f0:	0008589c 	xori	zero,zero,8546
   856f4:	0008589c 	xori	zero,zero,8546
   856f8:	0008589c 	xori	zero,zero,8546
   856fc:	0008589c 	xori	zero,zero,8546
   85700:	0008589c 	xori	zero,zero,8546
   85704:	000859a0 	cmpeqi	zero,zero,8550
   85708:	0008589c 	xori	zero,zero,8546
   8570c:	0008589c 	xori	zero,zero,8546
   85710:	0008589c 	xori	zero,zero,8546
   85714:	000859b0 	cmpltui	zero,zero,8550
   85718:	000859fc 	xorhi	zero,zero,8551
   8571c:	0008589c 	xori	zero,zero,8546
   85720:	0008589c 	xori	zero,zero,8546
   85724:	00085ad4 	movui	zero,8555
   85728:	0008589c 	xori	zero,zero,8546
   8572c:	0008589c 	xori	zero,zero,8546
   85730:	0008589c 	xori	zero,zero,8546
   85734:	0008589c 	xori	zero,zero,8546
   85738:	00085a80 	call	85a8 <__reset-0x77a58>
   8573c:	0008589c 	xori	zero,zero,8546
   85740:	0008589c 	xori	zero,zero,8546
   85744:	0008589c 	xori	zero,zero,8546
   85748:	0008589c 	xori	zero,zero,8546
   8574c:	0008589c 	xori	zero,zero,8546
   85750:	00085b14 	movui	zero,8556
   85754:	0008589c 	xori	zero,zero,8546
   85758:	0008589c 	xori	zero,zero,8546
   8575c:	0008589c 	xori	zero,zero,8546
   85760:	0008589c 	xori	zero,zero,8546
   85764:	00085a18 	cmpnei	zero,zero,8552
   85768:	0008589c 	xori	zero,zero,8546
   8576c:	0008589c 	xori	zero,zero,8546
   85770:	0008589c 	xori	zero,zero,8546
   85774:	0008589c 	xori	zero,zero,8546
   85778:	0008589c 	xori	zero,zero,8546
   8577c:	0008589c 	xori	zero,zero,8546
   85780:	0008589c 	xori	zero,zero,8546
   85784:	000859a0 	cmpeqi	zero,zero,8550
   85788:	0008589c 	xori	zero,zero,8546
   8578c:	0008589c 	xori	zero,zero,8546
   85790:	0008589c 	xori	zero,zero,8546
   85794:	000859b0 	cmpltui	zero,zero,8550
   85798:	000859fc 	xorhi	zero,zero,8551
   8579c:	0008589c 	xori	zero,zero,8546
   857a0:	0008589c 	xori	zero,zero,8546
   857a4:	00085ad4 	movui	zero,8555
   857a8:	0008589c 	xori	zero,zero,8546
   857ac:	0008589c 	xori	zero,zero,8546
   857b0:	0008589c 	xori	zero,zero,8546
   857b4:	0008589c 	xori	zero,zero,8546
   857b8:	00085a80 	call	85a8 <__reset-0x77a58>
   857bc:	0008589c 	xori	zero,zero,8546
   857c0:	0008589c 	xori	zero,zero,8546
   857c4:	0008589c 	xori	zero,zero,8546
   857c8:	0008589c 	xori	zero,zero,8546
   857cc:	0008589c 	xori	zero,zero,8546
   857d0:	00085b14 	movui	zero,8556
   857d4:	0008589c 	xori	zero,zero,8546
   857d8:	0008589c 	xori	zero,zero,8546
   857dc:	0008589c 	xori	zero,zero,8546
   857e0:	0008589c 	xori	zero,zero,8546
   857e4:	00085a18 	cmpnei	zero,zero,8552
   857e8:	a880040c 	andi	r2,r21,16
   857ec:	10004826 	beq	r2,zero,85910 <__svfscanf_r+0xf9c>
   857f0:	0027883a 	mov	r19,zero
   857f4:	00000b06 	br	85824 <__svfscanf_r+0xeb0>
   857f8:	80800017 	ldw	r2,0(r16)
   857fc:	b009883a 	mov	r4,r22
   85800:	800b883a 	mov	r5,r16
   85804:	148d883a 	add	r6,r2,r18
   85808:	81800015 	stw	r6,0(r16)
   8580c:	9ca7883a 	add	r19,r19,r18
   85810:	00822780 	call	82278 <__srefill_r>
   85814:	103dc61e 	bne	r2,zero,84f30 <__svfscanf_r+0x5bc>
   85818:	d880a317 	ldw	r2,652(sp)
   8581c:	1485c83a 	sub	r2,r2,r18
   85820:	d880a315 	stw	r2,652(sp)
   85824:	84800117 	ldw	r18,4(r16)
   85828:	d900a317 	ldw	r4,652(sp)
   8582c:	913ff216 	blt	r18,r4,857f8 <__svfscanf_r+0xe84>
   85830:	d900a317 	ldw	r4,652(sp)
   85834:	80800017 	ldw	r2,0(r16)
   85838:	9927883a 	add	r19,r19,r4
   8583c:	9107c83a 	sub	r3,r18,r4
   85840:	110d883a 	add	r6,r2,r4
   85844:	8ce3883a 	add	r17,r17,r19
   85848:	80c00115 	stw	r3,4(r16)
   8584c:	81800015 	stw	r6,0(r16)
   85850:	003c5b06 	br	849c0 <__svfscanf_r+0x4c>
   85854:	a880200c 	andi	r2,r21,128
   85858:	10001026 	beq	r2,zero,8589c <__svfscanf_r+0xf28>
   8585c:	00bfdfc4 	movi	r2,-129
   85860:	a8aa703a 	and	r21,r21,r2
   85864:	b9400005 	stb	r5,0(r23)
   85868:	bdc00044 	addi	r23,r23,1
   8586c:	80c00117 	ldw	r3,4(r16)
   85870:	8c400044 	addi	r17,r17,1
   85874:	18bfffc4 	addi	r2,r3,-1
   85878:	80800115 	stw	r2,4(r16)
   8587c:	00801f0e 	bge	zero,r2,858fc <__svfscanf_r+0xf88>
   85880:	80800017 	ldw	r2,0(r16)
   85884:	10800044 	addi	r2,r2,1
   85888:	80800015 	stw	r2,0(r16)
   8588c:	d880a317 	ldw	r2,652(sp)
   85890:	10bfffc4 	addi	r2,r2,-1
   85894:	d880a315 	stw	r2,652(sp)
   85898:	103f771e 	bne	r2,zero,85678 <__svfscanf_r+0xd04>
   8589c:	d8c09e17 	ldw	r3,632(sp)
   858a0:	18000226 	beq	r3,zero,858ac <__svfscanf_r+0xf38>
   858a4:	00bfbfc4 	movi	r2,-257
   858a8:	a8aa703a 	and	r21,r21,r2
   858ac:	90ffffc4 	addi	r3,r18,-1
   858b0:	00800044 	movi	r2,1
   858b4:	10fef536 	bltu	r2,r3,8548c <__svfscanf_r+0xb18>
   858b8:	d900a517 	ldw	r4,660(sp)
   858bc:	25fc622e 	bgeu	r4,r23,84a48 <__svfscanf_r+0xd4>
   858c0:	bdffffc4 	addi	r23,r23,-1
   858c4:	b9400007 	ldb	r5,0(r23)
   858c8:	b009883a 	mov	r4,r22
   858cc:	800d883a 	mov	r6,r16
   858d0:	008c17c0 	call	8c17c <_ungetc_r>
   858d4:	d880a517 	ldw	r2,660(sp)
   858d8:	15fff936 	bltu	r2,r23,858c0 <__svfscanf_r+0xf4c>
   858dc:	003c5a06 	br	84a48 <__svfscanf_r+0xd4>
   858e0:	a880800c 	andi	r2,r21,512
   858e4:	103fed26 	beq	r2,zero,8589c <__svfscanf_r+0xf28>
   858e8:	d9009e17 	ldw	r4,632(sp)
   858ec:	00bf5fc4 	movi	r2,-641
   858f0:	a8aa703a 	and	r21,r21,r2
   858f4:	d9009f15 	stw	r4,636(sp)
   858f8:	003fda06 	br	85864 <__svfscanf_r+0xef0>
   858fc:	b009883a 	mov	r4,r22
   85900:	800b883a 	mov	r5,r16
   85904:	00822780 	call	82278 <__srefill_r>
   85908:	103fe026 	beq	r2,zero,8588c <__svfscanf_r+0xf18>
   8590c:	003fe306 	br	8589c <__svfscanf_r+0xf28>
   85910:	d880a417 	ldw	r2,656(sp)
   85914:	d980a317 	ldw	r6,652(sp)
   85918:	01400044 	movi	r5,1
   8591c:	11000017 	ldw	r4,0(r2)
   85920:	800f883a 	mov	r7,r16
   85924:	0087dc40 	call	87dc4 <fread>
   85928:	103c6726 	beq	r2,zero,84ac8 <__svfscanf_r+0x154>
   8592c:	d8c0a417 	ldw	r3,656(sp)
   85930:	d900a217 	ldw	r4,648(sp)
   85934:	88a3883a 	add	r17,r17,r2
   85938:	18c00104 	addi	r3,r3,4
   8593c:	21000044 	addi	r4,r4,1
   85940:	d8c0a415 	stw	r3,656(sp)
   85944:	d900a215 	stw	r4,648(sp)
   85948:	003c1d06 	br	849c0 <__svfscanf_r+0x4c>
   8594c:	a880400c 	andi	r2,r21,256
   85950:	10000b26 	beq	r2,zero,85980 <__svfscanf_r+0x100c>
   85954:	00bfdfc4 	movi	r2,-129
   85958:	a8aa703a 	and	r21,r21,r2
   8595c:	d8809e17 	ldw	r2,632(sp)
   85960:	10800044 	addi	r2,r2,1
   85964:	d8809e15 	stw	r2,632(sp)
   85968:	983fc026 	beq	r19,zero,8586c <__svfscanf_r+0xef8>
   8596c:	d8c0a317 	ldw	r3,652(sp)
   85970:	9cffffc4 	addi	r19,r19,-1
   85974:	18c00044 	addi	r3,r3,1
   85978:	d8c0a315 	stw	r3,652(sp)
   8597c:	003fbb06 	br	8586c <__svfscanf_r+0xef8>
   85980:	e0803fcc 	andi	r2,fp,255
   85984:	1080201c 	xori	r2,r2,128
   85988:	10bfe004 	addi	r2,r2,-128
   8598c:	9085883a 	add	r2,r18,r2
   85990:	103fc21e 	bne	r2,zero,8589c <__svfscanf_r+0xf28>
   85994:	00bf9fc4 	movi	r2,-385
   85998:	a8aa703a 	and	r21,r21,r2
   8599c:	003fb106 	br	85864 <__svfscanf_r+0xef0>
   859a0:	00800044 	movi	r2,1
   859a4:	90bfbd1e 	bne	r18,r2,8589c <__svfscanf_r+0xf28>
   859a8:	04800084 	movi	r18,2
   859ac:	003fad06 	br	85864 <__svfscanf_r+0xef0>
   859b0:	a8c1400c 	andi	r3,r21,1280
   859b4:	00810004 	movi	r2,1024
   859b8:	18800426 	beq	r3,r2,859cc <__svfscanf_r+0x1058>
   859bc:	a884703a 	and	r2,r21,r2
   859c0:	103fb626 	beq	r2,zero,8589c <__svfscanf_r+0xf28>
   859c4:	d8809e17 	ldw	r2,632(sp)
   859c8:	103fb826 	beq	r2,zero,858ac <__svfscanf_r+0xf38>
   859cc:	a880800c 	andi	r2,r21,512
   859d0:	1000051e 	bne	r2,zero,859e8 <__svfscanf_r+0x1074>
   859d4:	d8c09e17 	ldw	r3,632(sp)
   859d8:	d9009f17 	ldw	r4,636(sp)
   859dc:	ddc09c15 	stw	r23,624(sp)
   859e0:	1907c83a 	sub	r3,r3,r4
   859e4:	d8c09d15 	stw	r3,628(sp)
   859e8:	00be7fc4 	movi	r2,-1537
   859ec:	a884703a 	and	r2,r21,r2
   859f0:	15406014 	ori	r21,r2,384
   859f4:	d8009e15 	stw	zero,632(sp)
   859f8:	003f9a06 	br	85864 <__svfscanf_r+0xef0>
   859fc:	e0c03fcc 	andi	r3,fp,255
   85a00:	18c0201c 	xori	r3,r3,128
   85a04:	18ffe004 	addi	r3,r3,-128
   85a08:	00800084 	movi	r2,2
   85a0c:	18bfa31e 	bne	r3,r2,8589c <__svfscanf_r+0xf28>
   85a10:	070000c4 	movi	fp,3
   85a14:	003f9306 	br	85864 <__svfscanf_r+0xef0>
   85a18:	e0c03fcc 	andi	r3,fp,255
   85a1c:	18c0201c 	xori	r3,r3,128
   85a20:	18ffe004 	addi	r3,r3,-128
   85a24:	008001c4 	movi	r2,7
   85a28:	18bf9c1e 	bne	r3,r2,8589c <__svfscanf_r+0xf28>
   85a2c:	07000204 	movi	fp,8
   85a30:	003f8c06 	br	85864 <__svfscanf_r+0xef0>
   85a34:	d8c09e17 	ldw	r3,632(sp)
   85a38:	d9009f17 	ldw	r4,636(sp)
   85a3c:	1905c83a 	sub	r2,r3,r4
   85a40:	103ecb26 	beq	r2,zero,85570 <__svfscanf_r+0xbfc>
   85a44:	008dc83a 	sub	r6,zero,r2
   85a48:	ddc09c15 	stw	r23,624(sp)
   85a4c:	003ef506 	br	85624 <__svfscanf_r+0xcb0>
   85a50:	d880a417 	ldw	r2,656(sp)
   85a54:	9009883a 	mov	r4,r18
   85a58:	180b883a 	mov	r5,r3
   85a5c:	15c00017 	ldw	r23,0(r2)
   85a60:	15400104 	addi	r21,r2,4
   85a64:	0089f140 	call	89f14 <__isnand>
   85a68:	1000311e 	bne	r2,zero,85b30 <__svfscanf_r+0x11bc>
   85a6c:	980b883a 	mov	r5,r19
   85a70:	9009883a 	mov	r4,r18
   85a74:	008efe40 	call	8efe4 <__truncdfsf2>
   85a78:	b8800015 	stw	r2,0(r23)
   85a7c:	003eca06 	br	855a8 <__svfscanf_r+0xc34>
   85a80:	9000101e 	bne	r18,zero,85ac4 <__svfscanf_r+0x1150>
   85a84:	a8c1c00c 	andi	r3,r21,1792
   85a88:	0081c004 	movi	r2,1792
   85a8c:	18800926 	beq	r3,r2,85ab4 <__svfscanf_r+0x1140>
   85a90:	e0c03fcc 	andi	r3,fp,255
   85a94:	18c0201c 	xori	r3,r3,128
   85a98:	18ffe004 	addi	r3,r3,-128
   85a9c:	00800044 	movi	r2,1
   85aa0:	18800226 	beq	r3,r2,85aac <__svfscanf_r+0x1138>
   85aa4:	00800104 	movi	r2,4
   85aa8:	18bf7c1e 	bne	r3,r2,8589c <__svfscanf_r+0xf28>
   85aac:	e7000044 	addi	fp,fp,1
   85ab0:	003f6c06 	br	85864 <__svfscanf_r+0xef0>
   85ab4:	00be1fc4 	movi	r2,-1921
   85ab8:	a8aa703a 	and	r21,r21,r2
   85abc:	04800044 	movi	r18,1
   85ac0:	003f6806 	br	85864 <__svfscanf_r+0xef0>
   85ac4:	00800084 	movi	r2,2
   85ac8:	90bff11e 	bne	r18,r2,85a90 <__svfscanf_r+0x111c>
   85acc:	048000c4 	movi	r18,3
   85ad0:	003f6406 	br	85864 <__svfscanf_r+0xef0>
   85ad4:	e0c03fcc 	andi	r3,fp,255
   85ad8:	18c0201c 	xori	r3,r3,128
   85adc:	18ffe004 	addi	r3,r3,-128
   85ae0:	1800071e 	bne	r3,zero,85b00 <__svfscanf_r+0x118c>
   85ae4:	a8c1c00c 	andi	r3,r21,1792
   85ae8:	0081c004 	movi	r2,1792
   85aec:	18bf6b1e 	bne	r3,r2,8589c <__svfscanf_r+0xf28>
   85af0:	00be1fc4 	movi	r2,-1921
   85af4:	a8aa703a 	and	r21,r21,r2
   85af8:	07000044 	movi	fp,1
   85afc:	003f5906 	br	85864 <__svfscanf_r+0xef0>
   85b00:	008000c4 	movi	r2,3
   85b04:	18bfe926 	beq	r3,r2,85aac <__svfscanf_r+0x1138>
   85b08:	00800144 	movi	r2,5
   85b0c:	18bfe726 	beq	r3,r2,85aac <__svfscanf_r+0x1138>
   85b10:	003f6206 	br	8589c <__svfscanf_r+0xf28>
   85b14:	e0c03fcc 	andi	r3,fp,255
   85b18:	18c0201c 	xori	r3,r3,128
   85b1c:	18ffe004 	addi	r3,r3,-128
   85b20:	00800184 	movi	r2,6
   85b24:	18bf5d1e 	bne	r3,r2,8589c <__svfscanf_r+0xf28>
   85b28:	070001c4 	movi	fp,7
   85b2c:	003f4d06 	br	85864 <__svfscanf_r+0xef0>
   85b30:	0009883a 	mov	r4,zero
   85b34:	008a0040 	call	8a004 <nanf>
   85b38:	b8800015 	stw	r2,0(r23)
   85b3c:	003e9a06 	br	855a8 <__svfscanf_r+0xc34>
   85b40:	a00b883a 	mov	r5,r20
   85b44:	d9000404 	addi	r4,sp,16
   85b48:	0089f440 	call	89f44 <__sccl>
   85b4c:	1029883a 	mov	r20,r2
   85b50:	ad401014 	ori	r21,r21,64
   85b54:	04800044 	movi	r18,1
   85b58:	003c7506 	br	84d30 <__svfscanf_r+0x3bc>
   85b5c:	01000204 	movi	r4,8
   85b60:	00800274 	movhi	r2,9
   85b64:	10aed304 	addi	r2,r2,-17588
   85b68:	ad400054 	ori	r21,r21,1
   85b6c:	048000c4 	movi	r18,3
   85b70:	d900a115 	stw	r4,644(sp)
   85b74:	d880a015 	stw	r2,640(sp)
   85b78:	003c6d06 	br	84d30 <__svfscanf_r+0x3bc>
   85b7c:	ad400094 	ori	r21,r21,2
   85b80:	003bd806 	br	84ae4 <__svfscanf_r+0x170>
   85b84:	d900a317 	ldw	r4,652(sp)
   85b88:	01400284 	movi	r5,10
   85b8c:	008f3380 	call	8f338 <__mulsi3>
   85b90:	15c5883a 	add	r2,r2,r23
   85b94:	10bff404 	addi	r2,r2,-48
   85b98:	d880a315 	stw	r2,652(sp)
   85b9c:	003bd106 	br	84ae4 <__svfscanf_r+0x170>
   85ba0:	ad400414 	ori	r21,r21,16
   85ba4:	003bcf06 	br	84ae4 <__svfscanf_r+0x170>
   85ba8:	00800404 	movi	r2,16
   85bac:	00c00274 	movhi	r3,9
   85bb0:	18eed304 	addi	r3,r3,-17588
   85bb4:	ad408014 	ori	r21,r21,512
   85bb8:	048000c4 	movi	r18,3
   85bbc:	d880a115 	stw	r2,644(sp)
   85bc0:	d8c0a015 	stw	r3,640(sp)
   85bc4:	003c5a06 	br	84d30 <__svfscanf_r+0x3bc>
   85bc8:	00c00284 	movi	r3,10
   85bcc:	01000274 	movhi	r4,9
   85bd0:	212ed304 	addi	r4,r4,-17588
   85bd4:	048000c4 	movi	r18,3
   85bd8:	d8c0a115 	stw	r3,644(sp)
   85bdc:	d900a015 	stw	r4,640(sp)
   85be0:	003c5306 	br	84d30 <__svfscanf_r+0x3bc>
   85be4:	00c00234 	movhi	r3,8
   85be8:	18c9f004 	addi	r3,r3,10176
   85bec:	048000c4 	movi	r18,3
   85bf0:	d8c0a015 	stw	r3,640(sp)
   85bf4:	d800a115 	stw	zero,644(sp)
   85bf8:	003c4d06 	br	84d30 <__svfscanf_r+0x3bc>
   85bfc:	d8c0a117 	ldw	r3,644(sp)
   85c00:	18c5883a 	add	r2,r3,r3
   85c04:	00c00274 	movhi	r3,9
   85c08:	18ce3e84 	addi	r3,r3,14586
   85c0c:	10c5883a 	add	r2,r2,r3
   85c10:	1080000f 	ldh	r2,0(r2)
   85c14:	00fd1fc4 	movi	r3,-2945
   85c18:	90e4703a 	and	r18,r18,r3
   85c1c:	d880a115 	stw	r2,644(sp)
   85c20:	003de806 	br	853c4 <__svfscanf_r+0xa50>
   85c24:	d900a117 	ldw	r4,644(sp)
   85c28:	00c00274 	movhi	r3,9
   85c2c:	18ce3e84 	addi	r3,r3,14586
   85c30:	2105883a 	add	r2,r4,r4
   85c34:	10c5883a 	add	r2,r2,r3
   85c38:	1080000f 	ldh	r2,0(r2)
   85c3c:	00c00204 	movi	r3,8
   85c40:	d880a115 	stw	r2,644(sp)
   85c44:	18bd870e 	bge	r3,r2,85264 <__svfscanf_r+0x8f0>
   85c48:	00bd1fc4 	movi	r2,-2945
   85c4c:	90a4703a 	and	r18,r18,r2
   85c50:	003ddc06 	br	853c4 <__svfscanf_r+0xa50>
   85c54:	d8c0a117 	ldw	r3,644(sp)
   85c58:	00800284 	movi	r2,10
   85c5c:	10fffa16 	blt	r2,r3,85c48 <__svfscanf_r+0x12d4>
   85c60:	003d8006 	br	85264 <__svfscanf_r+0x8f0>
   85c64:	90c1800c 	andi	r3,r18,1536
   85c68:	00808004 	movi	r2,512
   85c6c:	18bd7d1e 	bne	r3,r2,85264 <__svfscanf_r+0x8f0>
   85c70:	00bf7fc4 	movi	r2,-513
   85c74:	9084703a 	and	r2,r18,r2
   85c78:	01000404 	movi	r4,16
   85c7c:	14814014 	ori	r18,r2,1280
   85c80:	d900a115 	stw	r4,644(sp)
   85c84:	003dcf06 	br	853c4 <__svfscanf_r+0xa50>
   85c88:	04800104 	movi	r18,4
   85c8c:	003c2806 	br	84d30 <__svfscanf_r+0x3bc>
   85c90:	ad401014 	ori	r21,r21,64
   85c94:	0025883a 	mov	r18,zero
   85c98:	003c2506 	br	84d30 <__svfscanf_r+0x3bc>
   85c9c:	ad400114 	ori	r21,r21,4
   85ca0:	003b9006 	br	84ae4 <__svfscanf_r+0x170>
   85ca4:	0027883a 	mov	r19,zero
   85ca8:	003cac06 	br	84f5c <__svfscanf_r+0x5e8>
   85cac:	903d5226 	beq	r18,zero,851f8 <__svfscanf_r+0x884>
   85cb0:	94bfffc4 	addi	r18,r18,-1
   85cb4:	d8c04404 	addi	r3,sp,272
   85cb8:	1c85883a 	add	r2,r3,r18
   85cbc:	11400003 	ldbu	r5,0(r2)
   85cc0:	b009883a 	mov	r4,r22
   85cc4:	800d883a 	mov	r6,r16
   85cc8:	008c17c0 	call	8c17c <_ungetc_r>
   85ccc:	003ff706 	br	85cac <__svfscanf_r+0x1338>
   85cd0:	00bfff84 	movi	r2,-2
   85cd4:	18bd361e 	bne	r3,r2,851b0 <__svfscanf_r+0x83c>
   85cd8:	003d4006 	br	851dc <__svfscanf_r+0x868>
   85cdc:	d900a417 	ldw	r4,656(sp)
   85ce0:	25400017 	ldw	r21,0(r4)
   85ce4:	21000104 	addi	r4,r4,4
   85ce8:	d900a415 	stw	r4,656(sp)
   85cec:	003d0606 	br	85108 <__svfscanf_r+0x794>
   85cf0:	983b5526 	beq	r19,zero,84a48 <__svfscanf_r+0xd4>
   85cf4:	8ce3883a 	add	r17,r17,r19
   85cf8:	003b3106 	br	849c0 <__svfscanf_r+0x4c>
   85cfc:	00bfff84 	movi	r2,-2
   85d00:	18bc621e 	bne	r3,r2,84e8c <__svfscanf_r+0x518>
   85d04:	003c6906 	br	84eac <__svfscanf_r+0x538>
   85d08:	b009883a 	mov	r4,r22
   85d0c:	800b883a 	mov	r5,r16
   85d10:	00822780 	call	82278 <__srefill_r>
   85d14:	103c6726 	beq	r2,zero,84eb4 <__svfscanf_r+0x540>
   85d18:	903b6b1e 	bne	r18,zero,84ac8 <__svfscanf_r+0x154>
   85d1c:	a83b281e 	bne	r21,zero,849c0 <__svfscanf_r+0x4c>
   85d20:	d8c0a217 	ldw	r3,648(sp)
   85d24:	18c00044 	addi	r3,r3,1
   85d28:	d8c0a215 	stw	r3,648(sp)
   85d2c:	003b2406 	br	849c0 <__svfscanf_r+0x4c>
   85d30:	8080030b 	ldhu	r2,12(r16)
   85d34:	1080100c 	andi	r2,r2,64
   85d38:	103b4326 	beq	r2,zero,84a48 <__svfscanf_r+0xd4>
   85d3c:	003b6406 	br	84ad0 <__svfscanf_r+0x15c>
   85d40:	d8c0a417 	ldw	r3,656(sp)
   85d44:	1cc00017 	ldw	r19,0(r3)
   85d48:	18c00104 	addi	r3,r3,4
   85d4c:	d8c0a415 	stw	r3,656(sp)
   85d50:	003c2906 	br	84df8 <__svfscanf_r+0x484>
   85d54:	00800204 	movi	r2,8
   85d58:	00c00274 	movhi	r3,9
   85d5c:	18eed304 	addi	r3,r3,-17588
   85d60:	048000c4 	movi	r18,3
   85d64:	d880a115 	stw	r2,644(sp)
   85d68:	d8c0a015 	stw	r3,640(sp)
   85d6c:	003bf006 	br	84d30 <__svfscanf_r+0x3bc>
   85d70:	04800084 	movi	r18,2
   85d74:	003bee06 	br	84d30 <__svfscanf_r+0x3bc>
   85d78:	01000404 	movi	r4,16
   85d7c:	00800274 	movhi	r2,9
   85d80:	10aed304 	addi	r2,r2,-17588
   85d84:	ad408814 	ori	r21,r21,544
   85d88:	048000c4 	movi	r18,3
   85d8c:	d900a115 	stw	r4,644(sp)
   85d90:	d880a015 	stw	r2,640(sp)
   85d94:	003be606 	br	84d30 <__svfscanf_r+0x3bc>
   85d98:	a880040c 	andi	r2,r21,16
   85d9c:	103b081e 	bne	r2,zero,849c0 <__svfscanf_r+0x4c>
   85da0:	a880010c 	andi	r2,r21,4
   85da4:	10004e26 	beq	r2,zero,85ee0 <__svfscanf_r+0x156c>
   85da8:	d8c0a417 	ldw	r3,656(sp)
   85dac:	18800017 	ldw	r2,0(r3)
   85db0:	18c00104 	addi	r3,r3,4
   85db4:	d8c0a415 	stw	r3,656(sp)
   85db8:	1440000d 	sth	r17,0(r2)
   85dbc:	003b0006 	br	849c0 <__svfscanf_r+0x4c>
   85dc0:	d880a417 	ldw	r2,656(sp)
   85dc4:	dd400404 	addi	r21,sp,16
   85dc8:	14800017 	ldw	r18,0(r2)
   85dcc:	9027883a 	mov	r19,r18
   85dd0:	81000017 	ldw	r4,0(r16)
   85dd4:	20800003 	ldbu	r2,0(r4)
   85dd8:	a885883a 	add	r2,r21,r2
   85ddc:	10c00007 	ldb	r3,0(r2)
   85de0:	18001426 	beq	r3,zero,85e34 <__svfscanf_r+0x14c0>
   85de4:	d8c0a317 	ldw	r3,652(sp)
   85de8:	80800117 	ldw	r2,4(r16)
   85dec:	21800044 	addi	r6,r4,1
   85df0:	18ffffc4 	addi	r3,r3,-1
   85df4:	d8c0a315 	stw	r3,652(sp)
   85df8:	10ffffc4 	addi	r3,r2,-1
   85dfc:	80c00115 	stw	r3,4(r16)
   85e00:	20800003 	ldbu	r2,0(r4)
   85e04:	90800005 	stb	r2,0(r18)
   85e08:	d900a317 	ldw	r4,652(sp)
   85e0c:	81800015 	stw	r6,0(r16)
   85e10:	94800044 	addi	r18,r18,1
   85e14:	20000726 	beq	r4,zero,85e34 <__svfscanf_r+0x14c0>
   85e18:	80800117 	ldw	r2,4(r16)
   85e1c:	00bfec16 	blt	zero,r2,85dd0 <__svfscanf_r+0x145c>
   85e20:	b009883a 	mov	r4,r22
   85e24:	800b883a 	mov	r5,r16
   85e28:	00822780 	call	82278 <__srefill_r>
   85e2c:	103fe826 	beq	r2,zero,85dd0 <__svfscanf_r+0x145c>
   85e30:	9cbb2526 	beq	r19,r18,84ac8 <__svfscanf_r+0x154>
   85e34:	94e7c83a 	sub	r19,r18,r19
   85e38:	983b0326 	beq	r19,zero,84a48 <__svfscanf_r+0xd4>
   85e3c:	90000005 	stb	zero,0(r18)
   85e40:	d880a417 	ldw	r2,656(sp)
   85e44:	d8c0a217 	ldw	r3,648(sp)
   85e48:	8ce3883a 	add	r17,r17,r19
   85e4c:	10800104 	addi	r2,r2,4
   85e50:	18c00044 	addi	r3,r3,1
   85e54:	d880a415 	stw	r2,656(sp)
   85e58:	d8c0a215 	stw	r3,648(sp)
   85e5c:	003ad806 	br	849c0 <__svfscanf_r+0x4c>
   85e60:	d900a517 	ldw	r4,660(sp)
   85e64:	25faf82e 	bgeu	r4,r23,84a48 <__svfscanf_r+0xd4>
   85e68:	bdffffc4 	addi	r23,r23,-1
   85e6c:	b9400007 	ldb	r5,0(r23)
   85e70:	b009883a 	mov	r4,r22
   85e74:	800d883a 	mov	r6,r16
   85e78:	008c17c0 	call	8c17c <_ungetc_r>
   85e7c:	d8c0a517 	ldw	r3,660(sp)
   85e80:	1dfff936 	bltu	r3,r23,85e68 <__svfscanf_r+0x14f4>
   85e84:	003af006 	br	84a48 <__svfscanf_r+0xd4>
   85e88:	a880040c 	andi	r2,r21,16
   85e8c:	10002d26 	beq	r2,zero,85f44 <__svfscanf_r+0x15d0>
   85e90:	0025883a 	mov	r18,zero
   85e94:	00000906 	br	85ebc <__svfscanf_r+0x1548>
   85e98:	80c00117 	ldw	r3,4(r16)
   85e9c:	d880a317 	ldw	r2,652(sp)
   85ea0:	29800044 	addi	r6,r5,1
   85ea4:	18ffffc4 	addi	r3,r3,-1
   85ea8:	94800044 	addi	r18,r18,1
   85eac:	81800015 	stw	r6,0(r16)
   85eb0:	80c00115 	stw	r3,4(r16)
   85eb4:	14800826 	beq	r2,r18,85ed8 <__svfscanf_r+0x1564>
   85eb8:	00c0120e 	bge	zero,r3,85f04 <__svfscanf_r+0x1590>
   85ebc:	81400017 	ldw	r5,0(r16)
   85ec0:	98800017 	ldw	r2,0(r19)
   85ec4:	28c00003 	ldbu	r3,0(r5)
   85ec8:	1887883a 	add	r3,r3,r2
   85ecc:	19000003 	ldbu	r4,0(r3)
   85ed0:	2100020c 	andi	r4,r4,8
   85ed4:	203ff026 	beq	r4,zero,85e98 <__svfscanf_r+0x1524>
   85ed8:	8ca3883a 	add	r17,r17,r18
   85edc:	003ab806 	br	849c0 <__svfscanf_r+0x4c>
   85ee0:	a880004c 	andi	r2,r21,1
   85ee4:	1005003a 	cmpeq	r2,r2,zero
   85ee8:	10000b1e 	bne	r2,zero,85f18 <__svfscanf_r+0x15a4>
   85eec:	d900a417 	ldw	r4,656(sp)
   85ef0:	20800017 	ldw	r2,0(r4)
   85ef4:	21000104 	addi	r4,r4,4
   85ef8:	d900a415 	stw	r4,656(sp)
   85efc:	14400015 	stw	r17,0(r2)
   85f00:	003aaf06 	br	849c0 <__svfscanf_r+0x4c>
   85f04:	b009883a 	mov	r4,r22
   85f08:	800b883a 	mov	r5,r16
   85f0c:	00822780 	call	82278 <__srefill_r>
   85f10:	103fea26 	beq	r2,zero,85ebc <__svfscanf_r+0x1548>
   85f14:	003ff006 	br	85ed8 <__svfscanf_r+0x1564>
   85f18:	a880008c 	andi	r2,r21,2
   85f1c:	10002c26 	beq	r2,zero,85fd0 <__svfscanf_r+0x165c>
   85f20:	d8c0a417 	ldw	r3,656(sp)
   85f24:	d900a417 	ldw	r4,656(sp)
   85f28:	18800017 	ldw	r2,0(r3)
   85f2c:	8807d7fa 	srai	r3,r17,31
   85f30:	21000104 	addi	r4,r4,4
   85f34:	d900a415 	stw	r4,656(sp)
   85f38:	14400015 	stw	r17,0(r2)
   85f3c:	10c00115 	stw	r3,4(r2)
   85f40:	003a9f06 	br	849c0 <__svfscanf_r+0x4c>
   85f44:	d8c0a417 	ldw	r3,656(sp)
   85f48:	1d400017 	ldw	r21,0(r3)
   85f4c:	a825883a 	mov	r18,r21
   85f50:	00000e06 	br	85f8c <__svfscanf_r+0x1618>
   85f54:	80800117 	ldw	r2,4(r16)
   85f58:	d900a317 	ldw	r4,652(sp)
   85f5c:	29800044 	addi	r6,r5,1
   85f60:	10ffffc4 	addi	r3,r2,-1
   85f64:	213fffc4 	addi	r4,r4,-1
   85f68:	d900a315 	stw	r4,652(sp)
   85f6c:	80c00115 	stw	r3,4(r16)
   85f70:	28800003 	ldbu	r2,0(r5)
   85f74:	90800005 	stb	r2,0(r18)
   85f78:	81800015 	stw	r6,0(r16)
   85f7c:	94800044 	addi	r18,r18,1
   85f80:	20000926 	beq	r4,zero,85fa8 <__svfscanf_r+0x1634>
   85f84:	80800117 	ldw	r2,4(r16)
   85f88:	0080170e 	bge	zero,r2,85fe8 <__svfscanf_r+0x1674>
   85f8c:	81400017 	ldw	r5,0(r16)
   85f90:	98800017 	ldw	r2,0(r19)
   85f94:	28c00003 	ldbu	r3,0(r5)
   85f98:	1887883a 	add	r3,r3,r2
   85f9c:	19000003 	ldbu	r4,0(r3)
   85fa0:	2100020c 	andi	r4,r4,8
   85fa4:	203feb26 	beq	r4,zero,85f54 <__svfscanf_r+0x15e0>
   85fa8:	9545c83a 	sub	r2,r18,r21
   85fac:	d8c0a217 	ldw	r3,648(sp)
   85fb0:	88a3883a 	add	r17,r17,r2
   85fb4:	d880a417 	ldw	r2,656(sp)
   85fb8:	18c00044 	addi	r3,r3,1
   85fbc:	d8c0a215 	stw	r3,648(sp)
   85fc0:	10800104 	addi	r2,r2,4
   85fc4:	d880a415 	stw	r2,656(sp)
   85fc8:	90000005 	stb	zero,0(r18)
   85fcc:	003a7c06 	br	849c0 <__svfscanf_r+0x4c>
   85fd0:	d8c0a417 	ldw	r3,656(sp)
   85fd4:	18800017 	ldw	r2,0(r3)
   85fd8:	18c00104 	addi	r3,r3,4
   85fdc:	d8c0a415 	stw	r3,656(sp)
   85fe0:	14400015 	stw	r17,0(r2)
   85fe4:	003a7606 	br	849c0 <__svfscanf_r+0x4c>
   85fe8:	b009883a 	mov	r4,r22
   85fec:	800b883a 	mov	r5,r16
   85ff0:	00822780 	call	82278 <__srefill_r>
   85ff4:	103fe526 	beq	r2,zero,85f8c <__svfscanf_r+0x1618>
   85ff8:	003feb06 	br	85fa8 <__svfscanf_r+0x1634>

00085ffc <__svfscanf>:
   85ffc:	00800274 	movhi	r2,9
   86000:	10968804 	addi	r2,r2,23072
   86004:	2013883a 	mov	r9,r4
   86008:	11000017 	ldw	r4,0(r2)
   8600c:	2805883a 	mov	r2,r5
   86010:	300f883a 	mov	r7,r6
   86014:	480b883a 	mov	r5,r9
   86018:	100d883a 	mov	r6,r2
   8601c:	00849741 	jmpi	84974 <__svfscanf_r>

00086020 <_vfscanf_r>:
   86020:	defffb04 	addi	sp,sp,-20
   86024:	dcc00315 	stw	r19,12(sp)
   86028:	dc800215 	stw	r18,8(sp)
   8602c:	dc400115 	stw	r17,4(sp)
   86030:	dc000015 	stw	r16,0(sp)
   86034:	dfc00415 	stw	ra,16(sp)
   86038:	2021883a 	mov	r16,r4
   8603c:	2823883a 	mov	r17,r5
   86040:	3025883a 	mov	r18,r6
   86044:	3827883a 	mov	r19,r7
   86048:	20000226 	beq	r4,zero,86054 <_vfscanf_r+0x34>
   8604c:	20800e17 	ldw	r2,56(r4)
   86050:	10000b26 	beq	r2,zero,86080 <_vfscanf_r+0x60>
   86054:	8009883a 	mov	r4,r16
   86058:	880b883a 	mov	r5,r17
   8605c:	900d883a 	mov	r6,r18
   86060:	980f883a 	mov	r7,r19
   86064:	dfc00417 	ldw	ra,16(sp)
   86068:	dcc00317 	ldw	r19,12(sp)
   8606c:	dc800217 	ldw	r18,8(sp)
   86070:	dc400117 	ldw	r17,4(sp)
   86074:	dc000017 	ldw	r16,0(sp)
   86078:	dec00504 	addi	sp,sp,20
   8607c:	00849741 	jmpi	84974 <__svfscanf_r>
   86080:	00807ec0 	call	807ec <__sinit>
   86084:	003ff306 	br	86054 <_vfscanf_r+0x34>

00086088 <vfscanf>:
   86088:	defffb04 	addi	sp,sp,-20
   8608c:	dcc00315 	stw	r19,12(sp)
   86090:	04c00274 	movhi	r19,9
   86094:	9cd68804 	addi	r19,r19,23072
   86098:	98c00017 	ldw	r3,0(r19)
   8609c:	dc800215 	stw	r18,8(sp)
   860a0:	dc400115 	stw	r17,4(sp)
   860a4:	dc000015 	stw	r16,0(sp)
   860a8:	dfc00415 	stw	ra,16(sp)
   860ac:	2021883a 	mov	r16,r4
   860b0:	2823883a 	mov	r17,r5
   860b4:	3025883a 	mov	r18,r6
   860b8:	18000326 	beq	r3,zero,860c8 <vfscanf+0x40>
   860bc:	18800e17 	ldw	r2,56(r3)
   860c0:	1809883a 	mov	r4,r3
   860c4:	10000b26 	beq	r2,zero,860f4 <vfscanf+0x6c>
   860c8:	99000017 	ldw	r4,0(r19)
   860cc:	800b883a 	mov	r5,r16
   860d0:	880d883a 	mov	r6,r17
   860d4:	900f883a 	mov	r7,r18
   860d8:	dfc00417 	ldw	ra,16(sp)
   860dc:	dcc00317 	ldw	r19,12(sp)
   860e0:	dc800217 	ldw	r18,8(sp)
   860e4:	dc400117 	ldw	r17,4(sp)
   860e8:	dc000017 	ldw	r16,0(sp)
   860ec:	dec00504 	addi	sp,sp,20
   860f0:	00849741 	jmpi	84974 <__svfscanf_r>
   860f4:	00807ec0 	call	807ec <__sinit>
   860f8:	003ff306 	br	860c8 <vfscanf+0x40>

000860fc <_write_r>:
   860fc:	defffd04 	addi	sp,sp,-12
   86100:	dc000015 	stw	r16,0(sp)
   86104:	04000274 	movhi	r16,9
   86108:	841d8504 	addi	r16,r16,30228
   8610c:	dc400115 	stw	r17,4(sp)
   86110:	80000015 	stw	zero,0(r16)
   86114:	2023883a 	mov	r17,r4
   86118:	2809883a 	mov	r4,r5
   8611c:	300b883a 	mov	r5,r6
   86120:	380d883a 	mov	r6,r7
   86124:	dfc00215 	stw	ra,8(sp)
   86128:	00908700 	call	90870 <write>
   8612c:	1007883a 	mov	r3,r2
   86130:	00bfffc4 	movi	r2,-1
   86134:	18800626 	beq	r3,r2,86150 <_write_r+0x54>
   86138:	1805883a 	mov	r2,r3
   8613c:	dfc00217 	ldw	ra,8(sp)
   86140:	dc400117 	ldw	r17,4(sp)
   86144:	dc000017 	ldw	r16,0(sp)
   86148:	dec00304 	addi	sp,sp,12
   8614c:	f800283a 	ret
   86150:	80800017 	ldw	r2,0(r16)
   86154:	103ff826 	beq	r2,zero,86138 <_write_r+0x3c>
   86158:	88800015 	stw	r2,0(r17)
   8615c:	1805883a 	mov	r2,r3
   86160:	dfc00217 	ldw	ra,8(sp)
   86164:	dc400117 	ldw	r17,4(sp)
   86168:	dc000017 	ldw	r16,0(sp)
   8616c:	dec00304 	addi	sp,sp,12
   86170:	f800283a 	ret

00086174 <__swsetup_r>:
   86174:	00800274 	movhi	r2,9
   86178:	10968804 	addi	r2,r2,23072
   8617c:	10c00017 	ldw	r3,0(r2)
   86180:	defffd04 	addi	sp,sp,-12
   86184:	dc400115 	stw	r17,4(sp)
   86188:	dc000015 	stw	r16,0(sp)
   8618c:	dfc00215 	stw	ra,8(sp)
   86190:	2023883a 	mov	r17,r4
   86194:	2821883a 	mov	r16,r5
   86198:	18000226 	beq	r3,zero,861a4 <__swsetup_r+0x30>
   8619c:	18800e17 	ldw	r2,56(r3)
   861a0:	10001f26 	beq	r2,zero,86220 <__swsetup_r+0xac>
   861a4:	8100030b 	ldhu	r4,12(r16)
   861a8:	2080020c 	andi	r2,r4,8
   861ac:	10002826 	beq	r2,zero,86250 <__swsetup_r+0xdc>
   861b0:	81400417 	ldw	r5,16(r16)
   861b4:	28001d26 	beq	r5,zero,8622c <__swsetup_r+0xb8>
   861b8:	2080004c 	andi	r2,r4,1
   861bc:	1005003a 	cmpeq	r2,r2,zero
   861c0:	10000b26 	beq	r2,zero,861f0 <__swsetup_r+0x7c>
   861c4:	2080008c 	andi	r2,r4,2
   861c8:	10001226 	beq	r2,zero,86214 <__swsetup_r+0xa0>
   861cc:	0005883a 	mov	r2,zero
   861d0:	80800215 	stw	r2,8(r16)
   861d4:	28000b26 	beq	r5,zero,86204 <__swsetup_r+0x90>
   861d8:	0005883a 	mov	r2,zero
   861dc:	dfc00217 	ldw	ra,8(sp)
   861e0:	dc400117 	ldw	r17,4(sp)
   861e4:	dc000017 	ldw	r16,0(sp)
   861e8:	dec00304 	addi	sp,sp,12
   861ec:	f800283a 	ret
   861f0:	80800517 	ldw	r2,20(r16)
   861f4:	80000215 	stw	zero,8(r16)
   861f8:	0085c83a 	sub	r2,zero,r2
   861fc:	80800615 	stw	r2,24(r16)
   86200:	283ff51e 	bne	r5,zero,861d8 <__swsetup_r+0x64>
   86204:	2080200c 	andi	r2,r4,128
   86208:	103ff326 	beq	r2,zero,861d8 <__swsetup_r+0x64>
   8620c:	00bfffc4 	movi	r2,-1
   86210:	003ff206 	br	861dc <__swsetup_r+0x68>
   86214:	80800517 	ldw	r2,20(r16)
   86218:	80800215 	stw	r2,8(r16)
   8621c:	003fed06 	br	861d4 <__swsetup_r+0x60>
   86220:	1809883a 	mov	r4,r3
   86224:	00807ec0 	call	807ec <__sinit>
   86228:	003fde06 	br	861a4 <__swsetup_r+0x30>
   8622c:	20c0a00c 	andi	r3,r4,640
   86230:	00808004 	movi	r2,512
   86234:	18bfe026 	beq	r3,r2,861b8 <__swsetup_r+0x44>
   86238:	8809883a 	mov	r4,r17
   8623c:	800b883a 	mov	r5,r16
   86240:	00817680 	call	81768 <__smakebuf_r>
   86244:	8100030b 	ldhu	r4,12(r16)
   86248:	81400417 	ldw	r5,16(r16)
   8624c:	003fda06 	br	861b8 <__swsetup_r+0x44>
   86250:	2080040c 	andi	r2,r4,16
   86254:	103fed26 	beq	r2,zero,8620c <__swsetup_r+0x98>
   86258:	2080010c 	andi	r2,r4,4
   8625c:	10001226 	beq	r2,zero,862a8 <__swsetup_r+0x134>
   86260:	81400c17 	ldw	r5,48(r16)
   86264:	28000526 	beq	r5,zero,8627c <__swsetup_r+0x108>
   86268:	80801004 	addi	r2,r16,64
   8626c:	28800226 	beq	r5,r2,86278 <__swsetup_r+0x104>
   86270:	8809883a 	mov	r4,r17
   86274:	0080d140 	call	80d14 <_free_r>
   86278:	80000c15 	stw	zero,48(r16)
   8627c:	8080030b 	ldhu	r2,12(r16)
   86280:	81400417 	ldw	r5,16(r16)
   86284:	80000115 	stw	zero,4(r16)
   86288:	10bff6cc 	andi	r2,r2,65499
   8628c:	8080030d 	sth	r2,12(r16)
   86290:	81400015 	stw	r5,0(r16)
   86294:	8080030b 	ldhu	r2,12(r16)
   86298:	10800214 	ori	r2,r2,8
   8629c:	113fffcc 	andi	r4,r2,65535
   862a0:	8080030d 	sth	r2,12(r16)
   862a4:	003fc306 	br	861b4 <__swsetup_r+0x40>
   862a8:	81400417 	ldw	r5,16(r16)
   862ac:	003ff906 	br	86294 <__swsetup_r+0x120>

000862b0 <_close_r>:
   862b0:	defffd04 	addi	sp,sp,-12
   862b4:	dc000015 	stw	r16,0(sp)
   862b8:	04000274 	movhi	r16,9
   862bc:	841d8504 	addi	r16,r16,30228
   862c0:	dc400115 	stw	r17,4(sp)
   862c4:	80000015 	stw	zero,0(r16)
   862c8:	2023883a 	mov	r17,r4
   862cc:	2809883a 	mov	r4,r5
   862d0:	dfc00215 	stw	ra,8(sp)
   862d4:	008fc000 	call	8fc00 <close>
   862d8:	1007883a 	mov	r3,r2
   862dc:	00bfffc4 	movi	r2,-1
   862e0:	18800626 	beq	r3,r2,862fc <_close_r+0x4c>
   862e4:	1805883a 	mov	r2,r3
   862e8:	dfc00217 	ldw	ra,8(sp)
   862ec:	dc400117 	ldw	r17,4(sp)
   862f0:	dc000017 	ldw	r16,0(sp)
   862f4:	dec00304 	addi	sp,sp,12
   862f8:	f800283a 	ret
   862fc:	80800017 	ldw	r2,0(r16)
   86300:	103ff826 	beq	r2,zero,862e4 <_close_r+0x34>
   86304:	88800015 	stw	r2,0(r17)
   86308:	1805883a 	mov	r2,r3
   8630c:	dfc00217 	ldw	ra,8(sp)
   86310:	dc400117 	ldw	r17,4(sp)
   86314:	dc000017 	ldw	r16,0(sp)
   86318:	dec00304 	addi	sp,sp,12
   8631c:	f800283a 	ret

00086320 <quorem>:
   86320:	28c00417 	ldw	r3,16(r5)
   86324:	20800417 	ldw	r2,16(r4)
   86328:	defff104 	addi	sp,sp,-60
   8632c:	dfc00e15 	stw	ra,56(sp)
   86330:	df000d15 	stw	fp,52(sp)
   86334:	ddc00c15 	stw	r23,48(sp)
   86338:	dd800b15 	stw	r22,44(sp)
   8633c:	dd400a15 	stw	r21,40(sp)
   86340:	dd000915 	stw	r20,36(sp)
   86344:	dcc00815 	stw	r19,32(sp)
   86348:	dc800715 	stw	r18,28(sp)
   8634c:	dc400615 	stw	r17,24(sp)
   86350:	dc000515 	stw	r16,20(sp)
   86354:	d9000315 	stw	r4,12(sp)
   86358:	d9400415 	stw	r5,16(sp)
   8635c:	10c07f16 	blt	r2,r3,8655c <quorem+0x23c>
   86360:	1d3fffc4 	addi	r20,r3,-1
   86364:	d8c00417 	ldw	r3,16(sp)
   86368:	d9000317 	ldw	r4,12(sp)
   8636c:	a505883a 	add	r2,r20,r20
   86370:	1085883a 	add	r2,r2,r2
   86374:	1cc00504 	addi	r19,r3,20
   86378:	25c00504 	addi	r23,r4,20
   8637c:	98ad883a 	add	r22,r19,r2
   86380:	15c7883a 	add	r3,r2,r23
   86384:	b1400017 	ldw	r5,0(r22)
   86388:	19000017 	ldw	r4,0(r3)
   8638c:	d8c00015 	stw	r3,0(sp)
   86390:	29400044 	addi	r5,r5,1
   86394:	d9000215 	stw	r4,8(sp)
   86398:	008f3280 	call	8f328 <__udivsi3>
   8639c:	1039883a 	mov	fp,r2
   863a0:	10003d1e 	bne	r2,zero,86498 <quorem+0x178>
   863a4:	d9400417 	ldw	r5,16(sp)
   863a8:	d9000317 	ldw	r4,12(sp)
   863ac:	00889380 	call	88938 <__mcmp>
   863b0:	10002c16 	blt	r2,zero,86464 <quorem+0x144>
   863b4:	e7000044 	addi	fp,fp,1
   863b8:	b80f883a 	mov	r7,r23
   863bc:	0011883a 	mov	r8,zero
   863c0:	0009883a 	mov	r4,zero
   863c4:	99400017 	ldw	r5,0(r19)
   863c8:	38c00017 	ldw	r3,0(r7)
   863cc:	9cc00104 	addi	r19,r19,4
   863d0:	28bfffcc 	andi	r2,r5,65535
   863d4:	2085883a 	add	r2,r4,r2
   863d8:	11bfffcc 	andi	r6,r2,65535
   863dc:	193fffcc 	andi	r4,r3,65535
   863e0:	1004d43a 	srli	r2,r2,16
   863e4:	280ad43a 	srli	r5,r5,16
   863e8:	2189c83a 	sub	r4,r4,r6
   863ec:	2209883a 	add	r4,r4,r8
   863f0:	1806d43a 	srli	r3,r3,16
   863f4:	288b883a 	add	r5,r5,r2
   863f8:	200dd43a 	srai	r6,r4,16
   863fc:	28bfffcc 	andi	r2,r5,65535
   86400:	1887c83a 	sub	r3,r3,r2
   86404:	1987883a 	add	r3,r3,r6
   86408:	3900000d 	sth	r4,0(r7)
   8640c:	38c0008d 	sth	r3,2(r7)
   86410:	2808d43a 	srli	r4,r5,16
   86414:	39c00104 	addi	r7,r7,4
   86418:	1811d43a 	srai	r8,r3,16
   8641c:	b4ffe92e 	bgeu	r22,r19,863c4 <quorem+0xa4>
   86420:	a505883a 	add	r2,r20,r20
   86424:	1085883a 	add	r2,r2,r2
   86428:	b885883a 	add	r2,r23,r2
   8642c:	10c00017 	ldw	r3,0(r2)
   86430:	18000c1e 	bne	r3,zero,86464 <quorem+0x144>
   86434:	113fff04 	addi	r4,r2,-4
   86438:	b900082e 	bgeu	r23,r4,8645c <quorem+0x13c>
   8643c:	10bfff17 	ldw	r2,-4(r2)
   86440:	10000326 	beq	r2,zero,86450 <quorem+0x130>
   86444:	00000506 	br	8645c <quorem+0x13c>
   86448:	20800017 	ldw	r2,0(r4)
   8644c:	1000031e 	bne	r2,zero,8645c <quorem+0x13c>
   86450:	213fff04 	addi	r4,r4,-4
   86454:	a53fffc4 	addi	r20,r20,-1
   86458:	b93ffb36 	bltu	r23,r4,86448 <quorem+0x128>
   8645c:	d9000317 	ldw	r4,12(sp)
   86460:	25000415 	stw	r20,16(r4)
   86464:	e005883a 	mov	r2,fp
   86468:	dfc00e17 	ldw	ra,56(sp)
   8646c:	df000d17 	ldw	fp,52(sp)
   86470:	ddc00c17 	ldw	r23,48(sp)
   86474:	dd800b17 	ldw	r22,44(sp)
   86478:	dd400a17 	ldw	r21,40(sp)
   8647c:	dd000917 	ldw	r20,36(sp)
   86480:	dcc00817 	ldw	r19,32(sp)
   86484:	dc800717 	ldw	r18,28(sp)
   86488:	dc400617 	ldw	r17,24(sp)
   8648c:	dc000517 	ldw	r16,20(sp)
   86490:	dec00f04 	addi	sp,sp,60
   86494:	f800283a 	ret
   86498:	b823883a 	mov	r17,r23
   8649c:	9825883a 	mov	r18,r19
   864a0:	d8000115 	stw	zero,4(sp)
   864a4:	002b883a 	mov	r21,zero
   864a8:	94000017 	ldw	r16,0(r18)
   864ac:	e009883a 	mov	r4,fp
   864b0:	94800104 	addi	r18,r18,4
   864b4:	817fffcc 	andi	r5,r16,65535
   864b8:	008f3380 	call	8f338 <__mulsi3>
   864bc:	800ad43a 	srli	r5,r16,16
   864c0:	e009883a 	mov	r4,fp
   864c4:	a8a1883a 	add	r16,r21,r2
   864c8:	008f3380 	call	8f338 <__mulsi3>
   864cc:	89000017 	ldw	r4,0(r17)
   864d0:	80ffffcc 	andi	r3,r16,65535
   864d4:	8020d43a 	srli	r16,r16,16
   864d8:	217fffcc 	andi	r5,r4,65535
   864dc:	28cbc83a 	sub	r5,r5,r3
   864e0:	d8c00117 	ldw	r3,4(sp)
   864e4:	2008d43a 	srli	r4,r4,16
   864e8:	1405883a 	add	r2,r2,r16
   864ec:	28cb883a 	add	r5,r5,r3
   864f0:	280dd43a 	srai	r6,r5,16
   864f4:	10ffffcc 	andi	r3,r2,65535
   864f8:	20c9c83a 	sub	r4,r4,r3
   864fc:	2189883a 	add	r4,r4,r6
   86500:	8900008d 	sth	r4,2(r17)
   86504:	2009d43a 	srai	r4,r4,16
   86508:	8940000d 	sth	r5,0(r17)
   8650c:	102ad43a 	srli	r21,r2,16
   86510:	8c400104 	addi	r17,r17,4
   86514:	d9000115 	stw	r4,4(sp)
   86518:	b4bfe32e 	bgeu	r22,r18,864a8 <quorem+0x188>
   8651c:	d9000217 	ldw	r4,8(sp)
   86520:	203fa01e 	bne	r4,zero,863a4 <quorem+0x84>
   86524:	d8800017 	ldw	r2,0(sp)
   86528:	10ffff04 	addi	r3,r2,-4
   8652c:	b8c0082e 	bgeu	r23,r3,86550 <quorem+0x230>
   86530:	10bfff17 	ldw	r2,-4(r2)
   86534:	10000326 	beq	r2,zero,86544 <quorem+0x224>
   86538:	00000506 	br	86550 <quorem+0x230>
   8653c:	18800017 	ldw	r2,0(r3)
   86540:	1000031e 	bne	r2,zero,86550 <quorem+0x230>
   86544:	18ffff04 	addi	r3,r3,-4
   86548:	a53fffc4 	addi	r20,r20,-1
   8654c:	b8fffb36 	bltu	r23,r3,8653c <quorem+0x21c>
   86550:	d8c00317 	ldw	r3,12(sp)
   86554:	1d000415 	stw	r20,16(r3)
   86558:	003f9206 	br	863a4 <quorem+0x84>
   8655c:	0005883a 	mov	r2,zero
   86560:	003fc106 	br	86468 <quorem+0x148>

00086564 <_dtoa_r>:
   86564:	22001017 	ldw	r8,64(r4)
   86568:	deffda04 	addi	sp,sp,-152
   8656c:	dd402115 	stw	r21,132(sp)
   86570:	dd002015 	stw	r20,128(sp)
   86574:	dc801e15 	stw	r18,120(sp)
   86578:	dc401d15 	stw	r17,116(sp)
   8657c:	dfc02515 	stw	ra,148(sp)
   86580:	df002415 	stw	fp,144(sp)
   86584:	ddc02315 	stw	r23,140(sp)
   86588:	dd802215 	stw	r22,136(sp)
   8658c:	dcc01f15 	stw	r19,124(sp)
   86590:	dc001c15 	stw	r16,112(sp)
   86594:	d9001615 	stw	r4,88(sp)
   86598:	3023883a 	mov	r17,r6
   8659c:	2829883a 	mov	r20,r5
   865a0:	d9c01715 	stw	r7,92(sp)
   865a4:	dc802817 	ldw	r18,160(sp)
   865a8:	302b883a 	mov	r21,r6
   865ac:	40000a26 	beq	r8,zero,865d8 <_dtoa_r+0x74>
   865b0:	20801117 	ldw	r2,68(r4)
   865b4:	400b883a 	mov	r5,r8
   865b8:	40800115 	stw	r2,4(r8)
   865bc:	20c01117 	ldw	r3,68(r4)
   865c0:	00800044 	movi	r2,1
   865c4:	10c4983a 	sll	r2,r2,r3
   865c8:	40800215 	stw	r2,8(r8)
   865cc:	00887dc0 	call	887dc <_Bfree>
   865d0:	d8c01617 	ldw	r3,88(sp)
   865d4:	18001015 	stw	zero,64(r3)
   865d8:	8800a316 	blt	r17,zero,86868 <_dtoa_r+0x304>
   865dc:	90000015 	stw	zero,0(r18)
   865e0:	a8dffc2c 	andhi	r3,r21,32752
   865e4:	009ffc34 	movhi	r2,32752
   865e8:	18809126 	beq	r3,r2,86830 <_dtoa_r+0x2cc>
   865ec:	000d883a 	mov	r6,zero
   865f0:	000f883a 	mov	r7,zero
   865f4:	a009883a 	mov	r4,r20
   865f8:	a80b883a 	mov	r5,r21
   865fc:	dd001215 	stw	r20,72(sp)
   86600:	dd401315 	stw	r21,76(sp)
   86604:	008eb6c0 	call	8eb6c <__nedf2>
   86608:	1000171e 	bne	r2,zero,86668 <_dtoa_r+0x104>
   8660c:	d9802717 	ldw	r6,156(sp)
   86610:	00800044 	movi	r2,1
   86614:	30800015 	stw	r2,0(r6)
   86618:	d8802917 	ldw	r2,164(sp)
   8661c:	10029b26 	beq	r2,zero,8708c <_dtoa_r+0xb28>
   86620:	d9002917 	ldw	r4,164(sp)
   86624:	00800274 	movhi	r2,9
   86628:	108e3444 	addi	r2,r2,14545
   8662c:	10ffffc4 	addi	r3,r2,-1
   86630:	20800015 	stw	r2,0(r4)
   86634:	1805883a 	mov	r2,r3
   86638:	dfc02517 	ldw	ra,148(sp)
   8663c:	df002417 	ldw	fp,144(sp)
   86640:	ddc02317 	ldw	r23,140(sp)
   86644:	dd802217 	ldw	r22,136(sp)
   86648:	dd402117 	ldw	r21,132(sp)
   8664c:	dd002017 	ldw	r20,128(sp)
   86650:	dcc01f17 	ldw	r19,124(sp)
   86654:	dc801e17 	ldw	r18,120(sp)
   86658:	dc401d17 	ldw	r17,116(sp)
   8665c:	dc001c17 	ldw	r16,112(sp)
   86660:	dec02604 	addi	sp,sp,152
   86664:	f800283a 	ret
   86668:	d9001617 	ldw	r4,88(sp)
   8666c:	d9401217 	ldw	r5,72(sp)
   86670:	d8800104 	addi	r2,sp,4
   86674:	a80d883a 	mov	r6,r21
   86678:	d9c00204 	addi	r7,sp,8
   8667c:	d8800015 	stw	r2,0(sp)
   86680:	0088e180 	call	88e18 <__d2b>
   86684:	d8800715 	stw	r2,28(sp)
   86688:	a804d53a 	srli	r2,r21,20
   8668c:	1101ffcc 	andi	r4,r2,2047
   86690:	20008626 	beq	r4,zero,868ac <_dtoa_r+0x348>
   86694:	d8c01217 	ldw	r3,72(sp)
   86698:	00800434 	movhi	r2,16
   8669c:	10bfffc4 	addi	r2,r2,-1
   866a0:	ddc00117 	ldw	r23,4(sp)
   866a4:	a884703a 	and	r2,r21,r2
   866a8:	1811883a 	mov	r8,r3
   866ac:	124ffc34 	orhi	r9,r2,16368
   866b0:	25bf0044 	addi	r22,r4,-1023
   866b4:	d8000815 	stw	zero,32(sp)
   866b8:	0005883a 	mov	r2,zero
   866bc:	00cffe34 	movhi	r3,16376
   866c0:	480b883a 	mov	r5,r9
   866c4:	4009883a 	mov	r4,r8
   866c8:	180f883a 	mov	r7,r3
   866cc:	100d883a 	mov	r6,r2
   866d0:	008e3d40 	call	8e3d4 <__subdf3>
   866d4:	0218dbf4 	movhi	r8,25455
   866d8:	4210d844 	addi	r8,r8,17249
   866dc:	024ff4f4 	movhi	r9,16339
   866e0:	4a61e9c4 	addi	r9,r9,-30809
   866e4:	480f883a 	mov	r7,r9
   866e8:	400d883a 	mov	r6,r8
   866ec:	180b883a 	mov	r5,r3
   866f0:	1009883a 	mov	r4,r2
   866f4:	008e4c80 	call	8e4c8 <__muldf3>
   866f8:	0222d874 	movhi	r8,35681
   866fc:	42322cc4 	addi	r8,r8,-14157
   86700:	024ff1f4 	movhi	r9,16327
   86704:	4a628a04 	addi	r9,r9,-30168
   86708:	480f883a 	mov	r7,r9
   8670c:	400d883a 	mov	r6,r8
   86710:	180b883a 	mov	r5,r3
   86714:	1009883a 	mov	r4,r2
   86718:	008e4540 	call	8e454 <__adddf3>
   8671c:	b009883a 	mov	r4,r22
   86720:	1021883a 	mov	r16,r2
   86724:	1823883a 	mov	r17,r3
   86728:	008ee140 	call	8ee14 <__floatsidf>
   8672c:	021427f4 	movhi	r8,20639
   86730:	421e7ec4 	addi	r8,r8,31227
   86734:	024ff4f4 	movhi	r9,16339
   86738:	4a5104c4 	addi	r9,r9,17427
   8673c:	480f883a 	mov	r7,r9
   86740:	400d883a 	mov	r6,r8
   86744:	180b883a 	mov	r5,r3
   86748:	1009883a 	mov	r4,r2
   8674c:	008e4c80 	call	8e4c8 <__muldf3>
   86750:	180f883a 	mov	r7,r3
   86754:	880b883a 	mov	r5,r17
   86758:	100d883a 	mov	r6,r2
   8675c:	8009883a 	mov	r4,r16
   86760:	008e4540 	call	8e454 <__adddf3>
   86764:	1009883a 	mov	r4,r2
   86768:	180b883a 	mov	r5,r3
   8676c:	1021883a 	mov	r16,r2
   86770:	1823883a 	mov	r17,r3
   86774:	008ef0c0 	call	8ef0c <__fixdfsi>
   86778:	000d883a 	mov	r6,zero
   8677c:	000f883a 	mov	r7,zero
   86780:	8009883a 	mov	r4,r16
   86784:	880b883a 	mov	r5,r17
   86788:	d8800d15 	stw	r2,52(sp)
   8678c:	008ed040 	call	8ed04 <__ltdf2>
   86790:	10031716 	blt	r2,zero,873f0 <_dtoa_r+0xe8c>
   86794:	d8c00d17 	ldw	r3,52(sp)
   86798:	00800584 	movi	r2,22
   8679c:	10c1482e 	bgeu	r2,r3,86cc0 <_dtoa_r+0x75c>
   867a0:	01000044 	movi	r4,1
   867a4:	d9000c15 	stw	r4,48(sp)
   867a8:	bd85c83a 	sub	r2,r23,r22
   867ac:	11bfffc4 	addi	r6,r2,-1
   867b0:	30030b16 	blt	r6,zero,873e0 <_dtoa_r+0xe7c>
   867b4:	d9800a15 	stw	r6,40(sp)
   867b8:	d8001115 	stw	zero,68(sp)
   867bc:	d8c00d17 	ldw	r3,52(sp)
   867c0:	1802ff16 	blt	r3,zero,873c0 <_dtoa_r+0xe5c>
   867c4:	d9000a17 	ldw	r4,40(sp)
   867c8:	d8c00915 	stw	r3,36(sp)
   867cc:	d8001015 	stw	zero,64(sp)
   867d0:	20c9883a 	add	r4,r4,r3
   867d4:	d9000a15 	stw	r4,40(sp)
   867d8:	d9001717 	ldw	r4,92(sp)
   867dc:	00800244 	movi	r2,9
   867e0:	11004636 	bltu	r2,r4,868fc <_dtoa_r+0x398>
   867e4:	00800144 	movi	r2,5
   867e8:	11020416 	blt	r2,r4,86ffc <_dtoa_r+0xa98>
   867ec:	04400044 	movi	r17,1
   867f0:	d8c01717 	ldw	r3,92(sp)
   867f4:	00800144 	movi	r2,5
   867f8:	10c1ed36 	bltu	r2,r3,86fb0 <_dtoa_r+0xa4c>
   867fc:	18c5883a 	add	r2,r3,r3
   86800:	1085883a 	add	r2,r2,r2
   86804:	00c00234 	movhi	r3,8
   86808:	18da0604 	addi	r3,r3,26648
   8680c:	10c5883a 	add	r2,r2,r3
   86810:	11000017 	ldw	r4,0(r2)
   86814:	2000683a 	jmp	r4
   86818:	00086904 	movi	zero,8612
   8681c:	00086904 	movi	zero,8612
   86820:	00087304 	movi	zero,8652
   86824:	000872dc 	xori	zero,zero,8651
   86828:	00087320 	cmpeqi	zero,zero,8652
   8682c:	0008732c 	andhi	zero,zero,8652
   86830:	d9002717 	ldw	r4,156(sp)
   86834:	0089c3c4 	movi	r2,9999
   86838:	20800015 	stw	r2,0(r4)
   8683c:	a0001026 	beq	r20,zero,86880 <_dtoa_r+0x31c>
   86840:	00c00274 	movhi	r3,9
   86844:	18ceeb04 	addi	r3,r3,15276
   86848:	d9802917 	ldw	r6,164(sp)
   8684c:	303f7926 	beq	r6,zero,86634 <_dtoa_r+0xd0>
   86850:	188000c7 	ldb	r2,3(r3)
   86854:	190000c4 	addi	r4,r3,3
   86858:	1000101e 	bne	r2,zero,8689c <_dtoa_r+0x338>
   8685c:	d8802917 	ldw	r2,164(sp)
   86860:	11000015 	stw	r4,0(r2)
   86864:	003f7306 	br	86634 <_dtoa_r+0xd0>
   86868:	00a00034 	movhi	r2,32768
   8686c:	10bfffc4 	addi	r2,r2,-1
   86870:	00c00044 	movi	r3,1
   86874:	88aa703a 	and	r21,r17,r2
   86878:	90c00015 	stw	r3,0(r18)
   8687c:	003f5806 	br	865e0 <_dtoa_r+0x7c>
   86880:	00800434 	movhi	r2,16
   86884:	10bfffc4 	addi	r2,r2,-1
   86888:	a884703a 	and	r2,r21,r2
   8688c:	103fec1e 	bne	r2,zero,86840 <_dtoa_r+0x2dc>
   86890:	00c00274 	movhi	r3,9
   86894:	18cee804 	addi	r3,r3,15264
   86898:	003feb06 	br	86848 <_dtoa_r+0x2e4>
   8689c:	d8802917 	ldw	r2,164(sp)
   868a0:	19000204 	addi	r4,r3,8
   868a4:	11000015 	stw	r4,0(r2)
   868a8:	003f6206 	br	86634 <_dtoa_r+0xd0>
   868ac:	ddc00117 	ldw	r23,4(sp)
   868b0:	d8800217 	ldw	r2,8(sp)
   868b4:	01000804 	movi	r4,32
   868b8:	b8c10c84 	addi	r3,r23,1074
   868bc:	18a3883a 	add	r17,r3,r2
   868c0:	2441b80e 	bge	r4,r17,86fa4 <_dtoa_r+0xa40>
   868c4:	00c01004 	movi	r3,64
   868c8:	1c47c83a 	sub	r3,r3,r17
   868cc:	88bff804 	addi	r2,r17,-32
   868d0:	a8c6983a 	sll	r3,r21,r3
   868d4:	a084d83a 	srl	r2,r20,r2
   868d8:	1888b03a 	or	r4,r3,r2
   868dc:	008f0580 	call	8f058 <__floatunsidf>
   868e0:	1011883a 	mov	r8,r2
   868e4:	00bf8434 	movhi	r2,65040
   868e8:	01000044 	movi	r4,1
   868ec:	10d3883a 	add	r9,r2,r3
   868f0:	8dbef344 	addi	r22,r17,-1075
   868f4:	d9000815 	stw	r4,32(sp)
   868f8:	003f6f06 	br	866b8 <_dtoa_r+0x154>
   868fc:	d8001715 	stw	zero,92(sp)
   86900:	04400044 	movi	r17,1
   86904:	00bfffc4 	movi	r2,-1
   86908:	00c00044 	movi	r3,1
   8690c:	d8800e15 	stw	r2,56(sp)
   86910:	d8002615 	stw	zero,152(sp)
   86914:	d8800f15 	stw	r2,60(sp)
   86918:	d8c00b15 	stw	r3,44(sp)
   8691c:	1021883a 	mov	r16,r2
   86920:	d8801617 	ldw	r2,88(sp)
   86924:	10001115 	stw	zero,68(r2)
   86928:	d8801617 	ldw	r2,88(sp)
   8692c:	11401117 	ldw	r5,68(r2)
   86930:	1009883a 	mov	r4,r2
   86934:	0088d5c0 	call	88d5c <_Balloc>
   86938:	d8c01617 	ldw	r3,88(sp)
   8693c:	d8800515 	stw	r2,20(sp)
   86940:	18801015 	stw	r2,64(r3)
   86944:	00800384 	movi	r2,14
   86948:	14006836 	bltu	r2,r16,86aec <_dtoa_r+0x588>
   8694c:	8805003a 	cmpeq	r2,r17,zero
   86950:	1000661e 	bne	r2,zero,86aec <_dtoa_r+0x588>
   86954:	d9000d17 	ldw	r4,52(sp)
   86958:	0102300e 	bge	zero,r4,8721c <_dtoa_r+0xcb8>
   8695c:	208003cc 	andi	r2,r4,15
   86960:	100490fa 	slli	r2,r2,3
   86964:	2025d13a 	srai	r18,r4,4
   86968:	00c00274 	movhi	r3,9
   8696c:	18cefc04 	addi	r3,r3,15344
   86970:	10c5883a 	add	r2,r2,r3
   86974:	90c0040c 	andi	r3,r18,16
   86978:	14000017 	ldw	r16,0(r2)
   8697c:	14400117 	ldw	r17,4(r2)
   86980:	18036a1e 	bne	r3,zero,8772c <_dtoa_r+0x11c8>
   86984:	05800084 	movi	r22,2
   86988:	90001026 	beq	r18,zero,869cc <_dtoa_r+0x468>
   8698c:	04c00274 	movhi	r19,9
   86990:	9ccf2e04 	addi	r19,r19,15544
   86994:	9080004c 	andi	r2,r18,1
   86998:	1005003a 	cmpeq	r2,r2,zero
   8699c:	1000081e 	bne	r2,zero,869c0 <_dtoa_r+0x45c>
   869a0:	99800017 	ldw	r6,0(r19)
   869a4:	99c00117 	ldw	r7,4(r19)
   869a8:	880b883a 	mov	r5,r17
   869ac:	8009883a 	mov	r4,r16
   869b0:	008e4c80 	call	8e4c8 <__muldf3>
   869b4:	1021883a 	mov	r16,r2
   869b8:	b5800044 	addi	r22,r22,1
   869bc:	1823883a 	mov	r17,r3
   869c0:	9025d07a 	srai	r18,r18,1
   869c4:	9cc00204 	addi	r19,r19,8
   869c8:	903ff21e 	bne	r18,zero,86994 <_dtoa_r+0x430>
   869cc:	a80b883a 	mov	r5,r21
   869d0:	a009883a 	mov	r4,r20
   869d4:	880f883a 	mov	r7,r17
   869d8:	800d883a 	mov	r6,r16
   869dc:	008e88c0 	call	8e88c <__divdf3>
   869e0:	1029883a 	mov	r20,r2
   869e4:	182b883a 	mov	r21,r3
   869e8:	d8c00c17 	ldw	r3,48(sp)
   869ec:	1805003a 	cmpeq	r2,r3,zero
   869f0:	1000081e 	bne	r2,zero,86a14 <_dtoa_r+0x4b0>
   869f4:	0005883a 	mov	r2,zero
   869f8:	00cffc34 	movhi	r3,16368
   869fc:	180f883a 	mov	r7,r3
   86a00:	a009883a 	mov	r4,r20
   86a04:	a80b883a 	mov	r5,r21
   86a08:	100d883a 	mov	r6,r2
   86a0c:	008ed040 	call	8ed04 <__ltdf2>
   86a10:	1003fe16 	blt	r2,zero,87a0c <_dtoa_r+0x14a8>
   86a14:	b009883a 	mov	r4,r22
   86a18:	008ee140 	call	8ee14 <__floatsidf>
   86a1c:	180b883a 	mov	r5,r3
   86a20:	1009883a 	mov	r4,r2
   86a24:	a00d883a 	mov	r6,r20
   86a28:	a80f883a 	mov	r7,r21
   86a2c:	008e4c80 	call	8e4c8 <__muldf3>
   86a30:	0011883a 	mov	r8,zero
   86a34:	02500734 	movhi	r9,16412
   86a38:	1009883a 	mov	r4,r2
   86a3c:	180b883a 	mov	r5,r3
   86a40:	480f883a 	mov	r7,r9
   86a44:	400d883a 	mov	r6,r8
   86a48:	008e4540 	call	8e454 <__adddf3>
   86a4c:	d9000f17 	ldw	r4,60(sp)
   86a50:	102d883a 	mov	r22,r2
   86a54:	00bf3034 	movhi	r2,64704
   86a58:	18b9883a 	add	fp,r3,r2
   86a5c:	e02f883a 	mov	r23,fp
   86a60:	20028f1e 	bne	r4,zero,874a0 <_dtoa_r+0xf3c>
   86a64:	0005883a 	mov	r2,zero
   86a68:	00d00534 	movhi	r3,16404
   86a6c:	a009883a 	mov	r4,r20
   86a70:	a80b883a 	mov	r5,r21
   86a74:	180f883a 	mov	r7,r3
   86a78:	100d883a 	mov	r6,r2
   86a7c:	008e3d40 	call	8e3d4 <__subdf3>
   86a80:	1009883a 	mov	r4,r2
   86a84:	e00f883a 	mov	r7,fp
   86a88:	180b883a 	mov	r5,r3
   86a8c:	b00d883a 	mov	r6,r22
   86a90:	1025883a 	mov	r18,r2
   86a94:	1827883a 	mov	r19,r3
   86a98:	008ebf40 	call	8ebf4 <__gtdf2>
   86a9c:	00834f16 	blt	zero,r2,877dc <_dtoa_r+0x1278>
   86aa0:	e0e0003c 	xorhi	r3,fp,32768
   86aa4:	9009883a 	mov	r4,r18
   86aa8:	980b883a 	mov	r5,r19
   86aac:	180f883a 	mov	r7,r3
   86ab0:	b00d883a 	mov	r6,r22
   86ab4:	008ed040 	call	8ed04 <__ltdf2>
   86ab8:	1000080e 	bge	r2,zero,86adc <_dtoa_r+0x578>
   86abc:	0027883a 	mov	r19,zero
   86ac0:	0025883a 	mov	r18,zero
   86ac4:	d8802617 	ldw	r2,152(sp)
   86ac8:	df000517 	ldw	fp,20(sp)
   86acc:	d8000615 	stw	zero,24(sp)
   86ad0:	0084303a 	nor	r2,zero,r2
   86ad4:	d8800d15 	stw	r2,52(sp)
   86ad8:	00019b06 	br	87148 <_dtoa_r+0xbe4>
   86adc:	d9801217 	ldw	r6,72(sp)
   86ae0:	d8801317 	ldw	r2,76(sp)
   86ae4:	3029883a 	mov	r20,r6
   86ae8:	102b883a 	mov	r21,r2
   86aec:	d8c00217 	ldw	r3,8(sp)
   86af0:	18008516 	blt	r3,zero,86d08 <_dtoa_r+0x7a4>
   86af4:	d9000d17 	ldw	r4,52(sp)
   86af8:	00800384 	movi	r2,14
   86afc:	11008216 	blt	r2,r4,86d08 <_dtoa_r+0x7a4>
   86b00:	200490fa 	slli	r2,r4,3
   86b04:	d9802617 	ldw	r6,152(sp)
   86b08:	00c00274 	movhi	r3,9
   86b0c:	18cefc04 	addi	r3,r3,15344
   86b10:	10c5883a 	add	r2,r2,r3
   86b14:	14800017 	ldw	r18,0(r2)
   86b18:	14c00117 	ldw	r19,4(r2)
   86b1c:	30031e16 	blt	r6,zero,87798 <_dtoa_r+0x1234>
   86b20:	d9000517 	ldw	r4,20(sp)
   86b24:	d8c00f17 	ldw	r3,60(sp)
   86b28:	a823883a 	mov	r17,r21
   86b2c:	a021883a 	mov	r16,r20
   86b30:	192b883a 	add	r21,r3,r4
   86b34:	2039883a 	mov	fp,r4
   86b38:	00000f06 	br	86b78 <_dtoa_r+0x614>
   86b3c:	0005883a 	mov	r2,zero
   86b40:	00d00934 	movhi	r3,16420
   86b44:	5009883a 	mov	r4,r10
   86b48:	580b883a 	mov	r5,r11
   86b4c:	180f883a 	mov	r7,r3
   86b50:	100d883a 	mov	r6,r2
   86b54:	008e4c80 	call	8e4c8 <__muldf3>
   86b58:	180b883a 	mov	r5,r3
   86b5c:	000d883a 	mov	r6,zero
   86b60:	000f883a 	mov	r7,zero
   86b64:	1009883a 	mov	r4,r2
   86b68:	1021883a 	mov	r16,r2
   86b6c:	1823883a 	mov	r17,r3
   86b70:	008eb6c0 	call	8eb6c <__nedf2>
   86b74:	10004526 	beq	r2,zero,86c8c <_dtoa_r+0x728>
   86b78:	900d883a 	mov	r6,r18
   86b7c:	980f883a 	mov	r7,r19
   86b80:	8009883a 	mov	r4,r16
   86b84:	880b883a 	mov	r5,r17
   86b88:	008e88c0 	call	8e88c <__divdf3>
   86b8c:	180b883a 	mov	r5,r3
   86b90:	1009883a 	mov	r4,r2
   86b94:	008ef0c0 	call	8ef0c <__fixdfsi>
   86b98:	1009883a 	mov	r4,r2
   86b9c:	1029883a 	mov	r20,r2
   86ba0:	008ee140 	call	8ee14 <__floatsidf>
   86ba4:	180f883a 	mov	r7,r3
   86ba8:	9009883a 	mov	r4,r18
   86bac:	980b883a 	mov	r5,r19
   86bb0:	100d883a 	mov	r6,r2
   86bb4:	008e4c80 	call	8e4c8 <__muldf3>
   86bb8:	180f883a 	mov	r7,r3
   86bbc:	880b883a 	mov	r5,r17
   86bc0:	8009883a 	mov	r4,r16
   86bc4:	100d883a 	mov	r6,r2
   86bc8:	008e3d40 	call	8e3d4 <__subdf3>
   86bcc:	1015883a 	mov	r10,r2
   86bd0:	a0800c04 	addi	r2,r20,48
   86bd4:	e0800005 	stb	r2,0(fp)
   86bd8:	e7000044 	addi	fp,fp,1
   86bdc:	1817883a 	mov	r11,r3
   86be0:	e57fd61e 	bne	fp,r21,86b3c <_dtoa_r+0x5d8>
   86be4:	500d883a 	mov	r6,r10
   86be8:	180f883a 	mov	r7,r3
   86bec:	5009883a 	mov	r4,r10
   86bf0:	180b883a 	mov	r5,r3
   86bf4:	008e4540 	call	8e454 <__adddf3>
   86bf8:	100d883a 	mov	r6,r2
   86bfc:	9009883a 	mov	r4,r18
   86c00:	980b883a 	mov	r5,r19
   86c04:	180f883a 	mov	r7,r3
   86c08:	1021883a 	mov	r16,r2
   86c0c:	1823883a 	mov	r17,r3
   86c10:	008ed040 	call	8ed04 <__ltdf2>
   86c14:	10000816 	blt	r2,zero,86c38 <_dtoa_r+0x6d4>
   86c18:	980b883a 	mov	r5,r19
   86c1c:	800d883a 	mov	r6,r16
   86c20:	880f883a 	mov	r7,r17
   86c24:	9009883a 	mov	r4,r18
   86c28:	008eae40 	call	8eae4 <__eqdf2>
   86c2c:	1000171e 	bne	r2,zero,86c8c <_dtoa_r+0x728>
   86c30:	a080004c 	andi	r2,r20,1
   86c34:	10001526 	beq	r2,zero,86c8c <_dtoa_r+0x728>
   86c38:	d8800d17 	ldw	r2,52(sp)
   86c3c:	d8800415 	stw	r2,16(sp)
   86c40:	e009883a 	mov	r4,fp
   86c44:	213fffc4 	addi	r4,r4,-1
   86c48:	20c00007 	ldb	r3,0(r4)
   86c4c:	00800e44 	movi	r2,57
   86c50:	1880081e 	bne	r3,r2,86c74 <_dtoa_r+0x710>
   86c54:	d8800517 	ldw	r2,20(sp)
   86c58:	113ffa1e 	bne	r2,r4,86c44 <_dtoa_r+0x6e0>
   86c5c:	d8c00417 	ldw	r3,16(sp)
   86c60:	d9800517 	ldw	r6,20(sp)
   86c64:	00800c04 	movi	r2,48
   86c68:	18c00044 	addi	r3,r3,1
   86c6c:	d8c00415 	stw	r3,16(sp)
   86c70:	30800005 	stb	r2,0(r6)
   86c74:	20800003 	ldbu	r2,0(r4)
   86c78:	d8c00417 	ldw	r3,16(sp)
   86c7c:	27000044 	addi	fp,r4,1
   86c80:	10800044 	addi	r2,r2,1
   86c84:	d8c00d15 	stw	r3,52(sp)
   86c88:	20800005 	stb	r2,0(r4)
   86c8c:	d9001617 	ldw	r4,88(sp)
   86c90:	d9400717 	ldw	r5,28(sp)
   86c94:	00887dc0 	call	887dc <_Bfree>
   86c98:	e0000005 	stb	zero,0(fp)
   86c9c:	d9800d17 	ldw	r6,52(sp)
   86ca0:	d8c02717 	ldw	r3,156(sp)
   86ca4:	d9002917 	ldw	r4,164(sp)
   86ca8:	30800044 	addi	r2,r6,1
   86cac:	18800015 	stw	r2,0(r3)
   86cb0:	20029c26 	beq	r4,zero,87724 <_dtoa_r+0x11c0>
   86cb4:	d8c00517 	ldw	r3,20(sp)
   86cb8:	27000015 	stw	fp,0(r4)
   86cbc:	003e5d06 	br	86634 <_dtoa_r+0xd0>
   86cc0:	d9800d17 	ldw	r6,52(sp)
   86cc4:	00c00274 	movhi	r3,9
   86cc8:	18cefc04 	addi	r3,r3,15344
   86ccc:	d9001217 	ldw	r4,72(sp)
   86cd0:	300490fa 	slli	r2,r6,3
   86cd4:	d9401317 	ldw	r5,76(sp)
   86cd8:	10c5883a 	add	r2,r2,r3
   86cdc:	12000017 	ldw	r8,0(r2)
   86ce0:	12400117 	ldw	r9,4(r2)
   86ce4:	400d883a 	mov	r6,r8
   86ce8:	480f883a 	mov	r7,r9
   86cec:	008ed040 	call	8ed04 <__ltdf2>
   86cf0:	1000030e 	bge	r2,zero,86d00 <_dtoa_r+0x79c>
   86cf4:	d8800d17 	ldw	r2,52(sp)
   86cf8:	10bfffc4 	addi	r2,r2,-1
   86cfc:	d8800d15 	stw	r2,52(sp)
   86d00:	d8000c15 	stw	zero,48(sp)
   86d04:	003ea806 	br	867a8 <_dtoa_r+0x244>
   86d08:	d9000b17 	ldw	r4,44(sp)
   86d0c:	202cc03a 	cmpne	r22,r4,zero
   86d10:	b000c71e 	bne	r22,zero,87030 <_dtoa_r+0xacc>
   86d14:	dc001117 	ldw	r16,68(sp)
   86d18:	dc801017 	ldw	r18,64(sp)
   86d1c:	0027883a 	mov	r19,zero
   86d20:	04000b0e 	bge	zero,r16,86d50 <_dtoa_r+0x7ec>
   86d24:	d8c00a17 	ldw	r3,40(sp)
   86d28:	00c0090e 	bge	zero,r3,86d50 <_dtoa_r+0x7ec>
   86d2c:	8005883a 	mov	r2,r16
   86d30:	1c011316 	blt	r3,r16,87180 <_dtoa_r+0xc1c>
   86d34:	d9000a17 	ldw	r4,40(sp)
   86d38:	d9801117 	ldw	r6,68(sp)
   86d3c:	80a1c83a 	sub	r16,r16,r2
   86d40:	2089c83a 	sub	r4,r4,r2
   86d44:	308dc83a 	sub	r6,r6,r2
   86d48:	d9000a15 	stw	r4,40(sp)
   86d4c:	d9801115 	stw	r6,68(sp)
   86d50:	d8801017 	ldw	r2,64(sp)
   86d54:	0080150e 	bge	zero,r2,86dac <_dtoa_r+0x848>
   86d58:	d8c00b17 	ldw	r3,44(sp)
   86d5c:	1805003a 	cmpeq	r2,r3,zero
   86d60:	1001c91e 	bne	r2,zero,87488 <_dtoa_r+0xf24>
   86d64:	04800e0e 	bge	zero,r18,86da0 <_dtoa_r+0x83c>
   86d68:	d9001617 	ldw	r4,88(sp)
   86d6c:	980b883a 	mov	r5,r19
   86d70:	900d883a 	mov	r6,r18
   86d74:	00896280 	call	89628 <__pow5mult>
   86d78:	d9001617 	ldw	r4,88(sp)
   86d7c:	d9800717 	ldw	r6,28(sp)
   86d80:	100b883a 	mov	r5,r2
   86d84:	1027883a 	mov	r19,r2
   86d88:	008926c0 	call	8926c <__multiply>
   86d8c:	d9001617 	ldw	r4,88(sp)
   86d90:	d9400717 	ldw	r5,28(sp)
   86d94:	1023883a 	mov	r17,r2
   86d98:	00887dc0 	call	887dc <_Bfree>
   86d9c:	dc400715 	stw	r17,28(sp)
   86da0:	d9001017 	ldw	r4,64(sp)
   86da4:	248dc83a 	sub	r6,r4,r18
   86da8:	30010e1e 	bne	r6,zero,871e4 <_dtoa_r+0xc80>
   86dac:	d9001617 	ldw	r4,88(sp)
   86db0:	04400044 	movi	r17,1
   86db4:	880b883a 	mov	r5,r17
   86db8:	00894c00 	call	894c0 <__i2b>
   86dbc:	d9800917 	ldw	r6,36(sp)
   86dc0:	1025883a 	mov	r18,r2
   86dc4:	0180040e 	bge	zero,r6,86dd8 <_dtoa_r+0x874>
   86dc8:	d9001617 	ldw	r4,88(sp)
   86dcc:	100b883a 	mov	r5,r2
   86dd0:	00896280 	call	89628 <__pow5mult>
   86dd4:	1025883a 	mov	r18,r2
   86dd8:	d8801717 	ldw	r2,92(sp)
   86ddc:	8880f30e 	bge	r17,r2,871ac <_dtoa_r+0xc48>
   86de0:	0023883a 	mov	r17,zero
   86de4:	d9800917 	ldw	r6,36(sp)
   86de8:	30019e1e 	bne	r6,zero,87464 <_dtoa_r+0xf00>
   86dec:	00c00044 	movi	r3,1
   86df0:	d9000a17 	ldw	r4,40(sp)
   86df4:	20c5883a 	add	r2,r4,r3
   86df8:	10c007cc 	andi	r3,r2,31
   86dfc:	1800841e 	bne	r3,zero,87010 <_dtoa_r+0xaac>
   86e00:	00800704 	movi	r2,28
   86e04:	d9000a17 	ldw	r4,40(sp)
   86e08:	d9801117 	ldw	r6,68(sp)
   86e0c:	80a1883a 	add	r16,r16,r2
   86e10:	2089883a 	add	r4,r4,r2
   86e14:	308d883a 	add	r6,r6,r2
   86e18:	d9000a15 	stw	r4,40(sp)
   86e1c:	d9801115 	stw	r6,68(sp)
   86e20:	d8801117 	ldw	r2,68(sp)
   86e24:	0080050e 	bge	zero,r2,86e3c <_dtoa_r+0x8d8>
   86e28:	d9400717 	ldw	r5,28(sp)
   86e2c:	d9001617 	ldw	r4,88(sp)
   86e30:	100d883a 	mov	r6,r2
   86e34:	00891200 	call	89120 <__lshift>
   86e38:	d8800715 	stw	r2,28(sp)
   86e3c:	d8c00a17 	ldw	r3,40(sp)
   86e40:	00c0050e 	bge	zero,r3,86e58 <_dtoa_r+0x8f4>
   86e44:	d9001617 	ldw	r4,88(sp)
   86e48:	900b883a 	mov	r5,r18
   86e4c:	180d883a 	mov	r6,r3
   86e50:	00891200 	call	89120 <__lshift>
   86e54:	1025883a 	mov	r18,r2
   86e58:	d9000c17 	ldw	r4,48(sp)
   86e5c:	2005003a 	cmpeq	r2,r4,zero
   86e60:	10016f26 	beq	r2,zero,87420 <_dtoa_r+0xebc>
   86e64:	d9000f17 	ldw	r4,60(sp)
   86e68:	0102170e 	bge	zero,r4,876c8 <_dtoa_r+0x1164>
   86e6c:	d9800b17 	ldw	r6,44(sp)
   86e70:	3005003a 	cmpeq	r2,r6,zero
   86e74:	1000881e 	bne	r2,zero,87098 <_dtoa_r+0xb34>
   86e78:	0400050e 	bge	zero,r16,86e90 <_dtoa_r+0x92c>
   86e7c:	d9001617 	ldw	r4,88(sp)
   86e80:	980b883a 	mov	r5,r19
   86e84:	800d883a 	mov	r6,r16
   86e88:	00891200 	call	89120 <__lshift>
   86e8c:	1027883a 	mov	r19,r2
   86e90:	8804c03a 	cmpne	r2,r17,zero
   86e94:	1002541e 	bne	r2,zero,877e8 <_dtoa_r+0x1284>
   86e98:	980b883a 	mov	r5,r19
   86e9c:	dd800517 	ldw	r22,20(sp)
   86ea0:	dcc00615 	stw	r19,24(sp)
   86ea4:	a700004c 	andi	fp,r20,1
   86ea8:	2827883a 	mov	r19,r5
   86eac:	d9000717 	ldw	r4,28(sp)
   86eb0:	900b883a 	mov	r5,r18
   86eb4:	00863200 	call	86320 <quorem>
   86eb8:	d9000717 	ldw	r4,28(sp)
   86ebc:	d9400617 	ldw	r5,24(sp)
   86ec0:	1023883a 	mov	r17,r2
   86ec4:	8dc00c04 	addi	r23,r17,48
   86ec8:	00889380 	call	88938 <__mcmp>
   86ecc:	d9001617 	ldw	r4,88(sp)
   86ed0:	900b883a 	mov	r5,r18
   86ed4:	980d883a 	mov	r6,r19
   86ed8:	1029883a 	mov	r20,r2
   86edc:	0088f940 	call	88f94 <__mdiff>
   86ee0:	102b883a 	mov	r21,r2
   86ee4:	10800317 	ldw	r2,12(r2)
   86ee8:	1001281e 	bne	r2,zero,8738c <_dtoa_r+0xe28>
   86eec:	d9000717 	ldw	r4,28(sp)
   86ef0:	a80b883a 	mov	r5,r21
   86ef4:	00889380 	call	88938 <__mcmp>
   86ef8:	d9001617 	ldw	r4,88(sp)
   86efc:	1021883a 	mov	r16,r2
   86f00:	a80b883a 	mov	r5,r21
   86f04:	00887dc0 	call	887dc <_Bfree>
   86f08:	8000041e 	bne	r16,zero,86f1c <_dtoa_r+0x9b8>
   86f0c:	d8801717 	ldw	r2,92(sp)
   86f10:	1000021e 	bne	r2,zero,86f1c <_dtoa_r+0x9b8>
   86f14:	e004c03a 	cmpne	r2,fp,zero
   86f18:	10011726 	beq	r2,zero,87378 <_dtoa_r+0xe14>
   86f1c:	a0010616 	blt	r20,zero,87338 <_dtoa_r+0xdd4>
   86f20:	a000041e 	bne	r20,zero,86f34 <_dtoa_r+0x9d0>
   86f24:	d8c01717 	ldw	r3,92(sp)
   86f28:	1800021e 	bne	r3,zero,86f34 <_dtoa_r+0x9d0>
   86f2c:	e004c03a 	cmpne	r2,fp,zero
   86f30:	10010126 	beq	r2,zero,87338 <_dtoa_r+0xdd4>
   86f34:	04023d16 	blt	zero,r16,8782c <_dtoa_r+0x12c8>
   86f38:	b5c00005 	stb	r23,0(r22)
   86f3c:	d9800517 	ldw	r6,20(sp)
   86f40:	d9000f17 	ldw	r4,60(sp)
   86f44:	b5800044 	addi	r22,r22,1
   86f48:	3105883a 	add	r2,r6,r4
   86f4c:	b0806526 	beq	r22,r2,870e4 <_dtoa_r+0xb80>
   86f50:	d9400717 	ldw	r5,28(sp)
   86f54:	d9001617 	ldw	r4,88(sp)
   86f58:	01800284 	movi	r6,10
   86f5c:	000f883a 	mov	r7,zero
   86f60:	00894fc0 	call	894fc <__multadd>
   86f64:	d8800715 	stw	r2,28(sp)
   86f68:	d8800617 	ldw	r2,24(sp)
   86f6c:	14c10c26 	beq	r2,r19,873a0 <_dtoa_r+0xe3c>
   86f70:	d9400617 	ldw	r5,24(sp)
   86f74:	d9001617 	ldw	r4,88(sp)
   86f78:	01800284 	movi	r6,10
   86f7c:	000f883a 	mov	r7,zero
   86f80:	00894fc0 	call	894fc <__multadd>
   86f84:	d9001617 	ldw	r4,88(sp)
   86f88:	980b883a 	mov	r5,r19
   86f8c:	01800284 	movi	r6,10
   86f90:	000f883a 	mov	r7,zero
   86f94:	d8800615 	stw	r2,24(sp)
   86f98:	00894fc0 	call	894fc <__multadd>
   86f9c:	1027883a 	mov	r19,r2
   86fa0:	003fc206 	br	86eac <_dtoa_r+0x948>
   86fa4:	2445c83a 	sub	r2,r4,r17
   86fa8:	a088983a 	sll	r4,r20,r2
   86fac:	003e4b06 	br	868dc <_dtoa_r+0x378>
   86fb0:	01bfffc4 	movi	r6,-1
   86fb4:	00800044 	movi	r2,1
   86fb8:	d9800e15 	stw	r6,56(sp)
   86fbc:	d9800f15 	stw	r6,60(sp)
   86fc0:	d8800b15 	stw	r2,44(sp)
   86fc4:	d8c01617 	ldw	r3,88(sp)
   86fc8:	008005c4 	movi	r2,23
   86fcc:	18001115 	stw	zero,68(r3)
   86fd0:	1580082e 	bgeu	r2,r22,86ff4 <_dtoa_r+0xa90>
   86fd4:	00c00104 	movi	r3,4
   86fd8:	0009883a 	mov	r4,zero
   86fdc:	18c7883a 	add	r3,r3,r3
   86fe0:	18800504 	addi	r2,r3,20
   86fe4:	21000044 	addi	r4,r4,1
   86fe8:	b0bffc2e 	bgeu	r22,r2,86fdc <_dtoa_r+0xa78>
   86fec:	d9801617 	ldw	r6,88(sp)
   86ff0:	31001115 	stw	r4,68(r6)
   86ff4:	dc000f17 	ldw	r16,60(sp)
   86ff8:	003e4b06 	br	86928 <_dtoa_r+0x3c4>
   86ffc:	d9801717 	ldw	r6,92(sp)
   87000:	0023883a 	mov	r17,zero
   87004:	31bfff04 	addi	r6,r6,-4
   87008:	d9801715 	stw	r6,92(sp)
   8700c:	003df806 	br	867f0 <_dtoa_r+0x28c>
   87010:	00800804 	movi	r2,32
   87014:	10c9c83a 	sub	r4,r2,r3
   87018:	00c00104 	movi	r3,4
   8701c:	19005a16 	blt	r3,r4,87188 <_dtoa_r+0xc24>
   87020:	008000c4 	movi	r2,3
   87024:	113f7e16 	blt	r2,r4,86e20 <_dtoa_r+0x8bc>
   87028:	20800704 	addi	r2,r4,28
   8702c:	003f7506 	br	86e04 <_dtoa_r+0x8a0>
   87030:	d9801717 	ldw	r6,92(sp)
   87034:	00800044 	movi	r2,1
   87038:	1180a10e 	bge	r2,r6,872c0 <_dtoa_r+0xd5c>
   8703c:	d9800f17 	ldw	r6,60(sp)
   87040:	d8c01017 	ldw	r3,64(sp)
   87044:	30bfffc4 	addi	r2,r6,-1
   87048:	1881c616 	blt	r3,r2,87764 <_dtoa_r+0x1200>
   8704c:	18a5c83a 	sub	r18,r3,r2
   87050:	d8800f17 	ldw	r2,60(sp)
   87054:	10026216 	blt	r2,zero,879e0 <_dtoa_r+0x147c>
   87058:	dc001117 	ldw	r16,68(sp)
   8705c:	1007883a 	mov	r3,r2
   87060:	d9800a17 	ldw	r6,40(sp)
   87064:	d8801117 	ldw	r2,68(sp)
   87068:	d9001617 	ldw	r4,88(sp)
   8706c:	30cd883a 	add	r6,r6,r3
   87070:	10c5883a 	add	r2,r2,r3
   87074:	01400044 	movi	r5,1
   87078:	d9800a15 	stw	r6,40(sp)
   8707c:	d8801115 	stw	r2,68(sp)
   87080:	00894c00 	call	894c0 <__i2b>
   87084:	1027883a 	mov	r19,r2
   87088:	003f2506 	br	86d20 <_dtoa_r+0x7bc>
   8708c:	00c00274 	movhi	r3,9
   87090:	18ce3404 	addi	r3,r3,14544
   87094:	003d6706 	br	86634 <_dtoa_r+0xd0>
   87098:	dd800517 	ldw	r22,20(sp)
   8709c:	04000044 	movi	r16,1
   870a0:	00000706 	br	870c0 <_dtoa_r+0xb5c>
   870a4:	d9400717 	ldw	r5,28(sp)
   870a8:	d9001617 	ldw	r4,88(sp)
   870ac:	01800284 	movi	r6,10
   870b0:	000f883a 	mov	r7,zero
   870b4:	00894fc0 	call	894fc <__multadd>
   870b8:	d8800715 	stw	r2,28(sp)
   870bc:	84000044 	addi	r16,r16,1
   870c0:	d9000717 	ldw	r4,28(sp)
   870c4:	900b883a 	mov	r5,r18
   870c8:	00863200 	call	86320 <quorem>
   870cc:	15c00c04 	addi	r23,r2,48
   870d0:	b5c00005 	stb	r23,0(r22)
   870d4:	d8c00f17 	ldw	r3,60(sp)
   870d8:	b5800044 	addi	r22,r22,1
   870dc:	80fff116 	blt	r16,r3,870a4 <_dtoa_r+0xb40>
   870e0:	d8000615 	stw	zero,24(sp)
   870e4:	d9400717 	ldw	r5,28(sp)
   870e8:	d9001617 	ldw	r4,88(sp)
   870ec:	01800044 	movi	r6,1
   870f0:	00891200 	call	89120 <__lshift>
   870f4:	1009883a 	mov	r4,r2
   870f8:	900b883a 	mov	r5,r18
   870fc:	d8800715 	stw	r2,28(sp)
   87100:	00889380 	call	88938 <__mcmp>
   87104:	00803c0e 	bge	zero,r2,871f8 <_dtoa_r+0xc94>
   87108:	b009883a 	mov	r4,r22
   8710c:	213fffc4 	addi	r4,r4,-1
   87110:	21400003 	ldbu	r5,0(r4)
   87114:	00800e44 	movi	r2,57
   87118:	28c03fcc 	andi	r3,r5,255
   8711c:	18c0201c 	xori	r3,r3,128
   87120:	18ffe004 	addi	r3,r3,-128
   87124:	1881981e 	bne	r3,r2,87788 <_dtoa_r+0x1224>
   87128:	d9800517 	ldw	r6,20(sp)
   8712c:	21bff71e 	bne	r4,r6,8710c <_dtoa_r+0xba8>
   87130:	d8800d17 	ldw	r2,52(sp)
   87134:	37000044 	addi	fp,r6,1
   87138:	10800044 	addi	r2,r2,1
   8713c:	d8800d15 	stw	r2,52(sp)
   87140:	00800c44 	movi	r2,49
   87144:	30800005 	stb	r2,0(r6)
   87148:	d9001617 	ldw	r4,88(sp)
   8714c:	900b883a 	mov	r5,r18
   87150:	00887dc0 	call	887dc <_Bfree>
   87154:	983ecd26 	beq	r19,zero,86c8c <_dtoa_r+0x728>
   87158:	d8c00617 	ldw	r3,24(sp)
   8715c:	18000426 	beq	r3,zero,87170 <_dtoa_r+0xc0c>
   87160:	1cc00326 	beq	r3,r19,87170 <_dtoa_r+0xc0c>
   87164:	d9001617 	ldw	r4,88(sp)
   87168:	180b883a 	mov	r5,r3
   8716c:	00887dc0 	call	887dc <_Bfree>
   87170:	d9001617 	ldw	r4,88(sp)
   87174:	980b883a 	mov	r5,r19
   87178:	00887dc0 	call	887dc <_Bfree>
   8717c:	003ec306 	br	86c8c <_dtoa_r+0x728>
   87180:	1805883a 	mov	r2,r3
   87184:	003eeb06 	br	86d34 <_dtoa_r+0x7d0>
   87188:	d9800a17 	ldw	r6,40(sp)
   8718c:	d8c01117 	ldw	r3,68(sp)
   87190:	20bfff04 	addi	r2,r4,-4
   87194:	308d883a 	add	r6,r6,r2
   87198:	1887883a 	add	r3,r3,r2
   8719c:	80a1883a 	add	r16,r16,r2
   871a0:	d9800a15 	stw	r6,40(sp)
   871a4:	d8c01115 	stw	r3,68(sp)
   871a8:	003f1d06 	br	86e20 <_dtoa_r+0x8bc>
   871ac:	a03f0c1e 	bne	r20,zero,86de0 <_dtoa_r+0x87c>
   871b0:	00800434 	movhi	r2,16
   871b4:	10bfffc4 	addi	r2,r2,-1
   871b8:	a884703a 	and	r2,r21,r2
   871bc:	103f081e 	bne	r2,zero,86de0 <_dtoa_r+0x87c>
   871c0:	a89ffc2c 	andhi	r2,r21,32752
   871c4:	103f0626 	beq	r2,zero,86de0 <_dtoa_r+0x87c>
   871c8:	d8c01117 	ldw	r3,68(sp)
   871cc:	d9000a17 	ldw	r4,40(sp)
   871d0:	18c00044 	addi	r3,r3,1
   871d4:	21000044 	addi	r4,r4,1
   871d8:	d8c01115 	stw	r3,68(sp)
   871dc:	d9000a15 	stw	r4,40(sp)
   871e0:	003f0006 	br	86de4 <_dtoa_r+0x880>
   871e4:	d9400717 	ldw	r5,28(sp)
   871e8:	d9001617 	ldw	r4,88(sp)
   871ec:	00896280 	call	89628 <__pow5mult>
   871f0:	d8800715 	stw	r2,28(sp)
   871f4:	003eed06 	br	86dac <_dtoa_r+0x848>
   871f8:	1000021e 	bne	r2,zero,87204 <_dtoa_r+0xca0>
   871fc:	b880004c 	andi	r2,r23,1
   87200:	103fc11e 	bne	r2,zero,87108 <_dtoa_r+0xba4>
   87204:	b5bfffc4 	addi	r22,r22,-1
   87208:	b0c00007 	ldb	r3,0(r22)
   8720c:	00800c04 	movi	r2,48
   87210:	18bffc26 	beq	r3,r2,87204 <_dtoa_r+0xca0>
   87214:	b7000044 	addi	fp,r22,1
   87218:	003fcb06 	br	87148 <_dtoa_r+0xbe4>
   8721c:	d9800d17 	ldw	r6,52(sp)
   87220:	018fc83a 	sub	r7,zero,r6
   87224:	3801f726 	beq	r7,zero,87a04 <_dtoa_r+0x14a0>
   87228:	398003cc 	andi	r6,r7,15
   8722c:	300c90fa 	slli	r6,r6,3
   87230:	01400274 	movhi	r5,9
   87234:	294efc04 	addi	r5,r5,15344
   87238:	d9001217 	ldw	r4,72(sp)
   8723c:	314d883a 	add	r6,r6,r5
   87240:	30c00117 	ldw	r3,4(r6)
   87244:	30800017 	ldw	r2,0(r6)
   87248:	d9401317 	ldw	r5,76(sp)
   8724c:	3821d13a 	srai	r16,r7,4
   87250:	100d883a 	mov	r6,r2
   87254:	180f883a 	mov	r7,r3
   87258:	008e4c80 	call	8e4c8 <__muldf3>
   8725c:	1011883a 	mov	r8,r2
   87260:	1813883a 	mov	r9,r3
   87264:	1029883a 	mov	r20,r2
   87268:	182b883a 	mov	r21,r3
   8726c:	8001e526 	beq	r16,zero,87a04 <_dtoa_r+0x14a0>
   87270:	05800084 	movi	r22,2
   87274:	04400274 	movhi	r17,9
   87278:	8c4f2e04 	addi	r17,r17,15544
   8727c:	8080004c 	andi	r2,r16,1
   87280:	1005003a 	cmpeq	r2,r2,zero
   87284:	1000081e 	bne	r2,zero,872a8 <_dtoa_r+0xd44>
   87288:	89800017 	ldw	r6,0(r17)
   8728c:	89c00117 	ldw	r7,4(r17)
   87290:	480b883a 	mov	r5,r9
   87294:	4009883a 	mov	r4,r8
   87298:	008e4c80 	call	8e4c8 <__muldf3>
   8729c:	1011883a 	mov	r8,r2
   872a0:	b5800044 	addi	r22,r22,1
   872a4:	1813883a 	mov	r9,r3
   872a8:	8021d07a 	srai	r16,r16,1
   872ac:	8c400204 	addi	r17,r17,8
   872b0:	803ff21e 	bne	r16,zero,8727c <_dtoa_r+0xd18>
   872b4:	4029883a 	mov	r20,r8
   872b8:	482b883a 	mov	r21,r9
   872bc:	003dca06 	br	869e8 <_dtoa_r+0x484>
   872c0:	d9000817 	ldw	r4,32(sp)
   872c4:	2005003a 	cmpeq	r2,r4,zero
   872c8:	1001f61e 	bne	r2,zero,87aa4 <_dtoa_r+0x1540>
   872cc:	dc001117 	ldw	r16,68(sp)
   872d0:	dc801017 	ldw	r18,64(sp)
   872d4:	18c10cc4 	addi	r3,r3,1075
   872d8:	003f6106 	br	87060 <_dtoa_r+0xafc>
   872dc:	d8000b15 	stw	zero,44(sp)
   872e0:	d9802617 	ldw	r6,152(sp)
   872e4:	d8c00d17 	ldw	r3,52(sp)
   872e8:	30800044 	addi	r2,r6,1
   872ec:	18ad883a 	add	r22,r3,r2
   872f0:	b13fffc4 	addi	r4,r22,-1
   872f4:	d9000e15 	stw	r4,56(sp)
   872f8:	0581f60e 	bge	zero,r22,87ad4 <_dtoa_r+0x1570>
   872fc:	dd800f15 	stw	r22,60(sp)
   87300:	003f3006 	br	86fc4 <_dtoa_r+0xa60>
   87304:	d8000b15 	stw	zero,44(sp)
   87308:	d9002617 	ldw	r4,152(sp)
   8730c:	0101eb0e 	bge	zero,r4,87abc <_dtoa_r+0x1558>
   87310:	202d883a 	mov	r22,r4
   87314:	d9000e15 	stw	r4,56(sp)
   87318:	d9000f15 	stw	r4,60(sp)
   8731c:	003f2906 	br	86fc4 <_dtoa_r+0xa60>
   87320:	01800044 	movi	r6,1
   87324:	d9800b15 	stw	r6,44(sp)
   87328:	003ff706 	br	87308 <_dtoa_r+0xda4>
   8732c:	01000044 	movi	r4,1
   87330:	d9000b15 	stw	r4,44(sp)
   87334:	003fea06 	br	872e0 <_dtoa_r+0xd7c>
   87338:	04000c0e 	bge	zero,r16,8736c <_dtoa_r+0xe08>
   8733c:	d9400717 	ldw	r5,28(sp)
   87340:	d9001617 	ldw	r4,88(sp)
   87344:	01800044 	movi	r6,1
   87348:	00891200 	call	89120 <__lshift>
   8734c:	1009883a 	mov	r4,r2
   87350:	900b883a 	mov	r5,r18
   87354:	d8800715 	stw	r2,28(sp)
   87358:	00889380 	call	88938 <__mcmp>
   8735c:	0081e00e 	bge	zero,r2,87ae0 <_dtoa_r+0x157c>
   87360:	bdc00044 	addi	r23,r23,1
   87364:	00800e84 	movi	r2,58
   87368:	b881a226 	beq	r23,r2,879f4 <_dtoa_r+0x1490>
   8736c:	b7000044 	addi	fp,r22,1
   87370:	b5c00005 	stb	r23,0(r22)
   87374:	003f7406 	br	87148 <_dtoa_r+0xbe4>
   87378:	00800e44 	movi	r2,57
   8737c:	b8819d26 	beq	r23,r2,879f4 <_dtoa_r+0x1490>
   87380:	053ffa0e 	bge	zero,r20,8736c <_dtoa_r+0xe08>
   87384:	8dc00c44 	addi	r23,r17,49
   87388:	003ff806 	br	8736c <_dtoa_r+0xe08>
   8738c:	d9001617 	ldw	r4,88(sp)
   87390:	a80b883a 	mov	r5,r21
   87394:	04000044 	movi	r16,1
   87398:	00887dc0 	call	887dc <_Bfree>
   8739c:	003edf06 	br	86f1c <_dtoa_r+0x9b8>
   873a0:	d9001617 	ldw	r4,88(sp)
   873a4:	980b883a 	mov	r5,r19
   873a8:	01800284 	movi	r6,10
   873ac:	000f883a 	mov	r7,zero
   873b0:	00894fc0 	call	894fc <__multadd>
   873b4:	1027883a 	mov	r19,r2
   873b8:	d8800615 	stw	r2,24(sp)
   873bc:	003ebb06 	br	86eac <_dtoa_r+0x948>
   873c0:	d9801117 	ldw	r6,68(sp)
   873c4:	d8800d17 	ldw	r2,52(sp)
   873c8:	d8000915 	stw	zero,36(sp)
   873cc:	308dc83a 	sub	r6,r6,r2
   873d0:	0087c83a 	sub	r3,zero,r2
   873d4:	d9801115 	stw	r6,68(sp)
   873d8:	d8c01015 	stw	r3,64(sp)
   873dc:	003cfe06 	br	867d8 <_dtoa_r+0x274>
   873e0:	018dc83a 	sub	r6,zero,r6
   873e4:	d9801115 	stw	r6,68(sp)
   873e8:	d8000a15 	stw	zero,40(sp)
   873ec:	003cf306 	br	867bc <_dtoa_r+0x258>
   873f0:	d9000d17 	ldw	r4,52(sp)
   873f4:	008ee140 	call	8ee14 <__floatsidf>
   873f8:	880b883a 	mov	r5,r17
   873fc:	8009883a 	mov	r4,r16
   87400:	180f883a 	mov	r7,r3
   87404:	100d883a 	mov	r6,r2
   87408:	008eb6c0 	call	8eb6c <__nedf2>
   8740c:	103ce126 	beq	r2,zero,86794 <_dtoa_r+0x230>
   87410:	d9800d17 	ldw	r6,52(sp)
   87414:	31bfffc4 	addi	r6,r6,-1
   87418:	d9800d15 	stw	r6,52(sp)
   8741c:	003cdd06 	br	86794 <_dtoa_r+0x230>
   87420:	d9000717 	ldw	r4,28(sp)
   87424:	900b883a 	mov	r5,r18
   87428:	00889380 	call	88938 <__mcmp>
   8742c:	103e8d0e 	bge	r2,zero,86e64 <_dtoa_r+0x900>
   87430:	d9400717 	ldw	r5,28(sp)
   87434:	d9001617 	ldw	r4,88(sp)
   87438:	01800284 	movi	r6,10
   8743c:	000f883a 	mov	r7,zero
   87440:	00894fc0 	call	894fc <__multadd>
   87444:	d9800d17 	ldw	r6,52(sp)
   87448:	d8800715 	stw	r2,28(sp)
   8744c:	31bfffc4 	addi	r6,r6,-1
   87450:	d9800d15 	stw	r6,52(sp)
   87454:	b001a71e 	bne	r22,zero,87af4 <_dtoa_r+0x1590>
   87458:	d8800e17 	ldw	r2,56(sp)
   8745c:	d8800f15 	stw	r2,60(sp)
   87460:	003e8006 	br	86e64 <_dtoa_r+0x900>
   87464:	90800417 	ldw	r2,16(r18)
   87468:	1085883a 	add	r2,r2,r2
   8746c:	1085883a 	add	r2,r2,r2
   87470:	1485883a 	add	r2,r2,r18
   87474:	11000417 	ldw	r4,16(r2)
   87478:	00888040 	call	88804 <__hi0bits>
   8747c:	00c00804 	movi	r3,32
   87480:	1887c83a 	sub	r3,r3,r2
   87484:	003e5a06 	br	86df0 <_dtoa_r+0x88c>
   87488:	d9400717 	ldw	r5,28(sp)
   8748c:	d9801017 	ldw	r6,64(sp)
   87490:	d9001617 	ldw	r4,88(sp)
   87494:	00896280 	call	89628 <__pow5mult>
   87498:	d8800715 	stw	r2,28(sp)
   8749c:	003e4306 	br	86dac <_dtoa_r+0x848>
   874a0:	d9800f17 	ldw	r6,60(sp)
   874a4:	d8800d17 	ldw	r2,52(sp)
   874a8:	d9800315 	stw	r6,12(sp)
   874ac:	d8800415 	stw	r2,16(sp)
   874b0:	d8c00b17 	ldw	r3,44(sp)
   874b4:	1805003a 	cmpeq	r2,r3,zero
   874b8:	1000e21e 	bne	r2,zero,87844 <_dtoa_r+0x12e0>
   874bc:	d9000317 	ldw	r4,12(sp)
   874c0:	0005883a 	mov	r2,zero
   874c4:	00cff834 	movhi	r3,16352
   874c8:	200c90fa 	slli	r6,r4,3
   874cc:	01000274 	movhi	r4,9
   874d0:	210efc04 	addi	r4,r4,15344
   874d4:	180b883a 	mov	r5,r3
   874d8:	310d883a 	add	r6,r6,r4
   874dc:	327fff17 	ldw	r9,-4(r6)
   874e0:	323ffe17 	ldw	r8,-8(r6)
   874e4:	1009883a 	mov	r4,r2
   874e8:	480f883a 	mov	r7,r9
   874ec:	400d883a 	mov	r6,r8
   874f0:	008e88c0 	call	8e88c <__divdf3>
   874f4:	180b883a 	mov	r5,r3
   874f8:	b00d883a 	mov	r6,r22
   874fc:	b80f883a 	mov	r7,r23
   87500:	1009883a 	mov	r4,r2
   87504:	008e3d40 	call	8e3d4 <__subdf3>
   87508:	a80b883a 	mov	r5,r21
   8750c:	a009883a 	mov	r4,r20
   87510:	d8c01915 	stw	r3,100(sp)
   87514:	d8801815 	stw	r2,96(sp)
   87518:	008ef0c0 	call	8ef0c <__fixdfsi>
   8751c:	1009883a 	mov	r4,r2
   87520:	1027883a 	mov	r19,r2
   87524:	008ee140 	call	8ee14 <__floatsidf>
   87528:	a80b883a 	mov	r5,r21
   8752c:	a009883a 	mov	r4,r20
   87530:	180f883a 	mov	r7,r3
   87534:	100d883a 	mov	r6,r2
   87538:	008e3d40 	call	8e3d4 <__subdf3>
   8753c:	d9801817 	ldw	r6,96(sp)
   87540:	1823883a 	mov	r17,r3
   87544:	d8801415 	stw	r2,80(sp)
   87548:	302d883a 	mov	r22,r6
   8754c:	d9800517 	ldw	r6,20(sp)
   87550:	9cc00c04 	addi	r19,r19,48
   87554:	dc401515 	stw	r17,84(sp)
   87558:	d8c01917 	ldw	r3,100(sp)
   8755c:	34c00005 	stb	r19,0(r6)
   87560:	d8800517 	ldw	r2,20(sp)
   87564:	d9401917 	ldw	r5,100(sp)
   87568:	d9801417 	ldw	r6,80(sp)
   8756c:	b009883a 	mov	r4,r22
   87570:	880f883a 	mov	r7,r17
   87574:	182f883a 	mov	r23,r3
   87578:	17000044 	addi	fp,r2,1
   8757c:	008ebf40 	call	8ebf4 <__gtdf2>
   87580:	00804e16 	blt	zero,r2,876bc <_dtoa_r+0x1158>
   87584:	d9801417 	ldw	r6,80(sp)
   87588:	0005883a 	mov	r2,zero
   8758c:	00cffc34 	movhi	r3,16368
   87590:	180b883a 	mov	r5,r3
   87594:	880f883a 	mov	r7,r17
   87598:	1009883a 	mov	r4,r2
   8759c:	008e3d40 	call	8e3d4 <__subdf3>
   875a0:	d9401917 	ldw	r5,100(sp)
   875a4:	180f883a 	mov	r7,r3
   875a8:	b009883a 	mov	r4,r22
   875ac:	100d883a 	mov	r6,r2
   875b0:	008ebf40 	call	8ebf4 <__gtdf2>
   875b4:	00bda216 	blt	zero,r2,86c40 <_dtoa_r+0x6dc>
   875b8:	d8c00317 	ldw	r3,12(sp)
   875bc:	00800044 	movi	r2,1
   875c0:	10c01216 	blt	r2,r3,8760c <_dtoa_r+0x10a8>
   875c4:	003d4506 	br	86adc <_dtoa_r+0x578>
   875c8:	d9801417 	ldw	r6,80(sp)
   875cc:	0005883a 	mov	r2,zero
   875d0:	00cffc34 	movhi	r3,16368
   875d4:	180b883a 	mov	r5,r3
   875d8:	880f883a 	mov	r7,r17
   875dc:	1009883a 	mov	r4,r2
   875e0:	008e3d40 	call	8e3d4 <__subdf3>
   875e4:	d9c01b17 	ldw	r7,108(sp)
   875e8:	180b883a 	mov	r5,r3
   875ec:	1009883a 	mov	r4,r2
   875f0:	b00d883a 	mov	r6,r22
   875f4:	008ed040 	call	8ed04 <__ltdf2>
   875f8:	103d9116 	blt	r2,zero,86c40 <_dtoa_r+0x6dc>
   875fc:	d9800517 	ldw	r6,20(sp)
   87600:	d9000317 	ldw	r4,12(sp)
   87604:	3105883a 	add	r2,r6,r4
   87608:	e0bd3426 	beq	fp,r2,86adc <_dtoa_r+0x578>
   8760c:	04500934 	movhi	r17,16420
   87610:	0021883a 	mov	r16,zero
   87614:	b80b883a 	mov	r5,r23
   87618:	b009883a 	mov	r4,r22
   8761c:	800d883a 	mov	r6,r16
   87620:	880f883a 	mov	r7,r17
   87624:	008e4c80 	call	8e4c8 <__muldf3>
   87628:	d9401517 	ldw	r5,84(sp)
   8762c:	d9001417 	ldw	r4,80(sp)
   87630:	880f883a 	mov	r7,r17
   87634:	000d883a 	mov	r6,zero
   87638:	d8801a15 	stw	r2,104(sp)
   8763c:	d8c01b15 	stw	r3,108(sp)
   87640:	008e4c80 	call	8e4c8 <__muldf3>
   87644:	180b883a 	mov	r5,r3
   87648:	1009883a 	mov	r4,r2
   8764c:	1823883a 	mov	r17,r3
   87650:	1021883a 	mov	r16,r2
   87654:	008ef0c0 	call	8ef0c <__fixdfsi>
   87658:	1009883a 	mov	r4,r2
   8765c:	102b883a 	mov	r21,r2
   87660:	008ee140 	call	8ee14 <__floatsidf>
   87664:	880b883a 	mov	r5,r17
   87668:	8009883a 	mov	r4,r16
   8766c:	180f883a 	mov	r7,r3
   87670:	100d883a 	mov	r6,r2
   87674:	008e3d40 	call	8e3d4 <__subdf3>
   87678:	1021883a 	mov	r16,r2
   8767c:	d9001b17 	ldw	r4,108(sp)
   87680:	1823883a 	mov	r17,r3
   87684:	dc001415 	stw	r16,80(sp)
   87688:	ad400c04 	addi	r21,r21,48
   8768c:	dc401515 	stw	r17,84(sp)
   87690:	d8801a17 	ldw	r2,104(sp)
   87694:	e5400005 	stb	r21,0(fp)
   87698:	202f883a 	mov	r23,r4
   8769c:	d9c01b17 	ldw	r7,108(sp)
   876a0:	d9001417 	ldw	r4,80(sp)
   876a4:	880b883a 	mov	r5,r17
   876a8:	100d883a 	mov	r6,r2
   876ac:	102d883a 	mov	r22,r2
   876b0:	e7000044 	addi	fp,fp,1
   876b4:	008ed040 	call	8ed04 <__ltdf2>
   876b8:	103fc30e 	bge	r2,zero,875c8 <_dtoa_r+0x1064>
   876bc:	d9000417 	ldw	r4,16(sp)
   876c0:	d9000d15 	stw	r4,52(sp)
   876c4:	003d7106 	br	86c8c <_dtoa_r+0x728>
   876c8:	d9801717 	ldw	r6,92(sp)
   876cc:	00800084 	movi	r2,2
   876d0:	11bde60e 	bge	r2,r6,86e6c <_dtoa_r+0x908>
   876d4:	203cfb1e 	bne	r4,zero,86ac4 <_dtoa_r+0x560>
   876d8:	d9001617 	ldw	r4,88(sp)
   876dc:	900b883a 	mov	r5,r18
   876e0:	01800144 	movi	r6,5
   876e4:	000f883a 	mov	r7,zero
   876e8:	00894fc0 	call	894fc <__multadd>
   876ec:	d9000717 	ldw	r4,28(sp)
   876f0:	100b883a 	mov	r5,r2
   876f4:	1025883a 	mov	r18,r2
   876f8:	00889380 	call	88938 <__mcmp>
   876fc:	00bcf10e 	bge	zero,r2,86ac4 <_dtoa_r+0x560>
   87700:	d8c00d17 	ldw	r3,52(sp)
   87704:	d9000517 	ldw	r4,20(sp)
   87708:	d8000615 	stw	zero,24(sp)
   8770c:	18c00044 	addi	r3,r3,1
   87710:	d8c00d15 	stw	r3,52(sp)
   87714:	00800c44 	movi	r2,49
   87718:	27000044 	addi	fp,r4,1
   8771c:	20800005 	stb	r2,0(r4)
   87720:	003e8906 	br	87148 <_dtoa_r+0xbe4>
   87724:	d8c00517 	ldw	r3,20(sp)
   87728:	003bc206 	br	86634 <_dtoa_r+0xd0>
   8772c:	01800274 	movhi	r6,9
   87730:	318f2e04 	addi	r6,r6,15544
   87734:	30c00917 	ldw	r3,36(r6)
   87738:	30800817 	ldw	r2,32(r6)
   8773c:	d9001217 	ldw	r4,72(sp)
   87740:	d9401317 	ldw	r5,76(sp)
   87744:	180f883a 	mov	r7,r3
   87748:	100d883a 	mov	r6,r2
   8774c:	008e88c0 	call	8e88c <__divdf3>
   87750:	948003cc 	andi	r18,r18,15
   87754:	058000c4 	movi	r22,3
   87758:	1029883a 	mov	r20,r2
   8775c:	182b883a 	mov	r21,r3
   87760:	003c8906 	br	86988 <_dtoa_r+0x424>
   87764:	d9001017 	ldw	r4,64(sp)
   87768:	d9800917 	ldw	r6,36(sp)
   8776c:	0025883a 	mov	r18,zero
   87770:	1105c83a 	sub	r2,r2,r4
   87774:	2089883a 	add	r4,r4,r2
   87778:	308d883a 	add	r6,r6,r2
   8777c:	d9001015 	stw	r4,64(sp)
   87780:	d9800915 	stw	r6,36(sp)
   87784:	003e3206 	br	87050 <_dtoa_r+0xaec>
   87788:	28800044 	addi	r2,r5,1
   8778c:	27000044 	addi	fp,r4,1
   87790:	20800005 	stb	r2,0(r4)
   87794:	003e6c06 	br	87148 <_dtoa_r+0xbe4>
   87798:	d8800f17 	ldw	r2,60(sp)
   8779c:	00bce016 	blt	zero,r2,86b20 <_dtoa_r+0x5bc>
   877a0:	d9800f17 	ldw	r6,60(sp)
   877a4:	303cc51e 	bne	r6,zero,86abc <_dtoa_r+0x558>
   877a8:	0005883a 	mov	r2,zero
   877ac:	00d00534 	movhi	r3,16404
   877b0:	980b883a 	mov	r5,r19
   877b4:	180f883a 	mov	r7,r3
   877b8:	9009883a 	mov	r4,r18
   877bc:	100d883a 	mov	r6,r2
   877c0:	008e4c80 	call	8e4c8 <__muldf3>
   877c4:	180b883a 	mov	r5,r3
   877c8:	a80f883a 	mov	r7,r21
   877cc:	1009883a 	mov	r4,r2
   877d0:	a00d883a 	mov	r6,r20
   877d4:	008ec7c0 	call	8ec7c <__gedf2>
   877d8:	103cb80e 	bge	r2,zero,86abc <_dtoa_r+0x558>
   877dc:	0027883a 	mov	r19,zero
   877e0:	0025883a 	mov	r18,zero
   877e4:	003fc606 	br	87700 <_dtoa_r+0x119c>
   877e8:	99400117 	ldw	r5,4(r19)
   877ec:	d9001617 	ldw	r4,88(sp)
   877f0:	0088d5c0 	call	88d5c <_Balloc>
   877f4:	99800417 	ldw	r6,16(r19)
   877f8:	11000304 	addi	r4,r2,12
   877fc:	99400304 	addi	r5,r19,12
   87800:	318d883a 	add	r6,r6,r6
   87804:	318d883a 	add	r6,r6,r6
   87808:	31800204 	addi	r6,r6,8
   8780c:	1023883a 	mov	r17,r2
   87810:	008865c0 	call	8865c <memcpy>
   87814:	d9001617 	ldw	r4,88(sp)
   87818:	880b883a 	mov	r5,r17
   8781c:	01800044 	movi	r6,1
   87820:	00891200 	call	89120 <__lshift>
   87824:	100b883a 	mov	r5,r2
   87828:	003d9c06 	br	86e9c <_dtoa_r+0x938>
   8782c:	00800e44 	movi	r2,57
   87830:	b8807026 	beq	r23,r2,879f4 <_dtoa_r+0x1490>
   87834:	b8800044 	addi	r2,r23,1
   87838:	b7000044 	addi	fp,r22,1
   8783c:	b0800005 	stb	r2,0(r22)
   87840:	003e4106 	br	87148 <_dtoa_r+0xbe4>
   87844:	d8800317 	ldw	r2,12(sp)
   87848:	01800274 	movhi	r6,9
   8784c:	318efc04 	addi	r6,r6,15344
   87850:	b009883a 	mov	r4,r22
   87854:	100e90fa 	slli	r7,r2,3
   87858:	b80b883a 	mov	r5,r23
   8785c:	398f883a 	add	r7,r7,r6
   87860:	38bffe17 	ldw	r2,-8(r7)
   87864:	d9800517 	ldw	r6,20(sp)
   87868:	38ffff17 	ldw	r3,-4(r7)
   8786c:	37000044 	addi	fp,r6,1
   87870:	180f883a 	mov	r7,r3
   87874:	100d883a 	mov	r6,r2
   87878:	008e4c80 	call	8e4c8 <__muldf3>
   8787c:	a80b883a 	mov	r5,r21
   87880:	a009883a 	mov	r4,r20
   87884:	182f883a 	mov	r23,r3
   87888:	102d883a 	mov	r22,r2
   8788c:	008ef0c0 	call	8ef0c <__fixdfsi>
   87890:	1009883a 	mov	r4,r2
   87894:	1027883a 	mov	r19,r2
   87898:	008ee140 	call	8ee14 <__floatsidf>
   8789c:	a80b883a 	mov	r5,r21
   878a0:	a009883a 	mov	r4,r20
   878a4:	180f883a 	mov	r7,r3
   878a8:	100d883a 	mov	r6,r2
   878ac:	008e3d40 	call	8e3d4 <__subdf3>
   878b0:	180b883a 	mov	r5,r3
   878b4:	d8c00517 	ldw	r3,20(sp)
   878b8:	9cc00c04 	addi	r19,r19,48
   878bc:	1009883a 	mov	r4,r2
   878c0:	1cc00005 	stb	r19,0(r3)
   878c4:	2021883a 	mov	r16,r4
   878c8:	d9000317 	ldw	r4,12(sp)
   878cc:	00800044 	movi	r2,1
   878d0:	2823883a 	mov	r17,r5
   878d4:	20802226 	beq	r4,r2,87960 <_dtoa_r+0x13fc>
   878d8:	1029883a 	mov	r20,r2
   878dc:	0005883a 	mov	r2,zero
   878e0:	00d00934 	movhi	r3,16420
   878e4:	180f883a 	mov	r7,r3
   878e8:	100d883a 	mov	r6,r2
   878ec:	880b883a 	mov	r5,r17
   878f0:	8009883a 	mov	r4,r16
   878f4:	008e4c80 	call	8e4c8 <__muldf3>
   878f8:	180b883a 	mov	r5,r3
   878fc:	1009883a 	mov	r4,r2
   87900:	1823883a 	mov	r17,r3
   87904:	1021883a 	mov	r16,r2
   87908:	008ef0c0 	call	8ef0c <__fixdfsi>
   8790c:	1009883a 	mov	r4,r2
   87910:	102b883a 	mov	r21,r2
   87914:	008ee140 	call	8ee14 <__floatsidf>
   87918:	880b883a 	mov	r5,r17
   8791c:	8009883a 	mov	r4,r16
   87920:	180f883a 	mov	r7,r3
   87924:	100d883a 	mov	r6,r2
   87928:	008e3d40 	call	8e3d4 <__subdf3>
   8792c:	180b883a 	mov	r5,r3
   87930:	d8c00517 	ldw	r3,20(sp)
   87934:	1009883a 	mov	r4,r2
   87938:	ad400c04 	addi	r21,r21,48
   8793c:	1d05883a 	add	r2,r3,r20
   87940:	15400005 	stb	r21,0(r2)
   87944:	2021883a 	mov	r16,r4
   87948:	d9000317 	ldw	r4,12(sp)
   8794c:	a5000044 	addi	r20,r20,1
   87950:	2823883a 	mov	r17,r5
   87954:	a13fe11e 	bne	r20,r4,878dc <_dtoa_r+0x1378>
   87958:	e505883a 	add	r2,fp,r20
   8795c:	173fffc4 	addi	fp,r2,-1
   87960:	0025883a 	mov	r18,zero
   87964:	04cff834 	movhi	r19,16352
   87968:	b009883a 	mov	r4,r22
   8796c:	b80b883a 	mov	r5,r23
   87970:	900d883a 	mov	r6,r18
   87974:	980f883a 	mov	r7,r19
   87978:	008e4540 	call	8e454 <__adddf3>
   8797c:	180b883a 	mov	r5,r3
   87980:	1009883a 	mov	r4,r2
   87984:	800d883a 	mov	r6,r16
   87988:	880f883a 	mov	r7,r17
   8798c:	008ed040 	call	8ed04 <__ltdf2>
   87990:	103cab16 	blt	r2,zero,86c40 <_dtoa_r+0x6dc>
   87994:	0009883a 	mov	r4,zero
   87998:	980b883a 	mov	r5,r19
   8799c:	b80f883a 	mov	r7,r23
   879a0:	b00d883a 	mov	r6,r22
   879a4:	008e3d40 	call	8e3d4 <__subdf3>
   879a8:	180b883a 	mov	r5,r3
   879ac:	880f883a 	mov	r7,r17
   879b0:	1009883a 	mov	r4,r2
   879b4:	800d883a 	mov	r6,r16
   879b8:	008ebf40 	call	8ebf4 <__gtdf2>
   879bc:	00bc470e 	bge	zero,r2,86adc <_dtoa_r+0x578>
   879c0:	00c00c04 	movi	r3,48
   879c4:	e73fffc4 	addi	fp,fp,-1
   879c8:	e0800007 	ldb	r2,0(fp)
   879cc:	10fffd26 	beq	r2,r3,879c4 <_dtoa_r+0x1460>
   879d0:	d9800417 	ldw	r6,16(sp)
   879d4:	e7000044 	addi	fp,fp,1
   879d8:	d9800d15 	stw	r6,52(sp)
   879dc:	003cab06 	br	86c8c <_dtoa_r+0x728>
   879e0:	d8c00f17 	ldw	r3,60(sp)
   879e4:	d9001117 	ldw	r4,68(sp)
   879e8:	20e1c83a 	sub	r16,r4,r3
   879ec:	0007883a 	mov	r3,zero
   879f0:	003d9b06 	br	87060 <_dtoa_r+0xafc>
   879f4:	00800e44 	movi	r2,57
   879f8:	b0800005 	stb	r2,0(r22)
   879fc:	b5800044 	addi	r22,r22,1
   87a00:	003dc106 	br	87108 <_dtoa_r+0xba4>
   87a04:	05800084 	movi	r22,2
   87a08:	003bf706 	br	869e8 <_dtoa_r+0x484>
   87a0c:	d9000f17 	ldw	r4,60(sp)
   87a10:	013c000e 	bge	zero,r4,86a14 <_dtoa_r+0x4b0>
   87a14:	d9800e17 	ldw	r6,56(sp)
   87a18:	01bc300e 	bge	zero,r6,86adc <_dtoa_r+0x578>
   87a1c:	0005883a 	mov	r2,zero
   87a20:	00d00934 	movhi	r3,16420
   87a24:	a80b883a 	mov	r5,r21
   87a28:	180f883a 	mov	r7,r3
   87a2c:	a009883a 	mov	r4,r20
   87a30:	100d883a 	mov	r6,r2
   87a34:	008e4c80 	call	8e4c8 <__muldf3>
   87a38:	b1000044 	addi	r4,r22,1
   87a3c:	1021883a 	mov	r16,r2
   87a40:	1823883a 	mov	r17,r3
   87a44:	008ee140 	call	8ee14 <__floatsidf>
   87a48:	880b883a 	mov	r5,r17
   87a4c:	8009883a 	mov	r4,r16
   87a50:	180f883a 	mov	r7,r3
   87a54:	100d883a 	mov	r6,r2
   87a58:	008e4c80 	call	8e4c8 <__muldf3>
   87a5c:	0011883a 	mov	r8,zero
   87a60:	02500734 	movhi	r9,16412
   87a64:	180b883a 	mov	r5,r3
   87a68:	480f883a 	mov	r7,r9
   87a6c:	1009883a 	mov	r4,r2
   87a70:	400d883a 	mov	r6,r8
   87a74:	008e4540 	call	8e454 <__adddf3>
   87a78:	102d883a 	mov	r22,r2
   87a7c:	00bf3034 	movhi	r2,64704
   87a80:	10ef883a 	add	r23,r2,r3
   87a84:	d8800d17 	ldw	r2,52(sp)
   87a88:	d8c00e17 	ldw	r3,56(sp)
   87a8c:	8029883a 	mov	r20,r16
   87a90:	10bfffc4 	addi	r2,r2,-1
   87a94:	882b883a 	mov	r21,r17
   87a98:	d8800415 	stw	r2,16(sp)
   87a9c:	d8c00315 	stw	r3,12(sp)
   87aa0:	003e8306 	br	874b0 <_dtoa_r+0xf4c>
   87aa4:	d8800117 	ldw	r2,4(sp)
   87aa8:	dc001117 	ldw	r16,68(sp)
   87aac:	dc801017 	ldw	r18,64(sp)
   87ab0:	00c00d84 	movi	r3,54
   87ab4:	1887c83a 	sub	r3,r3,r2
   87ab8:	003d6906 	br	87060 <_dtoa_r+0xafc>
   87abc:	01800044 	movi	r6,1
   87ac0:	3021883a 	mov	r16,r6
   87ac4:	d9800f15 	stw	r6,60(sp)
   87ac8:	d9802615 	stw	r6,152(sp)
   87acc:	d9800e15 	stw	r6,56(sp)
   87ad0:	003b9306 	br	86920 <_dtoa_r+0x3bc>
   87ad4:	b021883a 	mov	r16,r22
   87ad8:	dd800f15 	stw	r22,60(sp)
   87adc:	003b9006 	br	86920 <_dtoa_r+0x3bc>
   87ae0:	103e221e 	bne	r2,zero,8736c <_dtoa_r+0xe08>
   87ae4:	b880004c 	andi	r2,r23,1
   87ae8:	1005003a 	cmpeq	r2,r2,zero
   87aec:	103e1f1e 	bne	r2,zero,8736c <_dtoa_r+0xe08>
   87af0:	003e1b06 	br	87360 <_dtoa_r+0xdfc>
   87af4:	d9001617 	ldw	r4,88(sp)
   87af8:	980b883a 	mov	r5,r19
   87afc:	01800284 	movi	r6,10
   87b00:	000f883a 	mov	r7,zero
   87b04:	00894fc0 	call	894fc <__multadd>
   87b08:	d8c00e17 	ldw	r3,56(sp)
   87b0c:	1027883a 	mov	r19,r2
   87b10:	d8c00f15 	stw	r3,60(sp)
   87b14:	003cd306 	br	86e64 <_dtoa_r+0x900>

00087b18 <__sflags>:
   87b18:	28c00007 	ldb	r3,0(r5)
   87b1c:	00801c84 	movi	r2,114
   87b20:	18800926 	beq	r3,r2,87b48 <__sflags+0x30>
   87b24:	00801dc4 	movi	r2,119
   87b28:	18801426 	beq	r3,r2,87b7c <__sflags+0x64>
   87b2c:	00801844 	movi	r2,97
   87b30:	18801626 	beq	r3,r2,87b8c <__sflags+0x74>
   87b34:	0007883a 	mov	r3,zero
   87b38:	00800584 	movi	r2,22
   87b3c:	20800015 	stw	r2,0(r4)
   87b40:	1805883a 	mov	r2,r3
   87b44:	f800283a 	ret
   87b48:	000f883a 	mov	r7,zero
   87b4c:	0011883a 	mov	r8,zero
   87b50:	00c00104 	movi	r3,4
   87b54:	28800047 	ldb	r2,1(r5)
   87b58:	10000426 	beq	r2,zero,87b6c <__sflags+0x54>
   87b5c:	01000ac4 	movi	r4,43
   87b60:	11000e26 	beq	r2,r4,87b9c <__sflags+0x84>
   87b64:	28800087 	ldb	r2,2(r5)
   87b68:	11000c26 	beq	r2,r4,87b9c <__sflags+0x84>
   87b6c:	3a04b03a 	or	r2,r7,r8
   87b70:	30800015 	stw	r2,0(r6)
   87b74:	1805883a 	mov	r2,r3
   87b78:	f800283a 	ret
   87b7c:	01c00044 	movi	r7,1
   87b80:	02018004 	movi	r8,1536
   87b84:	00c00204 	movi	r3,8
   87b88:	003ff206 	br	87b54 <__sflags+0x3c>
   87b8c:	01c00044 	movi	r7,1
   87b90:	02008204 	movi	r8,520
   87b94:	00c04204 	movi	r3,264
   87b98:	003fee06 	br	87b54 <__sflags+0x3c>
   87b9c:	00bffcc4 	movi	r2,-13
   87ba0:	1884703a 	and	r2,r3,r2
   87ba4:	01c00084 	movi	r7,2
   87ba8:	10c00414 	ori	r3,r2,16
   87bac:	3a04b03a 	or	r2,r7,r8
   87bb0:	30800015 	stw	r2,0(r6)
   87bb4:	003fef06 	br	87b74 <__sflags+0x5c>

00087bb8 <_fread_r>:
   87bb8:	defff504 	addi	sp,sp,-44
   87bbc:	dd800715 	stw	r22,28(sp)
   87bc0:	dc000115 	stw	r16,4(sp)
   87bc4:	202d883a 	mov	r22,r4
   87bc8:	2821883a 	mov	r16,r5
   87bcc:	3809883a 	mov	r4,r7
   87bd0:	300b883a 	mov	r5,r6
   87bd4:	df000915 	stw	fp,36(sp)
   87bd8:	ddc00815 	stw	r23,32(sp)
   87bdc:	dcc00415 	stw	r19,16(sp)
   87be0:	dfc00a15 	stw	ra,40(sp)
   87be4:	dd400615 	stw	r21,24(sp)
   87be8:	dd000515 	stw	r20,20(sp)
   87bec:	dc800315 	stw	r18,12(sp)
   87bf0:	dc400215 	stw	r17,8(sp)
   87bf4:	d9800015 	stw	r6,0(sp)
   87bf8:	3839883a 	mov	fp,r7
   87bfc:	008f3380 	call	8f338 <__mulsi3>
   87c00:	102f883a 	mov	r23,r2
   87c04:	dcc00b17 	ldw	r19,44(sp)
   87c08:	10005926 	beq	r2,zero,87d70 <_fread_r+0x1b8>
   87c0c:	b0000226 	beq	r22,zero,87c18 <_fread_r+0x60>
   87c10:	b0800e17 	ldw	r2,56(r22)
   87c14:	10005826 	beq	r2,zero,87d78 <_fread_r+0x1c0>
   87c18:	9c400117 	ldw	r17,4(r19)
   87c1c:	88005a16 	blt	r17,zero,87d88 <_fread_r+0x1d0>
   87c20:	9880030b 	ldhu	r2,12(r19)
   87c24:	8029883a 	mov	r20,r16
   87c28:	1080008c 	andi	r2,r2,2
   87c2c:	1000221e 	bne	r2,zero,87cb8 <_fread_r+0x100>
   87c30:	b825883a 	mov	r18,r23
   87c34:	00000106 	br	87c3c <_fread_r+0x84>
   87c38:	9c400117 	ldw	r17,4(r19)
   87c3c:	a009883a 	mov	r4,r20
   87c40:	880d883a 	mov	r6,r17
   87c44:	8c80552e 	bgeu	r17,r18,87d9c <_fread_r+0x1e4>
   87c48:	99400017 	ldw	r5,0(r19)
   87c4c:	a469883a 	add	r20,r20,r17
   87c50:	9465c83a 	sub	r18,r18,r17
   87c54:	008865c0 	call	8865c <memcpy>
   87c58:	98800017 	ldw	r2,0(r19)
   87c5c:	b009883a 	mov	r4,r22
   87c60:	980b883a 	mov	r5,r19
   87c64:	1461883a 	add	r16,r2,r17
   87c68:	9c000015 	stw	r16,0(r19)
   87c6c:	00822780 	call	82278 <__srefill_r>
   87c70:	103ff126 	beq	r2,zero,87c38 <_fread_r+0x80>
   87c74:	d9400017 	ldw	r5,0(sp)
   87c78:	bc89c83a 	sub	r4,r23,r18
   87c7c:	008f3280 	call	8f328 <__udivsi3>
   87c80:	1039883a 	mov	fp,r2
   87c84:	e005883a 	mov	r2,fp
   87c88:	dfc00a17 	ldw	ra,40(sp)
   87c8c:	df000917 	ldw	fp,36(sp)
   87c90:	ddc00817 	ldw	r23,32(sp)
   87c94:	dd800717 	ldw	r22,28(sp)
   87c98:	dd400617 	ldw	r21,24(sp)
   87c9c:	dd000517 	ldw	r20,20(sp)
   87ca0:	dcc00417 	ldw	r19,16(sp)
   87ca4:	dc800317 	ldw	r18,12(sp)
   87ca8:	dc400217 	ldw	r17,8(sp)
   87cac:	dc000117 	ldw	r16,4(sp)
   87cb0:	dec00b04 	addi	sp,sp,44
   87cb4:	f800283a 	ret
   87cb8:	b825883a 	mov	r18,r23
   87cbc:	8dc03536 	bltu	r17,r23,87d94 <_fread_r+0x1dc>
   87cc0:	99400017 	ldw	r5,0(r19)
   87cc4:	a009883a 	mov	r4,r20
   87cc8:	900d883a 	mov	r6,r18
   87ccc:	008865c0 	call	8865c <memcpy>
   87cd0:	9c000017 	ldw	r16,0(r19)
   87cd4:	98800117 	ldw	r2,4(r19)
   87cd8:	99400c17 	ldw	r5,48(r19)
   87cdc:	84a1883a 	add	r16,r16,r18
   87ce0:	14a3c83a 	sub	r17,r2,r18
   87ce4:	a4ab883a 	add	r21,r20,r18
   87ce8:	9c400115 	stw	r17,4(r19)
   87cec:	9c000015 	stw	r16,0(r19)
   87cf0:	bca9c83a 	sub	r20,r23,r18
   87cf4:	28000826 	beq	r5,zero,87d18 <_fread_r+0x160>
   87cf8:	a03fe226 	beq	r20,zero,87c84 <_fread_r+0xcc>
   87cfc:	98801004 	addi	r2,r19,64
   87d00:	28800326 	beq	r5,r2,87d10 <_fread_r+0x158>
   87d04:	b009883a 	mov	r4,r22
   87d08:	0080d140 	call	80d14 <_free_r>
   87d0c:	9c000017 	ldw	r16,0(r19)
   87d10:	98000c15 	stw	zero,48(r19)
   87d14:	00000106 	br	87d1c <_fread_r+0x164>
   87d18:	a03fda26 	beq	r20,zero,87c84 <_fread_r+0xcc>
   87d1c:	9c800417 	ldw	r18,16(r19)
   87d20:	9c400517 	ldw	r17,20(r19)
   87d24:	9d400015 	stw	r21,0(r19)
   87d28:	9d400415 	stw	r21,16(r19)
   87d2c:	9d000515 	stw	r20,20(r19)
   87d30:	b009883a 	mov	r4,r22
   87d34:	980b883a 	mov	r5,r19
   87d38:	00822780 	call	82278 <__srefill_r>
   87d3c:	98c00117 	ldw	r3,4(r19)
   87d40:	9c800415 	stw	r18,16(r19)
   87d44:	9c400515 	stw	r17,20(r19)
   87d48:	a8eb883a 	add	r21,r21,r3
   87d4c:	9c000015 	stw	r16,0(r19)
   87d50:	a0e9c83a 	sub	r20,r20,r3
   87d54:	98000115 	stw	zero,4(r19)
   87d58:	103fef26 	beq	r2,zero,87d18 <_fread_r+0x160>
   87d5c:	d9400017 	ldw	r5,0(sp)
   87d60:	bd09c83a 	sub	r4,r23,r20
   87d64:	008f3280 	call	8f328 <__udivsi3>
   87d68:	1039883a 	mov	fp,r2
   87d6c:	003fc506 	br	87c84 <_fread_r+0xcc>
   87d70:	0039883a 	mov	fp,zero
   87d74:	003fc306 	br	87c84 <_fread_r+0xcc>
   87d78:	b009883a 	mov	r4,r22
   87d7c:	00807ec0 	call	807ec <__sinit>
   87d80:	9c400117 	ldw	r17,4(r19)
   87d84:	883fa60e 	bge	r17,zero,87c20 <_fread_r+0x68>
   87d88:	0023883a 	mov	r17,zero
   87d8c:	98000115 	stw	zero,4(r19)
   87d90:	003fa306 	br	87c20 <_fread_r+0x68>
   87d94:	8825883a 	mov	r18,r17
   87d98:	003fc906 	br	87cc0 <_fread_r+0x108>
   87d9c:	99400017 	ldw	r5,0(r19)
   87da0:	900d883a 	mov	r6,r18
   87da4:	008865c0 	call	8865c <memcpy>
   87da8:	98c00117 	ldw	r3,4(r19)
   87dac:	98800017 	ldw	r2,0(r19)
   87db0:	1c87c83a 	sub	r3,r3,r18
   87db4:	1485883a 	add	r2,r2,r18
   87db8:	98800015 	stw	r2,0(r19)
   87dbc:	98c00115 	stw	r3,4(r19)
   87dc0:	003fb006 	br	87c84 <_fread_r+0xcc>

00087dc4 <fread>:
   87dc4:	00800274 	movhi	r2,9
   87dc8:	10968804 	addi	r2,r2,23072
   87dcc:	2017883a 	mov	r11,r4
   87dd0:	11000017 	ldw	r4,0(r2)
   87dd4:	defffe04 	addi	sp,sp,-8
   87dd8:	3013883a 	mov	r9,r6
   87ddc:	2805883a 	mov	r2,r5
   87de0:	d9c00015 	stw	r7,0(sp)
   87de4:	580b883a 	mov	r5,r11
   87de8:	100d883a 	mov	r6,r2
   87dec:	480f883a 	mov	r7,r9
   87df0:	dfc00115 	stw	ra,4(sp)
   87df4:	0087bb80 	call	87bb8 <_fread_r>
   87df8:	dfc00117 	ldw	ra,4(sp)
   87dfc:	dec00204 	addi	sp,sp,8
   87e00:	f800283a 	ret

00087e04 <__sfvwrite_r>:
   87e04:	30800217 	ldw	r2,8(r6)
   87e08:	defff504 	addi	sp,sp,-44
   87e0c:	df000915 	stw	fp,36(sp)
   87e10:	dd800715 	stw	r22,28(sp)
   87e14:	dc800315 	stw	r18,12(sp)
   87e18:	dfc00a15 	stw	ra,40(sp)
   87e1c:	ddc00815 	stw	r23,32(sp)
   87e20:	dd400615 	stw	r21,24(sp)
   87e24:	dd000515 	stw	r20,20(sp)
   87e28:	dcc00415 	stw	r19,16(sp)
   87e2c:	dc400215 	stw	r17,8(sp)
   87e30:	dc000115 	stw	r16,4(sp)
   87e34:	302d883a 	mov	r22,r6
   87e38:	2039883a 	mov	fp,r4
   87e3c:	2825883a 	mov	r18,r5
   87e40:	10001c26 	beq	r2,zero,87eb4 <__sfvwrite_r+0xb0>
   87e44:	29c0030b 	ldhu	r7,12(r5)
   87e48:	3880020c 	andi	r2,r7,8
   87e4c:	10002726 	beq	r2,zero,87eec <__sfvwrite_r+0xe8>
   87e50:	28800417 	ldw	r2,16(r5)
   87e54:	10002526 	beq	r2,zero,87eec <__sfvwrite_r+0xe8>
   87e58:	3880008c 	andi	r2,r7,2
   87e5c:	b5400017 	ldw	r21,0(r22)
   87e60:	10002826 	beq	r2,zero,87f04 <__sfvwrite_r+0x100>
   87e64:	0021883a 	mov	r16,zero
   87e68:	0023883a 	mov	r17,zero
   87e6c:	880d883a 	mov	r6,r17
   87e70:	e009883a 	mov	r4,fp
   87e74:	00810004 	movi	r2,1024
   87e78:	80006e26 	beq	r16,zero,88034 <__sfvwrite_r+0x230>
   87e7c:	800f883a 	mov	r7,r16
   87e80:	91400717 	ldw	r5,28(r18)
   87e84:	1400012e 	bgeu	r2,r16,87e8c <__sfvwrite_r+0x88>
   87e88:	100f883a 	mov	r7,r2
   87e8c:	90c00917 	ldw	r3,36(r18)
   87e90:	183ee83a 	callr	r3
   87e94:	1007883a 	mov	r3,r2
   87e98:	80a1c83a 	sub	r16,r16,r2
   87e9c:	88a3883a 	add	r17,r17,r2
   87ea0:	00806d0e 	bge	zero,r2,88058 <__sfvwrite_r+0x254>
   87ea4:	b0800217 	ldw	r2,8(r22)
   87ea8:	10c5c83a 	sub	r2,r2,r3
   87eac:	b0800215 	stw	r2,8(r22)
   87eb0:	103fee1e 	bne	r2,zero,87e6c <__sfvwrite_r+0x68>
   87eb4:	0009883a 	mov	r4,zero
   87eb8:	2005883a 	mov	r2,r4
   87ebc:	dfc00a17 	ldw	ra,40(sp)
   87ec0:	df000917 	ldw	fp,36(sp)
   87ec4:	ddc00817 	ldw	r23,32(sp)
   87ec8:	dd800717 	ldw	r22,28(sp)
   87ecc:	dd400617 	ldw	r21,24(sp)
   87ed0:	dd000517 	ldw	r20,20(sp)
   87ed4:	dcc00417 	ldw	r19,16(sp)
   87ed8:	dc800317 	ldw	r18,12(sp)
   87edc:	dc400217 	ldw	r17,8(sp)
   87ee0:	dc000117 	ldw	r16,4(sp)
   87ee4:	dec00b04 	addi	sp,sp,44
   87ee8:	f800283a 	ret
   87eec:	00861740 	call	86174 <__swsetup_r>
   87ef0:	1000e41e 	bne	r2,zero,88284 <__sfvwrite_r+0x480>
   87ef4:	91c0030b 	ldhu	r7,12(r18)
   87ef8:	b5400017 	ldw	r21,0(r22)
   87efc:	3880008c 	andi	r2,r7,2
   87f00:	103fd81e 	bne	r2,zero,87e64 <__sfvwrite_r+0x60>
   87f04:	3880004c 	andi	r2,r7,1
   87f08:	1005003a 	cmpeq	r2,r2,zero
   87f0c:	10005726 	beq	r2,zero,8806c <__sfvwrite_r+0x268>
   87f10:	0029883a 	mov	r20,zero
   87f14:	002f883a 	mov	r23,zero
   87f18:	a0004226 	beq	r20,zero,88024 <__sfvwrite_r+0x220>
   87f1c:	3880800c 	andi	r2,r7,512
   87f20:	94000217 	ldw	r16,8(r18)
   87f24:	10008b26 	beq	r2,zero,88154 <__sfvwrite_r+0x350>
   87f28:	800d883a 	mov	r6,r16
   87f2c:	a400a536 	bltu	r20,r16,881c4 <__sfvwrite_r+0x3c0>
   87f30:	3881200c 	andi	r2,r7,1152
   87f34:	10002726 	beq	r2,zero,87fd4 <__sfvwrite_r+0x1d0>
   87f38:	90800517 	ldw	r2,20(r18)
   87f3c:	92000417 	ldw	r8,16(r18)
   87f40:	91400017 	ldw	r5,0(r18)
   87f44:	1087883a 	add	r3,r2,r2
   87f48:	1887883a 	add	r3,r3,r2
   87f4c:	1808d7fa 	srli	r4,r3,31
   87f50:	2a21c83a 	sub	r16,r5,r8
   87f54:	80800044 	addi	r2,r16,1
   87f58:	20c9883a 	add	r4,r4,r3
   87f5c:	2027d07a 	srai	r19,r4,1
   87f60:	a085883a 	add	r2,r20,r2
   87f64:	980d883a 	mov	r6,r19
   87f68:	9880022e 	bgeu	r19,r2,87f74 <__sfvwrite_r+0x170>
   87f6c:	1027883a 	mov	r19,r2
   87f70:	100d883a 	mov	r6,r2
   87f74:	3881000c 	andi	r2,r7,1024
   87f78:	1000b826 	beq	r2,zero,8825c <__sfvwrite_r+0x458>
   87f7c:	300b883a 	mov	r5,r6
   87f80:	e009883a 	mov	r4,fp
   87f84:	00818fc0 	call	818fc <_malloc_r>
   87f88:	10003126 	beq	r2,zero,88050 <__sfvwrite_r+0x24c>
   87f8c:	91400417 	ldw	r5,16(r18)
   87f90:	1009883a 	mov	r4,r2
   87f94:	800d883a 	mov	r6,r16
   87f98:	1023883a 	mov	r17,r2
   87f9c:	008865c0 	call	8865c <memcpy>
   87fa0:	90c0030b 	ldhu	r3,12(r18)
   87fa4:	00beffc4 	movi	r2,-1025
   87fa8:	1886703a 	and	r3,r3,r2
   87fac:	18c02014 	ori	r3,r3,128
   87fb0:	90c0030d 	sth	r3,12(r18)
   87fb4:	9c07c83a 	sub	r3,r19,r16
   87fb8:	8c05883a 	add	r2,r17,r16
   87fbc:	a00d883a 	mov	r6,r20
   87fc0:	a021883a 	mov	r16,r20
   87fc4:	90800015 	stw	r2,0(r18)
   87fc8:	90c00215 	stw	r3,8(r18)
   87fcc:	94400415 	stw	r17,16(r18)
   87fd0:	94c00515 	stw	r19,20(r18)
   87fd4:	91000017 	ldw	r4,0(r18)
   87fd8:	b80b883a 	mov	r5,r23
   87fdc:	a023883a 	mov	r17,r20
   87fe0:	00886fc0 	call	886fc <memmove>
   87fe4:	90c00217 	ldw	r3,8(r18)
   87fe8:	90800017 	ldw	r2,0(r18)
   87fec:	a027883a 	mov	r19,r20
   87ff0:	1c07c83a 	sub	r3,r3,r16
   87ff4:	1405883a 	add	r2,r2,r16
   87ff8:	90c00215 	stw	r3,8(r18)
   87ffc:	a021883a 	mov	r16,r20
   88000:	90800015 	stw	r2,0(r18)
   88004:	b0800217 	ldw	r2,8(r22)
   88008:	1405c83a 	sub	r2,r2,r16
   8800c:	b0800215 	stw	r2,8(r22)
   88010:	103fa826 	beq	r2,zero,87eb4 <__sfvwrite_r+0xb0>
   88014:	a469c83a 	sub	r20,r20,r17
   88018:	91c0030b 	ldhu	r7,12(r18)
   8801c:	bcef883a 	add	r23,r23,r19
   88020:	a03fbe1e 	bne	r20,zero,87f1c <__sfvwrite_r+0x118>
   88024:	adc00017 	ldw	r23,0(r21)
   88028:	ad000117 	ldw	r20,4(r21)
   8802c:	ad400204 	addi	r21,r21,8
   88030:	003fb906 	br	87f18 <__sfvwrite_r+0x114>
   88034:	ac400017 	ldw	r17,0(r21)
   88038:	ac000117 	ldw	r16,4(r21)
   8803c:	ad400204 	addi	r21,r21,8
   88040:	003f8a06 	br	87e6c <__sfvwrite_r+0x68>
   88044:	91400417 	ldw	r5,16(r18)
   88048:	e009883a 	mov	r4,fp
   8804c:	0080d140 	call	80d14 <_free_r>
   88050:	00800304 	movi	r2,12
   88054:	e0800015 	stw	r2,0(fp)
   88058:	9080030b 	ldhu	r2,12(r18)
   8805c:	013fffc4 	movi	r4,-1
   88060:	10801014 	ori	r2,r2,64
   88064:	9080030d 	sth	r2,12(r18)
   88068:	003f9306 	br	87eb8 <__sfvwrite_r+0xb4>
   8806c:	0027883a 	mov	r19,zero
   88070:	002f883a 	mov	r23,zero
   88074:	d8000015 	stw	zero,0(sp)
   88078:	0029883a 	mov	r20,zero
   8807c:	98001e26 	beq	r19,zero,880f8 <__sfvwrite_r+0x2f4>
   88080:	d8c00017 	ldw	r3,0(sp)
   88084:	1804c03a 	cmpne	r2,r3,zero
   88088:	10005e26 	beq	r2,zero,88204 <__sfvwrite_r+0x400>
   8808c:	9821883a 	mov	r16,r19
   88090:	a4c0012e 	bgeu	r20,r19,88098 <__sfvwrite_r+0x294>
   88094:	a021883a 	mov	r16,r20
   88098:	91000017 	ldw	r4,0(r18)
   8809c:	90800417 	ldw	r2,16(r18)
   880a0:	91800217 	ldw	r6,8(r18)
   880a4:	91c00517 	ldw	r7,20(r18)
   880a8:	1100022e 	bgeu	r2,r4,880b4 <__sfvwrite_r+0x2b0>
   880ac:	31e3883a 	add	r17,r6,r7
   880b0:	8c001616 	blt	r17,r16,8810c <__sfvwrite_r+0x308>
   880b4:	81c03816 	blt	r16,r7,88198 <__sfvwrite_r+0x394>
   880b8:	90c00917 	ldw	r3,36(r18)
   880bc:	91400717 	ldw	r5,28(r18)
   880c0:	e009883a 	mov	r4,fp
   880c4:	b80d883a 	mov	r6,r23
   880c8:	183ee83a 	callr	r3
   880cc:	1023883a 	mov	r17,r2
   880d0:	00bfe10e 	bge	zero,r2,88058 <__sfvwrite_r+0x254>
   880d4:	a469c83a 	sub	r20,r20,r17
   880d8:	a0001826 	beq	r20,zero,8813c <__sfvwrite_r+0x338>
   880dc:	b0800217 	ldw	r2,8(r22)
   880e0:	1445c83a 	sub	r2,r2,r17
   880e4:	b0800215 	stw	r2,8(r22)
   880e8:	103f7226 	beq	r2,zero,87eb4 <__sfvwrite_r+0xb0>
   880ec:	9c67c83a 	sub	r19,r19,r17
   880f0:	bc6f883a 	add	r23,r23,r17
   880f4:	983fe21e 	bne	r19,zero,88080 <__sfvwrite_r+0x27c>
   880f8:	adc00017 	ldw	r23,0(r21)
   880fc:	acc00117 	ldw	r19,4(r21)
   88100:	ad400204 	addi	r21,r21,8
   88104:	d8000015 	stw	zero,0(sp)
   88108:	003fdc06 	br	8807c <__sfvwrite_r+0x278>
   8810c:	b80b883a 	mov	r5,r23
   88110:	880d883a 	mov	r6,r17
   88114:	00886fc0 	call	886fc <memmove>
   88118:	90c00017 	ldw	r3,0(r18)
   8811c:	e009883a 	mov	r4,fp
   88120:	900b883a 	mov	r5,r18
   88124:	1c47883a 	add	r3,r3,r17
   88128:	90c00015 	stw	r3,0(r18)
   8812c:	00805540 	call	80554 <_fflush_r>
   88130:	103fc91e 	bne	r2,zero,88058 <__sfvwrite_r+0x254>
   88134:	a469c83a 	sub	r20,r20,r17
   88138:	a03fe81e 	bne	r20,zero,880dc <__sfvwrite_r+0x2d8>
   8813c:	e009883a 	mov	r4,fp
   88140:	900b883a 	mov	r5,r18
   88144:	00805540 	call	80554 <_fflush_r>
   88148:	103fc31e 	bne	r2,zero,88058 <__sfvwrite_r+0x254>
   8814c:	d8000015 	stw	zero,0(sp)
   88150:	003fe206 	br	880dc <__sfvwrite_r+0x2d8>
   88154:	91000017 	ldw	r4,0(r18)
   88158:	90800417 	ldw	r2,16(r18)
   8815c:	1100022e 	bgeu	r2,r4,88168 <__sfvwrite_r+0x364>
   88160:	8023883a 	mov	r17,r16
   88164:	85003136 	bltu	r16,r20,8822c <__sfvwrite_r+0x428>
   88168:	91c00517 	ldw	r7,20(r18)
   8816c:	a1c01836 	bltu	r20,r7,881d0 <__sfvwrite_r+0x3cc>
   88170:	90c00917 	ldw	r3,36(r18)
   88174:	91400717 	ldw	r5,28(r18)
   88178:	e009883a 	mov	r4,fp
   8817c:	b80d883a 	mov	r6,r23
   88180:	183ee83a 	callr	r3
   88184:	1021883a 	mov	r16,r2
   88188:	00bfb30e 	bge	zero,r2,88058 <__sfvwrite_r+0x254>
   8818c:	1023883a 	mov	r17,r2
   88190:	1027883a 	mov	r19,r2
   88194:	003f9b06 	br	88004 <__sfvwrite_r+0x200>
   88198:	b80b883a 	mov	r5,r23
   8819c:	800d883a 	mov	r6,r16
   881a0:	00886fc0 	call	886fc <memmove>
   881a4:	90c00217 	ldw	r3,8(r18)
   881a8:	90800017 	ldw	r2,0(r18)
   881ac:	8023883a 	mov	r17,r16
   881b0:	1c07c83a 	sub	r3,r3,r16
   881b4:	1405883a 	add	r2,r2,r16
   881b8:	90c00215 	stw	r3,8(r18)
   881bc:	90800015 	stw	r2,0(r18)
   881c0:	003fc406 	br	880d4 <__sfvwrite_r+0x2d0>
   881c4:	a00d883a 	mov	r6,r20
   881c8:	a021883a 	mov	r16,r20
   881cc:	003f8106 	br	87fd4 <__sfvwrite_r+0x1d0>
   881d0:	b80b883a 	mov	r5,r23
   881d4:	a00d883a 	mov	r6,r20
   881d8:	00886fc0 	call	886fc <memmove>
   881dc:	90c00217 	ldw	r3,8(r18)
   881e0:	90800017 	ldw	r2,0(r18)
   881e4:	a021883a 	mov	r16,r20
   881e8:	1d07c83a 	sub	r3,r3,r20
   881ec:	1505883a 	add	r2,r2,r20
   881f0:	a023883a 	mov	r17,r20
   881f4:	a027883a 	mov	r19,r20
   881f8:	90c00215 	stw	r3,8(r18)
   881fc:	90800015 	stw	r2,0(r18)
   88200:	003f8006 	br	88004 <__sfvwrite_r+0x200>
   88204:	b809883a 	mov	r4,r23
   88208:	01400284 	movi	r5,10
   8820c:	980d883a 	mov	r6,r19
   88210:	00885780 	call	88578 <memchr>
   88214:	10001726 	beq	r2,zero,88274 <__sfvwrite_r+0x470>
   88218:	15c5c83a 	sub	r2,r2,r23
   8821c:	15000044 	addi	r20,r2,1
   88220:	00800044 	movi	r2,1
   88224:	d8800015 	stw	r2,0(sp)
   88228:	003f9806 	br	8808c <__sfvwrite_r+0x288>
   8822c:	b80b883a 	mov	r5,r23
   88230:	800d883a 	mov	r6,r16
   88234:	00886fc0 	call	886fc <memmove>
   88238:	90c00017 	ldw	r3,0(r18)
   8823c:	e009883a 	mov	r4,fp
   88240:	900b883a 	mov	r5,r18
   88244:	1c07883a 	add	r3,r3,r16
   88248:	90c00015 	stw	r3,0(r18)
   8824c:	8027883a 	mov	r19,r16
   88250:	00805540 	call	80554 <_fflush_r>
   88254:	103f6b26 	beq	r2,zero,88004 <__sfvwrite_r+0x200>
   88258:	003f7f06 	br	88058 <__sfvwrite_r+0x254>
   8825c:	400b883a 	mov	r5,r8
   88260:	e009883a 	mov	r4,fp
   88264:	00898e00 	call	898e0 <_realloc_r>
   88268:	103f7626 	beq	r2,zero,88044 <__sfvwrite_r+0x240>
   8826c:	1023883a 	mov	r17,r2
   88270:	003f5006 	br	87fb4 <__sfvwrite_r+0x1b0>
   88274:	00c00044 	movi	r3,1
   88278:	9d000044 	addi	r20,r19,1
   8827c:	d8c00015 	stw	r3,0(sp)
   88280:	003f8206 	br	8808c <__sfvwrite_r+0x288>
   88284:	9080030b 	ldhu	r2,12(r18)
   88288:	00c00244 	movi	r3,9
   8828c:	013fffc4 	movi	r4,-1
   88290:	10801014 	ori	r2,r2,64
   88294:	9080030d 	sth	r2,12(r18)
   88298:	e0c00015 	stw	r3,0(fp)
   8829c:	003f0606 	br	87eb8 <__sfvwrite_r+0xb4>

000882a0 <_isatty_r>:
   882a0:	defffd04 	addi	sp,sp,-12
   882a4:	dc000015 	stw	r16,0(sp)
   882a8:	04000274 	movhi	r16,9
   882ac:	841d8504 	addi	r16,r16,30228
   882b0:	dc400115 	stw	r17,4(sp)
   882b4:	80000015 	stw	zero,0(r16)
   882b8:	2023883a 	mov	r17,r4
   882bc:	2809883a 	mov	r4,r5
   882c0:	dfc00215 	stw	ra,8(sp)
   882c4:	008fec40 	call	8fec4 <isatty>
   882c8:	1007883a 	mov	r3,r2
   882cc:	00bfffc4 	movi	r2,-1
   882d0:	18800626 	beq	r3,r2,882ec <_isatty_r+0x4c>
   882d4:	1805883a 	mov	r2,r3
   882d8:	dfc00217 	ldw	ra,8(sp)
   882dc:	dc400117 	ldw	r17,4(sp)
   882e0:	dc000017 	ldw	r16,0(sp)
   882e4:	dec00304 	addi	sp,sp,12
   882e8:	f800283a 	ret
   882ec:	80800017 	ldw	r2,0(r16)
   882f0:	103ff826 	beq	r2,zero,882d4 <_isatty_r+0x34>
   882f4:	88800015 	stw	r2,0(r17)
   882f8:	1805883a 	mov	r2,r3
   882fc:	dfc00217 	ldw	ra,8(sp)
   88300:	dc400117 	ldw	r17,4(sp)
   88304:	dc000017 	ldw	r16,0(sp)
   88308:	dec00304 	addi	sp,sp,12
   8830c:	f800283a 	ret

00088310 <iswspace>:
   88310:	00803fc4 	movi	r2,255
   88314:	0007883a 	mov	r3,zero
   88318:	11000636 	bltu	r2,r4,88334 <iswspace+0x24>
   8831c:	00800274 	movhi	r2,9
   88320:	10968c04 	addi	r2,r2,23088
   88324:	10c00017 	ldw	r3,0(r2)
   88328:	1907883a 	add	r3,r3,r4
   8832c:	18800003 	ldbu	r2,0(r3)
   88330:	10c0020c 	andi	r3,r2,8
   88334:	1805883a 	mov	r2,r3
   88338:	f800283a 	ret

0008833c <__locale_charset>:
   8833c:	d0a00617 	ldw	r2,-32744(gp)
   88340:	f800283a 	ret

00088344 <_localeconv_r>:
   88344:	00800274 	movhi	r2,9
   88348:	108ef004 	addi	r2,r2,15296
   8834c:	f800283a 	ret

00088350 <localeconv>:
   88350:	00800274 	movhi	r2,9
   88354:	10968804 	addi	r2,r2,23072
   88358:	11000017 	ldw	r4,0(r2)
   8835c:	00883441 	jmpi	88344 <_localeconv_r>

00088360 <_setlocale_r>:
   88360:	defffc04 	addi	sp,sp,-16
   88364:	00c00274 	movhi	r3,9
   88368:	18ce1b04 	addi	r3,r3,14444
   8836c:	dc800215 	stw	r18,8(sp)
   88370:	dc400115 	stw	r17,4(sp)
   88374:	dc000015 	stw	r16,0(sp)
   88378:	2023883a 	mov	r17,r4
   8837c:	2825883a 	mov	r18,r5
   88380:	dfc00315 	stw	ra,12(sp)
   88384:	3021883a 	mov	r16,r6
   88388:	3009883a 	mov	r4,r6
   8838c:	180b883a 	mov	r5,r3
   88390:	30000926 	beq	r6,zero,883b8 <_setlocale_r+0x58>
   88394:	00826900 	call	82690 <strcmp>
   88398:	8009883a 	mov	r4,r16
   8839c:	01400274 	movhi	r5,9
   883a0:	294e2c04 	addi	r5,r5,14512
   883a4:	10000b1e 	bne	r2,zero,883d4 <_setlocale_r+0x74>
   883a8:	8c000d15 	stw	r16,52(r17)
   883ac:	8c800c15 	stw	r18,48(r17)
   883b0:	00c00274 	movhi	r3,9
   883b4:	18ce1b04 	addi	r3,r3,14444
   883b8:	1805883a 	mov	r2,r3
   883bc:	dfc00317 	ldw	ra,12(sp)
   883c0:	dc800217 	ldw	r18,8(sp)
   883c4:	dc400117 	ldw	r17,4(sp)
   883c8:	dc000017 	ldw	r16,0(sp)
   883cc:	dec00404 	addi	sp,sp,16
   883d0:	f800283a 	ret
   883d4:	00826900 	call	82690 <strcmp>
   883d8:	0007883a 	mov	r3,zero
   883dc:	103ff226 	beq	r2,zero,883a8 <_setlocale_r+0x48>
   883e0:	003ff506 	br	883b8 <_setlocale_r+0x58>

000883e4 <setlocale>:
   883e4:	01800274 	movhi	r6,9
   883e8:	31968804 	addi	r6,r6,23072
   883ec:	2007883a 	mov	r3,r4
   883f0:	31000017 	ldw	r4,0(r6)
   883f4:	280d883a 	mov	r6,r5
   883f8:	180b883a 	mov	r5,r3
   883fc:	00883601 	jmpi	88360 <_setlocale_r>

00088400 <_lseek_r>:
   88400:	defffd04 	addi	sp,sp,-12
   88404:	dc000015 	stw	r16,0(sp)
   88408:	04000274 	movhi	r16,9
   8840c:	841d8504 	addi	r16,r16,30228
   88410:	dc400115 	stw	r17,4(sp)
   88414:	80000015 	stw	zero,0(r16)
   88418:	2023883a 	mov	r17,r4
   8841c:	2809883a 	mov	r4,r5
   88420:	300b883a 	mov	r5,r6
   88424:	380d883a 	mov	r6,r7
   88428:	dfc00215 	stw	ra,8(sp)
   8842c:	00900d40 	call	900d4 <lseek>
   88430:	1007883a 	mov	r3,r2
   88434:	00bfffc4 	movi	r2,-1
   88438:	18800626 	beq	r3,r2,88454 <_lseek_r+0x54>
   8843c:	1805883a 	mov	r2,r3
   88440:	dfc00217 	ldw	ra,8(sp)
   88444:	dc400117 	ldw	r17,4(sp)
   88448:	dc000017 	ldw	r16,0(sp)
   8844c:	dec00304 	addi	sp,sp,12
   88450:	f800283a 	ret
   88454:	80800017 	ldw	r2,0(r16)
   88458:	103ff826 	beq	r2,zero,8843c <_lseek_r+0x3c>
   8845c:	88800015 	stw	r2,0(r17)
   88460:	1805883a 	mov	r2,r3
   88464:	dfc00217 	ldw	ra,8(sp)
   88468:	dc400117 	ldw	r17,4(sp)
   8846c:	dc000017 	ldw	r16,0(sp)
   88470:	dec00304 	addi	sp,sp,12
   88474:	f800283a 	ret

00088478 <_mbrtowc_r>:
   88478:	defffc04 	addi	sp,sp,-16
   8847c:	dc400215 	stw	r17,8(sp)
   88480:	dc000115 	stw	r16,4(sp)
   88484:	dfc00315 	stw	ra,12(sp)
   88488:	dc000417 	ldw	r16,16(sp)
   8848c:	2023883a 	mov	r17,r4
   88490:	30000f26 	beq	r6,zero,884d0 <_mbrtowc_r+0x58>
   88494:	dc000015 	stw	r16,0(sp)
   88498:	00885380 	call	88538 <_mbtowc_r>
   8849c:	1007883a 	mov	r3,r2
   884a0:	00bfffc4 	movi	r2,-1
   884a4:	1809883a 	mov	r4,r3
   884a8:	1880111e 	bne	r3,r2,884f0 <_mbrtowc_r+0x78>
   884ac:	80000015 	stw	zero,0(r16)
   884b0:	00802284 	movi	r2,138
   884b4:	88800015 	stw	r2,0(r17)
   884b8:	2005883a 	mov	r2,r4
   884bc:	dfc00317 	ldw	ra,12(sp)
   884c0:	dc400217 	ldw	r17,8(sp)
   884c4:	dc000117 	ldw	r16,4(sp)
   884c8:	dec00404 	addi	sp,sp,16
   884cc:	f800283a 	ret
   884d0:	000b883a 	mov	r5,zero
   884d4:	01800274 	movhi	r6,9
   884d8:	318e2c04 	addi	r6,r6,14512
   884dc:	01c00044 	movi	r7,1
   884e0:	dc000015 	stw	r16,0(sp)
   884e4:	00885380 	call	88538 <_mbtowc_r>
   884e8:	1007883a 	mov	r3,r2
   884ec:	003fec06 	br	884a0 <_mbrtowc_r+0x28>
   884f0:	1809883a 	mov	r4,r3
   884f4:	003ff006 	br	884b8 <_mbrtowc_r+0x40>

000884f8 <mbrtowc>:
   884f8:	00800274 	movhi	r2,9
   884fc:	10968804 	addi	r2,r2,23072
   88500:	2017883a 	mov	r11,r4
   88504:	11000017 	ldw	r4,0(r2)
   88508:	defffe04 	addi	sp,sp,-8
   8850c:	3013883a 	mov	r9,r6
   88510:	2805883a 	mov	r2,r5
   88514:	d9c00015 	stw	r7,0(sp)
   88518:	580b883a 	mov	r5,r11
   8851c:	100d883a 	mov	r6,r2
   88520:	480f883a 	mov	r7,r9
   88524:	dfc00115 	stw	ra,4(sp)
   88528:	00884780 	call	88478 <_mbrtowc_r>
   8852c:	dfc00117 	ldw	ra,4(sp)
   88530:	dec00204 	addi	sp,sp,8
   88534:	f800283a 	ret

00088538 <_mbtowc_r>:
   88538:	deffff04 	addi	sp,sp,-4
   8853c:	0005883a 	mov	r2,zero
   88540:	28000326 	beq	r5,zero,88550 <_mbtowc_r+0x18>
   88544:	3000041e 	bne	r6,zero,88558 <_mbtowc_r+0x20>
   88548:	dec00104 	addi	sp,sp,4
   8854c:	f800283a 	ret
   88550:	d80b883a 	mov	r5,sp
   88554:	303ffc26 	beq	r6,zero,88548 <_mbtowc_r+0x10>
   88558:	00bfff84 	movi	r2,-2
   8855c:	383ffa26 	beq	r7,zero,88548 <_mbtowc_r+0x10>
   88560:	30800003 	ldbu	r2,0(r6)
   88564:	28800015 	stw	r2,0(r5)
   88568:	30c00003 	ldbu	r3,0(r6)
   8856c:	1804c03a 	cmpne	r2,r3,zero
   88570:	dec00104 	addi	sp,sp,4
   88574:	f800283a 	ret

00088578 <memchr>:
   88578:	008000c4 	movi	r2,3
   8857c:	29403fcc 	andi	r5,r5,255
   88580:	2007883a 	mov	r3,r4
   88584:	1180022e 	bgeu	r2,r6,88590 <memchr+0x18>
   88588:	2084703a 	and	r2,r4,r2
   8858c:	10000b26 	beq	r2,zero,885bc <memchr+0x44>
   88590:	313fffc4 	addi	r4,r6,-1
   88594:	3000051e 	bne	r6,zero,885ac <memchr+0x34>
   88598:	00002c06 	br	8864c <memchr+0xd4>
   8859c:	213fffc4 	addi	r4,r4,-1
   885a0:	00bfffc4 	movi	r2,-1
   885a4:	18c00044 	addi	r3,r3,1
   885a8:	20802826 	beq	r4,r2,8864c <memchr+0xd4>
   885ac:	18800003 	ldbu	r2,0(r3)
   885b0:	28bffa1e 	bne	r5,r2,8859c <memchr+0x24>
   885b4:	1805883a 	mov	r2,r3
   885b8:	f800283a 	ret
   885bc:	0011883a 	mov	r8,zero
   885c0:	0007883a 	mov	r3,zero
   885c4:	01c00104 	movi	r7,4
   885c8:	4004923a 	slli	r2,r8,8
   885cc:	18c00044 	addi	r3,r3,1
   885d0:	1151883a 	add	r8,r2,r5
   885d4:	19fffc1e 	bne	r3,r7,885c8 <memchr+0x50>
   885d8:	02bfbff4 	movhi	r10,65279
   885dc:	52bfbfc4 	addi	r10,r10,-257
   885e0:	02602074 	movhi	r9,32897
   885e4:	4a602004 	addi	r9,r9,-32640
   885e8:	02c000c4 	movi	r11,3
   885ec:	20800017 	ldw	r2,0(r4)
   885f0:	31bfff04 	addi	r6,r6,-4
   885f4:	200f883a 	mov	r7,r4
   885f8:	1204f03a 	xor	r2,r2,r8
   885fc:	1287883a 	add	r3,r2,r10
   88600:	1a46703a 	and	r3,r3,r9
   88604:	0084303a 	nor	r2,zero,r2
   88608:	10c4703a 	and	r2,r2,r3
   8860c:	10000b26 	beq	r2,zero,8863c <memchr+0xc4>
   88610:	20800003 	ldbu	r2,0(r4)
   88614:	28800f26 	beq	r5,r2,88654 <memchr+0xdc>
   88618:	20800043 	ldbu	r2,1(r4)
   8861c:	21c00044 	addi	r7,r4,1
   88620:	28800c26 	beq	r5,r2,88654 <memchr+0xdc>
   88624:	20800083 	ldbu	r2,2(r4)
   88628:	21c00084 	addi	r7,r4,2
   8862c:	28800926 	beq	r5,r2,88654 <memchr+0xdc>
   88630:	208000c3 	ldbu	r2,3(r4)
   88634:	21c000c4 	addi	r7,r4,3
   88638:	28800626 	beq	r5,r2,88654 <memchr+0xdc>
   8863c:	21000104 	addi	r4,r4,4
   88640:	59bfea36 	bltu	r11,r6,885ec <memchr+0x74>
   88644:	2007883a 	mov	r3,r4
   88648:	003fd106 	br	88590 <memchr+0x18>
   8864c:	0005883a 	mov	r2,zero
   88650:	f800283a 	ret
   88654:	3805883a 	mov	r2,r7
   88658:	f800283a 	ret

0008865c <memcpy>:
   8865c:	01c003c4 	movi	r7,15
   88660:	2007883a 	mov	r3,r4
   88664:	3980032e 	bgeu	r7,r6,88674 <memcpy+0x18>
   88668:	2904b03a 	or	r2,r5,r4
   8866c:	108000cc 	andi	r2,r2,3
   88670:	10000926 	beq	r2,zero,88698 <memcpy+0x3c>
   88674:	30000626 	beq	r6,zero,88690 <memcpy+0x34>
   88678:	30cd883a 	add	r6,r6,r3
   8867c:	28800003 	ldbu	r2,0(r5)
   88680:	29400044 	addi	r5,r5,1
   88684:	18800005 	stb	r2,0(r3)
   88688:	18c00044 	addi	r3,r3,1
   8868c:	30fffb1e 	bne	r6,r3,8867c <memcpy+0x20>
   88690:	2005883a 	mov	r2,r4
   88694:	f800283a 	ret
   88698:	3811883a 	mov	r8,r7
   8869c:	200f883a 	mov	r7,r4
   886a0:	28c00017 	ldw	r3,0(r5)
   886a4:	31bffc04 	addi	r6,r6,-16
   886a8:	38c00015 	stw	r3,0(r7)
   886ac:	28800117 	ldw	r2,4(r5)
   886b0:	38800115 	stw	r2,4(r7)
   886b4:	28c00217 	ldw	r3,8(r5)
   886b8:	38c00215 	stw	r3,8(r7)
   886bc:	28800317 	ldw	r2,12(r5)
   886c0:	29400404 	addi	r5,r5,16
   886c4:	38800315 	stw	r2,12(r7)
   886c8:	39c00404 	addi	r7,r7,16
   886cc:	41bff436 	bltu	r8,r6,886a0 <memcpy+0x44>
   886d0:	008000c4 	movi	r2,3
   886d4:	1180072e 	bgeu	r2,r6,886f4 <memcpy+0x98>
   886d8:	1007883a 	mov	r3,r2
   886dc:	28800017 	ldw	r2,0(r5)
   886e0:	31bfff04 	addi	r6,r6,-4
   886e4:	29400104 	addi	r5,r5,4
   886e8:	38800015 	stw	r2,0(r7)
   886ec:	39c00104 	addi	r7,r7,4
   886f0:	19bffa36 	bltu	r3,r6,886dc <memcpy+0x80>
   886f4:	3807883a 	mov	r3,r7
   886f8:	003fde06 	br	88674 <memcpy+0x18>

000886fc <memmove>:
   886fc:	2807883a 	mov	r3,r5
   88700:	2011883a 	mov	r8,r4
   88704:	29000c2e 	bgeu	r5,r4,88738 <memmove+0x3c>
   88708:	298f883a 	add	r7,r5,r6
   8870c:	21c00a2e 	bgeu	r4,r7,88738 <memmove+0x3c>
   88710:	30000726 	beq	r6,zero,88730 <memmove+0x34>
   88714:	2187883a 	add	r3,r4,r6
   88718:	198dc83a 	sub	r6,r3,r6
   8871c:	39ffffc4 	addi	r7,r7,-1
   88720:	38800003 	ldbu	r2,0(r7)
   88724:	18ffffc4 	addi	r3,r3,-1
   88728:	18800005 	stb	r2,0(r3)
   8872c:	19bffb1e 	bne	r3,r6,8871c <memmove+0x20>
   88730:	2005883a 	mov	r2,r4
   88734:	f800283a 	ret
   88738:	01c003c4 	movi	r7,15
   8873c:	39800a36 	bltu	r7,r6,88768 <memmove+0x6c>
   88740:	303ffb26 	beq	r6,zero,88730 <memmove+0x34>
   88744:	400f883a 	mov	r7,r8
   88748:	320d883a 	add	r6,r6,r8
   8874c:	28800003 	ldbu	r2,0(r5)
   88750:	29400044 	addi	r5,r5,1
   88754:	38800005 	stb	r2,0(r7)
   88758:	39c00044 	addi	r7,r7,1
   8875c:	39bffb1e 	bne	r7,r6,8874c <memmove+0x50>
   88760:	2005883a 	mov	r2,r4
   88764:	f800283a 	ret
   88768:	1904b03a 	or	r2,r3,r4
   8876c:	108000cc 	andi	r2,r2,3
   88770:	103ff31e 	bne	r2,zero,88740 <memmove+0x44>
   88774:	3811883a 	mov	r8,r7
   88778:	180b883a 	mov	r5,r3
   8877c:	200f883a 	mov	r7,r4
   88780:	28c00017 	ldw	r3,0(r5)
   88784:	31bffc04 	addi	r6,r6,-16
   88788:	38c00015 	stw	r3,0(r7)
   8878c:	28800117 	ldw	r2,4(r5)
   88790:	38800115 	stw	r2,4(r7)
   88794:	28c00217 	ldw	r3,8(r5)
   88798:	38c00215 	stw	r3,8(r7)
   8879c:	28800317 	ldw	r2,12(r5)
   887a0:	29400404 	addi	r5,r5,16
   887a4:	38800315 	stw	r2,12(r7)
   887a8:	39c00404 	addi	r7,r7,16
   887ac:	41bff436 	bltu	r8,r6,88780 <memmove+0x84>
   887b0:	008000c4 	movi	r2,3
   887b4:	1180072e 	bgeu	r2,r6,887d4 <memmove+0xd8>
   887b8:	1007883a 	mov	r3,r2
   887bc:	28800017 	ldw	r2,0(r5)
   887c0:	31bfff04 	addi	r6,r6,-4
   887c4:	29400104 	addi	r5,r5,4
   887c8:	38800015 	stw	r2,0(r7)
   887cc:	39c00104 	addi	r7,r7,4
   887d0:	19bffa36 	bltu	r3,r6,887bc <memmove+0xc0>
   887d4:	3811883a 	mov	r8,r7
   887d8:	003fd906 	br	88740 <memmove+0x44>

000887dc <_Bfree>:
   887dc:	28000826 	beq	r5,zero,88800 <_Bfree+0x24>
   887e0:	28800117 	ldw	r2,4(r5)
   887e4:	21001317 	ldw	r4,76(r4)
   887e8:	1085883a 	add	r2,r2,r2
   887ec:	1085883a 	add	r2,r2,r2
   887f0:	1105883a 	add	r2,r2,r4
   887f4:	10c00017 	ldw	r3,0(r2)
   887f8:	28c00015 	stw	r3,0(r5)
   887fc:	11400015 	stw	r5,0(r2)
   88800:	f800283a 	ret

00088804 <__hi0bits>:
   88804:	20bfffec 	andhi	r2,r4,65535
   88808:	10001426 	beq	r2,zero,8885c <__hi0bits+0x58>
   8880c:	0007883a 	mov	r3,zero
   88810:	20bfc02c 	andhi	r2,r4,65280
   88814:	1000021e 	bne	r2,zero,88820 <__hi0bits+0x1c>
   88818:	2008923a 	slli	r4,r4,8
   8881c:	18c00204 	addi	r3,r3,8
   88820:	20bc002c 	andhi	r2,r4,61440
   88824:	1000021e 	bne	r2,zero,88830 <__hi0bits+0x2c>
   88828:	2008913a 	slli	r4,r4,4
   8882c:	18c00104 	addi	r3,r3,4
   88830:	20b0002c 	andhi	r2,r4,49152
   88834:	1000031e 	bne	r2,zero,88844 <__hi0bits+0x40>
   88838:	2105883a 	add	r2,r4,r4
   8883c:	18c00084 	addi	r3,r3,2
   88840:	1089883a 	add	r4,r2,r2
   88844:	20000316 	blt	r4,zero,88854 <__hi0bits+0x50>
   88848:	2090002c 	andhi	r2,r4,16384
   8884c:	10000626 	beq	r2,zero,88868 <__hi0bits+0x64>
   88850:	18c00044 	addi	r3,r3,1
   88854:	1805883a 	mov	r2,r3
   88858:	f800283a 	ret
   8885c:	2008943a 	slli	r4,r4,16
   88860:	00c00404 	movi	r3,16
   88864:	003fea06 	br	88810 <__hi0bits+0xc>
   88868:	00c00804 	movi	r3,32
   8886c:	1805883a 	mov	r2,r3
   88870:	f800283a 	ret

00088874 <__lo0bits>:
   88874:	20c00017 	ldw	r3,0(r4)
   88878:	188001cc 	andi	r2,r3,7
   8887c:	10000a26 	beq	r2,zero,888a8 <__lo0bits+0x34>
   88880:	1880004c 	andi	r2,r3,1
   88884:	1005003a 	cmpeq	r2,r2,zero
   88888:	10002126 	beq	r2,zero,88910 <__lo0bits+0x9c>
   8888c:	1880008c 	andi	r2,r3,2
   88890:	1000251e 	bne	r2,zero,88928 <__lo0bits+0xb4>
   88894:	1804d0ba 	srli	r2,r3,2
   88898:	01400084 	movi	r5,2
   8889c:	20800015 	stw	r2,0(r4)
   888a0:	2805883a 	mov	r2,r5
   888a4:	f800283a 	ret
   888a8:	18bfffcc 	andi	r2,r3,65535
   888ac:	10001526 	beq	r2,zero,88904 <__lo0bits+0x90>
   888b0:	000b883a 	mov	r5,zero
   888b4:	18803fcc 	andi	r2,r3,255
   888b8:	1000021e 	bne	r2,zero,888c4 <__lo0bits+0x50>
   888bc:	1806d23a 	srli	r3,r3,8
   888c0:	29400204 	addi	r5,r5,8
   888c4:	188003cc 	andi	r2,r3,15
   888c8:	1000021e 	bne	r2,zero,888d4 <__lo0bits+0x60>
   888cc:	1806d13a 	srli	r3,r3,4
   888d0:	29400104 	addi	r5,r5,4
   888d4:	188000cc 	andi	r2,r3,3
   888d8:	1000021e 	bne	r2,zero,888e4 <__lo0bits+0x70>
   888dc:	1806d0ba 	srli	r3,r3,2
   888e0:	29400084 	addi	r5,r5,2
   888e4:	1880004c 	andi	r2,r3,1
   888e8:	1000031e 	bne	r2,zero,888f8 <__lo0bits+0x84>
   888ec:	1806d07a 	srli	r3,r3,1
   888f0:	18000a26 	beq	r3,zero,8891c <__lo0bits+0xa8>
   888f4:	29400044 	addi	r5,r5,1
   888f8:	2805883a 	mov	r2,r5
   888fc:	20c00015 	stw	r3,0(r4)
   88900:	f800283a 	ret
   88904:	1806d43a 	srli	r3,r3,16
   88908:	01400404 	movi	r5,16
   8890c:	003fe906 	br	888b4 <__lo0bits+0x40>
   88910:	000b883a 	mov	r5,zero
   88914:	2805883a 	mov	r2,r5
   88918:	f800283a 	ret
   8891c:	01400804 	movi	r5,32
   88920:	2805883a 	mov	r2,r5
   88924:	f800283a 	ret
   88928:	1804d07a 	srli	r2,r3,1
   8892c:	01400044 	movi	r5,1
   88930:	20800015 	stw	r2,0(r4)
   88934:	003fda06 	br	888a0 <__lo0bits+0x2c>

00088938 <__mcmp>:
   88938:	20800417 	ldw	r2,16(r4)
   8893c:	28c00417 	ldw	r3,16(r5)
   88940:	10cfc83a 	sub	r7,r2,r3
   88944:	38000c1e 	bne	r7,zero,88978 <__mcmp+0x40>
   88948:	18c5883a 	add	r2,r3,r3
   8894c:	1085883a 	add	r2,r2,r2
   88950:	10c00504 	addi	r3,r2,20
   88954:	21000504 	addi	r4,r4,20
   88958:	28cb883a 	add	r5,r5,r3
   8895c:	2085883a 	add	r2,r4,r2
   88960:	10bfff04 	addi	r2,r2,-4
   88964:	297fff04 	addi	r5,r5,-4
   88968:	11800017 	ldw	r6,0(r2)
   8896c:	28c00017 	ldw	r3,0(r5)
   88970:	30c0031e 	bne	r6,r3,88980 <__mcmp+0x48>
   88974:	20bffa36 	bltu	r4,r2,88960 <__mcmp+0x28>
   88978:	3805883a 	mov	r2,r7
   8897c:	f800283a 	ret
   88980:	30c00336 	bltu	r6,r3,88990 <__mcmp+0x58>
   88984:	01c00044 	movi	r7,1
   88988:	3805883a 	mov	r2,r7
   8898c:	f800283a 	ret
   88990:	01ffffc4 	movi	r7,-1
   88994:	003ff806 	br	88978 <__mcmp+0x40>

00088998 <__ulp>:
   88998:	295ffc2c 	andhi	r5,r5,32752
   8899c:	013f3034 	movhi	r4,64704
   889a0:	290b883a 	add	r5,r5,r4
   889a4:	0145c83a 	sub	r2,zero,r5
   889a8:	1007d53a 	srai	r3,r2,20
   889ac:	000d883a 	mov	r6,zero
   889b0:	0140040e 	bge	zero,r5,889c4 <__ulp+0x2c>
   889b4:	280f883a 	mov	r7,r5
   889b8:	3807883a 	mov	r3,r7
   889bc:	3005883a 	mov	r2,r6
   889c0:	f800283a 	ret
   889c4:	008004c4 	movi	r2,19
   889c8:	193ffb04 	addi	r4,r3,-20
   889cc:	10c00c0e 	bge	r2,r3,88a00 <__ulp+0x68>
   889d0:	008007c4 	movi	r2,31
   889d4:	1107c83a 	sub	r3,r2,r4
   889d8:	00800784 	movi	r2,30
   889dc:	01400044 	movi	r5,1
   889e0:	11000216 	blt	r2,r4,889ec <__ulp+0x54>
   889e4:	00800044 	movi	r2,1
   889e8:	10ca983a 	sll	r5,r2,r3
   889ec:	000f883a 	mov	r7,zero
   889f0:	280d883a 	mov	r6,r5
   889f4:	3807883a 	mov	r3,r7
   889f8:	3005883a 	mov	r2,r6
   889fc:	f800283a 	ret
   88a00:	00800234 	movhi	r2,8
   88a04:	10cfd83a 	sra	r7,r2,r3
   88a08:	000d883a 	mov	r6,zero
   88a0c:	3005883a 	mov	r2,r6
   88a10:	3807883a 	mov	r3,r7
   88a14:	f800283a 	ret

00088a18 <__b2d>:
   88a18:	20800417 	ldw	r2,16(r4)
   88a1c:	defff904 	addi	sp,sp,-28
   88a20:	dd000415 	stw	r20,16(sp)
   88a24:	1085883a 	add	r2,r2,r2
   88a28:	25000504 	addi	r20,r4,20
   88a2c:	1085883a 	add	r2,r2,r2
   88a30:	dc000015 	stw	r16,0(sp)
   88a34:	a0a1883a 	add	r16,r20,r2
   88a38:	dd400515 	stw	r21,20(sp)
   88a3c:	857fff17 	ldw	r21,-4(r16)
   88a40:	dc400115 	stw	r17,4(sp)
   88a44:	dfc00615 	stw	ra,24(sp)
   88a48:	a809883a 	mov	r4,r21
   88a4c:	2823883a 	mov	r17,r5
   88a50:	dcc00315 	stw	r19,12(sp)
   88a54:	dc800215 	stw	r18,8(sp)
   88a58:	00888040 	call	88804 <__hi0bits>
   88a5c:	100b883a 	mov	r5,r2
   88a60:	00800804 	movi	r2,32
   88a64:	1145c83a 	sub	r2,r2,r5
   88a68:	88800015 	stw	r2,0(r17)
   88a6c:	00800284 	movi	r2,10
   88a70:	80ffff04 	addi	r3,r16,-4
   88a74:	11401416 	blt	r2,r5,88ac8 <__b2d+0xb0>
   88a78:	008002c4 	movi	r2,11
   88a7c:	1149c83a 	sub	r4,r2,r5
   88a80:	a0c02736 	bltu	r20,r3,88b20 <__b2d+0x108>
   88a84:	000d883a 	mov	r6,zero
   88a88:	28800544 	addi	r2,r5,21
   88a8c:	a906d83a 	srl	r3,r21,r4
   88a90:	a884983a 	sll	r2,r21,r2
   88a94:	1ccffc34 	orhi	r19,r3,16368
   88a98:	11a4b03a 	or	r18,r2,r6
   88a9c:	9005883a 	mov	r2,r18
   88aa0:	9807883a 	mov	r3,r19
   88aa4:	dfc00617 	ldw	ra,24(sp)
   88aa8:	dd400517 	ldw	r21,20(sp)
   88aac:	dd000417 	ldw	r20,16(sp)
   88ab0:	dcc00317 	ldw	r19,12(sp)
   88ab4:	dc800217 	ldw	r18,8(sp)
   88ab8:	dc400117 	ldw	r17,4(sp)
   88abc:	dc000017 	ldw	r16,0(sp)
   88ac0:	dec00704 	addi	sp,sp,28
   88ac4:	f800283a 	ret
   88ac8:	a0c00e36 	bltu	r20,r3,88b04 <__b2d+0xec>
   88acc:	293ffd44 	addi	r4,r5,-11
   88ad0:	000d883a 	mov	r6,zero
   88ad4:	20000f26 	beq	r4,zero,88b14 <__b2d+0xfc>
   88ad8:	00800804 	movi	r2,32
   88adc:	110bc83a 	sub	r5,r2,r4
   88ae0:	a0c01236 	bltu	r20,r3,88b2c <__b2d+0x114>
   88ae4:	000f883a 	mov	r7,zero
   88ae8:	a904983a 	sll	r2,r21,r4
   88aec:	3146d83a 	srl	r3,r6,r5
   88af0:	3108983a 	sll	r4,r6,r4
   88af4:	108ffc34 	orhi	r2,r2,16368
   88af8:	18a6b03a 	or	r19,r3,r2
   88afc:	3924b03a 	or	r18,r7,r4
   88b00:	003fe606 	br	88a9c <__b2d+0x84>
   88b04:	293ffd44 	addi	r4,r5,-11
   88b08:	81bffe17 	ldw	r6,-8(r16)
   88b0c:	80fffe04 	addi	r3,r16,-8
   88b10:	203ff11e 	bne	r4,zero,88ad8 <__b2d+0xc0>
   88b14:	accffc34 	orhi	r19,r21,16368
   88b18:	3025883a 	mov	r18,r6
   88b1c:	003fdf06 	br	88a9c <__b2d+0x84>
   88b20:	18bfff17 	ldw	r2,-4(r3)
   88b24:	110cd83a 	srl	r6,r2,r4
   88b28:	003fd706 	br	88a88 <__b2d+0x70>
   88b2c:	18bfff17 	ldw	r2,-4(r3)
   88b30:	114ed83a 	srl	r7,r2,r5
   88b34:	003fec06 	br	88ae8 <__b2d+0xd0>

00088b38 <__ratio>:
   88b38:	defff904 	addi	sp,sp,-28
   88b3c:	dc400215 	stw	r17,8(sp)
   88b40:	2823883a 	mov	r17,r5
   88b44:	d80b883a 	mov	r5,sp
   88b48:	dfc00615 	stw	ra,24(sp)
   88b4c:	dd000515 	stw	r20,20(sp)
   88b50:	dcc00415 	stw	r19,16(sp)
   88b54:	dc800315 	stw	r18,12(sp)
   88b58:	2025883a 	mov	r18,r4
   88b5c:	0088a180 	call	88a18 <__b2d>
   88b60:	8809883a 	mov	r4,r17
   88b64:	d9400104 	addi	r5,sp,4
   88b68:	1027883a 	mov	r19,r2
   88b6c:	1829883a 	mov	r20,r3
   88b70:	0088a180 	call	88a18 <__b2d>
   88b74:	89000417 	ldw	r4,16(r17)
   88b78:	91c00417 	ldw	r7,16(r18)
   88b7c:	d9800117 	ldw	r6,4(sp)
   88b80:	180b883a 	mov	r5,r3
   88b84:	390fc83a 	sub	r7,r7,r4
   88b88:	1009883a 	mov	r4,r2
   88b8c:	d8800017 	ldw	r2,0(sp)
   88b90:	380e917a 	slli	r7,r7,5
   88b94:	2011883a 	mov	r8,r4
   88b98:	1185c83a 	sub	r2,r2,r6
   88b9c:	11c5883a 	add	r2,r2,r7
   88ba0:	1006953a 	slli	r3,r2,20
   88ba4:	2813883a 	mov	r9,r5
   88ba8:	00800d0e 	bge	zero,r2,88be0 <__ratio+0xa8>
   88bac:	1d29883a 	add	r20,r3,r20
   88bb0:	a00b883a 	mov	r5,r20
   88bb4:	480f883a 	mov	r7,r9
   88bb8:	9809883a 	mov	r4,r19
   88bbc:	400d883a 	mov	r6,r8
   88bc0:	008e88c0 	call	8e88c <__divdf3>
   88bc4:	dfc00617 	ldw	ra,24(sp)
   88bc8:	dd000517 	ldw	r20,20(sp)
   88bcc:	dcc00417 	ldw	r19,16(sp)
   88bd0:	dc800317 	ldw	r18,12(sp)
   88bd4:	dc400217 	ldw	r17,8(sp)
   88bd8:	dec00704 	addi	sp,sp,28
   88bdc:	f800283a 	ret
   88be0:	28d3c83a 	sub	r9,r5,r3
   88be4:	003ff206 	br	88bb0 <__ratio+0x78>

00088be8 <_mprec_log10>:
   88be8:	defffe04 	addi	sp,sp,-8
   88bec:	008005c4 	movi	r2,23
   88bf0:	dc000015 	stw	r16,0(sp)
   88bf4:	dfc00115 	stw	ra,4(sp)
   88bf8:	2021883a 	mov	r16,r4
   88bfc:	11000c16 	blt	r2,r4,88c30 <_mprec_log10+0x48>
   88c00:	200490fa 	slli	r2,r4,3
   88c04:	00c00274 	movhi	r3,9
   88c08:	18cefc04 	addi	r3,r3,15344
   88c0c:	10c5883a 	add	r2,r2,r3
   88c10:	12400117 	ldw	r9,4(r2)
   88c14:	12000017 	ldw	r8,0(r2)
   88c18:	4807883a 	mov	r3,r9
   88c1c:	4005883a 	mov	r2,r8
   88c20:	dfc00117 	ldw	ra,4(sp)
   88c24:	dc000017 	ldw	r16,0(sp)
   88c28:	dec00204 	addi	sp,sp,8
   88c2c:	f800283a 	ret
   88c30:	0011883a 	mov	r8,zero
   88c34:	024ffc34 	movhi	r9,16368
   88c38:	0005883a 	mov	r2,zero
   88c3c:	00d00934 	movhi	r3,16420
   88c40:	480b883a 	mov	r5,r9
   88c44:	4009883a 	mov	r4,r8
   88c48:	180f883a 	mov	r7,r3
   88c4c:	100d883a 	mov	r6,r2
   88c50:	008e4c80 	call	8e4c8 <__muldf3>
   88c54:	843fffc4 	addi	r16,r16,-1
   88c58:	1011883a 	mov	r8,r2
   88c5c:	1813883a 	mov	r9,r3
   88c60:	803ff51e 	bne	r16,zero,88c38 <_mprec_log10+0x50>
   88c64:	4005883a 	mov	r2,r8
   88c68:	4807883a 	mov	r3,r9
   88c6c:	dfc00117 	ldw	ra,4(sp)
   88c70:	dc000017 	ldw	r16,0(sp)
   88c74:	dec00204 	addi	sp,sp,8
   88c78:	f800283a 	ret

00088c7c <__copybits>:
   88c7c:	297fffc4 	addi	r5,r5,-1
   88c80:	30800417 	ldw	r2,16(r6)
   88c84:	280bd17a 	srai	r5,r5,5
   88c88:	31800504 	addi	r6,r6,20
   88c8c:	1085883a 	add	r2,r2,r2
   88c90:	294b883a 	add	r5,r5,r5
   88c94:	294b883a 	add	r5,r5,r5
   88c98:	1085883a 	add	r2,r2,r2
   88c9c:	290b883a 	add	r5,r5,r4
   88ca0:	3087883a 	add	r3,r6,r2
   88ca4:	29400104 	addi	r5,r5,4
   88ca8:	30c0052e 	bgeu	r6,r3,88cc0 <__copybits+0x44>
   88cac:	30800017 	ldw	r2,0(r6)
   88cb0:	31800104 	addi	r6,r6,4
   88cb4:	20800015 	stw	r2,0(r4)
   88cb8:	21000104 	addi	r4,r4,4
   88cbc:	30fffb36 	bltu	r6,r3,88cac <__copybits+0x30>
   88cc0:	2140032e 	bgeu	r4,r5,88cd0 <__copybits+0x54>
   88cc4:	20000015 	stw	zero,0(r4)
   88cc8:	21000104 	addi	r4,r4,4
   88ccc:	217ffd36 	bltu	r4,r5,88cc4 <__copybits+0x48>
   88cd0:	f800283a 	ret

00088cd4 <__any_on>:
   88cd4:	20800417 	ldw	r2,16(r4)
   88cd8:	2807d17a 	srai	r3,r5,5
   88cdc:	21000504 	addi	r4,r4,20
   88ce0:	10c00d0e 	bge	r2,r3,88d18 <__any_on+0x44>
   88ce4:	1085883a 	add	r2,r2,r2
   88ce8:	1085883a 	add	r2,r2,r2
   88cec:	208d883a 	add	r6,r4,r2
   88cf0:	2180182e 	bgeu	r4,r6,88d54 <__any_on+0x80>
   88cf4:	30bfff17 	ldw	r2,-4(r6)
   88cf8:	30ffff04 	addi	r3,r6,-4
   88cfc:	1000041e 	bne	r2,zero,88d10 <__any_on+0x3c>
   88d00:	20c0142e 	bgeu	r4,r3,88d54 <__any_on+0x80>
   88d04:	18ffff04 	addi	r3,r3,-4
   88d08:	18800017 	ldw	r2,0(r3)
   88d0c:	103ffc26 	beq	r2,zero,88d00 <__any_on+0x2c>
   88d10:	00800044 	movi	r2,1
   88d14:	f800283a 	ret
   88d18:	18800a0e 	bge	r3,r2,88d44 <__any_on+0x70>
   88d1c:	294007cc 	andi	r5,r5,31
   88d20:	28000826 	beq	r5,zero,88d44 <__any_on+0x70>
   88d24:	18c5883a 	add	r2,r3,r3
   88d28:	1085883a 	add	r2,r2,r2
   88d2c:	208d883a 	add	r6,r4,r2
   88d30:	30c00017 	ldw	r3,0(r6)
   88d34:	1944d83a 	srl	r2,r3,r5
   88d38:	1144983a 	sll	r2,r2,r5
   88d3c:	18bff41e 	bne	r3,r2,88d10 <__any_on+0x3c>
   88d40:	003feb06 	br	88cf0 <__any_on+0x1c>
   88d44:	18c5883a 	add	r2,r3,r3
   88d48:	1085883a 	add	r2,r2,r2
   88d4c:	208d883a 	add	r6,r4,r2
   88d50:	003fe706 	br	88cf0 <__any_on+0x1c>
   88d54:	0005883a 	mov	r2,zero
   88d58:	f800283a 	ret

00088d5c <_Balloc>:
   88d5c:	20c01317 	ldw	r3,76(r4)
   88d60:	defffb04 	addi	sp,sp,-20
   88d64:	dcc00315 	stw	r19,12(sp)
   88d68:	dc800215 	stw	r18,8(sp)
   88d6c:	dfc00415 	stw	ra,16(sp)
   88d70:	2825883a 	mov	r18,r5
   88d74:	dc400115 	stw	r17,4(sp)
   88d78:	dc000015 	stw	r16,0(sp)
   88d7c:	2027883a 	mov	r19,r4
   88d80:	01800404 	movi	r6,16
   88d84:	01400104 	movi	r5,4
   88d88:	18001726 	beq	r3,zero,88de8 <_Balloc+0x8c>
   88d8c:	01400044 	movi	r5,1
   88d90:	9485883a 	add	r2,r18,r18
   88d94:	2ca2983a 	sll	r17,r5,r18
   88d98:	1085883a 	add	r2,r2,r2
   88d9c:	10c7883a 	add	r3,r2,r3
   88da0:	1c000017 	ldw	r16,0(r3)
   88da4:	8c4d883a 	add	r6,r17,r17
   88da8:	318d883a 	add	r6,r6,r6
   88dac:	9809883a 	mov	r4,r19
   88db0:	31800504 	addi	r6,r6,20
   88db4:	80001226 	beq	r16,zero,88e00 <_Balloc+0xa4>
   88db8:	80800017 	ldw	r2,0(r16)
   88dbc:	18800015 	stw	r2,0(r3)
   88dc0:	80000415 	stw	zero,16(r16)
   88dc4:	80000315 	stw	zero,12(r16)
   88dc8:	8005883a 	mov	r2,r16
   88dcc:	dfc00417 	ldw	ra,16(sp)
   88dd0:	dcc00317 	ldw	r19,12(sp)
   88dd4:	dc800217 	ldw	r18,8(sp)
   88dd8:	dc400117 	ldw	r17,4(sp)
   88ddc:	dc000017 	ldw	r16,0(sp)
   88de0:	dec00504 	addi	sp,sp,20
   88de4:	f800283a 	ret
   88de8:	008c3340 	call	8c334 <_calloc_r>
   88dec:	1007883a 	mov	r3,r2
   88df0:	0021883a 	mov	r16,zero
   88df4:	98801315 	stw	r2,76(r19)
   88df8:	103fe41e 	bne	r2,zero,88d8c <_Balloc+0x30>
   88dfc:	003ff206 	br	88dc8 <_Balloc+0x6c>
   88e00:	008c3340 	call	8c334 <_calloc_r>
   88e04:	103ff026 	beq	r2,zero,88dc8 <_Balloc+0x6c>
   88e08:	1021883a 	mov	r16,r2
   88e0c:	14800115 	stw	r18,4(r2)
   88e10:	14400215 	stw	r17,8(r2)
   88e14:	003fea06 	br	88dc0 <_Balloc+0x64>

00088e18 <__d2b>:
   88e18:	defff504 	addi	sp,sp,-44
   88e1c:	dcc00515 	stw	r19,20(sp)
   88e20:	04c00044 	movi	r19,1
   88e24:	dc000215 	stw	r16,8(sp)
   88e28:	2821883a 	mov	r16,r5
   88e2c:	980b883a 	mov	r5,r19
   88e30:	ddc00915 	stw	r23,36(sp)
   88e34:	dd800815 	stw	r22,32(sp)
   88e38:	dd400715 	stw	r21,28(sp)
   88e3c:	dd000615 	stw	r20,24(sp)
   88e40:	dc800415 	stw	r18,16(sp)
   88e44:	dc400315 	stw	r17,12(sp)
   88e48:	dfc00a15 	stw	ra,40(sp)
   88e4c:	3023883a 	mov	r17,r6
   88e50:	382d883a 	mov	r22,r7
   88e54:	ddc00b17 	ldw	r23,44(sp)
   88e58:	0088d5c0 	call	88d5c <_Balloc>
   88e5c:	1025883a 	mov	r18,r2
   88e60:	00a00034 	movhi	r2,32768
   88e64:	10bfffc4 	addi	r2,r2,-1
   88e68:	8888703a 	and	r4,r17,r2
   88e6c:	202ad53a 	srli	r21,r4,20
   88e70:	00800434 	movhi	r2,16
   88e74:	10bfffc4 	addi	r2,r2,-1
   88e78:	8886703a 	and	r3,r17,r2
   88e7c:	a829003a 	cmpeq	r20,r21,zero
   88e80:	800b883a 	mov	r5,r16
   88e84:	d8c00115 	stw	r3,4(sp)
   88e88:	94000504 	addi	r16,r18,20
   88e8c:	a000021e 	bne	r20,zero,88e98 <__d2b+0x80>
   88e90:	18c00434 	orhi	r3,r3,16
   88e94:	d8c00115 	stw	r3,4(sp)
   88e98:	28002726 	beq	r5,zero,88f38 <__d2b+0x120>
   88e9c:	d809883a 	mov	r4,sp
   88ea0:	d9400015 	stw	r5,0(sp)
   88ea4:	00888740 	call	88874 <__lo0bits>
   88ea8:	100d883a 	mov	r6,r2
   88eac:	10003526 	beq	r2,zero,88f84 <__d2b+0x16c>
   88eb0:	d8c00117 	ldw	r3,4(sp)
   88eb4:	00800804 	movi	r2,32
   88eb8:	1185c83a 	sub	r2,r2,r6
   88ebc:	d9000017 	ldw	r4,0(sp)
   88ec0:	1886983a 	sll	r3,r3,r2
   88ec4:	1906b03a 	or	r3,r3,r4
   88ec8:	90c00515 	stw	r3,20(r18)
   88ecc:	d8c00117 	ldw	r3,4(sp)
   88ed0:	1986d83a 	srl	r3,r3,r6
   88ed4:	d8c00115 	stw	r3,4(sp)
   88ed8:	180b003a 	cmpeq	r5,r3,zero
   88edc:	00800084 	movi	r2,2
   88ee0:	114bc83a 	sub	r5,r2,r5
   88ee4:	80c00115 	stw	r3,4(r16)
   88ee8:	91400415 	stw	r5,16(r18)
   88eec:	a0001a1e 	bne	r20,zero,88f58 <__d2b+0x140>
   88ef0:	3545883a 	add	r2,r6,r21
   88ef4:	10bef344 	addi	r2,r2,-1075
   88ef8:	00c00d44 	movi	r3,53
   88efc:	b0800015 	stw	r2,0(r22)
   88f00:	1987c83a 	sub	r3,r3,r6
   88f04:	b8c00015 	stw	r3,0(r23)
   88f08:	9005883a 	mov	r2,r18
   88f0c:	dfc00a17 	ldw	ra,40(sp)
   88f10:	ddc00917 	ldw	r23,36(sp)
   88f14:	dd800817 	ldw	r22,32(sp)
   88f18:	dd400717 	ldw	r21,28(sp)
   88f1c:	dd000617 	ldw	r20,24(sp)
   88f20:	dcc00517 	ldw	r19,20(sp)
   88f24:	dc800417 	ldw	r18,16(sp)
   88f28:	dc400317 	ldw	r17,12(sp)
   88f2c:	dc000217 	ldw	r16,8(sp)
   88f30:	dec00b04 	addi	sp,sp,44
   88f34:	f800283a 	ret
   88f38:	d9000104 	addi	r4,sp,4
   88f3c:	00888740 	call	88874 <__lo0bits>
   88f40:	11800804 	addi	r6,r2,32
   88f44:	d8800117 	ldw	r2,4(sp)
   88f48:	94c00415 	stw	r19,16(r18)
   88f4c:	980b883a 	mov	r5,r19
   88f50:	90800515 	stw	r2,20(r18)
   88f54:	a03fe626 	beq	r20,zero,88ef0 <__d2b+0xd8>
   88f58:	2945883a 	add	r2,r5,r5
   88f5c:	1085883a 	add	r2,r2,r2
   88f60:	1405883a 	add	r2,r2,r16
   88f64:	113fff17 	ldw	r4,-4(r2)
   88f68:	30fef384 	addi	r3,r6,-1074
   88f6c:	2820917a 	slli	r16,r5,5
   88f70:	b0c00015 	stw	r3,0(r22)
   88f74:	00888040 	call	88804 <__hi0bits>
   88f78:	80a1c83a 	sub	r16,r16,r2
   88f7c:	bc000015 	stw	r16,0(r23)
   88f80:	003fe106 	br	88f08 <__d2b+0xf0>
   88f84:	d8800017 	ldw	r2,0(sp)
   88f88:	90800515 	stw	r2,20(r18)
   88f8c:	d8c00117 	ldw	r3,4(sp)
   88f90:	003fd106 	br	88ed8 <__d2b+0xc0>

00088f94 <__mdiff>:
   88f94:	defffb04 	addi	sp,sp,-20
   88f98:	dc000015 	stw	r16,0(sp)
   88f9c:	2821883a 	mov	r16,r5
   88fa0:	dc800215 	stw	r18,8(sp)
   88fa4:	300b883a 	mov	r5,r6
   88fa8:	2025883a 	mov	r18,r4
   88fac:	8009883a 	mov	r4,r16
   88fb0:	dc400115 	stw	r17,4(sp)
   88fb4:	dfc00415 	stw	ra,16(sp)
   88fb8:	dcc00315 	stw	r19,12(sp)
   88fbc:	3023883a 	mov	r17,r6
   88fc0:	00889380 	call	88938 <__mcmp>
   88fc4:	10004226 	beq	r2,zero,890d0 <__mdiff+0x13c>
   88fc8:	10005016 	blt	r2,zero,8910c <__mdiff+0x178>
   88fcc:	0027883a 	mov	r19,zero
   88fd0:	81400117 	ldw	r5,4(r16)
   88fd4:	9009883a 	mov	r4,r18
   88fd8:	0088d5c0 	call	88d5c <_Balloc>
   88fdc:	1019883a 	mov	r12,r2
   88fe0:	82800417 	ldw	r10,16(r16)
   88fe4:	88800417 	ldw	r2,16(r17)
   88fe8:	81800504 	addi	r6,r16,20
   88fec:	5287883a 	add	r3,r10,r10
   88ff0:	1085883a 	add	r2,r2,r2
   88ff4:	18c7883a 	add	r3,r3,r3
   88ff8:	1085883a 	add	r2,r2,r2
   88ffc:	8a000504 	addi	r8,r17,20
   89000:	64c00315 	stw	r19,12(r12)
   89004:	30db883a 	add	r13,r6,r3
   89008:	4097883a 	add	r11,r8,r2
   8900c:	61c00504 	addi	r7,r12,20
   89010:	0013883a 	mov	r9,zero
   89014:	31000017 	ldw	r4,0(r6)
   89018:	41400017 	ldw	r5,0(r8)
   8901c:	42000104 	addi	r8,r8,4
   89020:	20bfffcc 	andi	r2,r4,65535
   89024:	28ffffcc 	andi	r3,r5,65535
   89028:	10c5c83a 	sub	r2,r2,r3
   8902c:	1245883a 	add	r2,r2,r9
   89030:	2008d43a 	srli	r4,r4,16
   89034:	280ad43a 	srli	r5,r5,16
   89038:	1007d43a 	srai	r3,r2,16
   8903c:	3880000d 	sth	r2,0(r7)
   89040:	2149c83a 	sub	r4,r4,r5
   89044:	20c9883a 	add	r4,r4,r3
   89048:	3900008d 	sth	r4,2(r7)
   8904c:	31800104 	addi	r6,r6,4
   89050:	39c00104 	addi	r7,r7,4
   89054:	2013d43a 	srai	r9,r4,16
   89058:	42ffee36 	bltu	r8,r11,89014 <__mdiff+0x80>
   8905c:	33400c2e 	bgeu	r6,r13,89090 <__mdiff+0xfc>
   89060:	30800017 	ldw	r2,0(r6)
   89064:	31800104 	addi	r6,r6,4
   89068:	10ffffcc 	andi	r3,r2,65535
   8906c:	1a47883a 	add	r3,r3,r9
   89070:	1004d43a 	srli	r2,r2,16
   89074:	1809d43a 	srai	r4,r3,16
   89078:	38c0000d 	sth	r3,0(r7)
   8907c:	1105883a 	add	r2,r2,r4
   89080:	3880008d 	sth	r2,2(r7)
   89084:	1013d43a 	srai	r9,r2,16
   89088:	39c00104 	addi	r7,r7,4
   8908c:	337ff436 	bltu	r6,r13,89060 <__mdiff+0xcc>
   89090:	38bfff17 	ldw	r2,-4(r7)
   89094:	38ffff04 	addi	r3,r7,-4
   89098:	1000041e 	bne	r2,zero,890ac <__mdiff+0x118>
   8909c:	18ffff04 	addi	r3,r3,-4
   890a0:	18800017 	ldw	r2,0(r3)
   890a4:	52bfffc4 	addi	r10,r10,-1
   890a8:	103ffc26 	beq	r2,zero,8909c <__mdiff+0x108>
   890ac:	6005883a 	mov	r2,r12
   890b0:	62800415 	stw	r10,16(r12)
   890b4:	dfc00417 	ldw	ra,16(sp)
   890b8:	dcc00317 	ldw	r19,12(sp)
   890bc:	dc800217 	ldw	r18,8(sp)
   890c0:	dc400117 	ldw	r17,4(sp)
   890c4:	dc000017 	ldw	r16,0(sp)
   890c8:	dec00504 	addi	sp,sp,20
   890cc:	f800283a 	ret
   890d0:	9009883a 	mov	r4,r18
   890d4:	000b883a 	mov	r5,zero
   890d8:	0088d5c0 	call	88d5c <_Balloc>
   890dc:	1019883a 	mov	r12,r2
   890e0:	00800044 	movi	r2,1
   890e4:	60800415 	stw	r2,16(r12)
   890e8:	6005883a 	mov	r2,r12
   890ec:	60000515 	stw	zero,20(r12)
   890f0:	dfc00417 	ldw	ra,16(sp)
   890f4:	dcc00317 	ldw	r19,12(sp)
   890f8:	dc800217 	ldw	r18,8(sp)
   890fc:	dc400117 	ldw	r17,4(sp)
   89100:	dc000017 	ldw	r16,0(sp)
   89104:	dec00504 	addi	sp,sp,20
   89108:	f800283a 	ret
   8910c:	880d883a 	mov	r6,r17
   89110:	04c00044 	movi	r19,1
   89114:	8023883a 	mov	r17,r16
   89118:	3021883a 	mov	r16,r6
   8911c:	003fac06 	br	88fd0 <__mdiff+0x3c>

00089120 <__lshift>:
   89120:	defff904 	addi	sp,sp,-28
   89124:	28800417 	ldw	r2,16(r5)
   89128:	dc000015 	stw	r16,0(sp)
   8912c:	3021d17a 	srai	r16,r6,5
   89130:	28c00217 	ldw	r3,8(r5)
   89134:	10800044 	addi	r2,r2,1
   89138:	dc400115 	stw	r17,4(sp)
   8913c:	80a3883a 	add	r17,r16,r2
   89140:	dd400515 	stw	r21,20(sp)
   89144:	dd000415 	stw	r20,16(sp)
   89148:	dc800215 	stw	r18,8(sp)
   8914c:	dfc00615 	stw	ra,24(sp)
   89150:	2825883a 	mov	r18,r5
   89154:	dcc00315 	stw	r19,12(sp)
   89158:	3029883a 	mov	r20,r6
   8915c:	202b883a 	mov	r21,r4
   89160:	29400117 	ldw	r5,4(r5)
   89164:	1c40030e 	bge	r3,r17,89174 <__lshift+0x54>
   89168:	18c7883a 	add	r3,r3,r3
   8916c:	29400044 	addi	r5,r5,1
   89170:	1c7ffd16 	blt	r3,r17,89168 <__lshift+0x48>
   89174:	a809883a 	mov	r4,r21
   89178:	0088d5c0 	call	88d5c <_Balloc>
   8917c:	1027883a 	mov	r19,r2
   89180:	11400504 	addi	r5,r2,20
   89184:	0400090e 	bge	zero,r16,891ac <__lshift+0x8c>
   89188:	2805883a 	mov	r2,r5
   8918c:	0007883a 	mov	r3,zero
   89190:	18c00044 	addi	r3,r3,1
   89194:	10000015 	stw	zero,0(r2)
   89198:	10800104 	addi	r2,r2,4
   8919c:	80fffc1e 	bne	r16,r3,89190 <__lshift+0x70>
   891a0:	8405883a 	add	r2,r16,r16
   891a4:	1085883a 	add	r2,r2,r2
   891a8:	288b883a 	add	r5,r5,r2
   891ac:	90800417 	ldw	r2,16(r18)
   891b0:	91000504 	addi	r4,r18,20
   891b4:	a18007cc 	andi	r6,r20,31
   891b8:	1085883a 	add	r2,r2,r2
   891bc:	1085883a 	add	r2,r2,r2
   891c0:	208f883a 	add	r7,r4,r2
   891c4:	30001e26 	beq	r6,zero,89240 <__lshift+0x120>
   891c8:	00800804 	movi	r2,32
   891cc:	1191c83a 	sub	r8,r2,r6
   891d0:	0007883a 	mov	r3,zero
   891d4:	20800017 	ldw	r2,0(r4)
   891d8:	1184983a 	sll	r2,r2,r6
   891dc:	1884b03a 	or	r2,r3,r2
   891e0:	28800015 	stw	r2,0(r5)
   891e4:	20c00017 	ldw	r3,0(r4)
   891e8:	21000104 	addi	r4,r4,4
   891ec:	29400104 	addi	r5,r5,4
   891f0:	1a06d83a 	srl	r3,r3,r8
   891f4:	21fff736 	bltu	r4,r7,891d4 <__lshift+0xb4>
   891f8:	28c00015 	stw	r3,0(r5)
   891fc:	18000126 	beq	r3,zero,89204 <__lshift+0xe4>
   89200:	8c400044 	addi	r17,r17,1
   89204:	88bfffc4 	addi	r2,r17,-1
   89208:	98800415 	stw	r2,16(r19)
   8920c:	a809883a 	mov	r4,r21
   89210:	900b883a 	mov	r5,r18
   89214:	00887dc0 	call	887dc <_Bfree>
   89218:	9805883a 	mov	r2,r19
   8921c:	dfc00617 	ldw	ra,24(sp)
   89220:	dd400517 	ldw	r21,20(sp)
   89224:	dd000417 	ldw	r20,16(sp)
   89228:	dcc00317 	ldw	r19,12(sp)
   8922c:	dc800217 	ldw	r18,8(sp)
   89230:	dc400117 	ldw	r17,4(sp)
   89234:	dc000017 	ldw	r16,0(sp)
   89238:	dec00704 	addi	sp,sp,28
   8923c:	f800283a 	ret
   89240:	20800017 	ldw	r2,0(r4)
   89244:	21000104 	addi	r4,r4,4
   89248:	28800015 	stw	r2,0(r5)
   8924c:	29400104 	addi	r5,r5,4
   89250:	21ffec2e 	bgeu	r4,r7,89204 <__lshift+0xe4>
   89254:	20800017 	ldw	r2,0(r4)
   89258:	21000104 	addi	r4,r4,4
   8925c:	28800015 	stw	r2,0(r5)
   89260:	29400104 	addi	r5,r5,4
   89264:	21fff636 	bltu	r4,r7,89240 <__lshift+0x120>
   89268:	003fe606 	br	89204 <__lshift+0xe4>

0008926c <__multiply>:
   8926c:	defff004 	addi	sp,sp,-64
   89270:	dc800815 	stw	r18,32(sp)
   89274:	dc400715 	stw	r17,28(sp)
   89278:	2c800417 	ldw	r18,16(r5)
   8927c:	34400417 	ldw	r17,16(r6)
   89280:	dcc00915 	stw	r19,36(sp)
   89284:	dc000615 	stw	r16,24(sp)
   89288:	dfc00f15 	stw	ra,60(sp)
   8928c:	df000e15 	stw	fp,56(sp)
   89290:	ddc00d15 	stw	r23,52(sp)
   89294:	dd800c15 	stw	r22,48(sp)
   89298:	dd400b15 	stw	r21,44(sp)
   8929c:	dd000a15 	stw	r20,40(sp)
   892a0:	2821883a 	mov	r16,r5
   892a4:	3027883a 	mov	r19,r6
   892a8:	9440040e 	bge	r18,r17,892bc <__multiply+0x50>
   892ac:	8825883a 	mov	r18,r17
   892b0:	2c400417 	ldw	r17,16(r5)
   892b4:	2827883a 	mov	r19,r5
   892b8:	3021883a 	mov	r16,r6
   892bc:	80800217 	ldw	r2,8(r16)
   892c0:	9447883a 	add	r3,r18,r17
   892c4:	d8c00415 	stw	r3,16(sp)
   892c8:	81400117 	ldw	r5,4(r16)
   892cc:	10c0010e 	bge	r2,r3,892d4 <__multiply+0x68>
   892d0:	29400044 	addi	r5,r5,1
   892d4:	0088d5c0 	call	88d5c <_Balloc>
   892d8:	d8800515 	stw	r2,20(sp)
   892dc:	d9000417 	ldw	r4,16(sp)
   892e0:	d8c00517 	ldw	r3,20(sp)
   892e4:	2105883a 	add	r2,r4,r4
   892e8:	1085883a 	add	r2,r2,r2
   892ec:	19000504 	addi	r4,r3,20
   892f0:	2085883a 	add	r2,r4,r2
   892f4:	d8800315 	stw	r2,12(sp)
   892f8:	2080052e 	bgeu	r4,r2,89310 <__multiply+0xa4>
   892fc:	2005883a 	mov	r2,r4
   89300:	d8c00317 	ldw	r3,12(sp)
   89304:	10000015 	stw	zero,0(r2)
   89308:	10800104 	addi	r2,r2,4
   8930c:	10fffc36 	bltu	r2,r3,89300 <__multiply+0x94>
   89310:	8c45883a 	add	r2,r17,r17
   89314:	9487883a 	add	r3,r18,r18
   89318:	9dc00504 	addi	r23,r19,20
   8931c:	1085883a 	add	r2,r2,r2
   89320:	84000504 	addi	r16,r16,20
   89324:	18c7883a 	add	r3,r3,r3
   89328:	b885883a 	add	r2,r23,r2
   8932c:	dc000015 	stw	r16,0(sp)
   89330:	d8800215 	stw	r2,8(sp)
   89334:	80f9883a 	add	fp,r16,r3
   89338:	b880432e 	bgeu	r23,r2,89448 <__multiply+0x1dc>
   8933c:	d9000115 	stw	r4,4(sp)
   89340:	b9000017 	ldw	r4,0(r23)
   89344:	253fffcc 	andi	r20,r4,65535
   89348:	a0001a26 	beq	r20,zero,893b4 <__multiply+0x148>
   8934c:	dcc00017 	ldw	r19,0(sp)
   89350:	dc800117 	ldw	r18,4(sp)
   89354:	002b883a 	mov	r21,zero
   89358:	9c400017 	ldw	r17,0(r19)
   8935c:	94000017 	ldw	r16,0(r18)
   89360:	a009883a 	mov	r4,r20
   89364:	897fffcc 	andi	r5,r17,65535
   89368:	008f3380 	call	8f338 <__mulsi3>
   8936c:	880ad43a 	srli	r5,r17,16
   89370:	80ffffcc 	andi	r3,r16,65535
   89374:	a8c7883a 	add	r3,r21,r3
   89378:	a009883a 	mov	r4,r20
   8937c:	10e3883a 	add	r17,r2,r3
   89380:	8020d43a 	srli	r16,r16,16
   89384:	008f3380 	call	8f338 <__mulsi3>
   89388:	8806d43a 	srli	r3,r17,16
   8938c:	1405883a 	add	r2,r2,r16
   89390:	9cc00104 	addi	r19,r19,4
   89394:	1887883a 	add	r3,r3,r2
   89398:	90c0008d 	sth	r3,2(r18)
   8939c:	9440000d 	sth	r17,0(r18)
   893a0:	182ad43a 	srli	r21,r3,16
   893a4:	94800104 	addi	r18,r18,4
   893a8:	9f3feb36 	bltu	r19,fp,89358 <__multiply+0xec>
   893ac:	95400015 	stw	r21,0(r18)
   893b0:	b9000017 	ldw	r4,0(r23)
   893b4:	202ad43a 	srli	r21,r4,16
   893b8:	a8001c26 	beq	r21,zero,8942c <__multiply+0x1c0>
   893bc:	d9000117 	ldw	r4,4(sp)
   893c0:	dd000017 	ldw	r20,0(sp)
   893c4:	002d883a 	mov	r22,zero
   893c8:	24c00017 	ldw	r19,0(r4)
   893cc:	2025883a 	mov	r18,r4
   893d0:	9823883a 	mov	r17,r19
   893d4:	a4000017 	ldw	r16,0(r20)
   893d8:	a809883a 	mov	r4,r21
   893dc:	a5000104 	addi	r20,r20,4
   893e0:	817fffcc 	andi	r5,r16,65535
   893e4:	008f3380 	call	8f338 <__mulsi3>
   893e8:	8806d43a 	srli	r3,r17,16
   893ec:	800ad43a 	srli	r5,r16,16
   893f0:	94c0000d 	sth	r19,0(r18)
   893f4:	b0c7883a 	add	r3,r22,r3
   893f8:	10e1883a 	add	r16,r2,r3
   893fc:	9400008d 	sth	r16,2(r18)
   89400:	a809883a 	mov	r4,r21
   89404:	94800104 	addi	r18,r18,4
   89408:	008f3380 	call	8f338 <__mulsi3>
   8940c:	94400017 	ldw	r17,0(r18)
   89410:	8020d43a 	srli	r16,r16,16
   89414:	88ffffcc 	andi	r3,r17,65535
   89418:	10c5883a 	add	r2,r2,r3
   8941c:	80a7883a 	add	r19,r16,r2
   89420:	982cd43a 	srli	r22,r19,16
   89424:	a73feb36 	bltu	r20,fp,893d4 <__multiply+0x168>
   89428:	94c00015 	stw	r19,0(r18)
   8942c:	d8800217 	ldw	r2,8(sp)
   89430:	bdc00104 	addi	r23,r23,4
   89434:	b880042e 	bgeu	r23,r2,89448 <__multiply+0x1dc>
   89438:	d8c00117 	ldw	r3,4(sp)
   8943c:	18c00104 	addi	r3,r3,4
   89440:	d8c00115 	stw	r3,4(sp)
   89444:	003fbe06 	br	89340 <__multiply+0xd4>
   89448:	d9000417 	ldw	r4,16(sp)
   8944c:	01000c0e 	bge	zero,r4,89480 <__multiply+0x214>
   89450:	d8c00317 	ldw	r3,12(sp)
   89454:	18bfff17 	ldw	r2,-4(r3)
   89458:	18ffff04 	addi	r3,r3,-4
   8945c:	10000326 	beq	r2,zero,8946c <__multiply+0x200>
   89460:	00000706 	br	89480 <__multiply+0x214>
   89464:	18800017 	ldw	r2,0(r3)
   89468:	1000051e 	bne	r2,zero,89480 <__multiply+0x214>
   8946c:	d9000417 	ldw	r4,16(sp)
   89470:	18ffff04 	addi	r3,r3,-4
   89474:	213fffc4 	addi	r4,r4,-1
   89478:	d9000415 	stw	r4,16(sp)
   8947c:	203ff91e 	bne	r4,zero,89464 <__multiply+0x1f8>
   89480:	d8800417 	ldw	r2,16(sp)
   89484:	d8c00517 	ldw	r3,20(sp)
   89488:	18800415 	stw	r2,16(r3)
   8948c:	1805883a 	mov	r2,r3
   89490:	dfc00f17 	ldw	ra,60(sp)
   89494:	df000e17 	ldw	fp,56(sp)
   89498:	ddc00d17 	ldw	r23,52(sp)
   8949c:	dd800c17 	ldw	r22,48(sp)
   894a0:	dd400b17 	ldw	r21,44(sp)
   894a4:	dd000a17 	ldw	r20,40(sp)
   894a8:	dcc00917 	ldw	r19,36(sp)
   894ac:	dc800817 	ldw	r18,32(sp)
   894b0:	dc400717 	ldw	r17,28(sp)
   894b4:	dc000617 	ldw	r16,24(sp)
   894b8:	dec01004 	addi	sp,sp,64
   894bc:	f800283a 	ret

000894c0 <__i2b>:
   894c0:	defffd04 	addi	sp,sp,-12
   894c4:	dc000015 	stw	r16,0(sp)
   894c8:	04000044 	movi	r16,1
   894cc:	dc800115 	stw	r18,4(sp)
   894d0:	2825883a 	mov	r18,r5
   894d4:	800b883a 	mov	r5,r16
   894d8:	dfc00215 	stw	ra,8(sp)
   894dc:	0088d5c0 	call	88d5c <_Balloc>
   894e0:	14000415 	stw	r16,16(r2)
   894e4:	14800515 	stw	r18,20(r2)
   894e8:	dfc00217 	ldw	ra,8(sp)
   894ec:	dc800117 	ldw	r18,4(sp)
   894f0:	dc000017 	ldw	r16,0(sp)
   894f4:	dec00304 	addi	sp,sp,12
   894f8:	f800283a 	ret

000894fc <__multadd>:
   894fc:	defff604 	addi	sp,sp,-40
   89500:	dd800615 	stw	r22,24(sp)
   89504:	2d800417 	ldw	r22,16(r5)
   89508:	df000815 	stw	fp,32(sp)
   8950c:	ddc00715 	stw	r23,28(sp)
   89510:	dd400515 	stw	r21,20(sp)
   89514:	dd000415 	stw	r20,16(sp)
   89518:	dcc00315 	stw	r19,12(sp)
   8951c:	dc800215 	stw	r18,8(sp)
   89520:	dfc00915 	stw	ra,36(sp)
   89524:	dc400115 	stw	r17,4(sp)
   89528:	dc000015 	stw	r16,0(sp)
   8952c:	282f883a 	mov	r23,r5
   89530:	2039883a 	mov	fp,r4
   89534:	302b883a 	mov	r21,r6
   89538:	3829883a 	mov	r20,r7
   8953c:	2c800504 	addi	r18,r5,20
   89540:	0027883a 	mov	r19,zero
   89544:	94400017 	ldw	r17,0(r18)
   89548:	a80b883a 	mov	r5,r21
   8954c:	9cc00044 	addi	r19,r19,1
   89550:	893fffcc 	andi	r4,r17,65535
   89554:	008f3380 	call	8f338 <__mulsi3>
   89558:	8808d43a 	srli	r4,r17,16
   8955c:	1521883a 	add	r16,r2,r20
   89560:	a80b883a 	mov	r5,r21
   89564:	008f3380 	call	8f338 <__mulsi3>
   89568:	8008d43a 	srli	r4,r16,16
   8956c:	843fffcc 	andi	r16,r16,65535
   89570:	1105883a 	add	r2,r2,r4
   89574:	1006943a 	slli	r3,r2,16
   89578:	1028d43a 	srli	r20,r2,16
   8957c:	1c07883a 	add	r3,r3,r16
   89580:	90c00015 	stw	r3,0(r18)
   89584:	94800104 	addi	r18,r18,4
   89588:	9dbfee16 	blt	r19,r22,89544 <__multadd+0x48>
   8958c:	a0000826 	beq	r20,zero,895b0 <__multadd+0xb4>
   89590:	b8800217 	ldw	r2,8(r23)
   89594:	b080130e 	bge	r22,r2,895e4 <__multadd+0xe8>
   89598:	b585883a 	add	r2,r22,r22
   8959c:	1085883a 	add	r2,r2,r2
   895a0:	15c5883a 	add	r2,r2,r23
   895a4:	b0c00044 	addi	r3,r22,1
   895a8:	15000515 	stw	r20,20(r2)
   895ac:	b8c00415 	stw	r3,16(r23)
   895b0:	b805883a 	mov	r2,r23
   895b4:	dfc00917 	ldw	ra,36(sp)
   895b8:	df000817 	ldw	fp,32(sp)
   895bc:	ddc00717 	ldw	r23,28(sp)
   895c0:	dd800617 	ldw	r22,24(sp)
   895c4:	dd400517 	ldw	r21,20(sp)
   895c8:	dd000417 	ldw	r20,16(sp)
   895cc:	dcc00317 	ldw	r19,12(sp)
   895d0:	dc800217 	ldw	r18,8(sp)
   895d4:	dc400117 	ldw	r17,4(sp)
   895d8:	dc000017 	ldw	r16,0(sp)
   895dc:	dec00a04 	addi	sp,sp,40
   895e0:	f800283a 	ret
   895e4:	b9400117 	ldw	r5,4(r23)
   895e8:	e009883a 	mov	r4,fp
   895ec:	29400044 	addi	r5,r5,1
   895f0:	0088d5c0 	call	88d5c <_Balloc>
   895f4:	b9800417 	ldw	r6,16(r23)
   895f8:	b9400304 	addi	r5,r23,12
   895fc:	11000304 	addi	r4,r2,12
   89600:	318d883a 	add	r6,r6,r6
   89604:	318d883a 	add	r6,r6,r6
   89608:	31800204 	addi	r6,r6,8
   8960c:	1023883a 	mov	r17,r2
   89610:	008865c0 	call	8865c <memcpy>
   89614:	b80b883a 	mov	r5,r23
   89618:	e009883a 	mov	r4,fp
   8961c:	00887dc0 	call	887dc <_Bfree>
   89620:	882f883a 	mov	r23,r17
   89624:	003fdc06 	br	89598 <__multadd+0x9c>

00089628 <__pow5mult>:
   89628:	defffa04 	addi	sp,sp,-24
   8962c:	308000cc 	andi	r2,r6,3
   89630:	dd000415 	stw	r20,16(sp)
   89634:	dcc00315 	stw	r19,12(sp)
   89638:	dc000015 	stw	r16,0(sp)
   8963c:	dfc00515 	stw	ra,20(sp)
   89640:	dc800215 	stw	r18,8(sp)
   89644:	dc400115 	stw	r17,4(sp)
   89648:	3021883a 	mov	r16,r6
   8964c:	2027883a 	mov	r19,r4
   89650:	2829883a 	mov	r20,r5
   89654:	10002b1e 	bne	r2,zero,89704 <__pow5mult+0xdc>
   89658:	8025d0ba 	srai	r18,r16,2
   8965c:	90001b26 	beq	r18,zero,896cc <__pow5mult+0xa4>
   89660:	9c001217 	ldw	r16,72(r19)
   89664:	8000081e 	bne	r16,zero,89688 <__pow5mult+0x60>
   89668:	00003006 	br	8972c <__pow5mult+0x104>
   8966c:	800b883a 	mov	r5,r16
   89670:	800d883a 	mov	r6,r16
   89674:	9809883a 	mov	r4,r19
   89678:	90001426 	beq	r18,zero,896cc <__pow5mult+0xa4>
   8967c:	80800017 	ldw	r2,0(r16)
   89680:	10001b26 	beq	r2,zero,896f0 <__pow5mult+0xc8>
   89684:	1021883a 	mov	r16,r2
   89688:	9080004c 	andi	r2,r18,1
   8968c:	1005003a 	cmpeq	r2,r2,zero
   89690:	9025d07a 	srai	r18,r18,1
   89694:	800d883a 	mov	r6,r16
   89698:	9809883a 	mov	r4,r19
   8969c:	a00b883a 	mov	r5,r20
   896a0:	103ff21e 	bne	r2,zero,8966c <__pow5mult+0x44>
   896a4:	008926c0 	call	8926c <__multiply>
   896a8:	a00b883a 	mov	r5,r20
   896ac:	9809883a 	mov	r4,r19
   896b0:	1023883a 	mov	r17,r2
   896b4:	00887dc0 	call	887dc <_Bfree>
   896b8:	8829883a 	mov	r20,r17
   896bc:	800b883a 	mov	r5,r16
   896c0:	800d883a 	mov	r6,r16
   896c4:	9809883a 	mov	r4,r19
   896c8:	903fec1e 	bne	r18,zero,8967c <__pow5mult+0x54>
   896cc:	a005883a 	mov	r2,r20
   896d0:	dfc00517 	ldw	ra,20(sp)
   896d4:	dd000417 	ldw	r20,16(sp)
   896d8:	dcc00317 	ldw	r19,12(sp)
   896dc:	dc800217 	ldw	r18,8(sp)
   896e0:	dc400117 	ldw	r17,4(sp)
   896e4:	dc000017 	ldw	r16,0(sp)
   896e8:	dec00604 	addi	sp,sp,24
   896ec:	f800283a 	ret
   896f0:	008926c0 	call	8926c <__multiply>
   896f4:	80800015 	stw	r2,0(r16)
   896f8:	1021883a 	mov	r16,r2
   896fc:	10000015 	stw	zero,0(r2)
   89700:	003fe106 	br	89688 <__pow5mult+0x60>
   89704:	1085883a 	add	r2,r2,r2
   89708:	00c00274 	movhi	r3,9
   8970c:	18cf4204 	addi	r3,r3,15624
   89710:	1085883a 	add	r2,r2,r2
   89714:	10c5883a 	add	r2,r2,r3
   89718:	11bfff17 	ldw	r6,-4(r2)
   8971c:	000f883a 	mov	r7,zero
   89720:	00894fc0 	call	894fc <__multadd>
   89724:	1029883a 	mov	r20,r2
   89728:	003fcb06 	br	89658 <__pow5mult+0x30>
   8972c:	9809883a 	mov	r4,r19
   89730:	01409c44 	movi	r5,625
   89734:	00894c00 	call	894c0 <__i2b>
   89738:	98801215 	stw	r2,72(r19)
   8973c:	1021883a 	mov	r16,r2
   89740:	10000015 	stw	zero,0(r2)
   89744:	003fd006 	br	89688 <__pow5mult+0x60>

00089748 <__s2b>:
   89748:	defff904 	addi	sp,sp,-28
   8974c:	dcc00315 	stw	r19,12(sp)
   89750:	dc800215 	stw	r18,8(sp)
   89754:	2827883a 	mov	r19,r5
   89758:	2025883a 	mov	r18,r4
   8975c:	01400244 	movi	r5,9
   89760:	39000204 	addi	r4,r7,8
   89764:	dd000415 	stw	r20,16(sp)
   89768:	dc400115 	stw	r17,4(sp)
   8976c:	dfc00615 	stw	ra,24(sp)
   89770:	dd400515 	stw	r21,20(sp)
   89774:	dc000015 	stw	r16,0(sp)
   89778:	3829883a 	mov	r20,r7
   8977c:	3023883a 	mov	r17,r6
   89780:	008f2680 	call	8f268 <__divsi3>
   89784:	00c00044 	movi	r3,1
   89788:	1880350e 	bge	r3,r2,89860 <__s2b+0x118>
   8978c:	000b883a 	mov	r5,zero
   89790:	18c7883a 	add	r3,r3,r3
   89794:	29400044 	addi	r5,r5,1
   89798:	18bffd16 	blt	r3,r2,89790 <__s2b+0x48>
   8979c:	9009883a 	mov	r4,r18
   897a0:	0088d5c0 	call	88d5c <_Balloc>
   897a4:	1011883a 	mov	r8,r2
   897a8:	d8800717 	ldw	r2,28(sp)
   897ac:	00c00044 	movi	r3,1
   897b0:	01800244 	movi	r6,9
   897b4:	40800515 	stw	r2,20(r8)
   897b8:	40c00415 	stw	r3,16(r8)
   897bc:	3440260e 	bge	r6,r17,89858 <__s2b+0x110>
   897c0:	3021883a 	mov	r16,r6
   897c4:	99ab883a 	add	r21,r19,r6
   897c8:	9c05883a 	add	r2,r19,r16
   897cc:	11c00007 	ldb	r7,0(r2)
   897d0:	400b883a 	mov	r5,r8
   897d4:	9009883a 	mov	r4,r18
   897d8:	39fff404 	addi	r7,r7,-48
   897dc:	01800284 	movi	r6,10
   897e0:	00894fc0 	call	894fc <__multadd>
   897e4:	84000044 	addi	r16,r16,1
   897e8:	1011883a 	mov	r8,r2
   897ec:	8c3ff61e 	bne	r17,r16,897c8 <__s2b+0x80>
   897f0:	ac45883a 	add	r2,r21,r17
   897f4:	117ffe04 	addi	r5,r2,-8
   897f8:	880d883a 	mov	r6,r17
   897fc:	35000c0e 	bge	r6,r20,89830 <__s2b+0xe8>
   89800:	a185c83a 	sub	r2,r20,r6
   89804:	2821883a 	mov	r16,r5
   89808:	28a3883a 	add	r17,r5,r2
   8980c:	81c00007 	ldb	r7,0(r16)
   89810:	400b883a 	mov	r5,r8
   89814:	9009883a 	mov	r4,r18
   89818:	39fff404 	addi	r7,r7,-48
   8981c:	01800284 	movi	r6,10
   89820:	00894fc0 	call	894fc <__multadd>
   89824:	84000044 	addi	r16,r16,1
   89828:	1011883a 	mov	r8,r2
   8982c:	847ff71e 	bne	r16,r17,8980c <__s2b+0xc4>
   89830:	4005883a 	mov	r2,r8
   89834:	dfc00617 	ldw	ra,24(sp)
   89838:	dd400517 	ldw	r21,20(sp)
   8983c:	dd000417 	ldw	r20,16(sp)
   89840:	dcc00317 	ldw	r19,12(sp)
   89844:	dc800217 	ldw	r18,8(sp)
   89848:	dc400117 	ldw	r17,4(sp)
   8984c:	dc000017 	ldw	r16,0(sp)
   89850:	dec00704 	addi	sp,sp,28
   89854:	f800283a 	ret
   89858:	99400284 	addi	r5,r19,10
   8985c:	003fe706 	br	897fc <__s2b+0xb4>
   89860:	000b883a 	mov	r5,zero
   89864:	003fcd06 	br	8979c <__s2b+0x54>

00089868 <_read_r>:
   89868:	defffd04 	addi	sp,sp,-12
   8986c:	dc000015 	stw	r16,0(sp)
   89870:	04000274 	movhi	r16,9
   89874:	841d8504 	addi	r16,r16,30228
   89878:	dc400115 	stw	r17,4(sp)
   8987c:	80000015 	stw	zero,0(r16)
   89880:	2023883a 	mov	r17,r4
   89884:	2809883a 	mov	r4,r5
   89888:	300b883a 	mov	r5,r6
   8988c:	380d883a 	mov	r6,r7
   89890:	dfc00215 	stw	ra,8(sp)
   89894:	00905b80 	call	905b8 <read>
   89898:	1007883a 	mov	r3,r2
   8989c:	00bfffc4 	movi	r2,-1
   898a0:	18800626 	beq	r3,r2,898bc <_read_r+0x54>
   898a4:	1805883a 	mov	r2,r3
   898a8:	dfc00217 	ldw	ra,8(sp)
   898ac:	dc400117 	ldw	r17,4(sp)
   898b0:	dc000017 	ldw	r16,0(sp)
   898b4:	dec00304 	addi	sp,sp,12
   898b8:	f800283a 	ret
   898bc:	80800017 	ldw	r2,0(r16)
   898c0:	103ff826 	beq	r2,zero,898a4 <_read_r+0x3c>
   898c4:	88800015 	stw	r2,0(r17)
   898c8:	1805883a 	mov	r2,r3
   898cc:	dfc00217 	ldw	ra,8(sp)
   898d0:	dc400117 	ldw	r17,4(sp)
   898d4:	dc000017 	ldw	r16,0(sp)
   898d8:	dec00304 	addi	sp,sp,12
   898dc:	f800283a 	ret

000898e0 <_realloc_r>:
   898e0:	defff404 	addi	sp,sp,-48
   898e4:	dd800815 	stw	r22,32(sp)
   898e8:	dc800415 	stw	r18,16(sp)
   898ec:	dc400315 	stw	r17,12(sp)
   898f0:	dfc00b15 	stw	ra,44(sp)
   898f4:	df000a15 	stw	fp,40(sp)
   898f8:	ddc00915 	stw	r23,36(sp)
   898fc:	dd400715 	stw	r21,28(sp)
   89900:	dd000615 	stw	r20,24(sp)
   89904:	dcc00515 	stw	r19,20(sp)
   89908:	dc000215 	stw	r16,8(sp)
   8990c:	2825883a 	mov	r18,r5
   89910:	3023883a 	mov	r17,r6
   89914:	202d883a 	mov	r22,r4
   89918:	2800c926 	beq	r5,zero,89c40 <_realloc_r+0x360>
   8991c:	00902940 	call	90294 <__malloc_lock>
   89920:	943ffe04 	addi	r16,r18,-8
   89924:	88c002c4 	addi	r3,r17,11
   89928:	00800584 	movi	r2,22
   8992c:	82000117 	ldw	r8,4(r16)
   89930:	10c01b2e 	bgeu	r2,r3,899a0 <_realloc_r+0xc0>
   89934:	00bffe04 	movi	r2,-8
   89938:	188e703a 	and	r7,r3,r2
   8993c:	3839883a 	mov	fp,r7
   89940:	38001a16 	blt	r7,zero,899ac <_realloc_r+0xcc>
   89944:	e4401936 	bltu	fp,r17,899ac <_realloc_r+0xcc>
   89948:	013fff04 	movi	r4,-4
   8994c:	4126703a 	and	r19,r8,r4
   89950:	99c02616 	blt	r19,r7,899ec <_realloc_r+0x10c>
   89954:	802b883a 	mov	r21,r16
   89958:	9829883a 	mov	r20,r19
   8995c:	84000204 	addi	r16,r16,8
   89960:	a80f883a 	mov	r7,r21
   89964:	a70dc83a 	sub	r6,r20,fp
   89968:	008003c4 	movi	r2,15
   8996c:	1180c136 	bltu	r2,r6,89c74 <_realloc_r+0x394>
   89970:	38800117 	ldw	r2,4(r7)
   89974:	a549883a 	add	r4,r20,r21
   89978:	1080004c 	andi	r2,r2,1
   8997c:	a084b03a 	or	r2,r20,r2
   89980:	38800115 	stw	r2,4(r7)
   89984:	20c00117 	ldw	r3,4(r4)
   89988:	18c00054 	ori	r3,r3,1
   8998c:	20c00115 	stw	r3,4(r4)
   89990:	b009883a 	mov	r4,r22
   89994:	00902b40 	call	902b4 <__malloc_unlock>
   89998:	8023883a 	mov	r17,r16
   8999c:	00000606 	br	899b8 <_realloc_r+0xd8>
   899a0:	01c00404 	movi	r7,16
   899a4:	3839883a 	mov	fp,r7
   899a8:	e47fe72e 	bgeu	fp,r17,89948 <_realloc_r+0x68>
   899ac:	00800304 	movi	r2,12
   899b0:	0023883a 	mov	r17,zero
   899b4:	b0800015 	stw	r2,0(r22)
   899b8:	8805883a 	mov	r2,r17
   899bc:	dfc00b17 	ldw	ra,44(sp)
   899c0:	df000a17 	ldw	fp,40(sp)
   899c4:	ddc00917 	ldw	r23,36(sp)
   899c8:	dd800817 	ldw	r22,32(sp)
   899cc:	dd400717 	ldw	r21,28(sp)
   899d0:	dd000617 	ldw	r20,24(sp)
   899d4:	dcc00517 	ldw	r19,20(sp)
   899d8:	dc800417 	ldw	r18,16(sp)
   899dc:	dc400317 	ldw	r17,12(sp)
   899e0:	dc000217 	ldw	r16,8(sp)
   899e4:	dec00c04 	addi	sp,sp,48
   899e8:	f800283a 	ret
   899ec:	00800274 	movhi	r2,9
   899f0:	1090af04 	addi	r2,r2,17084
   899f4:	12400217 	ldw	r9,8(r2)
   899f8:	84cd883a 	add	r6,r16,r19
   899fc:	802b883a 	mov	r21,r16
   89a00:	3240b926 	beq	r6,r9,89ce8 <_realloc_r+0x408>
   89a04:	31400117 	ldw	r5,4(r6)
   89a08:	00bfff84 	movi	r2,-2
   89a0c:	2884703a 	and	r2,r5,r2
   89a10:	1185883a 	add	r2,r2,r6
   89a14:	10c00117 	ldw	r3,4(r2)
   89a18:	18c0004c 	andi	r3,r3,1
   89a1c:	1807003a 	cmpeq	r3,r3,zero
   89a20:	1800a326 	beq	r3,zero,89cb0 <_realloc_r+0x3d0>
   89a24:	2908703a 	and	r4,r5,r4
   89a28:	9929883a 	add	r20,r19,r4
   89a2c:	a1c0a30e 	bge	r20,r7,89cbc <_realloc_r+0x3dc>
   89a30:	4080004c 	andi	r2,r8,1
   89a34:	1000551e 	bne	r2,zero,89b8c <_realloc_r+0x2ac>
   89a38:	80800017 	ldw	r2,0(r16)
   89a3c:	80afc83a 	sub	r23,r16,r2
   89a40:	b8c00117 	ldw	r3,4(r23)
   89a44:	00bfff04 	movi	r2,-4
   89a48:	1884703a 	and	r2,r3,r2
   89a4c:	30002e26 	beq	r6,zero,89b08 <_realloc_r+0x228>
   89a50:	3240b926 	beq	r6,r9,89d38 <_realloc_r+0x458>
   89a54:	98a9883a 	add	r20,r19,r2
   89a58:	2509883a 	add	r4,r4,r20
   89a5c:	d9000015 	stw	r4,0(sp)
   89a60:	21c02a16 	blt	r4,r7,89b0c <_realloc_r+0x22c>
   89a64:	30800317 	ldw	r2,12(r6)
   89a68:	30c00217 	ldw	r3,8(r6)
   89a6c:	01400904 	movi	r5,36
   89a70:	99bfff04 	addi	r6,r19,-4
   89a74:	18800315 	stw	r2,12(r3)
   89a78:	10c00215 	stw	r3,8(r2)
   89a7c:	b9000317 	ldw	r4,12(r23)
   89a80:	b8800217 	ldw	r2,8(r23)
   89a84:	b82b883a 	mov	r21,r23
   89a88:	bc000204 	addi	r16,r23,8
   89a8c:	20800215 	stw	r2,8(r4)
   89a90:	11000315 	stw	r4,12(r2)
   89a94:	2980e436 	bltu	r5,r6,89e28 <_realloc_r+0x548>
   89a98:	008004c4 	movi	r2,19
   89a9c:	9009883a 	mov	r4,r18
   89aa0:	8011883a 	mov	r8,r16
   89aa4:	11800f2e 	bgeu	r2,r6,89ae4 <_realloc_r+0x204>
   89aa8:	90800017 	ldw	r2,0(r18)
   89aac:	ba000404 	addi	r8,r23,16
   89ab0:	91000204 	addi	r4,r18,8
   89ab4:	b8800215 	stw	r2,8(r23)
   89ab8:	90c00117 	ldw	r3,4(r18)
   89abc:	008006c4 	movi	r2,27
   89ac0:	b8c00315 	stw	r3,12(r23)
   89ac4:	1180072e 	bgeu	r2,r6,89ae4 <_realloc_r+0x204>
   89ac8:	90c00217 	ldw	r3,8(r18)
   89acc:	ba000604 	addi	r8,r23,24
   89ad0:	91000404 	addi	r4,r18,16
   89ad4:	b8c00415 	stw	r3,16(r23)
   89ad8:	90800317 	ldw	r2,12(r18)
   89adc:	b8800515 	stw	r2,20(r23)
   89ae0:	3140e726 	beq	r6,r5,89e80 <_realloc_r+0x5a0>
   89ae4:	20800017 	ldw	r2,0(r4)
   89ae8:	dd000017 	ldw	r20,0(sp)
   89aec:	b80f883a 	mov	r7,r23
   89af0:	40800015 	stw	r2,0(r8)
   89af4:	20c00117 	ldw	r3,4(r4)
   89af8:	40c00115 	stw	r3,4(r8)
   89afc:	20800217 	ldw	r2,8(r4)
   89b00:	40800215 	stw	r2,8(r8)
   89b04:	003f9706 	br	89964 <_realloc_r+0x84>
   89b08:	98a9883a 	add	r20,r19,r2
   89b0c:	a1c01f16 	blt	r20,r7,89b8c <_realloc_r+0x2ac>
   89b10:	b8c00317 	ldw	r3,12(r23)
   89b14:	b8800217 	ldw	r2,8(r23)
   89b18:	99bfff04 	addi	r6,r19,-4
   89b1c:	01400904 	movi	r5,36
   89b20:	b82b883a 	mov	r21,r23
   89b24:	18800215 	stw	r2,8(r3)
   89b28:	10c00315 	stw	r3,12(r2)
   89b2c:	bc000204 	addi	r16,r23,8
   89b30:	2980c336 	bltu	r5,r6,89e40 <_realloc_r+0x560>
   89b34:	008004c4 	movi	r2,19
   89b38:	9009883a 	mov	r4,r18
   89b3c:	8011883a 	mov	r8,r16
   89b40:	11800f2e 	bgeu	r2,r6,89b80 <_realloc_r+0x2a0>
   89b44:	90800017 	ldw	r2,0(r18)
   89b48:	ba000404 	addi	r8,r23,16
   89b4c:	91000204 	addi	r4,r18,8
   89b50:	b8800215 	stw	r2,8(r23)
   89b54:	90c00117 	ldw	r3,4(r18)
   89b58:	008006c4 	movi	r2,27
   89b5c:	b8c00315 	stw	r3,12(r23)
   89b60:	1180072e 	bgeu	r2,r6,89b80 <_realloc_r+0x2a0>
   89b64:	90c00217 	ldw	r3,8(r18)
   89b68:	ba000604 	addi	r8,r23,24
   89b6c:	91000404 	addi	r4,r18,16
   89b70:	b8c00415 	stw	r3,16(r23)
   89b74:	90800317 	ldw	r2,12(r18)
   89b78:	b8800515 	stw	r2,20(r23)
   89b7c:	3140c726 	beq	r6,r5,89e9c <_realloc_r+0x5bc>
   89b80:	20800017 	ldw	r2,0(r4)
   89b84:	b80f883a 	mov	r7,r23
   89b88:	003fd906 	br	89af0 <_realloc_r+0x210>
   89b8c:	880b883a 	mov	r5,r17
   89b90:	b009883a 	mov	r4,r22
   89b94:	00818fc0 	call	818fc <_malloc_r>
   89b98:	1023883a 	mov	r17,r2
   89b9c:	10002526 	beq	r2,zero,89c34 <_realloc_r+0x354>
   89ba0:	80800117 	ldw	r2,4(r16)
   89ba4:	00ffff84 	movi	r3,-2
   89ba8:	893ffe04 	addi	r4,r17,-8
   89bac:	10c4703a 	and	r2,r2,r3
   89bb0:	8085883a 	add	r2,r16,r2
   89bb4:	20809526 	beq	r4,r2,89e0c <_realloc_r+0x52c>
   89bb8:	99bfff04 	addi	r6,r19,-4
   89bbc:	01c00904 	movi	r7,36
   89bc0:	39804536 	bltu	r7,r6,89cd8 <_realloc_r+0x3f8>
   89bc4:	008004c4 	movi	r2,19
   89bc8:	9009883a 	mov	r4,r18
   89bcc:	880b883a 	mov	r5,r17
   89bd0:	11800f2e 	bgeu	r2,r6,89c10 <_realloc_r+0x330>
   89bd4:	90800017 	ldw	r2,0(r18)
   89bd8:	89400204 	addi	r5,r17,8
   89bdc:	91000204 	addi	r4,r18,8
   89be0:	88800015 	stw	r2,0(r17)
   89be4:	90c00117 	ldw	r3,4(r18)
   89be8:	008006c4 	movi	r2,27
   89bec:	88c00115 	stw	r3,4(r17)
   89bf0:	1180072e 	bgeu	r2,r6,89c10 <_realloc_r+0x330>
   89bf4:	90c00217 	ldw	r3,8(r18)
   89bf8:	89400404 	addi	r5,r17,16
   89bfc:	91000404 	addi	r4,r18,16
   89c00:	88c00215 	stw	r3,8(r17)
   89c04:	90800317 	ldw	r2,12(r18)
   89c08:	88800315 	stw	r2,12(r17)
   89c0c:	31c09126 	beq	r6,r7,89e54 <_realloc_r+0x574>
   89c10:	20800017 	ldw	r2,0(r4)
   89c14:	28800015 	stw	r2,0(r5)
   89c18:	20c00117 	ldw	r3,4(r4)
   89c1c:	28c00115 	stw	r3,4(r5)
   89c20:	20800217 	ldw	r2,8(r4)
   89c24:	28800215 	stw	r2,8(r5)
   89c28:	900b883a 	mov	r5,r18
   89c2c:	b009883a 	mov	r4,r22
   89c30:	0080d140 	call	80d14 <_free_r>
   89c34:	b009883a 	mov	r4,r22
   89c38:	00902b40 	call	902b4 <__malloc_unlock>
   89c3c:	003f5e06 	br	899b8 <_realloc_r+0xd8>
   89c40:	300b883a 	mov	r5,r6
   89c44:	dfc00b17 	ldw	ra,44(sp)
   89c48:	df000a17 	ldw	fp,40(sp)
   89c4c:	ddc00917 	ldw	r23,36(sp)
   89c50:	dd800817 	ldw	r22,32(sp)
   89c54:	dd400717 	ldw	r21,28(sp)
   89c58:	dd000617 	ldw	r20,24(sp)
   89c5c:	dcc00517 	ldw	r19,20(sp)
   89c60:	dc800417 	ldw	r18,16(sp)
   89c64:	dc400317 	ldw	r17,12(sp)
   89c68:	dc000217 	ldw	r16,8(sp)
   89c6c:	dec00c04 	addi	sp,sp,48
   89c70:	00818fc1 	jmpi	818fc <_malloc_r>
   89c74:	38800117 	ldw	r2,4(r7)
   89c78:	e54b883a 	add	r5,fp,r21
   89c7c:	31000054 	ori	r4,r6,1
   89c80:	1080004c 	andi	r2,r2,1
   89c84:	1704b03a 	or	r2,r2,fp
   89c88:	38800115 	stw	r2,4(r7)
   89c8c:	29000115 	stw	r4,4(r5)
   89c90:	2987883a 	add	r3,r5,r6
   89c94:	18800117 	ldw	r2,4(r3)
   89c98:	29400204 	addi	r5,r5,8
   89c9c:	b009883a 	mov	r4,r22
   89ca0:	10800054 	ori	r2,r2,1
   89ca4:	18800115 	stw	r2,4(r3)
   89ca8:	0080d140 	call	80d14 <_free_r>
   89cac:	003f3806 	br	89990 <_realloc_r+0xb0>
   89cb0:	000d883a 	mov	r6,zero
   89cb4:	0009883a 	mov	r4,zero
   89cb8:	003f5d06 	br	89a30 <_realloc_r+0x150>
   89cbc:	30c00217 	ldw	r3,8(r6)
   89cc0:	30800317 	ldw	r2,12(r6)
   89cc4:	800f883a 	mov	r7,r16
   89cc8:	84000204 	addi	r16,r16,8
   89ccc:	10c00215 	stw	r3,8(r2)
   89cd0:	18800315 	stw	r2,12(r3)
   89cd4:	003f2306 	br	89964 <_realloc_r+0x84>
   89cd8:	8809883a 	mov	r4,r17
   89cdc:	900b883a 	mov	r5,r18
   89ce0:	00886fc0 	call	886fc <memmove>
   89ce4:	003fd006 	br	89c28 <_realloc_r+0x348>
   89ce8:	30800117 	ldw	r2,4(r6)
   89cec:	e0c00404 	addi	r3,fp,16
   89cf0:	1108703a 	and	r4,r2,r4
   89cf4:	9905883a 	add	r2,r19,r4
   89cf8:	10ff4d16 	blt	r2,r3,89a30 <_realloc_r+0x150>
   89cfc:	1705c83a 	sub	r2,r2,fp
   89d00:	870b883a 	add	r5,r16,fp
   89d04:	10800054 	ori	r2,r2,1
   89d08:	28800115 	stw	r2,4(r5)
   89d0c:	80c00117 	ldw	r3,4(r16)
   89d10:	00800274 	movhi	r2,9
   89d14:	1090af04 	addi	r2,r2,17084
   89d18:	b009883a 	mov	r4,r22
   89d1c:	18c0004c 	andi	r3,r3,1
   89d20:	e0c6b03a 	or	r3,fp,r3
   89d24:	11400215 	stw	r5,8(r2)
   89d28:	80c00115 	stw	r3,4(r16)
   89d2c:	00902b40 	call	902b4 <__malloc_unlock>
   89d30:	84400204 	addi	r17,r16,8
   89d34:	003f2006 	br	899b8 <_realloc_r+0xd8>
   89d38:	98a9883a 	add	r20,r19,r2
   89d3c:	2509883a 	add	r4,r4,r20
   89d40:	e0800404 	addi	r2,fp,16
   89d44:	d9000115 	stw	r4,4(sp)
   89d48:	20bf7016 	blt	r4,r2,89b0c <_realloc_r+0x22c>
   89d4c:	b8c00317 	ldw	r3,12(r23)
   89d50:	b8800217 	ldw	r2,8(r23)
   89d54:	99bfff04 	addi	r6,r19,-4
   89d58:	01400904 	movi	r5,36
   89d5c:	18800215 	stw	r2,8(r3)
   89d60:	10c00315 	stw	r3,12(r2)
   89d64:	bc400204 	addi	r17,r23,8
   89d68:	29804136 	bltu	r5,r6,89e70 <_realloc_r+0x590>
   89d6c:	008004c4 	movi	r2,19
   89d70:	9009883a 	mov	r4,r18
   89d74:	880f883a 	mov	r7,r17
   89d78:	11800f2e 	bgeu	r2,r6,89db8 <_realloc_r+0x4d8>
   89d7c:	90800017 	ldw	r2,0(r18)
   89d80:	b9c00404 	addi	r7,r23,16
   89d84:	91000204 	addi	r4,r18,8
   89d88:	b8800215 	stw	r2,8(r23)
   89d8c:	90c00117 	ldw	r3,4(r18)
   89d90:	008006c4 	movi	r2,27
   89d94:	b8c00315 	stw	r3,12(r23)
   89d98:	1180072e 	bgeu	r2,r6,89db8 <_realloc_r+0x4d8>
   89d9c:	90c00217 	ldw	r3,8(r18)
   89da0:	b9c00604 	addi	r7,r23,24
   89da4:	91000404 	addi	r4,r18,16
   89da8:	b8c00415 	stw	r3,16(r23)
   89dac:	90800317 	ldw	r2,12(r18)
   89db0:	b8800515 	stw	r2,20(r23)
   89db4:	31404026 	beq	r6,r5,89eb8 <_realloc_r+0x5d8>
   89db8:	20800017 	ldw	r2,0(r4)
   89dbc:	38800015 	stw	r2,0(r7)
   89dc0:	20c00117 	ldw	r3,4(r4)
   89dc4:	38c00115 	stw	r3,4(r7)
   89dc8:	20800217 	ldw	r2,8(r4)
   89dcc:	38800215 	stw	r2,8(r7)
   89dd0:	d8c00117 	ldw	r3,4(sp)
   89dd4:	bf0b883a 	add	r5,r23,fp
   89dd8:	b009883a 	mov	r4,r22
   89ddc:	1f05c83a 	sub	r2,r3,fp
   89de0:	10800054 	ori	r2,r2,1
   89de4:	28800115 	stw	r2,4(r5)
   89de8:	b8c00117 	ldw	r3,4(r23)
   89dec:	00800274 	movhi	r2,9
   89df0:	1090af04 	addi	r2,r2,17084
   89df4:	11400215 	stw	r5,8(r2)
   89df8:	18c0004c 	andi	r3,r3,1
   89dfc:	e0c6b03a 	or	r3,fp,r3
   89e00:	b8c00115 	stw	r3,4(r23)
   89e04:	00902b40 	call	902b4 <__malloc_unlock>
   89e08:	003eeb06 	br	899b8 <_realloc_r+0xd8>
   89e0c:	20800117 	ldw	r2,4(r4)
   89e10:	00ffff04 	movi	r3,-4
   89e14:	800f883a 	mov	r7,r16
   89e18:	10c4703a 	and	r2,r2,r3
   89e1c:	98a9883a 	add	r20,r19,r2
   89e20:	84000204 	addi	r16,r16,8
   89e24:	003ecf06 	br	89964 <_realloc_r+0x84>
   89e28:	900b883a 	mov	r5,r18
   89e2c:	8009883a 	mov	r4,r16
   89e30:	00886fc0 	call	886fc <memmove>
   89e34:	dd000017 	ldw	r20,0(sp)
   89e38:	b80f883a 	mov	r7,r23
   89e3c:	003ec906 	br	89964 <_realloc_r+0x84>
   89e40:	900b883a 	mov	r5,r18
   89e44:	8009883a 	mov	r4,r16
   89e48:	00886fc0 	call	886fc <memmove>
   89e4c:	b80f883a 	mov	r7,r23
   89e50:	003ec406 	br	89964 <_realloc_r+0x84>
   89e54:	90c00417 	ldw	r3,16(r18)
   89e58:	89400604 	addi	r5,r17,24
   89e5c:	91000604 	addi	r4,r18,24
   89e60:	88c00415 	stw	r3,16(r17)
   89e64:	90800517 	ldw	r2,20(r18)
   89e68:	88800515 	stw	r2,20(r17)
   89e6c:	003f6806 	br	89c10 <_realloc_r+0x330>
   89e70:	900b883a 	mov	r5,r18
   89e74:	8809883a 	mov	r4,r17
   89e78:	00886fc0 	call	886fc <memmove>
   89e7c:	003fd406 	br	89dd0 <_realloc_r+0x4f0>
   89e80:	90c00417 	ldw	r3,16(r18)
   89e84:	91000604 	addi	r4,r18,24
   89e88:	ba000804 	addi	r8,r23,32
   89e8c:	b8c00615 	stw	r3,24(r23)
   89e90:	90800517 	ldw	r2,20(r18)
   89e94:	b8800715 	stw	r2,28(r23)
   89e98:	003f1206 	br	89ae4 <_realloc_r+0x204>
   89e9c:	90c00417 	ldw	r3,16(r18)
   89ea0:	91000604 	addi	r4,r18,24
   89ea4:	ba000804 	addi	r8,r23,32
   89ea8:	b8c00615 	stw	r3,24(r23)
   89eac:	90800517 	ldw	r2,20(r18)
   89eb0:	b8800715 	stw	r2,28(r23)
   89eb4:	003f3206 	br	89b80 <_realloc_r+0x2a0>
   89eb8:	90c00417 	ldw	r3,16(r18)
   89ebc:	91000604 	addi	r4,r18,24
   89ec0:	b9c00804 	addi	r7,r23,32
   89ec4:	b8c00615 	stw	r3,24(r23)
   89ec8:	90800517 	ldw	r2,20(r18)
   89ecc:	b8800715 	stw	r2,28(r23)
   89ed0:	003fb906 	br	89db8 <_realloc_r+0x4d8>

00089ed4 <__isinfd>:
   89ed4:	200d883a 	mov	r6,r4
   89ed8:	0109c83a 	sub	r4,zero,r4
   89edc:	2188b03a 	or	r4,r4,r6
   89ee0:	2008d7fa 	srli	r4,r4,31
   89ee4:	00a00034 	movhi	r2,32768
   89ee8:	10bfffc4 	addi	r2,r2,-1
   89eec:	1144703a 	and	r2,r2,r5
   89ef0:	2088b03a 	or	r4,r4,r2
   89ef4:	009ffc34 	movhi	r2,32752
   89ef8:	1105c83a 	sub	r2,r2,r4
   89efc:	0087c83a 	sub	r3,zero,r2
   89f00:	10c4b03a 	or	r2,r2,r3
   89f04:	1004d7fa 	srli	r2,r2,31
   89f08:	00c00044 	movi	r3,1
   89f0c:	1885c83a 	sub	r2,r3,r2
   89f10:	f800283a 	ret

00089f14 <__isnand>:
   89f14:	200d883a 	mov	r6,r4
   89f18:	0109c83a 	sub	r4,zero,r4
   89f1c:	2188b03a 	or	r4,r4,r6
   89f20:	2008d7fa 	srli	r4,r4,31
   89f24:	00a00034 	movhi	r2,32768
   89f28:	10bfffc4 	addi	r2,r2,-1
   89f2c:	1144703a 	and	r2,r2,r5
   89f30:	2088b03a 	or	r4,r4,r2
   89f34:	009ffc34 	movhi	r2,32752
   89f38:	1105c83a 	sub	r2,r2,r4
   89f3c:	1004d7fa 	srli	r2,r2,31
   89f40:	f800283a 	ret

00089f44 <__sccl>:
   89f44:	28c00003 	ldbu	r3,0(r5)
   89f48:	00801784 	movi	r2,94
   89f4c:	2a000044 	addi	r8,r5,1
   89f50:	18802526 	beq	r3,r2,89fe8 <__sccl+0xa4>
   89f54:	180f883a 	mov	r7,r3
   89f58:	0013883a 	mov	r9,zero
   89f5c:	000d883a 	mov	r6,zero
   89f60:	0007883a 	mov	r3,zero
   89f64:	01404004 	movi	r5,256
   89f68:	1905883a 	add	r2,r3,r4
   89f6c:	18c00044 	addi	r3,r3,1
   89f70:	11800005 	stb	r6,0(r2)
   89f74:	197ffc1e 	bne	r3,r5,89f68 <__sccl+0x24>
   89f78:	38000c26 	beq	r7,zero,89fac <__sccl+0x68>
   89f7c:	00800044 	movi	r2,1
   89f80:	124dc83a 	sub	r6,r2,r9
   89f84:	3905883a 	add	r2,r7,r4
   89f88:	11800005 	stb	r6,0(r2)
   89f8c:	41400044 	addi	r5,r8,1
   89f90:	02400b44 	movi	r9,45
   89f94:	02801744 	movi	r10,93
   89f98:	28bfffc3 	ldbu	r2,-1(r5)
   89f9c:	2811883a 	mov	r8,r5
   89fa0:	12400726 	beq	r2,r9,89fc0 <__sccl+0x7c>
   89fa4:	12800226 	beq	r2,r10,89fb0 <__sccl+0x6c>
   89fa8:	1000031e 	bne	r2,zero,89fb8 <__sccl+0x74>
   89fac:	423fffc4 	addi	r8,r8,-1
   89fb0:	4005883a 	mov	r2,r8
   89fb4:	f800283a 	ret
   89fb8:	100f883a 	mov	r7,r2
   89fbc:	003ff106 	br	89f84 <__sccl+0x40>
   89fc0:	28c00003 	ldbu	r3,0(r5)
   89fc4:	1a800d26 	beq	r3,r10,89ffc <__sccl+0xb8>
   89fc8:	19c00c16 	blt	r3,r7,89ffc <__sccl+0xb8>
   89fcc:	21c5883a 	add	r2,r4,r7
   89fd0:	39c00044 	addi	r7,r7,1
   89fd4:	11800045 	stb	r6,1(r2)
   89fd8:	10800044 	addi	r2,r2,1
   89fdc:	38fffc16 	blt	r7,r3,89fd0 <__sccl+0x8c>
   89fe0:	29400084 	addi	r5,r5,2
   89fe4:	003fec06 	br	89f98 <__sccl+0x54>
   89fe8:	29c00043 	ldbu	r7,1(r5)
   89fec:	02400044 	movi	r9,1
   89ff0:	2a000084 	addi	r8,r5,2
   89ff4:	480d883a 	mov	r6,r9
   89ff8:	003fd906 	br	89f60 <__sccl+0x1c>
   89ffc:	01c00b44 	movi	r7,45
   8a000:	003fe006 	br	89f84 <__sccl+0x40>

0008a004 <nanf>:
   8a004:	009ff034 	movhi	r2,32704
   8a008:	f800283a 	ret

0008a00c <sprintf>:
   8a00c:	deffe504 	addi	sp,sp,-108
   8a010:	2013883a 	mov	r9,r4
   8a014:	dfc01815 	stw	ra,96(sp)
   8a018:	d9801915 	stw	r6,100(sp)
   8a01c:	d9c01a15 	stw	r7,104(sp)
   8a020:	d8801904 	addi	r2,sp,100
   8a024:	d8800015 	stw	r2,0(sp)
   8a028:	00800274 	movhi	r2,9
   8a02c:	10968804 	addi	r2,r2,23072
   8a030:	11000017 	ldw	r4,0(r2)
   8a034:	d9c00017 	ldw	r7,0(sp)
   8a038:	00808204 	movi	r2,520
   8a03c:	00e00034 	movhi	r3,32768
   8a040:	18ffffc4 	addi	r3,r3,-1
   8a044:	280d883a 	mov	r6,r5
   8a048:	d880040d 	sth	r2,16(sp)
   8a04c:	d9400104 	addi	r5,sp,4
   8a050:	00bfffc4 	movi	r2,-1
   8a054:	d8c00615 	stw	r3,24(sp)
   8a058:	d8c00315 	stw	r3,12(sp)
   8a05c:	da400515 	stw	r9,20(sp)
   8a060:	d880048d 	sth	r2,18(sp)
   8a064:	da400115 	stw	r9,4(sp)
   8a068:	0082a8c0 	call	82a8c <___vfprintf_internal_r>
   8a06c:	d8c00117 	ldw	r3,4(sp)
   8a070:	18000005 	stb	zero,0(r3)
   8a074:	dfc01817 	ldw	ra,96(sp)
   8a078:	dec01b04 	addi	sp,sp,108
   8a07c:	f800283a 	ret

0008a080 <_sprintf_r>:
   8a080:	deffe604 	addi	sp,sp,-104
   8a084:	2813883a 	mov	r9,r5
   8a088:	dfc01815 	stw	ra,96(sp)
   8a08c:	d9c01915 	stw	r7,100(sp)
   8a090:	d8801904 	addi	r2,sp,100
   8a094:	d8800015 	stw	r2,0(sp)
   8a098:	100f883a 	mov	r7,r2
   8a09c:	00808204 	movi	r2,520
   8a0a0:	00e00034 	movhi	r3,32768
   8a0a4:	18ffffc4 	addi	r3,r3,-1
   8a0a8:	d880040d 	sth	r2,16(sp)
   8a0ac:	d9400104 	addi	r5,sp,4
   8a0b0:	00bfffc4 	movi	r2,-1
   8a0b4:	d8c00615 	stw	r3,24(sp)
   8a0b8:	d8c00315 	stw	r3,12(sp)
   8a0bc:	da400515 	stw	r9,20(sp)
   8a0c0:	d880048d 	sth	r2,18(sp)
   8a0c4:	da400115 	stw	r9,4(sp)
   8a0c8:	0082a8c0 	call	82a8c <___vfprintf_internal_r>
   8a0cc:	d8c00117 	ldw	r3,4(sp)
   8a0d0:	18000005 	stb	zero,0(r3)
   8a0d4:	dfc01817 	ldw	ra,96(sp)
   8a0d8:	dec01a04 	addi	sp,sp,104
   8a0dc:	f800283a 	ret

0008a0e0 <match>:
   8a0e0:	21800017 	ldw	r6,0(r4)
   8a0e4:	01c01004 	movi	r7,64
   8a0e8:	02001684 	movi	r8,90
   8a0ec:	28800007 	ldb	r2,0(r5)
   8a0f0:	29400044 	addi	r5,r5,1
   8a0f4:	10000826 	beq	r2,zero,8a118 <match+0x38>
   8a0f8:	31800044 	addi	r6,r6,1
   8a0fc:	30c00007 	ldb	r3,0(r6)
   8a100:	38c0020e 	bge	r7,r3,8a10c <match+0x2c>
   8a104:	40c00116 	blt	r8,r3,8a10c <match+0x2c>
   8a108:	18c00804 	addi	r3,r3,32
   8a10c:	18bff726 	beq	r3,r2,8a0ec <match+0xc>
   8a110:	0005883a 	mov	r2,zero
   8a114:	f800283a 	ret
   8a118:	30800044 	addi	r2,r6,1
   8a11c:	20800015 	stw	r2,0(r4)
   8a120:	00800044 	movi	r2,1
   8a124:	f800283a 	ret

0008a128 <_strtod_r>:
   8a128:	deffd504 	addi	sp,sp,-172
   8a12c:	df002915 	stw	fp,164(sp)
   8a130:	dd402615 	stw	r21,152(sp)
   8a134:	dd002515 	stw	r20,148(sp)
   8a138:	dfc02a15 	stw	ra,168(sp)
   8a13c:	ddc02815 	stw	r23,160(sp)
   8a140:	dd802715 	stw	r22,156(sp)
   8a144:	dcc02415 	stw	r19,144(sp)
   8a148:	dc802315 	stw	r18,140(sp)
   8a14c:	dc402215 	stw	r17,136(sp)
   8a150:	dc002115 	stw	r16,132(sp)
   8a154:	2829883a 	mov	r20,r5
   8a158:	202b883a 	mov	r21,r4
   8a15c:	d9801d15 	stw	r6,116(sp)
   8a160:	d8000915 	stw	zero,36(sp)
   8a164:	d8000a15 	stw	zero,40(sp)
   8a168:	d9400415 	stw	r5,16(sp)
   8a16c:	df000904 	addi	fp,sp,36
   8a170:	dc000417 	ldw	r16,16(sp)
   8a174:	00800b44 	movi	r2,45
   8a178:	80c00003 	ldbu	r3,0(r16)
   8a17c:	10c03536 	bltu	r2,r3,8a254 <_strtod_r+0x12c>
   8a180:	18c5883a 	add	r2,r3,r3
   8a184:	1085883a 	add	r2,r2,r2
   8a188:	00c00274 	movhi	r3,9
   8a18c:	18e86704 	addi	r3,r3,-24164
   8a190:	10c5883a 	add	r2,r2,r3
   8a194:	11000017 	ldw	r4,0(r2)
   8a198:	2000683a 	jmp	r4
   8a19c:	0008a3d4 	movui	zero,8847
   8a1a0:	0008a254 	movui	zero,8841
   8a1a4:	0008a254 	movui	zero,8841
   8a1a8:	0008a254 	movui	zero,8841
   8a1ac:	0008a254 	movui	zero,8841
   8a1b0:	0008a254 	movui	zero,8841
   8a1b4:	0008a254 	movui	zero,8841
   8a1b8:	0008a254 	movui	zero,8841
   8a1bc:	0008a254 	movui	zero,8841
   8a1c0:	0008a71c 	xori	zero,zero,8860
   8a1c4:	0008a71c 	xori	zero,zero,8860
   8a1c8:	0008a71c 	xori	zero,zero,8860
   8a1cc:	0008a71c 	xori	zero,zero,8860
   8a1d0:	0008a71c 	xori	zero,zero,8860
   8a1d4:	0008a254 	movui	zero,8841
   8a1d8:	0008a254 	movui	zero,8841
   8a1dc:	0008a254 	movui	zero,8841
   8a1e0:	0008a254 	movui	zero,8841
   8a1e4:	0008a254 	movui	zero,8841
   8a1e8:	0008a254 	movui	zero,8841
   8a1ec:	0008a254 	movui	zero,8841
   8a1f0:	0008a254 	movui	zero,8841
   8a1f4:	0008a254 	movui	zero,8841
   8a1f8:	0008a254 	movui	zero,8841
   8a1fc:	0008a254 	movui	zero,8841
   8a200:	0008a254 	movui	zero,8841
   8a204:	0008a254 	movui	zero,8841
   8a208:	0008a254 	movui	zero,8841
   8a20c:	0008a254 	movui	zero,8841
   8a210:	0008a254 	movui	zero,8841
   8a214:	0008a254 	movui	zero,8841
   8a218:	0008a254 	movui	zero,8841
   8a21c:	0008a71c 	xori	zero,zero,8860
   8a220:	0008a254 	movui	zero,8841
   8a224:	0008a254 	movui	zero,8841
   8a228:	0008a254 	movui	zero,8841
   8a22c:	0008a254 	movui	zero,8841
   8a230:	0008a254 	movui	zero,8841
   8a234:	0008a254 	movui	zero,8841
   8a238:	0008a254 	movui	zero,8841
   8a23c:	0008a254 	movui	zero,8841
   8a240:	0008a254 	movui	zero,8841
   8a244:	0008a254 	movui	zero,8841
   8a248:	0008a6fc 	xorhi	zero,zero,8859
   8a24c:	0008a254 	movui	zero,8841
   8a250:	0008a728 	cmpgeui	zero,zero,8860
   8a254:	d8001515 	stw	zero,84(sp)
   8a258:	80c00007 	ldb	r3,0(r16)
   8a25c:	00800c04 	movi	r2,48
   8a260:	1880e926 	beq	r3,r2,8a608 <_strtod_r+0x4e0>
   8a264:	d8001615 	stw	zero,88(sp)
   8a268:	dc001415 	stw	r16,80(sp)
   8a26c:	84400007 	ldb	r17,0(r16)
   8a270:	00800bc4 	movi	r2,47
   8a274:	1443760e 	bge	r2,r17,8b050 <_strtod_r+0xf28>
   8a278:	00800e44 	movi	r2,57
   8a27c:	14437416 	blt	r2,r17,8b050 <_strtod_r+0xf28>
   8a280:	8025883a 	mov	r18,r16
   8a284:	0027883a 	mov	r19,zero
   8a288:	d8001215 	stw	zero,72(sp)
   8a28c:	d8001115 	stw	zero,68(sp)
   8a290:	00000f06 	br	8a2d0 <_strtod_r+0x1a8>
   8a294:	d9001217 	ldw	r4,72(sp)
   8a298:	01400284 	movi	r5,10
   8a29c:	008f3380 	call	8f338 <__mulsi3>
   8a2a0:	1445883a 	add	r2,r2,r17
   8a2a4:	10bff404 	addi	r2,r2,-48
   8a2a8:	d8801215 	stw	r2,72(sp)
   8a2ac:	94000044 	addi	r16,r18,1
   8a2b0:	dc000415 	stw	r16,16(sp)
   8a2b4:	84400007 	ldb	r17,0(r16)
   8a2b8:	00800bc4 	movi	r2,47
   8a2bc:	9cc00044 	addi	r19,r19,1
   8a2c0:	8025883a 	mov	r18,r16
   8a2c4:	1440130e 	bge	r2,r17,8a314 <_strtod_r+0x1ec>
   8a2c8:	00800e44 	movi	r2,57
   8a2cc:	14401116 	blt	r2,r17,8a314 <_strtod_r+0x1ec>
   8a2d0:	00800204 	movi	r2,8
   8a2d4:	14ffef0e 	bge	r2,r19,8a294 <_strtod_r+0x16c>
   8a2d8:	008003c4 	movi	r2,15
   8a2dc:	14fff316 	blt	r2,r19,8a2ac <_strtod_r+0x184>
   8a2e0:	d9001117 	ldw	r4,68(sp)
   8a2e4:	01400284 	movi	r5,10
   8a2e8:	94000044 	addi	r16,r18,1
   8a2ec:	008f3380 	call	8f338 <__mulsi3>
   8a2f0:	1445883a 	add	r2,r2,r17
   8a2f4:	10bff404 	addi	r2,r2,-48
   8a2f8:	d8801115 	stw	r2,68(sp)
   8a2fc:	dc000415 	stw	r16,16(sp)
   8a300:	84400007 	ldb	r17,0(r16)
   8a304:	00800bc4 	movi	r2,47
   8a308:	9cc00044 	addi	r19,r19,1
   8a30c:	8025883a 	mov	r18,r16
   8a310:	147fed16 	blt	r2,r17,8a2c8 <_strtod_r+0x1a0>
   8a314:	00800b84 	movi	r2,46
   8a318:	8880c926 	beq	r17,r2,8a640 <_strtod_r+0x518>
   8a31c:	dcc01815 	stw	r19,96(sp)
   8a320:	d8001b15 	stw	zero,108(sp)
   8a324:	d8001715 	stw	zero,92(sp)
   8a328:	000d883a 	mov	r6,zero
   8a32c:	00801944 	movi	r2,101
   8a330:	88802126 	beq	r17,r2,8a3b8 <_strtod_r+0x290>
   8a334:	00801144 	movi	r2,69
   8a338:	88801f26 	beq	r17,r2,8a3b8 <_strtod_r+0x290>
   8a33c:	d9001817 	ldw	r4,96(sp)
   8a340:	2024c03a 	cmpne	r18,r4,zero
   8a344:	0009883a 	mov	r4,zero
   8a348:	9000651e 	bne	r18,zero,8a4e0 <_strtod_r+0x3b8>
   8a34c:	3000c926 	beq	r6,zero,8a674 <_strtod_r+0x54c>
   8a350:	d8801d17 	ldw	r2,116(sp)
   8a354:	10000326 	beq	r2,zero,8a364 <_strtod_r+0x23c>
   8a358:	d8800417 	ldw	r2,16(sp)
   8a35c:	d8c01d17 	ldw	r3,116(sp)
   8a360:	18800015 	stw	r2,0(r3)
   8a364:	d9001517 	ldw	r4,84(sp)
   8a368:	2005003a 	cmpeq	r2,r4,zero
   8a36c:	10001c1e 	bne	r2,zero,8a3e0 <_strtod_r+0x2b8>
   8a370:	e0800017 	ldw	r2,0(fp)
   8a374:	e0c00117 	ldw	r3,4(fp)
   8a378:	1009883a 	mov	r4,r2
   8a37c:	1960003c 	xorhi	r5,r3,32768
   8a380:	2005883a 	mov	r2,r4
   8a384:	2807883a 	mov	r3,r5
   8a388:	dfc02a17 	ldw	ra,168(sp)
   8a38c:	df002917 	ldw	fp,164(sp)
   8a390:	ddc02817 	ldw	r23,160(sp)
   8a394:	dd802717 	ldw	r22,156(sp)
   8a398:	dd402617 	ldw	r21,152(sp)
   8a39c:	dd002517 	ldw	r20,148(sp)
   8a3a0:	dcc02417 	ldw	r19,144(sp)
   8a3a4:	dc802317 	ldw	r18,140(sp)
   8a3a8:	dc402217 	ldw	r17,136(sp)
   8a3ac:	dc002117 	ldw	r16,132(sp)
   8a3b0:	dec02b04 	addi	sp,sp,172
   8a3b4:	f800283a 	ret
   8a3b8:	d8801817 	ldw	r2,96(sp)
   8a3bc:	1024c03a 	cmpne	r18,r2,zero
   8a3c0:	90000a1e 	bne	r18,zero,8a3ec <_strtod_r+0x2c4>
   8a3c4:	3000091e 	bne	r6,zero,8a3ec <_strtod_r+0x2c4>
   8a3c8:	d8c01617 	ldw	r3,88(sp)
   8a3cc:	1805003a 	cmpeq	r2,r3,zero
   8a3d0:	10000626 	beq	r2,zero,8a3ec <_strtod_r+0x2c4>
   8a3d4:	d8001515 	stw	zero,84(sp)
   8a3d8:	dd000415 	stw	r20,16(sp)
   8a3dc:	003fdc06 	br	8a350 <_strtod_r+0x228>
   8a3e0:	e1000017 	ldw	r4,0(fp)
   8a3e4:	e1400117 	ldw	r5,4(fp)
   8a3e8:	003fe506 	br	8a380 <_strtod_r+0x258>
   8a3ec:	dd000417 	ldw	r20,16(sp)
   8a3f0:	00800ac4 	movi	r2,43
   8a3f4:	a4000044 	addi	r16,r20,1
   8a3f8:	dc000415 	stw	r16,16(sp)
   8a3fc:	a0c00047 	ldb	r3,1(r20)
   8a400:	8009883a 	mov	r4,r16
   8a404:	1880cb26 	beq	r3,r2,8a734 <_strtod_r+0x60c>
   8a408:	00800b44 	movi	r2,45
   8a40c:	18838326 	beq	r3,r2,8b21c <_strtod_r+0x10f4>
   8a410:	1823883a 	mov	r17,r3
   8a414:	88fff404 	addi	r3,r17,-48
   8a418:	00800244 	movi	r2,9
   8a41c:	d8001915 	stw	zero,100(sp)
   8a420:	10c0cb36 	bltu	r2,r3,8a750 <_strtod_r+0x628>
   8a424:	00800c04 	movi	r2,48
   8a428:	8880061e 	bne	r17,r2,8a444 <_strtod_r+0x31c>
   8a42c:	dc000417 	ldw	r16,16(sp)
   8a430:	8805883a 	mov	r2,r17
   8a434:	84000044 	addi	r16,r16,1
   8a438:	dc000415 	stw	r16,16(sp)
   8a43c:	84400007 	ldb	r17,0(r16)
   8a440:	88bffc26 	beq	r17,r2,8a434 <_strtod_r+0x30c>
   8a444:	88fff3c4 	addi	r3,r17,-49
   8a448:	00800204 	movi	r2,8
   8a44c:	10ffbd36 	bltu	r2,r3,8a344 <_strtod_r+0x21c>
   8a450:	dc000417 	ldw	r16,16(sp)
   8a454:	893ff404 	addi	r4,r17,-48
   8a458:	00c00bc4 	movi	r3,47
   8a45c:	dc001315 	stw	r16,76(sp)
   8a460:	84000044 	addi	r16,r16,1
   8a464:	dc000415 	stw	r16,16(sp)
   8a468:	84400007 	ldb	r17,0(r16)
   8a46c:	1c40100e 	bge	r3,r17,8a4b0 <_strtod_r+0x388>
   8a470:	00800e44 	movi	r2,57
   8a474:	14400e16 	blt	r2,r17,8a4b0 <_strtod_r+0x388>
   8a478:	182f883a 	mov	r23,r3
   8a47c:	102d883a 	mov	r22,r2
   8a480:	00000106 	br	8a488 <_strtod_r+0x360>
   8a484:	b4400a16 	blt	r22,r17,8a4b0 <_strtod_r+0x388>
   8a488:	84000044 	addi	r16,r16,1
   8a48c:	01400284 	movi	r5,10
   8a490:	d9802015 	stw	r6,128(sp)
   8a494:	008f3380 	call	8f338 <__mulsi3>
   8a498:	dc000415 	stw	r16,16(sp)
   8a49c:	8885883a 	add	r2,r17,r2
   8a4a0:	84400007 	ldb	r17,0(r16)
   8a4a4:	113ff404 	addi	r4,r2,-48
   8a4a8:	d9802017 	ldw	r6,128(sp)
   8a4ac:	bc7ff516 	blt	r23,r17,8a484 <_strtod_r+0x35c>
   8a4b0:	d8801317 	ldw	r2,76(sp)
   8a4b4:	8087c83a 	sub	r3,r16,r2
   8a4b8:	00800204 	movi	r2,8
   8a4bc:	10c2ff16 	blt	r2,r3,8b0bc <_strtod_r+0xf94>
   8a4c0:	009387c4 	movi	r2,19999
   8a4c4:	1100010e 	bge	r2,r4,8a4cc <_strtod_r+0x3a4>
   8a4c8:	1009883a 	mov	r4,r2
   8a4cc:	d8c01917 	ldw	r3,100(sp)
   8a4d0:	1805003a 	cmpeq	r2,r3,zero
   8a4d4:	103f9c1e 	bne	r2,zero,8a348 <_strtod_r+0x220>
   8a4d8:	0109c83a 	sub	r4,zero,r4
   8a4dc:	903f9b26 	beq	r18,zero,8a34c <_strtod_r+0x224>
   8a4e0:	d8801717 	ldw	r2,92(sp)
   8a4e4:	2089c83a 	sub	r4,r4,r2
   8a4e8:	d9000f15 	stw	r4,60(sp)
   8a4ec:	9800811e 	bne	r19,zero,8a6f4 <_strtod_r+0x5cc>
   8a4f0:	dd001817 	ldw	r20,96(sp)
   8a4f4:	dc801817 	ldw	r18,96(sp)
   8a4f8:	00800404 	movi	r2,16
   8a4fc:	1480010e 	bge	r2,r18,8a504 <_strtod_r+0x3dc>
   8a500:	1025883a 	mov	r18,r2
   8a504:	d9001217 	ldw	r4,72(sp)
   8a508:	008f0580 	call	8f058 <__floatunsidf>
   8a50c:	100f883a 	mov	r7,r2
   8a510:	e0800015 	stw	r2,0(fp)
   8a514:	00800244 	movi	r2,9
   8a518:	e0c00115 	stw	r3,4(fp)
   8a51c:	1480160e 	bge	r2,r18,8a578 <_strtod_r+0x450>
   8a520:	900c90fa 	slli	r6,r18,3
   8a524:	01000274 	movhi	r4,9
   8a528:	210efc04 	addi	r4,r4,15344
   8a52c:	180b883a 	mov	r5,r3
   8a530:	310d883a 	add	r6,r6,r4
   8a534:	30ffef17 	ldw	r3,-68(r6)
   8a538:	30bfee17 	ldw	r2,-72(r6)
   8a53c:	3809883a 	mov	r4,r7
   8a540:	180f883a 	mov	r7,r3
   8a544:	100d883a 	mov	r6,r2
   8a548:	008e4c80 	call	8e4c8 <__muldf3>
   8a54c:	d9001117 	ldw	r4,68(sp)
   8a550:	1021883a 	mov	r16,r2
   8a554:	1823883a 	mov	r17,r3
   8a558:	008f0580 	call	8f058 <__floatunsidf>
   8a55c:	880b883a 	mov	r5,r17
   8a560:	180f883a 	mov	r7,r3
   8a564:	8009883a 	mov	r4,r16
   8a568:	100d883a 	mov	r6,r2
   8a56c:	008e4540 	call	8e454 <__adddf3>
   8a570:	e0c00115 	stw	r3,4(fp)
   8a574:	e0800015 	stw	r2,0(fp)
   8a578:	d8c01817 	ldw	r3,96(sp)
   8a57c:	010003c4 	movi	r4,15
   8a580:	20c09e16 	blt	r4,r3,8a7fc <_strtod_r+0x6d4>
   8a584:	d8800f17 	ldw	r2,60(sp)
   8a588:	103f7126 	beq	r2,zero,8a350 <_strtod_r+0x228>
   8a58c:	0083d90e 	bge	zero,r2,8b4f4 <_strtod_r+0x13cc>
   8a590:	d8c00f17 	ldw	r3,60(sp)
   8a594:	00800584 	movi	r2,22
   8a598:	10c2ca0e 	bge	r2,r3,8b0c4 <_strtod_r+0xf9c>
   8a59c:	d8801817 	ldw	r2,96(sp)
   8a5a0:	d8c00f17 	ldw	r3,60(sp)
   8a5a4:	20a3c83a 	sub	r17,r4,r2
   8a5a8:	88800584 	addi	r2,r17,22
   8a5ac:	10c09316 	blt	r2,r3,8a7fc <_strtod_r+0x6d4>
   8a5b0:	880890fa 	slli	r4,r17,3
   8a5b4:	04000274 	movhi	r16,9
   8a5b8:	840efc04 	addi	r16,r16,15344
   8a5bc:	e0800017 	ldw	r2,0(fp)
   8a5c0:	2409883a 	add	r4,r4,r16
   8a5c4:	22000017 	ldw	r8,0(r4)
   8a5c8:	22400117 	ldw	r9,4(r4)
   8a5cc:	e0c00117 	ldw	r3,4(fp)
   8a5d0:	1009883a 	mov	r4,r2
   8a5d4:	480f883a 	mov	r7,r9
   8a5d8:	180b883a 	mov	r5,r3
   8a5dc:	400d883a 	mov	r6,r8
   8a5e0:	008e4c80 	call	8e4c8 <__muldf3>
   8a5e4:	d9000f17 	ldw	r4,60(sp)
   8a5e8:	180b883a 	mov	r5,r3
   8a5ec:	2455c83a 	sub	r10,r4,r17
   8a5f0:	501490fa 	slli	r10,r10,3
   8a5f4:	1009883a 	mov	r4,r2
   8a5f8:	5415883a 	add	r10,r10,r16
   8a5fc:	52000017 	ldw	r8,0(r10)
   8a600:	52400117 	ldw	r9,4(r10)
   8a604:	0002b906 	br	8b0ec <_strtod_r+0xfc4>
   8a608:	80c00047 	ldb	r3,1(r16)
   8a60c:	00801604 	movi	r2,88
   8a610:	18805226 	beq	r3,r2,8a75c <_strtod_r+0x634>
   8a614:	00801e04 	movi	r2,120
   8a618:	18805026 	beq	r3,r2,8a75c <_strtod_r+0x634>
   8a61c:	84000044 	addi	r16,r16,1
   8a620:	dc000415 	stw	r16,16(sp)
   8a624:	80c00007 	ldb	r3,0(r16)
   8a628:	00800c04 	movi	r2,48
   8a62c:	18bffb26 	beq	r3,r2,8a61c <_strtod_r+0x4f4>
   8a630:	183f4726 	beq	r3,zero,8a350 <_strtod_r+0x228>
   8a634:	01000044 	movi	r4,1
   8a638:	d9001615 	stw	r4,88(sp)
   8a63c:	003f0a06 	br	8a268 <_strtod_r+0x140>
   8a640:	84000044 	addi	r16,r16,1
   8a644:	dc000415 	stw	r16,16(sp)
   8a648:	94400047 	ldb	r17,1(r18)
   8a64c:	9800ba26 	beq	r19,zero,8a938 <_strtod_r+0x810>
   8a650:	dcc01815 	stw	r19,96(sp)
   8a654:	d8001715 	stw	zero,92(sp)
   8a658:	000d883a 	mov	r6,zero
   8a65c:	8dbff404 	addi	r22,r17,-48
   8a660:	00800244 	movi	r2,9
   8a664:	15826e2e 	bgeu	r2,r22,8b020 <_strtod_r+0xef8>
   8a668:	01000044 	movi	r4,1
   8a66c:	d9001b15 	stw	r4,108(sp)
   8a670:	003f2e06 	br	8a32c <_strtod_r+0x204>
   8a674:	d8c01617 	ldw	r3,88(sp)
   8a678:	1804c03a 	cmpne	r2,r3,zero
   8a67c:	103f341e 	bne	r2,zero,8a350 <_strtod_r+0x228>
   8a680:	d9001b17 	ldw	r4,108(sp)
   8a684:	2004c03a 	cmpne	r2,r4,zero
   8a688:	103f521e 	bne	r2,zero,8a3d4 <_strtod_r+0x2ac>
   8a68c:	00801384 	movi	r2,78
   8a690:	8883b526 	beq	r17,r2,8b568 <_strtod_r+0x1440>
   8a694:	1443b016 	blt	r2,r17,8b558 <_strtod_r+0x1430>
   8a698:	00801244 	movi	r2,73
   8a69c:	88bf4d1e 	bne	r17,r2,8a3d4 <_strtod_r+0x2ac>
   8a6a0:	dc000404 	addi	r16,sp,16
   8a6a4:	8009883a 	mov	r4,r16
   8a6a8:	01400274 	movhi	r5,9
   8a6ac:	294f4504 	addi	r5,r5,15636
   8a6b0:	008a0e00 	call	8a0e0 <match>
   8a6b4:	103f4726 	beq	r2,zero,8a3d4 <_strtod_r+0x2ac>
   8a6b8:	d8800417 	ldw	r2,16(sp)
   8a6bc:	8009883a 	mov	r4,r16
   8a6c0:	01400274 	movhi	r5,9
   8a6c4:	294f4604 	addi	r5,r5,15640
   8a6c8:	143fffc4 	addi	r16,r2,-1
   8a6cc:	dc000415 	stw	r16,16(sp)
   8a6d0:	008a0e00 	call	8a0e0 <match>
   8a6d4:	1000031e 	bne	r2,zero,8a6e4 <_strtod_r+0x5bc>
   8a6d8:	d8800417 	ldw	r2,16(sp)
   8a6dc:	14000044 	addi	r16,r2,1
   8a6e0:	dc000415 	stw	r16,16(sp)
   8a6e4:	019ffc34 	movhi	r6,32752
   8a6e8:	e1800115 	stw	r6,4(fp)
   8a6ec:	e0000015 	stw	zero,0(fp)
   8a6f0:	003f1706 	br	8a350 <_strtod_r+0x228>
   8a6f4:	9829883a 	mov	r20,r19
   8a6f8:	003f7e06 	br	8a4f4 <_strtod_r+0x3cc>
   8a6fc:	d8001515 	stw	zero,84(sp)
   8a700:	84000044 	addi	r16,r16,1
   8a704:	dc000415 	stw	r16,16(sp)
   8a708:	80800007 	ldb	r2,0(r16)
   8a70c:	103ed21e 	bne	r2,zero,8a258 <_strtod_r+0x130>
   8a710:	d8001515 	stw	zero,84(sp)
   8a714:	dd000415 	stw	r20,16(sp)
   8a718:	003f0d06 	br	8a350 <_strtod_r+0x228>
   8a71c:	84000044 	addi	r16,r16,1
   8a720:	dc000415 	stw	r16,16(sp)
   8a724:	003e9206 	br	8a170 <_strtod_r+0x48>
   8a728:	00800044 	movi	r2,1
   8a72c:	d8801515 	stw	r2,84(sp)
   8a730:	003ff306 	br	8a700 <_strtod_r+0x5d8>
   8a734:	d8001915 	stw	zero,100(sp)
   8a738:	84000044 	addi	r16,r16,1
   8a73c:	dc000415 	stw	r16,16(sp)
   8a740:	24400047 	ldb	r17,1(r4)
   8a744:	00800244 	movi	r2,9
   8a748:	88fff404 	addi	r3,r17,-48
   8a74c:	10ff352e 	bgeu	r2,r3,8a424 <_strtod_r+0x2fc>
   8a750:	0009883a 	mov	r4,zero
   8a754:	dd000415 	stw	r20,16(sp)
   8a758:	003efb06 	br	8a348 <_strtod_r+0x220>
   8a75c:	d8c01517 	ldw	r3,84(sp)
   8a760:	04400274 	movhi	r17,9
   8a764:	8c51b904 	addi	r17,r17,18148
   8a768:	d8800504 	addi	r2,sp,20
   8a76c:	a809883a 	mov	r4,r21
   8a770:	d9400404 	addi	r5,sp,16
   8a774:	880d883a 	mov	r6,r17
   8a778:	d9c00604 	addi	r7,sp,24
   8a77c:	d8800015 	stw	r2,0(sp)
   8a780:	d8c00115 	stw	r3,4(sp)
   8a784:	008c5380 	call	8c538 <__gethex>
   8a788:	140001cc 	andi	r16,r2,7
   8a78c:	1025883a 	mov	r18,r2
   8a790:	803eef26 	beq	r16,zero,8a350 <_strtod_r+0x228>
   8a794:	04c00184 	movi	r19,6
   8a798:	84ff0e26 	beq	r16,r19,8a3d4 <_strtod_r+0x2ac>
   8a79c:	d9800517 	ldw	r6,20(sp)
   8a7a0:	30000626 	beq	r6,zero,8a7bc <_strtod_r+0x694>
   8a7a4:	89400017 	ldw	r5,0(r17)
   8a7a8:	d9000d04 	addi	r4,sp,52
   8a7ac:	0088c7c0 	call	88c7c <__copybits>
   8a7b0:	d9400517 	ldw	r5,20(sp)
   8a7b4:	a809883a 	mov	r4,r21
   8a7b8:	00887dc0 	call	887dc <_Bfree>
   8a7bc:	d9400617 	ldw	r5,24(sp)
   8a7c0:	9c025436 	bltu	r19,r16,8b114 <_strtod_r+0xfec>
   8a7c4:	8405883a 	add	r2,r16,r16
   8a7c8:	1085883a 	add	r2,r2,r2
   8a7cc:	00c00274 	movhi	r3,9
   8a7d0:	18e9f804 	addi	r3,r3,-22560
   8a7d4:	10c5883a 	add	r2,r2,r3
   8a7d8:	11000017 	ldw	r4,0(r2)
   8a7dc:	2000683a 	jmp	r4
   8a7e0:	0008b154 	movui	zero,8901
   8a7e4:	0008b160 	cmpeqi	zero,zero,8901
   8a7e8:	0008b104 	movi	zero,8900
   8a7ec:	0008b12c 	andhi	zero,zero,8900
   8a7f0:	0008b13c 	xorhi	zero,zero,8900
   8a7f4:	0008b160 	cmpeqi	zero,zero,8901
   8a7f8:	0008b154 	movui	zero,8901
   8a7fc:	d9001817 	ldw	r4,96(sp)
   8a800:	d8c00f17 	ldw	r3,60(sp)
   8a804:	2485c83a 	sub	r2,r4,r18
   8a808:	18a1883a 	add	r16,r3,r2
   8a80c:	0402e80e 	bge	zero,r16,8b3b0 <_strtod_r+0x1288>
   8a810:	814003cc 	andi	r5,r16,15
   8a814:	28000f26 	beq	r5,zero,8a854 <_strtod_r+0x72c>
   8a818:	280a90fa 	slli	r5,r5,3
   8a81c:	01000274 	movhi	r4,9
   8a820:	210efc04 	addi	r4,r4,15344
   8a824:	e0800017 	ldw	r2,0(fp)
   8a828:	290b883a 	add	r5,r5,r4
   8a82c:	2a000017 	ldw	r8,0(r5)
   8a830:	e0c00117 	ldw	r3,4(fp)
   8a834:	2a400117 	ldw	r9,4(r5)
   8a838:	1009883a 	mov	r4,r2
   8a83c:	180b883a 	mov	r5,r3
   8a840:	480f883a 	mov	r7,r9
   8a844:	400d883a 	mov	r6,r8
   8a848:	008e4c80 	call	8e4c8 <__muldf3>
   8a84c:	e0c00115 	stw	r3,4(fp)
   8a850:	e0800015 	stw	r2,0(fp)
   8a854:	00bffc04 	movi	r2,-16
   8a858:	808c703a 	and	r6,r16,r2
   8a85c:	30006726 	beq	r6,zero,8a9fc <_strtod_r+0x8d4>
   8a860:	00804d04 	movi	r2,308
   8a864:	11820f16 	blt	r2,r6,8b0a4 <_strtod_r+0xf7c>
   8a868:	3021d13a 	srai	r16,r6,4
   8a86c:	00800044 	movi	r2,1
   8a870:	14037f0e 	bge	r2,r16,8b670 <_strtod_r+0x1548>
   8a874:	05800274 	movhi	r22,9
   8a878:	b58f2e04 	addi	r22,r22,15544
   8a87c:	1027883a 	mov	r19,r2
   8a880:	0025883a 	mov	r18,zero
   8a884:	b023883a 	mov	r17,r22
   8a888:	8080004c 	andi	r2,r16,1
   8a88c:	1005003a 	cmpeq	r2,r2,zero
   8a890:	1000091e 	bne	r2,zero,8a8b8 <_strtod_r+0x790>
   8a894:	e0800017 	ldw	r2,0(fp)
   8a898:	e0c00117 	ldw	r3,4(fp)
   8a89c:	89800017 	ldw	r6,0(r17)
   8a8a0:	89c00117 	ldw	r7,4(r17)
   8a8a4:	180b883a 	mov	r5,r3
   8a8a8:	1009883a 	mov	r4,r2
   8a8ac:	008e4c80 	call	8e4c8 <__muldf3>
   8a8b0:	e0c00115 	stw	r3,4(fp)
   8a8b4:	e0800015 	stw	r2,0(fp)
   8a8b8:	8021d07a 	srai	r16,r16,1
   8a8bc:	94800044 	addi	r18,r18,1
   8a8c0:	8c400204 	addi	r17,r17,8
   8a8c4:	9c3ff016 	blt	r19,r16,8a888 <_strtod_r+0x760>
   8a8c8:	900e90fa 	slli	r7,r18,3
   8a8cc:	e2000117 	ldw	r8,4(fp)
   8a8d0:	e1000017 	ldw	r4,0(fp)
   8a8d4:	3d8f883a 	add	r7,r7,r22
   8a8d8:	38800017 	ldw	r2,0(r7)
   8a8dc:	38c00117 	ldw	r3,4(r7)
   8a8e0:	01bf2c34 	movhi	r6,64688
   8a8e4:	418d883a 	add	r6,r8,r6
   8a8e8:	300b883a 	mov	r5,r6
   8a8ec:	180f883a 	mov	r7,r3
   8a8f0:	100d883a 	mov	r6,r2
   8a8f4:	008e4c80 	call	8e4c8 <__muldf3>
   8a8f8:	1009883a 	mov	r4,r2
   8a8fc:	180b883a 	mov	r5,r3
   8a900:	199ffc2c 	andhi	r6,r3,32752
   8a904:	009f2834 	movhi	r2,31904
   8a908:	e1000015 	stw	r4,0(fp)
   8a90c:	e1400115 	stw	r5,4(fp)
   8a910:	1181e436 	bltu	r2,r6,8b0a4 <_strtod_r+0xf7c>
   8a914:	009f2434 	movhi	r2,31888
   8a918:	11833f2e 	bgeu	r2,r6,8b618 <_strtod_r+0x14f0>
   8a91c:	d8001c15 	stw	zero,112(sp)
   8a920:	019ffc34 	movhi	r6,32752
   8a924:	31bfffc4 	addi	r6,r6,-1
   8a928:	01ffffc4 	movi	r7,-1
   8a92c:	e1800115 	stw	r6,4(fp)
   8a930:	e1c00015 	stw	r7,0(fp)
   8a934:	00003206 	br	8aa00 <_strtod_r+0x8d8>
   8a938:	00800c04 	movi	r2,48
   8a93c:	8883221e 	bne	r17,r2,8b5c8 <_strtod_r+0x14a0>
   8a940:	8805883a 	mov	r2,r17
   8a944:	000d883a 	mov	r6,zero
   8a948:	84000044 	addi	r16,r16,1
   8a94c:	dc000415 	stw	r16,16(sp)
   8a950:	84400007 	ldb	r17,0(r16)
   8a954:	31800044 	addi	r6,r6,1
   8a958:	88bffb26 	beq	r17,r2,8a948 <_strtod_r+0x820>
   8a95c:	88fff3c4 	addi	r3,r17,-49
   8a960:	00800204 	movi	r2,8
   8a964:	10c1ca36 	bltu	r2,r3,8b090 <_strtod_r+0xf68>
   8a968:	d8c00417 	ldw	r3,16(sp)
   8a96c:	d9801715 	stw	r6,92(sp)
   8a970:	8dbff404 	addi	r22,r17,-48
   8a974:	d8c01415 	stw	r3,80(sp)
   8a978:	1821883a 	mov	r16,r3
   8a97c:	d8001815 	stw	zero,96(sp)
   8a980:	01800044 	movi	r6,1
   8a984:	b0023526 	beq	r22,zero,8b25c <_strtod_r+0x1134>
   8a988:	d9001717 	ldw	r4,92(sp)
   8a98c:	00800044 	movi	r2,1
   8a990:	2189883a 	add	r4,r4,r6
   8a994:	d9001715 	stw	r4,92(sp)
   8a998:	1183390e 	bge	r2,r6,8b680 <_strtod_r+0x1558>
   8a99c:	dc401817 	ldw	r17,96(sp)
   8a9a0:	1025883a 	mov	r18,r2
   8a9a4:	05c00204 	movi	r23,8
   8a9a8:	00000806 	br	8a9cc <_strtod_r+0x8a4>
   8a9ac:	d9001217 	ldw	r4,72(sp)
   8a9b0:	01400284 	movi	r5,10
   8a9b4:	d9802015 	stw	r6,128(sp)
   8a9b8:	008f3380 	call	8f338 <__mulsi3>
   8a9bc:	d9802017 	ldw	r6,128(sp)
   8a9c0:	d8801215 	stw	r2,72(sp)
   8a9c4:	94800044 	addi	r18,r18,1
   8a9c8:	91821726 	beq	r18,r6,8b228 <_strtod_r+0x1100>
   8a9cc:	8c400044 	addi	r17,r17,1
   8a9d0:	88bfffc4 	addi	r2,r17,-1
   8a9d4:	b8bff50e 	bge	r23,r2,8a9ac <_strtod_r+0x884>
   8a9d8:	00800404 	movi	r2,16
   8a9dc:	147ff916 	blt	r2,r17,8a9c4 <_strtod_r+0x89c>
   8a9e0:	d9001117 	ldw	r4,68(sp)
   8a9e4:	01400284 	movi	r5,10
   8a9e8:	d9802015 	stw	r6,128(sp)
   8a9ec:	008f3380 	call	8f338 <__mulsi3>
   8a9f0:	d9802017 	ldw	r6,128(sp)
   8a9f4:	d8801115 	stw	r2,68(sp)
   8a9f8:	003ff206 	br	8a9c4 <_strtod_r+0x89c>
   8a9fc:	d8001c15 	stw	zero,112(sp)
   8aa00:	d8c01217 	ldw	r3,72(sp)
   8aa04:	d9401417 	ldw	r5,80(sp)
   8aa08:	d9c01817 	ldw	r7,96(sp)
   8aa0c:	a809883a 	mov	r4,r21
   8aa10:	a00d883a 	mov	r6,r20
   8aa14:	d8c00015 	stw	r3,0(sp)
   8aa18:	00897480 	call	89748 <__s2b>
   8aa1c:	11000304 	addi	r4,r2,12
   8aa20:	d8801015 	stw	r2,64(sp)
   8aa24:	d8800f17 	ldw	r2,60(sp)
   8aa28:	d9001f15 	stw	r4,124(sp)
   8aa2c:	1004803a 	cmplt	r2,r2,zero
   8aa30:	d8801e15 	stw	r2,120(sp)
   8aa34:	d8c01017 	ldw	r3,64(sp)
   8aa38:	a809883a 	mov	r4,r21
   8aa3c:	19400117 	ldw	r5,4(r3)
   8aa40:	0088d5c0 	call	88d5c <_Balloc>
   8aa44:	d9001017 	ldw	r4,64(sp)
   8aa48:	d9401f17 	ldw	r5,124(sp)
   8aa4c:	102f883a 	mov	r23,r2
   8aa50:	21800417 	ldw	r6,16(r4)
   8aa54:	11000304 	addi	r4,r2,12
   8aa58:	318d883a 	add	r6,r6,r6
   8aa5c:	318d883a 	add	r6,r6,r6
   8aa60:	31800204 	addi	r6,r6,8
   8aa64:	008865c0 	call	8865c <memcpy>
   8aa68:	e2000017 	ldw	r8,0(fp)
   8aa6c:	e2400117 	ldw	r9,4(fp)
   8aa70:	a809883a 	mov	r4,r21
   8aa74:	400b883a 	mov	r5,r8
   8aa78:	d9c00204 	addi	r7,sp,8
   8aa7c:	d8800304 	addi	r2,sp,12
   8aa80:	480d883a 	mov	r6,r9
   8aa84:	d8800015 	stw	r2,0(sp)
   8aa88:	0088e180 	call	88e18 <__d2b>
   8aa8c:	a809883a 	mov	r4,r21
   8aa90:	01400044 	movi	r5,1
   8aa94:	d8800515 	stw	r2,20(sp)
   8aa98:	00894c00 	call	894c0 <__i2b>
   8aa9c:	d8c01e17 	ldw	r3,120(sp)
   8aaa0:	102d883a 	mov	r22,r2
   8aaa4:	1801091e 	bne	r3,zero,8aecc <_strtod_r+0xda4>
   8aaa8:	dd000f17 	ldw	r20,60(sp)
   8aaac:	000f883a 	mov	r7,zero
   8aab0:	0013883a 	mov	r9,zero
   8aab4:	a011883a 	mov	r8,r20
   8aab8:	d8800217 	ldw	r2,8(sp)
   8aabc:	10010116 	blt	r2,zero,8aec4 <_strtod_r+0xd9c>
   8aac0:	388f883a 	add	r7,r7,r2
   8aac4:	d8c01c17 	ldw	r3,112(sp)
   8aac8:	d9400317 	ldw	r5,12(sp)
   8aacc:	10c9c83a 	sub	r4,r2,r3
   8aad0:	2145883a 	add	r2,r4,r5
   8aad4:	10bfffc4 	addi	r2,r2,-1
   8aad8:	00ff0084 	movi	r3,-1022
   8aadc:	10c09f0e 	bge	r2,r3,8ad5c <_strtod_r+0xc34>
   8aae0:	21810cc4 	addi	r6,r4,1075
   8aae4:	d9001c17 	ldw	r4,112(sp)
   8aae8:	4185883a 	add	r2,r8,r6
   8aaec:	39a1883a 	add	r16,r7,r6
   8aaf0:	20a5883a 	add	r18,r4,r2
   8aaf4:	3807883a 	mov	r3,r7
   8aaf8:	81c0010e 	bge	r16,r7,8ab00 <_strtod_r+0x9d8>
   8aafc:	8007883a 	mov	r3,r16
   8ab00:	9005883a 	mov	r2,r18
   8ab04:	1c80010e 	bge	r3,r18,8ab0c <_strtod_r+0x9e4>
   8ab08:	1805883a 	mov	r2,r3
   8ab0c:	0080eb0e 	bge	zero,r2,8aebc <_strtod_r+0xd94>
   8ab10:	38a7c83a 	sub	r19,r7,r2
   8ab14:	80a1c83a 	sub	r16,r16,r2
   8ab18:	90a5c83a 	sub	r18,r18,r2
   8ab1c:	02400e0e 	bge	zero,r9,8ab58 <_strtod_r+0xa30>
   8ab20:	480d883a 	mov	r6,r9
   8ab24:	b00b883a 	mov	r5,r22
   8ab28:	a809883a 	mov	r4,r21
   8ab2c:	00896280 	call	89628 <__pow5mult>
   8ab30:	d9800517 	ldw	r6,20(sp)
   8ab34:	a809883a 	mov	r4,r21
   8ab38:	100b883a 	mov	r5,r2
   8ab3c:	102d883a 	mov	r22,r2
   8ab40:	008926c0 	call	8926c <__multiply>
   8ab44:	d9400517 	ldw	r5,20(sp)
   8ab48:	1023883a 	mov	r17,r2
   8ab4c:	a809883a 	mov	r4,r21
   8ab50:	00887dc0 	call	887dc <_Bfree>
   8ab54:	dc400515 	stw	r17,20(sp)
   8ab58:	0400050e 	bge	zero,r16,8ab70 <_strtod_r+0xa48>
   8ab5c:	d9400517 	ldw	r5,20(sp)
   8ab60:	800d883a 	mov	r6,r16
   8ab64:	a809883a 	mov	r4,r21
   8ab68:	00891200 	call	89120 <__lshift>
   8ab6c:	d8800515 	stw	r2,20(sp)
   8ab70:	a000741e 	bne	r20,zero,8ad44 <_strtod_r+0xc1c>
   8ab74:	0480050e 	bge	zero,r18,8ab8c <_strtod_r+0xa64>
   8ab78:	b80b883a 	mov	r5,r23
   8ab7c:	900d883a 	mov	r6,r18
   8ab80:	a809883a 	mov	r4,r21
   8ab84:	00891200 	call	89120 <__lshift>
   8ab88:	102f883a 	mov	r23,r2
   8ab8c:	04c0050e 	bge	zero,r19,8aba4 <_strtod_r+0xa7c>
   8ab90:	b00b883a 	mov	r5,r22
   8ab94:	980d883a 	mov	r6,r19
   8ab98:	a809883a 	mov	r4,r21
   8ab9c:	00891200 	call	89120 <__lshift>
   8aba0:	102d883a 	mov	r22,r2
   8aba4:	d9400517 	ldw	r5,20(sp)
   8aba8:	a809883a 	mov	r4,r21
   8abac:	b80d883a 	mov	r6,r23
   8abb0:	0088f940 	call	88f94 <__mdiff>
   8abb4:	1029883a 	mov	r20,r2
   8abb8:	10800317 	ldw	r2,12(r2)
   8abbc:	a009883a 	mov	r4,r20
   8abc0:	a0000315 	stw	zero,12(r20)
   8abc4:	b00b883a 	mov	r5,r22
   8abc8:	d8801a15 	stw	r2,104(sp)
   8abcc:	00889380 	call	88938 <__mcmp>
   8abd0:	1001a616 	blt	r2,zero,8b26c <_strtod_r+0x1144>
   8abd4:	10016d26 	beq	r2,zero,8b18c <_strtod_r+0x1064>
   8abd8:	a009883a 	mov	r4,r20
   8abdc:	b00b883a 	mov	r5,r22
   8abe0:	0088b380 	call	88b38 <__ratio>
   8abe4:	0011883a 	mov	r8,zero
   8abe8:	02500034 	movhi	r9,16384
   8abec:	480f883a 	mov	r7,r9
   8abf0:	1009883a 	mov	r4,r2
   8abf4:	180b883a 	mov	r5,r3
   8abf8:	400d883a 	mov	r6,r8
   8abfc:	1021883a 	mov	r16,r2
   8ac00:	1823883a 	mov	r17,r3
   8ac04:	008ed8c0 	call	8ed8c <__ledf2>
   8ac08:	00805716 	blt	zero,r2,8ad68 <_strtod_r+0xc40>
   8ac0c:	d8801a17 	ldw	r2,104(sp)
   8ac10:	1025003a 	cmpeq	r18,r2,zero
   8ac14:	90008c1e 	bne	r18,zero,8ae48 <_strtod_r+0xd20>
   8ac18:	008ffc34 	movhi	r2,16368
   8ac1c:	0021883a 	mov	r16,zero
   8ac20:	1023883a 	mov	r17,r2
   8ac24:	d8000715 	stw	zero,28(sp)
   8ac28:	d8800815 	stw	r2,32(sp)
   8ac2c:	e1c00117 	ldw	r7,4(fp)
   8ac30:	009ff834 	movhi	r2,32736
   8ac34:	3cdffc2c 	andhi	r19,r7,32752
   8ac38:	98805f26 	beq	r19,r2,8adb8 <_strtod_r+0xc90>
   8ac3c:	d8c01c17 	ldw	r3,112(sp)
   8ac40:	18001b26 	beq	r3,zero,8acb0 <_strtod_r+0xb88>
   8ac44:	0081a834 	movhi	r2,1696
   8ac48:	14c01936 	bltu	r2,r19,8acb0 <_strtod_r+0xb88>
   8ac4c:	00bff034 	movhi	r2,65472
   8ac50:	00d07834 	movhi	r3,16864
   8ac54:	18ffffc4 	addi	r3,r3,-1
   8ac58:	180f883a 	mov	r7,r3
   8ac5c:	8009883a 	mov	r4,r16
   8ac60:	880b883a 	mov	r5,r17
   8ac64:	100d883a 	mov	r6,r2
   8ac68:	008ed8c0 	call	8ed8c <__ledf2>
   8ac6c:	00800b16 	blt	zero,r2,8ac9c <_strtod_r+0xb74>
   8ac70:	880b883a 	mov	r5,r17
   8ac74:	8009883a 	mov	r4,r16
   8ac78:	008d0ec0 	call	8d0ec <__fixunsdfsi>
   8ac7c:	1000e31e 	bne	r2,zero,8b00c <_strtod_r+0xee4>
   8ac80:	0021883a 	mov	r16,zero
   8ac84:	044ffc34 	movhi	r17,16368
   8ac88:	9000dd1e 	bne	r18,zero,8b000 <_strtod_r+0xed8>
   8ac8c:	8005883a 	mov	r2,r16
   8ac90:	8807883a 	mov	r3,r17
   8ac94:	d8c00815 	stw	r3,32(sp)
   8ac98:	d8800715 	stw	r2,28(sp)
   8ac9c:	d8800817 	ldw	r2,32(sp)
   8aca0:	00c1ac34 	movhi	r3,1712
   8aca4:	14c5c83a 	sub	r2,r2,r19
   8aca8:	10c5883a 	add	r2,r2,r3
   8acac:	d8800815 	stw	r2,32(sp)
   8acb0:	e0800017 	ldw	r2,0(fp)
   8acb4:	e0c00117 	ldw	r3,4(fp)
   8acb8:	1009883a 	mov	r4,r2
   8acbc:	180b883a 	mov	r5,r3
   8acc0:	00889980 	call	88998 <__ulp>
   8acc4:	d9800717 	ldw	r6,28(sp)
   8acc8:	d9c00817 	ldw	r7,32(sp)
   8accc:	180b883a 	mov	r5,r3
   8acd0:	1009883a 	mov	r4,r2
   8acd4:	008e4c80 	call	8e4c8 <__muldf3>
   8acd8:	e2000017 	ldw	r8,0(fp)
   8acdc:	e2400117 	ldw	r9,4(fp)
   8ace0:	180b883a 	mov	r5,r3
   8ace4:	1009883a 	mov	r4,r2
   8ace8:	480f883a 	mov	r7,r9
   8acec:	400d883a 	mov	r6,r8
   8acf0:	008e4540 	call	8e454 <__adddf3>
   8acf4:	e0c00115 	stw	r3,4(fp)
   8acf8:	e0800015 	stw	r2,0(fp)
   8acfc:	d9001c17 	ldw	r4,112(sp)
   8ad00:	e4800117 	ldw	r18,4(fp)
   8ad04:	2000021e 	bne	r4,zero,8ad10 <_strtod_r+0xbe8>
   8ad08:	909ffc2c 	andhi	r2,r18,32752
   8ad0c:	98807f26 	beq	r19,r2,8af0c <_strtod_r+0xde4>
   8ad10:	d9400517 	ldw	r5,20(sp)
   8ad14:	a809883a 	mov	r4,r21
   8ad18:	00887dc0 	call	887dc <_Bfree>
   8ad1c:	a809883a 	mov	r4,r21
   8ad20:	b80b883a 	mov	r5,r23
   8ad24:	00887dc0 	call	887dc <_Bfree>
   8ad28:	a809883a 	mov	r4,r21
   8ad2c:	b00b883a 	mov	r5,r22
   8ad30:	00887dc0 	call	887dc <_Bfree>
   8ad34:	a809883a 	mov	r4,r21
   8ad38:	a00b883a 	mov	r5,r20
   8ad3c:	00887dc0 	call	887dc <_Bfree>
   8ad40:	003f3c06 	br	8aa34 <_strtod_r+0x90c>
   8ad44:	b80b883a 	mov	r5,r23
   8ad48:	a00d883a 	mov	r6,r20
   8ad4c:	a809883a 	mov	r4,r21
   8ad50:	00896280 	call	89628 <__pow5mult>
   8ad54:	102f883a 	mov	r23,r2
   8ad58:	003f8606 	br	8ab74 <_strtod_r+0xa4c>
   8ad5c:	00800d84 	movi	r2,54
   8ad60:	114dc83a 	sub	r6,r2,r5
   8ad64:	003f5f06 	br	8aae4 <_strtod_r+0x9bc>
   8ad68:	0005883a 	mov	r2,zero
   8ad6c:	00cff834 	movhi	r3,16352
   8ad70:	8009883a 	mov	r4,r16
   8ad74:	880b883a 	mov	r5,r17
   8ad78:	180f883a 	mov	r7,r3
   8ad7c:	100d883a 	mov	r6,r2
   8ad80:	008e4c80 	call	8e4c8 <__muldf3>
   8ad84:	1009883a 	mov	r4,r2
   8ad88:	d8801a17 	ldw	r2,104(sp)
   8ad8c:	2021883a 	mov	r16,r4
   8ad90:	1823883a 	mov	r17,r3
   8ad94:	1025003a 	cmpeq	r18,r2,zero
   8ad98:	9000451e 	bne	r18,zero,8aeb0 <_strtod_r+0xd88>
   8ad9c:	2005883a 	mov	r2,r4
   8ada0:	d8800715 	stw	r2,28(sp)
   8ada4:	d8c00815 	stw	r3,32(sp)
   8ada8:	e1c00117 	ldw	r7,4(fp)
   8adac:	009ff834 	movhi	r2,32736
   8adb0:	3cdffc2c 	andhi	r19,r7,32752
   8adb4:	98bfa11e 	bne	r19,r2,8ac3c <_strtod_r+0xb14>
   8adb8:	e1000017 	ldw	r4,0(fp)
   8adbc:	01bf2c34 	movhi	r6,64688
   8adc0:	398d883a 	add	r6,r7,r6
   8adc4:	d9000b15 	stw	r4,44(sp)
   8adc8:	d9c00c15 	stw	r7,48(sp)
   8adcc:	300b883a 	mov	r5,r6
   8add0:	e1800115 	stw	r6,4(fp)
   8add4:	00889980 	call	88998 <__ulp>
   8add8:	d9800717 	ldw	r6,28(sp)
   8addc:	d9c00817 	ldw	r7,32(sp)
   8ade0:	180b883a 	mov	r5,r3
   8ade4:	1009883a 	mov	r4,r2
   8ade8:	008e4c80 	call	8e4c8 <__muldf3>
   8adec:	e2000017 	ldw	r8,0(fp)
   8adf0:	e2400117 	ldw	r9,4(fp)
   8adf4:	180b883a 	mov	r5,r3
   8adf8:	1009883a 	mov	r4,r2
   8adfc:	480f883a 	mov	r7,r9
   8ae00:	400d883a 	mov	r6,r8
   8ae04:	008e4540 	call	8e454 <__adddf3>
   8ae08:	1009883a 	mov	r4,r2
   8ae0c:	180b883a 	mov	r5,r3
   8ae10:	009f2834 	movhi	r2,31904
   8ae14:	10bfffc4 	addi	r2,r2,-1
   8ae18:	18dffc2c 	andhi	r3,r3,32752
   8ae1c:	e1000015 	stw	r4,0(fp)
   8ae20:	e1400115 	stw	r5,4(fp)
   8ae24:	10c0722e 	bgeu	r2,r3,8aff0 <_strtod_r+0xec8>
   8ae28:	d8800c17 	ldw	r2,48(sp)
   8ae2c:	011ffc34 	movhi	r4,32752
   8ae30:	213fffc4 	addi	r4,r4,-1
   8ae34:	11007d26 	beq	r2,r4,8b02c <_strtod_r+0xf04>
   8ae38:	01ffffc4 	movi	r7,-1
   8ae3c:	e1000115 	stw	r4,4(fp)
   8ae40:	e1c00015 	stw	r7,0(fp)
   8ae44:	003fb206 	br	8ad10 <_strtod_r+0xbe8>
   8ae48:	e0c00017 	ldw	r3,0(fp)
   8ae4c:	1800251e 	bne	r3,zero,8aee4 <_strtod_r+0xdbc>
   8ae50:	e0800117 	ldw	r2,4(fp)
   8ae54:	00c00434 	movhi	r3,16
   8ae58:	18ffffc4 	addi	r3,r3,-1
   8ae5c:	10c4703a 	and	r2,r2,r3
   8ae60:	1000241e 	bne	r2,zero,8aef4 <_strtod_r+0xdcc>
   8ae64:	0005883a 	mov	r2,zero
   8ae68:	00cffc34 	movhi	r3,16368
   8ae6c:	180f883a 	mov	r7,r3
   8ae70:	8009883a 	mov	r4,r16
   8ae74:	880b883a 	mov	r5,r17
   8ae78:	100d883a 	mov	r6,r2
   8ae7c:	008ed040 	call	8ed04 <__ltdf2>
   8ae80:	10014616 	blt	r2,zero,8b39c <_strtod_r+0x1274>
   8ae84:	0005883a 	mov	r2,zero
   8ae88:	00cff834 	movhi	r3,16352
   8ae8c:	880b883a 	mov	r5,r17
   8ae90:	8009883a 	mov	r4,r16
   8ae94:	180f883a 	mov	r7,r3
   8ae98:	100d883a 	mov	r6,r2
   8ae9c:	008e4c80 	call	8e4c8 <__muldf3>
   8aea0:	1823883a 	mov	r17,r3
   8aea4:	1021883a 	mov	r16,r2
   8aea8:	18e0003c 	xorhi	r3,r3,32768
   8aeac:	003fbc06 	br	8ada0 <_strtod_r+0xc78>
   8aeb0:	2005883a 	mov	r2,r4
   8aeb4:	18e0003c 	xorhi	r3,r3,32768
   8aeb8:	003fb906 	br	8ada0 <_strtod_r+0xc78>
   8aebc:	3827883a 	mov	r19,r7
   8aec0:	003f1606 	br	8ab1c <_strtod_r+0x9f4>
   8aec4:	4091c83a 	sub	r8,r8,r2
   8aec8:	003efe06 	br	8aac4 <_strtod_r+0x99c>
   8aecc:	d9000f17 	ldw	r4,60(sp)
   8aed0:	0011883a 	mov	r8,zero
   8aed4:	0029883a 	mov	r20,zero
   8aed8:	0113c83a 	sub	r9,zero,r4
   8aedc:	480f883a 	mov	r7,r9
   8aee0:	003ef506 	br	8aab8 <_strtod_r+0x990>
   8aee4:	00800044 	movi	r2,1
   8aee8:	1880021e 	bne	r3,r2,8aef4 <_strtod_r+0xdcc>
   8aeec:	e0800117 	ldw	r2,4(fp)
   8aef0:	1000c526 	beq	r2,zero,8b208 <_strtod_r+0x10e0>
   8aef4:	00affc34 	movhi	r2,49136
   8aef8:	0021883a 	mov	r16,zero
   8aefc:	044ffc34 	movhi	r17,16368
   8af00:	d8800815 	stw	r2,32(sp)
   8af04:	d8000715 	stw	zero,28(sp)
   8af08:	003f4806 	br	8ac2c <_strtod_r+0xb04>
   8af0c:	880b883a 	mov	r5,r17
   8af10:	8009883a 	mov	r4,r16
   8af14:	008ef0c0 	call	8ef0c <__fixdfsi>
   8af18:	1009883a 	mov	r4,r2
   8af1c:	008ee140 	call	8ee14 <__floatsidf>
   8af20:	880b883a 	mov	r5,r17
   8af24:	8009883a 	mov	r4,r16
   8af28:	100d883a 	mov	r6,r2
   8af2c:	180f883a 	mov	r7,r3
   8af30:	008e3d40 	call	8e3d4 <__subdf3>
   8af34:	100b883a 	mov	r5,r2
   8af38:	1021883a 	mov	r16,r2
   8af3c:	d8801a17 	ldw	r2,104(sp)
   8af40:	180d883a 	mov	r6,r3
   8af44:	1823883a 	mov	r17,r3
   8af48:	1000061e 	bne	r2,zero,8af64 <_strtod_r+0xe3c>
   8af4c:	e0800017 	ldw	r2,0(fp)
   8af50:	1000041e 	bne	r2,zero,8af64 <_strtod_r+0xe3c>
   8af54:	00c00434 	movhi	r3,16
   8af58:	18ffffc4 	addi	r3,r3,-1
   8af5c:	90c4703a 	and	r2,r18,r3
   8af60:	10004026 	beq	r2,zero,8b064 <_strtod_r+0xf3c>
   8af64:	00a52834 	movhi	r2,38048
   8af68:	108d6544 	addi	r2,r2,13717
   8af6c:	00cff834 	movhi	r3,16352
   8af70:	18ffffc4 	addi	r3,r3,-1
   8af74:	180f883a 	mov	r7,r3
   8af78:	8009883a 	mov	r4,r16
   8af7c:	880b883a 	mov	r5,r17
   8af80:	100d883a 	mov	r6,r2
   8af84:	008ed040 	call	8ed04 <__ltdf2>
   8af88:	10000916 	blt	r2,zero,8afb0 <_strtod_r+0xe88>
   8af8c:	008d6c34 	movhi	r2,13744
   8af90:	10b94d44 	addi	r2,r2,-6859
   8af94:	00cff834 	movhi	r3,16352
   8af98:	880b883a 	mov	r5,r17
   8af9c:	180f883a 	mov	r7,r3
   8afa0:	8009883a 	mov	r4,r16
   8afa4:	100d883a 	mov	r6,r2
   8afa8:	008ebf40 	call	8ebf4 <__gtdf2>
   8afac:	00bf580e 	bge	zero,r2,8ad10 <_strtod_r+0xbe8>
   8afb0:	d9400517 	ldw	r5,20(sp)
   8afb4:	a809883a 	mov	r4,r21
   8afb8:	00887dc0 	call	887dc <_Bfree>
   8afbc:	a809883a 	mov	r4,r21
   8afc0:	b80b883a 	mov	r5,r23
   8afc4:	00887dc0 	call	887dc <_Bfree>
   8afc8:	a809883a 	mov	r4,r21
   8afcc:	b00b883a 	mov	r5,r22
   8afd0:	00887dc0 	call	887dc <_Bfree>
   8afd4:	d9401017 	ldw	r5,64(sp)
   8afd8:	a809883a 	mov	r4,r21
   8afdc:	00887dc0 	call	887dc <_Bfree>
   8afe0:	a809883a 	mov	r4,r21
   8afe4:	a00b883a 	mov	r5,r20
   8afe8:	00887dc0 	call	887dc <_Bfree>
   8afec:	003cd806 	br	8a350 <_strtod_r+0x228>
   8aff0:	0080d434 	movhi	r2,848
   8aff4:	288d883a 	add	r6,r5,r2
   8aff8:	e1800115 	stw	r6,4(fp)
   8affc:	003f3f06 	br	8acfc <_strtod_r+0xbd4>
   8b000:	8005883a 	mov	r2,r16
   8b004:	88e0003c 	xorhi	r3,r17,32768
   8b008:	003f2206 	br	8ac94 <_strtod_r+0xb6c>
   8b00c:	1009883a 	mov	r4,r2
   8b010:	008f0580 	call	8f058 <__floatunsidf>
   8b014:	1021883a 	mov	r16,r2
   8b018:	1823883a 	mov	r17,r3
   8b01c:	003f1a06 	br	8ac88 <_strtod_r+0xb60>
   8b020:	dc000417 	ldw	r16,16(sp)
   8b024:	31800044 	addi	r6,r6,1
   8b028:	003e5606 	br	8a984 <_strtod_r+0x85c>
   8b02c:	d8c00b17 	ldw	r3,44(sp)
   8b030:	00bfffc4 	movi	r2,-1
   8b034:	18bf801e 	bne	r3,r2,8ae38 <_strtod_r+0xd10>
   8b038:	00c00884 	movi	r3,34
   8b03c:	a8c00015 	stw	r3,0(r21)
   8b040:	009ffc34 	movhi	r2,32752
   8b044:	e0800115 	stw	r2,4(fp)
   8b048:	e0000015 	stw	zero,0(fp)
   8b04c:	003fd806 	br	8afb0 <_strtod_r+0xe88>
   8b050:	8025883a 	mov	r18,r16
   8b054:	0027883a 	mov	r19,zero
   8b058:	d8001215 	stw	zero,72(sp)
   8b05c:	d8001115 	stw	zero,68(sp)
   8b060:	003cac06 	br	8a314 <_strtod_r+0x1ec>
   8b064:	00a52834 	movhi	r2,38048
   8b068:	108d6544 	addi	r2,r2,13717
   8b06c:	00cff434 	movhi	r3,16336
   8b070:	18ffffc4 	addi	r3,r3,-1
   8b074:	2809883a 	mov	r4,r5
   8b078:	180f883a 	mov	r7,r3
   8b07c:	300b883a 	mov	r5,r6
   8b080:	100d883a 	mov	r6,r2
   8b084:	008ed040 	call	8ed04 <__ltdf2>
   8b088:	103f210e 	bge	r2,zero,8ad10 <_strtod_r+0xbe8>
   8b08c:	003fc806 	br	8afb0 <_strtod_r+0xe88>
   8b090:	00800044 	movi	r2,1
   8b094:	d8001815 	stw	zero,96(sp)
   8b098:	d8801b15 	stw	r2,108(sp)
   8b09c:	d8001715 	stw	zero,92(sp)
   8b0a0:	003ca206 	br	8a32c <_strtod_r+0x204>
   8b0a4:	00800884 	movi	r2,34
   8b0a8:	a8800015 	stw	r2,0(r21)
   8b0ac:	019ffc34 	movhi	r6,32752
   8b0b0:	e1800115 	stw	r6,4(fp)
   8b0b4:	e0000015 	stw	zero,0(fp)
   8b0b8:	003ca506 	br	8a350 <_strtod_r+0x228>
   8b0bc:	011387c4 	movi	r4,19999
   8b0c0:	003d0206 	br	8a4cc <_strtod_r+0x3a4>
   8b0c4:	180a90fa 	slli	r5,r3,3
   8b0c8:	e0800017 	ldw	r2,0(fp)
   8b0cc:	e0c00117 	ldw	r3,4(fp)
   8b0d0:	01000274 	movhi	r4,9
   8b0d4:	210efc04 	addi	r4,r4,15344
   8b0d8:	290b883a 	add	r5,r5,r4
   8b0dc:	2a000017 	ldw	r8,0(r5)
   8b0e0:	2a400117 	ldw	r9,4(r5)
   8b0e4:	1009883a 	mov	r4,r2
   8b0e8:	180b883a 	mov	r5,r3
   8b0ec:	480f883a 	mov	r7,r9
   8b0f0:	400d883a 	mov	r6,r8
   8b0f4:	008e4c80 	call	8e4c8 <__muldf3>
   8b0f8:	e0c00115 	stw	r3,4(fp)
   8b0fc:	e0800015 	stw	r2,0(fp)
   8b100:	003c9306 	br	8a350 <_strtod_r+0x228>
   8b104:	d8800d17 	ldw	r2,52(sp)
   8b108:	e0800015 	stw	r2,0(fp)
   8b10c:	d8c00e17 	ldw	r3,56(sp)
   8b110:	e0c00115 	stw	r3,4(fp)
   8b114:	9080020c 	andi	r2,r18,8
   8b118:	103c8d26 	beq	r2,zero,8a350 <_strtod_r+0x228>
   8b11c:	e0800117 	ldw	r2,4(fp)
   8b120:	10a00034 	orhi	r2,r2,32768
   8b124:	e0800115 	stw	r2,4(fp)
   8b128:	003c8906 	br	8a350 <_strtod_r+0x228>
   8b12c:	009ffc34 	movhi	r2,32752
   8b130:	e0800115 	stw	r2,4(fp)
   8b134:	e0000015 	stw	zero,0(fp)
   8b138:	003ff606 	br	8b114 <_strtod_r+0xfec>
   8b13c:	00a00034 	movhi	r2,32768
   8b140:	10bfffc4 	addi	r2,r2,-1
   8b144:	00ffffc4 	movi	r3,-1
   8b148:	e0800115 	stw	r2,4(fp)
   8b14c:	e0c00015 	stw	r3,0(fp)
   8b150:	003ff006 	br	8b114 <_strtod_r+0xfec>
   8b154:	e0000115 	stw	zero,4(fp)
   8b158:	e0000015 	stw	zero,0(fp)
   8b15c:	003fed06 	br	8b114 <_strtod_r+0xfec>
   8b160:	d8800e17 	ldw	r2,56(sp)
   8b164:	29010cc4 	addi	r4,r5,1075
   8b168:	00fffc34 	movhi	r3,65520
   8b16c:	18ffffc4 	addi	r3,r3,-1
   8b170:	2008953a 	slli	r4,r4,20
   8b174:	10c4703a 	and	r2,r2,r3
   8b178:	d8c00d17 	ldw	r3,52(sp)
   8b17c:	1104b03a 	or	r2,r2,r4
   8b180:	e0800115 	stw	r2,4(fp)
   8b184:	e0c00015 	stw	r3,0(fp)
   8b188:	003fe206 	br	8b114 <_strtod_r+0xfec>
   8b18c:	d8c01a17 	ldw	r3,104(sp)
   8b190:	1825003a 	cmpeq	r18,r3,zero
   8b194:	9000cf1e 	bne	r18,zero,8b4d4 <_strtod_r+0x13ac>
   8b198:	e1400117 	ldw	r5,4(fp)
   8b19c:	01000434 	movhi	r4,16
   8b1a0:	213fffc4 	addi	r4,r4,-1
   8b1a4:	2904703a 	and	r2,r5,r4
   8b1a8:	11006826 	beq	r2,r4,8b34c <_strtod_r+0x1224>
   8b1ac:	e1c00017 	ldw	r7,0(fp)
   8b1b0:	3880004c 	andi	r2,r7,1
   8b1b4:	1005003a 	cmpeq	r2,r2,zero
   8b1b8:	1000601e 	bne	r2,zero,8b33c <_strtod_r+0x1214>
   8b1bc:	90010426 	beq	r18,zero,8b5d0 <_strtod_r+0x14a8>
   8b1c0:	e4400117 	ldw	r17,4(fp)
   8b1c4:	3809883a 	mov	r4,r7
   8b1c8:	3821883a 	mov	r16,r7
   8b1cc:	880b883a 	mov	r5,r17
   8b1d0:	00889980 	call	88998 <__ulp>
   8b1d4:	180f883a 	mov	r7,r3
   8b1d8:	880b883a 	mov	r5,r17
   8b1dc:	8009883a 	mov	r4,r16
   8b1e0:	100d883a 	mov	r6,r2
   8b1e4:	008e3d40 	call	8e3d4 <__subdf3>
   8b1e8:	1009883a 	mov	r4,r2
   8b1ec:	000d883a 	mov	r6,zero
   8b1f0:	000f883a 	mov	r7,zero
   8b1f4:	180b883a 	mov	r5,r3
   8b1f8:	e0800015 	stw	r2,0(fp)
   8b1fc:	e0c00115 	stw	r3,4(fp)
   8b200:	008eb6c0 	call	8eb6c <__nedf2>
   8b204:	10004d1e 	bne	r2,zero,8b33c <_strtod_r+0x1214>
   8b208:	00800884 	movi	r2,34
   8b20c:	a8800015 	stw	r2,0(r21)
   8b210:	e0000015 	stw	zero,0(fp)
   8b214:	e0000115 	stw	zero,4(fp)
   8b218:	003f6506 	br	8afb0 <_strtod_r+0xe88>
   8b21c:	00800044 	movi	r2,1
   8b220:	d8801915 	stw	r2,100(sp)
   8b224:	003d4406 	br	8a738 <_strtod_r+0x610>
   8b228:	d8c01817 	ldw	r3,96(sp)
   8b22c:	1985883a 	add	r2,r3,r6
   8b230:	11ffffc4 	addi	r7,r2,-1
   8b234:	39000044 	addi	r4,r7,1
   8b238:	00800204 	movi	r2,8
   8b23c:	d9001815 	stw	r4,96(sp)
   8b240:	11c0d716 	blt	r2,r7,8b5a0 <_strtod_r+0x1478>
   8b244:	d9001217 	ldw	r4,72(sp)
   8b248:	01400284 	movi	r5,10
   8b24c:	008f3380 	call	8f338 <__mulsi3>
   8b250:	1585883a 	add	r2,r2,r22
   8b254:	d8801215 	stw	r2,72(sp)
   8b258:	000d883a 	mov	r6,zero
   8b25c:	84000044 	addi	r16,r16,1
   8b260:	dc000415 	stw	r16,16(sp)
   8b264:	84400007 	ldb	r17,0(r16)
   8b268:	003cfc06 	br	8a65c <_strtod_r+0x534>
   8b26c:	d8c01a17 	ldw	r3,104(sp)
   8b270:	1800321e 	bne	r3,zero,8b33c <_strtod_r+0x1214>
   8b274:	e0800017 	ldw	r2,0(fp)
   8b278:	1000b31e 	bne	r2,zero,8b548 <_strtod_r+0x1420>
   8b27c:	e0c00117 	ldw	r3,4(fp)
   8b280:	01000434 	movhi	r4,16
   8b284:	213fffc4 	addi	r4,r4,-1
   8b288:	1904703a 	and	r2,r3,r4
   8b28c:	1000e71e 	bne	r2,zero,8b62c <_strtod_r+0x1504>
   8b290:	18dffc2c 	andhi	r3,r3,32752
   8b294:	0081ac34 	movhi	r2,1712
   8b298:	10c0282e 	bgeu	r2,r3,8b33c <_strtod_r+0x1214>
   8b29c:	a0800517 	ldw	r2,20(r20)
   8b2a0:	1000031e 	bne	r2,zero,8b2b0 <_strtod_r+0x1188>
   8b2a4:	a0c00417 	ldw	r3,16(r20)
   8b2a8:	00800044 	movi	r2,1
   8b2ac:	10c0a60e 	bge	r2,r3,8b548 <_strtod_r+0x1420>
   8b2b0:	a00b883a 	mov	r5,r20
   8b2b4:	a809883a 	mov	r4,r21
   8b2b8:	01800044 	movi	r6,1
   8b2bc:	00891200 	call	89120 <__lshift>
   8b2c0:	1009883a 	mov	r4,r2
   8b2c4:	b00b883a 	mov	r5,r22
   8b2c8:	1029883a 	mov	r20,r2
   8b2cc:	00889380 	call	88938 <__mcmp>
   8b2d0:	00809d0e 	bge	zero,r2,8b548 <_strtod_r+0x1420>
   8b2d4:	e1800117 	ldw	r6,4(fp)
   8b2d8:	d9001c17 	ldw	r4,112(sp)
   8b2dc:	2013003a 	cmpeq	r9,r4,zero
   8b2e0:	4800d61e 	bne	r9,zero,8b63c <_strtod_r+0x1514>
   8b2e4:	30dffc2c 	andhi	r3,r6,32752
   8b2e8:	0081ac34 	movhi	r2,1712
   8b2ec:	10c0d336 	bltu	r2,r3,8b63c <_strtod_r+0x1514>
   8b2f0:	0080dc34 	movhi	r2,880
   8b2f4:	10ffc42e 	bgeu	r2,r3,8b208 <_strtod_r+0x10e0>
   8b2f8:	e0800017 	ldw	r2,0(fp)
   8b2fc:	e0c00117 	ldw	r3,4(fp)
   8b300:	020e5434 	movhi	r8,14672
   8b304:	000d883a 	mov	r6,zero
   8b308:	400f883a 	mov	r7,r8
   8b30c:	180b883a 	mov	r5,r3
   8b310:	1009883a 	mov	r4,r2
   8b314:	da000c15 	stw	r8,48(sp)
   8b318:	d8000b15 	stw	zero,44(sp)
   8b31c:	008e4c80 	call	8e4c8 <__muldf3>
   8b320:	e0800015 	stw	r2,0(fp)
   8b324:	e0c00115 	stw	r3,4(fp)
   8b328:	183f211e 	bne	r3,zero,8afb0 <_strtod_r+0xe88>
   8b32c:	103f201e 	bne	r2,zero,8afb0 <_strtod_r+0xe88>
   8b330:	00800884 	movi	r2,34
   8b334:	a8800015 	stw	r2,0(r21)
   8b338:	003f1d06 	br	8afb0 <_strtod_r+0xe88>
   8b33c:	d9001c17 	ldw	r4,112(sp)
   8b340:	2013003a 	cmpeq	r9,r4,zero
   8b344:	483f1a1e 	bne	r9,zero,8afb0 <_strtod_r+0xe88>
   8b348:	003feb06 	br	8b2f8 <_strtod_r+0x11d0>
   8b34c:	d8801c17 	ldw	r2,112(sp)
   8b350:	e1c00017 	ldw	r7,0(fp)
   8b354:	1013003a 	cmpeq	r9,r2,zero
   8b358:	4800c31e 	bne	r9,zero,8b668 <_strtod_r+0x1540>
   8b35c:	28dffc2c 	andhi	r3,r5,32752
   8b360:	0081a834 	movhi	r2,1696
   8b364:	10c0c036 	bltu	r2,r3,8b668 <_strtod_r+0x1540>
   8b368:	1804d53a 	srli	r2,r3,20
   8b36c:	00c01ac4 	movi	r3,107
   8b370:	013fffc4 	movi	r4,-1
   8b374:	1887c83a 	sub	r3,r3,r2
   8b378:	20c4983a 	sll	r2,r4,r3
   8b37c:	11ff8c1e 	bne	r2,r7,8b1b0 <_strtod_r+0x1088>
   8b380:	28dffc2c 	andhi	r3,r5,32752
   8b384:	00800434 	movhi	r2,16
   8b388:	188d883a 	add	r6,r3,r2
   8b38c:	e1800115 	stw	r6,4(fp)
   8b390:	e0000015 	stw	zero,0(fp)
   8b394:	483f061e 	bne	r9,zero,8afb0 <_strtod_r+0xe88>
   8b398:	003fd706 	br	8b2f8 <_strtod_r+0x11d0>
   8b39c:	0021883a 	mov	r16,zero
   8b3a0:	0005883a 	mov	r2,zero
   8b3a4:	044ff834 	movhi	r17,16352
   8b3a8:	00eff834 	movhi	r3,49120
   8b3ac:	003e7c06 	br	8ada0 <_strtod_r+0xc78>
   8b3b0:	803d9226 	beq	r16,zero,8a9fc <_strtod_r+0x8d4>
   8b3b4:	0421c83a 	sub	r16,zero,r16
   8b3b8:	814003cc 	andi	r5,r16,15
   8b3bc:	28000f26 	beq	r5,zero,8b3fc <_strtod_r+0x12d4>
   8b3c0:	280a90fa 	slli	r5,r5,3
   8b3c4:	01000274 	movhi	r4,9
   8b3c8:	210efc04 	addi	r4,r4,15344
   8b3cc:	e0800017 	ldw	r2,0(fp)
   8b3d0:	290b883a 	add	r5,r5,r4
   8b3d4:	2a000017 	ldw	r8,0(r5)
   8b3d8:	e0c00117 	ldw	r3,4(fp)
   8b3dc:	2a400117 	ldw	r9,4(r5)
   8b3e0:	1009883a 	mov	r4,r2
   8b3e4:	180b883a 	mov	r5,r3
   8b3e8:	480f883a 	mov	r7,r9
   8b3ec:	400d883a 	mov	r6,r8
   8b3f0:	008e88c0 	call	8e88c <__divdf3>
   8b3f4:	e0c00115 	stw	r3,4(fp)
   8b3f8:	e0800015 	stw	r2,0(fp)
   8b3fc:	8021d13a 	srai	r16,r16,4
   8b400:	803d7e26 	beq	r16,zero,8a9fc <_strtod_r+0x8d4>
   8b404:	008007c4 	movi	r2,31
   8b408:	14002d16 	blt	r2,r16,8b4c0 <_strtod_r+0x1398>
   8b40c:	8080040c 	andi	r2,r16,16
   8b410:	10009d26 	beq	r2,zero,8b688 <_strtod_r+0x1560>
   8b414:	01001a84 	movi	r4,106
   8b418:	d9001c15 	stw	r4,112(sp)
   8b41c:	0400110e 	bge	zero,r16,8b464 <_strtod_r+0x133c>
   8b420:	04400274 	movhi	r17,9
   8b424:	8c4f4904 	addi	r17,r17,15652
   8b428:	8080004c 	andi	r2,r16,1
   8b42c:	1005003a 	cmpeq	r2,r2,zero
   8b430:	1000091e 	bne	r2,zero,8b458 <_strtod_r+0x1330>
   8b434:	e0800017 	ldw	r2,0(fp)
   8b438:	e0c00117 	ldw	r3,4(fp)
   8b43c:	89800017 	ldw	r6,0(r17)
   8b440:	89c00117 	ldw	r7,4(r17)
   8b444:	180b883a 	mov	r5,r3
   8b448:	1009883a 	mov	r4,r2
   8b44c:	008e4c80 	call	8e4c8 <__muldf3>
   8b450:	e0c00115 	stw	r3,4(fp)
   8b454:	e0800015 	stw	r2,0(fp)
   8b458:	8021d07a 	srai	r16,r16,1
   8b45c:	8c400204 	addi	r17,r17,8
   8b460:	043ff116 	blt	zero,r16,8b428 <_strtod_r+0x1300>
   8b464:	d8801c17 	ldw	r2,112(sp)
   8b468:	10000d26 	beq	r2,zero,8b4a0 <_strtod_r+0x1378>
   8b46c:	e1000117 	ldw	r4,4(fp)
   8b470:	00c01ac4 	movi	r3,107
   8b474:	209ffc2c 	andhi	r2,r4,32752
   8b478:	1004d53a 	srli	r2,r2,20
   8b47c:	1887c83a 	sub	r3,r3,r2
   8b480:	00c0070e 	bge	zero,r3,8b4a0 <_strtod_r+0x1378>
   8b484:	008007c4 	movi	r2,31
   8b488:	10c0940e 	bge	r2,r3,8b6dc <_strtod_r+0x15b4>
   8b48c:	00800d04 	movi	r2,52
   8b490:	e0000015 	stw	zero,0(fp)
   8b494:	10c08b0e 	bge	r2,r3,8b6c4 <_strtod_r+0x159c>
   8b498:	0180dc34 	movhi	r6,880
   8b49c:	e1800115 	stw	r6,4(fp)
   8b4a0:	e0800017 	ldw	r2,0(fp)
   8b4a4:	e0c00117 	ldw	r3,4(fp)
   8b4a8:	000d883a 	mov	r6,zero
   8b4ac:	000f883a 	mov	r7,zero
   8b4b0:	180b883a 	mov	r5,r3
   8b4b4:	1009883a 	mov	r4,r2
   8b4b8:	008eb6c0 	call	8eb6c <__nedf2>
   8b4bc:	103d501e 	bne	r2,zero,8aa00 <_strtod_r+0x8d8>
   8b4c0:	00800884 	movi	r2,34
   8b4c4:	a8800015 	stw	r2,0(r21)
   8b4c8:	e0000015 	stw	zero,0(fp)
   8b4cc:	e0000115 	stw	zero,4(fp)
   8b4d0:	003b9f06 	br	8a350 <_strtod_r+0x228>
   8b4d4:	e1800117 	ldw	r6,4(fp)
   8b4d8:	00c00434 	movhi	r3,16
   8b4dc:	18ffffc4 	addi	r3,r3,-1
   8b4e0:	30c4703a 	and	r2,r6,r3
   8b4e4:	103f311e 	bne	r2,zero,8b1ac <_strtod_r+0x1084>
   8b4e8:	e1c00017 	ldw	r7,0(fp)
   8b4ec:	383f301e 	bne	r7,zero,8b1b0 <_strtod_r+0x1088>
   8b4f0:	003f7906 	br	8b2d8 <_strtod_r+0x11b0>
   8b4f4:	d8c00f17 	ldw	r3,60(sp)
   8b4f8:	00bffa84 	movi	r2,-22
   8b4fc:	18bcbf16 	blt	r3,r2,8a7fc <_strtod_r+0x6d4>
   8b500:	1809883a 	mov	r4,r3
   8b504:	017ffe04 	movi	r5,-8
   8b508:	008f3380 	call	8f338 <__mulsi3>
   8b50c:	00c00274 	movhi	r3,9
   8b510:	18cefc04 	addi	r3,r3,15344
   8b514:	10c5883a 	add	r2,r2,r3
   8b518:	e2000017 	ldw	r8,0(fp)
   8b51c:	e2400117 	ldw	r9,4(fp)
   8b520:	12800017 	ldw	r10,0(r2)
   8b524:	12c00117 	ldw	r11,4(r2)
   8b528:	480b883a 	mov	r5,r9
   8b52c:	4009883a 	mov	r4,r8
   8b530:	580f883a 	mov	r7,r11
   8b534:	500d883a 	mov	r6,r10
   8b538:	008e88c0 	call	8e88c <__divdf3>
   8b53c:	e0c00115 	stw	r3,4(fp)
   8b540:	e0800015 	stw	r2,0(fp)
   8b544:	003b8206 	br	8a350 <_strtod_r+0x228>
   8b548:	d8801c17 	ldw	r2,112(sp)
   8b54c:	1013003a 	cmpeq	r9,r2,zero
   8b550:	483e971e 	bne	r9,zero,8afb0 <_strtod_r+0xe88>
   8b554:	003f6806 	br	8b2f8 <_strtod_r+0x11d0>
   8b558:	00801a44 	movi	r2,105
   8b55c:	88bc5026 	beq	r17,r2,8a6a0 <_strtod_r+0x578>
   8b560:	00801b84 	movi	r2,110
   8b564:	88bb9b1e 	bne	r17,r2,8a3d4 <_strtod_r+0x2ac>
   8b568:	dc000404 	addi	r16,sp,16
   8b56c:	8009883a 	mov	r4,r16
   8b570:	01400274 	movhi	r5,9
   8b574:	294f4804 	addi	r5,r5,15648
   8b578:	008a0e00 	call	8a0e0 <match>
   8b57c:	103b9526 	beq	r2,zero,8a3d4 <_strtod_r+0x2ac>
   8b580:	d8800417 	ldw	r2,16(sp)
   8b584:	00c00a04 	movi	r3,40
   8b588:	11000007 	ldb	r4,0(r2)
   8b58c:	20c04026 	beq	r4,r3,8b690 <_strtod_r+0x1568>
   8b590:	01bffe34 	movhi	r6,65528
   8b594:	e1800115 	stw	r6,4(fp)
   8b598:	e0000015 	stw	zero,0(fp)
   8b59c:	003b6c06 	br	8a350 <_strtod_r+0x228>
   8b5a0:	d8c01817 	ldw	r3,96(sp)
   8b5a4:	00800404 	movi	r2,16
   8b5a8:	10c00516 	blt	r2,r3,8b5c0 <_strtod_r+0x1498>
   8b5ac:	d9001117 	ldw	r4,68(sp)
   8b5b0:	01400284 	movi	r5,10
   8b5b4:	008f3380 	call	8f338 <__mulsi3>
   8b5b8:	1585883a 	add	r2,r2,r22
   8b5bc:	d8801115 	stw	r2,68(sp)
   8b5c0:	000d883a 	mov	r6,zero
   8b5c4:	003f2506 	br	8b25c <_strtod_r+0x1134>
   8b5c8:	000d883a 	mov	r6,zero
   8b5cc:	003ce306 	br	8a95c <_strtod_r+0x834>
   8b5d0:	e4400117 	ldw	r17,4(fp)
   8b5d4:	3809883a 	mov	r4,r7
   8b5d8:	3821883a 	mov	r16,r7
   8b5dc:	880b883a 	mov	r5,r17
   8b5e0:	00889980 	call	88998 <__ulp>
   8b5e4:	180f883a 	mov	r7,r3
   8b5e8:	880b883a 	mov	r5,r17
   8b5ec:	8009883a 	mov	r4,r16
   8b5f0:	100d883a 	mov	r6,r2
   8b5f4:	008e4540 	call	8e454 <__adddf3>
   8b5f8:	180b883a 	mov	r5,r3
   8b5fc:	d8c01c17 	ldw	r3,112(sp)
   8b600:	1009883a 	mov	r4,r2
   8b604:	e1400115 	stw	r5,4(fp)
   8b608:	1813003a 	cmpeq	r9,r3,zero
   8b60c:	e1000015 	stw	r4,0(fp)
   8b610:	483e671e 	bne	r9,zero,8afb0 <_strtod_r+0xe88>
   8b614:	003f3806 	br	8b2f8 <_strtod_r+0x11d0>
   8b618:	0080d434 	movhi	r2,848
   8b61c:	188d883a 	add	r6,r3,r2
   8b620:	d8001c15 	stw	zero,112(sp)
   8b624:	e1800115 	stw	r6,4(fp)
   8b628:	003cf506 	br	8aa00 <_strtod_r+0x8d8>
   8b62c:	d8c01c17 	ldw	r3,112(sp)
   8b630:	1813003a 	cmpeq	r9,r3,zero
   8b634:	483e5e1e 	bne	r9,zero,8afb0 <_strtod_r+0xe88>
   8b638:	003f2f06 	br	8b2f8 <_strtod_r+0x11d0>
   8b63c:	309ffc2c 	andhi	r2,r6,32752
   8b640:	00fffc34 	movhi	r3,65520
   8b644:	10c5883a 	add	r2,r2,r3
   8b648:	00c00434 	movhi	r3,16
   8b64c:	18ffffc4 	addi	r3,r3,-1
   8b650:	10ccb03a 	or	r6,r2,r3
   8b654:	01ffffc4 	movi	r7,-1
   8b658:	e1800115 	stw	r6,4(fp)
   8b65c:	e1c00015 	stw	r7,0(fp)
   8b660:	483e531e 	bne	r9,zero,8afb0 <_strtod_r+0xe88>
   8b664:	003f2406 	br	8b2f8 <_strtod_r+0x11d0>
   8b668:	00bfffc4 	movi	r2,-1
   8b66c:	003f4306 	br	8b37c <_strtod_r+0x1254>
   8b670:	0025883a 	mov	r18,zero
   8b674:	05800274 	movhi	r22,9
   8b678:	b58f2e04 	addi	r22,r22,15544
   8b67c:	003c9206 	br	8a8c8 <_strtod_r+0x7a0>
   8b680:	d9c01817 	ldw	r7,96(sp)
   8b684:	003eeb06 	br	8b234 <_strtod_r+0x110c>
   8b688:	d8001c15 	stw	zero,112(sp)
   8b68c:	003f6306 	br	8b41c <_strtod_r+0x12f4>
   8b690:	8009883a 	mov	r4,r16
   8b694:	01400274 	movhi	r5,9
   8b698:	2951b404 	addi	r5,r5,18128
   8b69c:	d9800d04 	addi	r6,sp,52
   8b6a0:	008cd800 	call	8cd80 <__hexnan>
   8b6a4:	00c00144 	movi	r3,5
   8b6a8:	10ffb91e 	bne	r2,r3,8b590 <_strtod_r+0x1468>
   8b6ac:	d8800e17 	ldw	r2,56(sp)
   8b6b0:	d9c00d17 	ldw	r7,52(sp)
   8b6b4:	119ffc34 	orhi	r6,r2,32752
   8b6b8:	e1800115 	stw	r6,4(fp)
   8b6bc:	e1c00015 	stw	r7,0(fp)
   8b6c0:	003b2306 	br	8a350 <_strtod_r+0x228>
   8b6c4:	18fff804 	addi	r3,r3,-32
   8b6c8:	00bfffc4 	movi	r2,-1
   8b6cc:	10c4983a 	sll	r2,r2,r3
   8b6d0:	208c703a 	and	r6,r4,r2
   8b6d4:	e1800115 	stw	r6,4(fp)
   8b6d8:	003f7106 	br	8b4a0 <_strtod_r+0x1378>
   8b6dc:	00bfffc4 	movi	r2,-1
   8b6e0:	10c4983a 	sll	r2,r2,r3
   8b6e4:	e0c00017 	ldw	r3,0(fp)
   8b6e8:	188e703a 	and	r7,r3,r2
   8b6ec:	e1c00015 	stw	r7,0(fp)
   8b6f0:	003f6b06 	br	8b4a0 <_strtod_r+0x1378>

0008b6f4 <strtof>:
   8b6f4:	defffa04 	addi	sp,sp,-24
   8b6f8:	dd000415 	stw	r20,16(sp)
   8b6fc:	05000274 	movhi	r20,9
   8b700:	a5168804 	addi	r20,r20,23072
   8b704:	2007883a 	mov	r3,r4
   8b708:	a1000017 	ldw	r4,0(r20)
   8b70c:	280d883a 	mov	r6,r5
   8b710:	180b883a 	mov	r5,r3
   8b714:	dfc00515 	stw	ra,20(sp)
   8b718:	dcc00315 	stw	r19,12(sp)
   8b71c:	dc800215 	stw	r18,8(sp)
   8b720:	dc400115 	stw	r17,4(sp)
   8b724:	dc000015 	stw	r16,0(sp)
   8b728:	008a1280 	call	8a128 <_strtod_r>
   8b72c:	180b883a 	mov	r5,r3
   8b730:	1009883a 	mov	r4,r2
   8b734:	1823883a 	mov	r17,r3
   8b738:	1021883a 	mov	r16,r2
   8b73c:	008efe40 	call	8efe4 <__truncdfsf2>
   8b740:	1009883a 	mov	r4,r2
   8b744:	000b883a 	mov	r5,zero
   8b748:	1025883a 	mov	r18,r2
   8b74c:	1027883a 	mov	r19,r2
   8b750:	008de5c0 	call	8de5c <__nesf2>
   8b754:	000d883a 	mov	r6,zero
   8b758:	000f883a 	mov	r7,zero
   8b75c:	8009883a 	mov	r4,r16
   8b760:	880b883a 	mov	r5,r17
   8b764:	10000e1e 	bne	r2,zero,8b7a0 <strtof+0xac>
   8b768:	008eb6c0 	call	8eb6c <__nedf2>
   8b76c:	10000c26 	beq	r2,zero,8b7a0 <strtof+0xac>
   8b770:	a0c00017 	ldw	r3,0(r20)
   8b774:	00800884 	movi	r2,34
   8b778:	18800015 	stw	r2,0(r3)
   8b77c:	9805883a 	mov	r2,r19
   8b780:	dfc00517 	ldw	ra,20(sp)
   8b784:	dd000417 	ldw	r20,16(sp)
   8b788:	dcc00317 	ldw	r19,12(sp)
   8b78c:	dc800217 	ldw	r18,8(sp)
   8b790:	dc400117 	ldw	r17,4(sp)
   8b794:	dc000017 	ldw	r16,0(sp)
   8b798:	dec00604 	addi	sp,sp,24
   8b79c:	f800283a 	ret
   8b7a0:	9009883a 	mov	r4,r18
   8b7a4:	015fe034 	movhi	r5,32640
   8b7a8:	297fffc4 	addi	r5,r5,-1
   8b7ac:	008ded40 	call	8ded4 <__gtsf2>
   8b7b0:	00ffffc4 	movi	r3,-1
   8b7b4:	011ffc34 	movhi	r4,32752
   8b7b8:	213fffc4 	addi	r4,r4,-1
   8b7bc:	200f883a 	mov	r7,r4
   8b7c0:	180d883a 	mov	r6,r3
   8b7c4:	8009883a 	mov	r4,r16
   8b7c8:	880b883a 	mov	r5,r17
   8b7cc:	00800f16 	blt	zero,r2,8b80c <strtof+0x118>
   8b7d0:	9009883a 	mov	r4,r18
   8b7d4:	017fe034 	movhi	r5,65408
   8b7d8:	297fffc4 	addi	r5,r5,-1
   8b7dc:	008df4c0 	call	8df4c <__ltsf2>
   8b7e0:	023fffc4 	movi	r8,-1
   8b7e4:	027ffc34 	movhi	r9,65520
   8b7e8:	4a7fffc4 	addi	r9,r9,-1
   8b7ec:	880b883a 	mov	r5,r17
   8b7f0:	480f883a 	mov	r7,r9
   8b7f4:	8009883a 	mov	r4,r16
   8b7f8:	400d883a 	mov	r6,r8
   8b7fc:	103fdf0e 	bge	r2,zero,8b77c <strtof+0x88>
   8b800:	008ed040 	call	8ed04 <__ltdf2>
   8b804:	103fda0e 	bge	r2,zero,8b770 <strtof+0x7c>
   8b808:	003fdc06 	br	8b77c <strtof+0x88>
   8b80c:	008ebf40 	call	8ebf4 <__gtdf2>
   8b810:	00bfd70e 	bge	zero,r2,8b770 <strtof+0x7c>
   8b814:	003fee06 	br	8b7d0 <strtof+0xdc>

0008b818 <strtod>:
   8b818:	01800274 	movhi	r6,9
   8b81c:	31968804 	addi	r6,r6,23072
   8b820:	2007883a 	mov	r3,r4
   8b824:	31000017 	ldw	r4,0(r6)
   8b828:	280d883a 	mov	r6,r5
   8b82c:	180b883a 	mov	r5,r3
   8b830:	008a1281 	jmpi	8a128 <_strtod_r>

0008b834 <_strtoll_r>:
   8b834:	defff004 	addi	sp,sp,-64
   8b838:	00800274 	movhi	r2,9
   8b83c:	10968c04 	addi	r2,r2,23088
   8b840:	df000e15 	stw	fp,56(sp)
   8b844:	17000017 	ldw	fp,0(r2)
   8b848:	ddc00d15 	stw	r23,52(sp)
   8b84c:	dd000a15 	stw	r20,40(sp)
   8b850:	dfc00f15 	stw	ra,60(sp)
   8b854:	dd800c15 	stw	r22,48(sp)
   8b858:	dd400b15 	stw	r21,44(sp)
   8b85c:	dcc00915 	stw	r19,36(sp)
   8b860:	dc800815 	stw	r18,32(sp)
   8b864:	dc400715 	stw	r17,28(sp)
   8b868:	dc000615 	stw	r16,24(sp)
   8b86c:	d9400315 	stw	r5,12(sp)
   8b870:	d9000215 	stw	r4,8(sp)
   8b874:	d9800415 	stw	r6,16(sp)
   8b878:	382f883a 	mov	r23,r7
   8b87c:	2829883a 	mov	r20,r5
   8b880:	a4c00007 	ldb	r19,0(r20)
   8b884:	a5000044 	addi	r20,r20,1
   8b888:	e4c7883a 	add	r3,fp,r19
   8b88c:	18800003 	ldbu	r2,0(r3)
   8b890:	1080020c 	andi	r2,r2,8
   8b894:	103ffa1e 	bne	r2,zero,8b880 <_strtoll_r+0x4c>
   8b898:	00800b44 	movi	r2,45
   8b89c:	98808826 	beq	r19,r2,8bac0 <_strtoll_r+0x28c>
   8b8a0:	00800ac4 	movi	r2,43
   8b8a4:	98808326 	beq	r19,r2,8bab4 <_strtoll_r+0x280>
   8b8a8:	d8000115 	stw	zero,4(sp)
   8b8ac:	b807003a 	cmpeq	r3,r23,zero
   8b8b0:	18005f1e 	bne	r3,zero,8ba30 <_strtoll_r+0x1fc>
   8b8b4:	00800404 	movi	r2,16
   8b8b8:	b8805d26 	beq	r23,r2,8ba30 <_strtoll_r+0x1fc>
   8b8bc:	b82dd7fa 	srai	r22,r23,31
   8b8c0:	b82b883a 	mov	r21,r23
   8b8c4:	d8c00117 	ldw	r3,4(sp)
   8b8c8:	1806c03a 	cmpne	r3,r3,zero
   8b8cc:	d8c00515 	stw	r3,20(sp)
   8b8d0:	1800631e 	bne	r3,zero,8ba60 <_strtoll_r+0x22c>
   8b8d4:	043fffc4 	movi	r16,-1
   8b8d8:	04600034 	movhi	r17,32768
   8b8dc:	8c7fffc4 	addi	r17,r17,-1
   8b8e0:	880b883a 	mov	r5,r17
   8b8e4:	8009883a 	mov	r4,r16
   8b8e8:	a80d883a 	mov	r6,r21
   8b8ec:	b00f883a 	mov	r7,r22
   8b8f0:	008d7fc0 	call	8d7fc <__umoddi3>
   8b8f4:	880b883a 	mov	r5,r17
   8b8f8:	8009883a 	mov	r4,r16
   8b8fc:	b00f883a 	mov	r7,r22
   8b900:	a80d883a 	mov	r6,r21
   8b904:	d8800015 	stw	r2,0(sp)
   8b908:	008d1900 	call	8d190 <__udivdi3>
   8b90c:	1023883a 	mov	r17,r2
   8b910:	e4c5883a 	add	r2,fp,r19
   8b914:	11000003 	ldbu	r4,0(r2)
   8b918:	1825883a 	mov	r18,r3
   8b91c:	0015883a 	mov	r10,zero
   8b920:	20c0010c 	andi	r3,r4,4
   8b924:	0017883a 	mov	r11,zero
   8b928:	000f883a 	mov	r7,zero
   8b92c:	18001a26 	beq	r3,zero,8b998 <_strtoll_r+0x164>
   8b930:	9c3ff404 	addi	r16,r19,-48
   8b934:	85c0200e 	bge	r16,r23,8b9b8 <_strtoll_r+0x184>
   8b938:	38003b16 	blt	r7,zero,8ba28 <_strtoll_r+0x1f4>
   8b93c:	92c03a36 	bltu	r18,r11,8ba28 <_strtoll_r+0x1f4>
   8b940:	5c803826 	beq	r11,r18,8ba24 <_strtoll_r+0x1f0>
   8b944:	54404c26 	beq	r10,r17,8ba78 <_strtoll_r+0x244>
   8b948:	580b883a 	mov	r5,r11
   8b94c:	5009883a 	mov	r4,r10
   8b950:	a80d883a 	mov	r6,r21
   8b954:	b00f883a 	mov	r7,r22
   8b958:	008cfc80 	call	8cfc8 <__muldi3>
   8b95c:	8013d7fa 	srai	r9,r16,31
   8b960:	100d883a 	mov	r6,r2
   8b964:	1405883a 	add	r2,r2,r16
   8b968:	118d803a 	cmpltu	r6,r2,r6
   8b96c:	1a47883a 	add	r3,r3,r9
   8b970:	30cd883a 	add	r6,r6,r3
   8b974:	1015883a 	mov	r10,r2
   8b978:	3017883a 	mov	r11,r6
   8b97c:	01c00044 	movi	r7,1
   8b980:	a4c00007 	ldb	r19,0(r20)
   8b984:	a5000044 	addi	r20,r20,1
   8b988:	e4c5883a 	add	r2,fp,r19
   8b98c:	11000003 	ldbu	r4,0(r2)
   8b990:	20c0010c 	andi	r3,r4,4
   8b994:	183fe61e 	bne	r3,zero,8b930 <_strtoll_r+0xfc>
   8b998:	208000cc 	andi	r2,r4,3
   8b99c:	10000626 	beq	r2,zero,8b9b8 <_strtoll_r+0x184>
   8b9a0:	2080004c 	andi	r2,r4,1
   8b9a4:	1005003a 	cmpeq	r2,r2,zero
   8b9a8:	1000301e 	bne	r2,zero,8ba6c <_strtoll_r+0x238>
   8b9ac:	02000dc4 	movi	r8,55
   8b9b0:	9a21c83a 	sub	r16,r19,r8
   8b9b4:	85ffe016 	blt	r16,r23,8b938 <_strtoll_r+0x104>
   8b9b8:	38004616 	blt	r7,zero,8bad4 <_strtoll_r+0x2a0>
   8b9bc:	d8800517 	ldw	r2,20(sp)
   8b9c0:	1000341e 	bne	r2,zero,8ba94 <_strtoll_r+0x260>
   8b9c4:	500b883a 	mov	r5,r10
   8b9c8:	580d883a 	mov	r6,r11
   8b9cc:	d8c00417 	ldw	r3,16(sp)
   8b9d0:	18000626 	beq	r3,zero,8b9ec <_strtoll_r+0x1b8>
   8b9d4:	38000226 	beq	r7,zero,8b9e0 <_strtoll_r+0x1ac>
   8b9d8:	a53fffc4 	addi	r20,r20,-1
   8b9dc:	dd000315 	stw	r20,12(sp)
   8b9e0:	d8c00317 	ldw	r3,12(sp)
   8b9e4:	d8800417 	ldw	r2,16(sp)
   8b9e8:	10c00015 	stw	r3,0(r2)
   8b9ec:	2805883a 	mov	r2,r5
   8b9f0:	3007883a 	mov	r3,r6
   8b9f4:	dfc00f17 	ldw	ra,60(sp)
   8b9f8:	df000e17 	ldw	fp,56(sp)
   8b9fc:	ddc00d17 	ldw	r23,52(sp)
   8ba00:	dd800c17 	ldw	r22,48(sp)
   8ba04:	dd400b17 	ldw	r21,44(sp)
   8ba08:	dd000a17 	ldw	r20,40(sp)
   8ba0c:	dcc00917 	ldw	r19,36(sp)
   8ba10:	dc800817 	ldw	r18,32(sp)
   8ba14:	dc400717 	ldw	r17,28(sp)
   8ba18:	dc000617 	ldw	r16,24(sp)
   8ba1c:	dec01004 	addi	sp,sp,64
   8ba20:	f800283a 	ret
   8ba24:	8abfc72e 	bgeu	r17,r10,8b944 <_strtoll_r+0x110>
   8ba28:	01ffffc4 	movi	r7,-1
   8ba2c:	003fd406 	br	8b980 <_strtoll_r+0x14c>
   8ba30:	00800c04 	movi	r2,48
   8ba34:	98803226 	beq	r19,r2,8bb00 <_strtoll_r+0x2cc>
   8ba38:	183fa026 	beq	r3,zero,8b8bc <_strtoll_r+0x88>
   8ba3c:	00800c04 	movi	r2,48
   8ba40:	98803e26 	beq	r19,r2,8bb3c <_strtoll_r+0x308>
   8ba44:	d8c00117 	ldw	r3,4(sp)
   8ba48:	05c00284 	movi	r23,10
   8ba4c:	b82b883a 	mov	r21,r23
   8ba50:	1806c03a 	cmpne	r3,r3,zero
   8ba54:	002d883a 	mov	r22,zero
   8ba58:	d8c00515 	stw	r3,20(sp)
   8ba5c:	183f9d26 	beq	r3,zero,8b8d4 <_strtoll_r+0xa0>
   8ba60:	0021883a 	mov	r16,zero
   8ba64:	04600034 	movhi	r17,32768
   8ba68:	003f9d06 	br	8b8e0 <_strtoll_r+0xac>
   8ba6c:	020015c4 	movi	r8,87
   8ba70:	9a21c83a 	sub	r16,r19,r8
   8ba74:	003fcf06 	br	8b9b4 <_strtoll_r+0x180>
   8ba78:	5cbfb31e 	bne	r11,r18,8b948 <_strtoll_r+0x114>
   8ba7c:	d8800017 	ldw	r2,0(sp)
   8ba80:	143fb10e 	bge	r2,r16,8b948 <_strtoll_r+0x114>
   8ba84:	8815883a 	mov	r10,r17
   8ba88:	9017883a 	mov	r11,r18
   8ba8c:	01ffffc4 	movi	r7,-1
   8ba90:	003fbb06 	br	8b980 <_strtoll_r+0x14c>
   8ba94:	0009883a 	mov	r4,zero
   8ba98:	2285c83a 	sub	r2,r4,r10
   8ba9c:	2089803a 	cmpltu	r4,r4,r2
   8baa0:	02c7c83a 	sub	r3,zero,r11
   8baa4:	1909c83a 	sub	r4,r3,r4
   8baa8:	100b883a 	mov	r5,r2
   8baac:	200d883a 	mov	r6,r4
   8bab0:	003fc606 	br	8b9cc <_strtoll_r+0x198>
   8bab4:	a4c00007 	ldb	r19,0(r20)
   8bab8:	a5000044 	addi	r20,r20,1
   8babc:	003f7a06 	br	8b8a8 <_strtoll_r+0x74>
   8bac0:	a4c00007 	ldb	r19,0(r20)
   8bac4:	00800044 	movi	r2,1
   8bac8:	a5000044 	addi	r20,r20,1
   8bacc:	d8800115 	stw	r2,4(sp)
   8bad0:	003f7606 	br	8b8ac <_strtoll_r+0x78>
   8bad4:	d8c00117 	ldw	r3,4(sp)
   8bad8:	1805003a 	cmpeq	r2,r3,zero
   8badc:	1000131e 	bne	r2,zero,8bb2c <_strtoll_r+0x2f8>
   8bae0:	0005883a 	mov	r2,zero
   8bae4:	00e00034 	movhi	r3,32768
   8bae8:	100b883a 	mov	r5,r2
   8baec:	180d883a 	mov	r6,r3
   8baf0:	d8c00217 	ldw	r3,8(sp)
   8baf4:	00800884 	movi	r2,34
   8baf8:	18800015 	stw	r2,0(r3)
   8bafc:	003fb306 	br	8b9cc <_strtoll_r+0x198>
   8bb00:	a1000007 	ldb	r4,0(r20)
   8bb04:	00801e04 	movi	r2,120
   8bb08:	20800226 	beq	r4,r2,8bb14 <_strtoll_r+0x2e0>
   8bb0c:	00801604 	movi	r2,88
   8bb10:	20bfc91e 	bne	r4,r2,8ba38 <_strtoll_r+0x204>
   8bb14:	a4c00047 	ldb	r19,1(r20)
   8bb18:	05c00404 	movi	r23,16
   8bb1c:	b82b883a 	mov	r21,r23
   8bb20:	a5000084 	addi	r20,r20,2
   8bb24:	002d883a 	mov	r22,zero
   8bb28:	003f6606 	br	8b8c4 <_strtoll_r+0x90>
   8bb2c:	017fffc4 	movi	r5,-1
   8bb30:	01a00034 	movhi	r6,32768
   8bb34:	31bfffc4 	addi	r6,r6,-1
   8bb38:	003fed06 	br	8baf0 <_strtoll_r+0x2bc>
   8bb3c:	05c00204 	movi	r23,8
   8bb40:	b82b883a 	mov	r21,r23
   8bb44:	002d883a 	mov	r22,zero
   8bb48:	003f5e06 	br	8b8c4 <_strtoll_r+0x90>

0008bb4c <_strtoul_r>:
   8bb4c:	defff404 	addi	sp,sp,-48
   8bb50:	00800274 	movhi	r2,9
   8bb54:	10968c04 	addi	r2,r2,23088
   8bb58:	dd000615 	stw	r20,24(sp)
   8bb5c:	15000017 	ldw	r20,0(r2)
   8bb60:	df000a15 	stw	fp,40(sp)
   8bb64:	ddc00915 	stw	r23,36(sp)
   8bb68:	dc800415 	stw	r18,16(sp)
   8bb6c:	dc400315 	stw	r17,12(sp)
   8bb70:	dfc00b15 	stw	ra,44(sp)
   8bb74:	dd800815 	stw	r22,32(sp)
   8bb78:	dd400715 	stw	r21,28(sp)
   8bb7c:	dcc00515 	stw	r19,20(sp)
   8bb80:	dc000215 	stw	r16,8(sp)
   8bb84:	282f883a 	mov	r23,r5
   8bb88:	d9000115 	stw	r4,4(sp)
   8bb8c:	3039883a 	mov	fp,r6
   8bb90:	3825883a 	mov	r18,r7
   8bb94:	2823883a 	mov	r17,r5
   8bb98:	8c000007 	ldb	r16,0(r17)
   8bb9c:	8c400044 	addi	r17,r17,1
   8bba0:	a407883a 	add	r3,r20,r16
   8bba4:	18800003 	ldbu	r2,0(r3)
   8bba8:	1080020c 	andi	r2,r2,8
   8bbac:	103ffa1e 	bne	r2,zero,8bb98 <_strtoul_r+0x4c>
   8bbb0:	00800b44 	movi	r2,45
   8bbb4:	80805826 	beq	r16,r2,8bd18 <_strtoul_r+0x1cc>
   8bbb8:	00800ac4 	movi	r2,43
   8bbbc:	80805326 	beq	r16,r2,8bd0c <_strtoul_r+0x1c0>
   8bbc0:	d8000015 	stw	zero,0(sp)
   8bbc4:	9007003a 	cmpeq	r3,r18,zero
   8bbc8:	18003d1e 	bne	r3,zero,8bcc0 <_strtoul_r+0x174>
   8bbcc:	00800404 	movi	r2,16
   8bbd0:	90803b26 	beq	r18,r2,8bcc0 <_strtoul_r+0x174>
   8bbd4:	013fffc4 	movi	r4,-1
   8bbd8:	900b883a 	mov	r5,r18
   8bbdc:	008f3280 	call	8f328 <__udivsi3>
   8bbe0:	013fffc4 	movi	r4,-1
   8bbe4:	900b883a 	mov	r5,r18
   8bbe8:	1027883a 	mov	r19,r2
   8bbec:	008f3300 	call	8f330 <__umodsi3>
   8bbf0:	102d883a 	mov	r22,r2
   8bbf4:	902b883a 	mov	r21,r18
   8bbf8:	a405883a 	add	r2,r20,r16
   8bbfc:	11400003 	ldbu	r5,0(r2)
   8bc00:	0009883a 	mov	r4,zero
   8bc04:	000d883a 	mov	r6,zero
   8bc08:	28c0010c 	andi	r3,r5,4
   8bc0c:	18000f26 	beq	r3,zero,8bc4c <_strtoul_r+0x100>
   8bc10:	843ff404 	addi	r16,r16,-48
   8bc14:	8480150e 	bge	r16,r18,8bc6c <_strtoul_r+0x120>
   8bc18:	30003516 	blt	r6,zero,8bcf0 <_strtoul_r+0x1a4>
   8bc1c:	99003436 	bltu	r19,r4,8bcf0 <_strtoul_r+0x1a4>
   8bc20:	24c03226 	beq	r4,r19,8bcec <_strtoul_r+0x1a0>
   8bc24:	a80b883a 	mov	r5,r21
   8bc28:	008f3380 	call	8f338 <__mulsi3>
   8bc2c:	1409883a 	add	r4,r2,r16
   8bc30:	01800044 	movi	r6,1
   8bc34:	8c000007 	ldb	r16,0(r17)
   8bc38:	8c400044 	addi	r17,r17,1
   8bc3c:	a405883a 	add	r2,r20,r16
   8bc40:	11400003 	ldbu	r5,0(r2)
   8bc44:	28c0010c 	andi	r3,r5,4
   8bc48:	183ff11e 	bne	r3,zero,8bc10 <_strtoul_r+0xc4>
   8bc4c:	288000cc 	andi	r2,r5,3
   8bc50:	10000626 	beq	r2,zero,8bc6c <_strtoul_r+0x120>
   8bc54:	2880004c 	andi	r2,r5,1
   8bc58:	1005003a 	cmpeq	r2,r2,zero
   8bc5c:	1000261e 	bne	r2,zero,8bcf8 <_strtoul_r+0x1ac>
   8bc60:	00800dc4 	movi	r2,55
   8bc64:	80a1c83a 	sub	r16,r16,r2
   8bc68:	84bfeb16 	blt	r16,r18,8bc18 <_strtoul_r+0xcc>
   8bc6c:	3000420e 	bge	r6,zero,8bd78 <_strtoul_r+0x22c>
   8bc70:	d8c00117 	ldw	r3,4(sp)
   8bc74:	00800884 	movi	r2,34
   8bc78:	013fffc4 	movi	r4,-1
   8bc7c:	18800015 	stw	r2,0(r3)
   8bc80:	e0000226 	beq	fp,zero,8bc8c <_strtoul_r+0x140>
   8bc84:	30001f1e 	bne	r6,zero,8bd04 <_strtoul_r+0x1b8>
   8bc88:	e5c00015 	stw	r23,0(fp)
   8bc8c:	2005883a 	mov	r2,r4
   8bc90:	dfc00b17 	ldw	ra,44(sp)
   8bc94:	df000a17 	ldw	fp,40(sp)
   8bc98:	ddc00917 	ldw	r23,36(sp)
   8bc9c:	dd800817 	ldw	r22,32(sp)
   8bca0:	dd400717 	ldw	r21,28(sp)
   8bca4:	dd000617 	ldw	r20,24(sp)
   8bca8:	dcc00517 	ldw	r19,20(sp)
   8bcac:	dc800417 	ldw	r18,16(sp)
   8bcb0:	dc400317 	ldw	r17,12(sp)
   8bcb4:	dc000217 	ldw	r16,8(sp)
   8bcb8:	dec00c04 	addi	sp,sp,48
   8bcbc:	f800283a 	ret
   8bcc0:	00800c04 	movi	r2,48
   8bcc4:	80801926 	beq	r16,r2,8bd2c <_strtoul_r+0x1e0>
   8bcc8:	183fc226 	beq	r3,zero,8bbd4 <_strtoul_r+0x88>
   8bccc:	00800c04 	movi	r2,48
   8bcd0:	80802326 	beq	r16,r2,8bd60 <_strtoul_r+0x214>
   8bcd4:	04800284 	movi	r18,10
   8bcd8:	902b883a 	mov	r21,r18
   8bcdc:	04c666b4 	movhi	r19,6554
   8bce0:	9ce66644 	addi	r19,r19,-26215
   8bce4:	05800144 	movi	r22,5
   8bce8:	003fc306 	br	8bbf8 <_strtoul_r+0xac>
   8bcec:	b43fcd0e 	bge	r22,r16,8bc24 <_strtoul_r+0xd8>
   8bcf0:	01bfffc4 	movi	r6,-1
   8bcf4:	003fcf06 	br	8bc34 <_strtoul_r+0xe8>
   8bcf8:	008015c4 	movi	r2,87
   8bcfc:	80a1c83a 	sub	r16,r16,r2
   8bd00:	003fd906 	br	8bc68 <_strtoul_r+0x11c>
   8bd04:	8dffffc4 	addi	r23,r17,-1
   8bd08:	003fdf06 	br	8bc88 <_strtoul_r+0x13c>
   8bd0c:	8c000007 	ldb	r16,0(r17)
   8bd10:	8c400044 	addi	r17,r17,1
   8bd14:	003faa06 	br	8bbc0 <_strtoul_r+0x74>
   8bd18:	8c000007 	ldb	r16,0(r17)
   8bd1c:	00800044 	movi	r2,1
   8bd20:	8c400044 	addi	r17,r17,1
   8bd24:	d8800015 	stw	r2,0(sp)
   8bd28:	003fa606 	br	8bbc4 <_strtoul_r+0x78>
   8bd2c:	89000007 	ldb	r4,0(r17)
   8bd30:	00801e04 	movi	r2,120
   8bd34:	20800226 	beq	r4,r2,8bd40 <_strtoul_r+0x1f4>
   8bd38:	00801604 	movi	r2,88
   8bd3c:	20bfe21e 	bne	r4,r2,8bcc8 <_strtoul_r+0x17c>
   8bd40:	8c000047 	ldb	r16,1(r17)
   8bd44:	04800404 	movi	r18,16
   8bd48:	8c400084 	addi	r17,r17,2
   8bd4c:	902b883a 	mov	r21,r18
   8bd50:	04c40034 	movhi	r19,4096
   8bd54:	9cffffc4 	addi	r19,r19,-1
   8bd58:	058003c4 	movi	r22,15
   8bd5c:	003fa606 	br	8bbf8 <_strtoul_r+0xac>
   8bd60:	04800204 	movi	r18,8
   8bd64:	902b883a 	mov	r21,r18
   8bd68:	04c80034 	movhi	r19,8192
   8bd6c:	9cffffc4 	addi	r19,r19,-1
   8bd70:	058001c4 	movi	r22,7
   8bd74:	003fa006 	br	8bbf8 <_strtoul_r+0xac>
   8bd78:	d8c00017 	ldw	r3,0(sp)
   8bd7c:	1805003a 	cmpeq	r2,r3,zero
   8bd80:	103fbf1e 	bne	r2,zero,8bc80 <_strtoul_r+0x134>
   8bd84:	0109c83a 	sub	r4,zero,r4
   8bd88:	003fbd06 	br	8bc80 <_strtoul_r+0x134>

0008bd8c <strtoul>:
   8bd8c:	00800274 	movhi	r2,9
   8bd90:	10968804 	addi	r2,r2,23072
   8bd94:	2013883a 	mov	r9,r4
   8bd98:	11000017 	ldw	r4,0(r2)
   8bd9c:	2805883a 	mov	r2,r5
   8bda0:	300f883a 	mov	r7,r6
   8bda4:	480b883a 	mov	r5,r9
   8bda8:	100d883a 	mov	r6,r2
   8bdac:	008bb4c1 	jmpi	8bb4c <_strtoul_r>

0008bdb0 <_strtoull_r>:
   8bdb0:	defff104 	addi	sp,sp,-60
   8bdb4:	00800274 	movhi	r2,9
   8bdb8:	10968c04 	addi	r2,r2,23088
   8bdbc:	df000d15 	stw	fp,52(sp)
   8bdc0:	17000017 	ldw	fp,0(r2)
   8bdc4:	ddc00c15 	stw	r23,48(sp)
   8bdc8:	dcc00815 	stw	r19,32(sp)
   8bdcc:	dfc00e15 	stw	ra,56(sp)
   8bdd0:	dd800b15 	stw	r22,44(sp)
   8bdd4:	dd400a15 	stw	r21,40(sp)
   8bdd8:	dd000915 	stw	r20,36(sp)
   8bddc:	dc800715 	stw	r18,28(sp)
   8bde0:	dc400615 	stw	r17,24(sp)
   8bde4:	dc000515 	stw	r16,20(sp)
   8bde8:	d9400215 	stw	r5,8(sp)
   8bdec:	d9000115 	stw	r4,4(sp)
   8bdf0:	d9800315 	stw	r6,12(sp)
   8bdf4:	382f883a 	mov	r23,r7
   8bdf8:	2827883a 	mov	r19,r5
   8bdfc:	9d000007 	ldb	r20,0(r19)
   8be00:	9cc00044 	addi	r19,r19,1
   8be04:	e507883a 	add	r3,fp,r20
   8be08:	18800003 	ldbu	r2,0(r3)
   8be0c:	1080020c 	andi	r2,r2,8
   8be10:	103ffa1e 	bne	r2,zero,8bdfc <_strtoull_r+0x4c>
   8be14:	00800b44 	movi	r2,45
   8be18:	a0807a26 	beq	r20,r2,8c004 <_strtoull_r+0x254>
   8be1c:	00800ac4 	movi	r2,43
   8be20:	a0807526 	beq	r20,r2,8bff8 <_strtoull_r+0x248>
   8be24:	d8000015 	stw	zero,0(sp)
   8be28:	b807003a 	cmpeq	r3,r23,zero
   8be2c:	18005a1e 	bne	r3,zero,8bf98 <_strtoull_r+0x1e8>
   8be30:	00800404 	movi	r2,16
   8be34:	b8805826 	beq	r23,r2,8bf98 <_strtoull_r+0x1e8>
   8be38:	b82dd7fa 	srai	r22,r23,31
   8be3c:	043fffc4 	movi	r16,-1
   8be40:	8009883a 	mov	r4,r16
   8be44:	800b883a 	mov	r5,r16
   8be48:	b80d883a 	mov	r6,r23
   8be4c:	b00f883a 	mov	r7,r22
   8be50:	008d1900 	call	8d190 <__udivdi3>
   8be54:	8009883a 	mov	r4,r16
   8be58:	800b883a 	mov	r5,r16
   8be5c:	b80d883a 	mov	r6,r23
   8be60:	b00f883a 	mov	r7,r22
   8be64:	1023883a 	mov	r17,r2
   8be68:	1825883a 	mov	r18,r3
   8be6c:	008d7fc0 	call	8d7fc <__umoddi3>
   8be70:	b82b883a 	mov	r21,r23
   8be74:	1019883a 	mov	r12,r2
   8be78:	e505883a 	add	r2,fp,r20
   8be7c:	11000003 	ldbu	r4,0(r2)
   8be80:	0015883a 	mov	r10,zero
   8be84:	0017883a 	mov	r11,zero
   8be88:	20c0010c 	andi	r3,r4,4
   8be8c:	000d883a 	mov	r6,zero
   8be90:	18001c26 	beq	r3,zero,8bf04 <_strtoull_r+0x154>
   8be94:	a43ff404 	addi	r16,r20,-48
   8be98:	85c0220e 	bge	r16,r23,8bf24 <_strtoull_r+0x174>
   8be9c:	30003c16 	blt	r6,zero,8bf90 <_strtoull_r+0x1e0>
   8bea0:	92c03b36 	bltu	r18,r11,8bf90 <_strtoull_r+0x1e0>
   8bea4:	5c803926 	beq	r11,r18,8bf8c <_strtoull_r+0x1dc>
   8bea8:	54404c26 	beq	r10,r17,8bfdc <_strtoull_r+0x22c>
   8beac:	580b883a 	mov	r5,r11
   8beb0:	5009883a 	mov	r4,r10
   8beb4:	a80d883a 	mov	r6,r21
   8beb8:	b00f883a 	mov	r7,r22
   8bebc:	db000415 	stw	r12,16(sp)
   8bec0:	008cfc80 	call	8cfc8 <__muldi3>
   8bec4:	8013d7fa 	srai	r9,r16,31
   8bec8:	100d883a 	mov	r6,r2
   8becc:	1405883a 	add	r2,r2,r16
   8bed0:	118d803a 	cmpltu	r6,r2,r6
   8bed4:	1a47883a 	add	r3,r3,r9
   8bed8:	db000417 	ldw	r12,16(sp)
   8bedc:	30cd883a 	add	r6,r6,r3
   8bee0:	3017883a 	mov	r11,r6
   8bee4:	1015883a 	mov	r10,r2
   8bee8:	01800044 	movi	r6,1
   8beec:	9d000007 	ldb	r20,0(r19)
   8bef0:	9cc00044 	addi	r19,r19,1
   8bef4:	e505883a 	add	r2,fp,r20
   8bef8:	11000003 	ldbu	r4,0(r2)
   8befc:	20c0010c 	andi	r3,r4,4
   8bf00:	183fe41e 	bne	r3,zero,8be94 <_strtoull_r+0xe4>
   8bf04:	208000cc 	andi	r2,r4,3
   8bf08:	10000626 	beq	r2,zero,8bf24 <_strtoull_r+0x174>
   8bf0c:	2080004c 	andi	r2,r4,1
   8bf10:	1005003a 	cmpeq	r2,r2,zero
   8bf14:	10002e1e 	bne	r2,zero,8bfd0 <_strtoull_r+0x220>
   8bf18:	02000dc4 	movi	r8,55
   8bf1c:	a221c83a 	sub	r16,r20,r8
   8bf20:	85ffde16 	blt	r16,r23,8be9c <_strtoull_r+0xec>
   8bf24:	3000530e 	bge	r6,zero,8c074 <_strtoull_r+0x2c4>
   8bf28:	d8c00117 	ldw	r3,4(sp)
   8bf2c:	02bfffc4 	movi	r10,-1
   8bf30:	00800884 	movi	r2,34
   8bf34:	5017883a 	mov	r11,r10
   8bf38:	18800015 	stw	r2,0(r3)
   8bf3c:	d8800317 	ldw	r2,12(sp)
   8bf40:	10000426 	beq	r2,zero,8bf54 <_strtoull_r+0x1a4>
   8bf44:	3000291e 	bne	r6,zero,8bfec <_strtoull_r+0x23c>
   8bf48:	d8800217 	ldw	r2,8(sp)
   8bf4c:	d8c00317 	ldw	r3,12(sp)
   8bf50:	18800015 	stw	r2,0(r3)
   8bf54:	5005883a 	mov	r2,r10
   8bf58:	5807883a 	mov	r3,r11
   8bf5c:	dfc00e17 	ldw	ra,56(sp)
   8bf60:	df000d17 	ldw	fp,52(sp)
   8bf64:	ddc00c17 	ldw	r23,48(sp)
   8bf68:	dd800b17 	ldw	r22,44(sp)
   8bf6c:	dd400a17 	ldw	r21,40(sp)
   8bf70:	dd000917 	ldw	r20,36(sp)
   8bf74:	dcc00817 	ldw	r19,32(sp)
   8bf78:	dc800717 	ldw	r18,28(sp)
   8bf7c:	dc400617 	ldw	r17,24(sp)
   8bf80:	dc000517 	ldw	r16,20(sp)
   8bf84:	dec00f04 	addi	sp,sp,60
   8bf88:	f800283a 	ret
   8bf8c:	8abfc62e 	bgeu	r17,r10,8bea8 <_strtoull_r+0xf8>
   8bf90:	01bfffc4 	movi	r6,-1
   8bf94:	003fd506 	br	8beec <_strtoull_r+0x13c>
   8bf98:	00800c04 	movi	r2,48
   8bf9c:	a0801e26 	beq	r20,r2,8c018 <_strtoull_r+0x268>
   8bfa0:	183fa526 	beq	r3,zero,8be38 <_strtoull_r+0x88>
   8bfa4:	00800c04 	movi	r2,48
   8bfa8:	a0802a26 	beq	r20,r2,8c054 <_strtoull_r+0x2a4>
   8bfac:	05c00284 	movi	r23,10
   8bfb0:	b82b883a 	mov	r21,r23
   8bfb4:	046666b4 	movhi	r17,39322
   8bfb8:	8c666644 	addi	r17,r17,-26215
   8bfbc:	002d883a 	mov	r22,zero
   8bfc0:	048666b4 	movhi	r18,6554
   8bfc4:	94a66644 	addi	r18,r18,-26215
   8bfc8:	03000144 	movi	r12,5
   8bfcc:	003faa06 	br	8be78 <_strtoull_r+0xc8>
   8bfd0:	020015c4 	movi	r8,87
   8bfd4:	a221c83a 	sub	r16,r20,r8
   8bfd8:	003fd106 	br	8bf20 <_strtoull_r+0x170>
   8bfdc:	5cbfb31e 	bne	r11,r18,8beac <_strtoull_r+0xfc>
   8bfe0:	643fb20e 	bge	r12,r16,8beac <_strtoull_r+0xfc>
   8bfe4:	01bfffc4 	movi	r6,-1
   8bfe8:	003fc006 	br	8beec <_strtoull_r+0x13c>
   8bfec:	9cffffc4 	addi	r19,r19,-1
   8bff0:	dcc00215 	stw	r19,8(sp)
   8bff4:	003fd406 	br	8bf48 <_strtoull_r+0x198>
   8bff8:	9d000007 	ldb	r20,0(r19)
   8bffc:	9cc00044 	addi	r19,r19,1
   8c000:	003f8806 	br	8be24 <_strtoull_r+0x74>
   8c004:	9d000007 	ldb	r20,0(r19)
   8c008:	00800044 	movi	r2,1
   8c00c:	9cc00044 	addi	r19,r19,1
   8c010:	d8800015 	stw	r2,0(sp)
   8c014:	003f8406 	br	8be28 <_strtoull_r+0x78>
   8c018:	99000007 	ldb	r4,0(r19)
   8c01c:	00801e04 	movi	r2,120
   8c020:	20800226 	beq	r4,r2,8c02c <_strtoull_r+0x27c>
   8c024:	00801604 	movi	r2,88
   8c028:	20bfdd1e 	bne	r4,r2,8bfa0 <_strtoull_r+0x1f0>
   8c02c:	9d000047 	ldb	r20,1(r19)
   8c030:	05c00404 	movi	r23,16
   8c034:	b82b883a 	mov	r21,r23
   8c038:	047fffc4 	movi	r17,-1
   8c03c:	9cc00084 	addi	r19,r19,2
   8c040:	002d883a 	mov	r22,zero
   8c044:	04840034 	movhi	r18,4096
   8c048:	94bfffc4 	addi	r18,r18,-1
   8c04c:	030003c4 	movi	r12,15
   8c050:	003f8906 	br	8be78 <_strtoull_r+0xc8>
   8c054:	05c00204 	movi	r23,8
   8c058:	b82b883a 	mov	r21,r23
   8c05c:	047fffc4 	movi	r17,-1
   8c060:	002d883a 	mov	r22,zero
   8c064:	04880034 	movhi	r18,8192
   8c068:	94bfffc4 	addi	r18,r18,-1
   8c06c:	030001c4 	movi	r12,7
   8c070:	003f8106 	br	8be78 <_strtoull_r+0xc8>
   8c074:	d8c00017 	ldw	r3,0(sp)
   8c078:	1805003a 	cmpeq	r2,r3,zero
   8c07c:	103faf1e 	bne	r2,zero,8bf3c <_strtoull_r+0x18c>
   8c080:	0009883a 	mov	r4,zero
   8c084:	2285c83a 	sub	r2,r4,r10
   8c088:	02c7c83a 	sub	r3,zero,r11
   8c08c:	2089803a 	cmpltu	r4,r4,r2
   8c090:	1909c83a 	sub	r4,r3,r4
   8c094:	1015883a 	mov	r10,r2
   8c098:	2017883a 	mov	r11,r4
   8c09c:	003fa706 	br	8bf3c <_strtoull_r+0x18c>

0008c0a0 <__submore>:
   8c0a0:	defffa04 	addi	sp,sp,-24
   8c0a4:	28c00c17 	ldw	r3,48(r5)
   8c0a8:	dc800215 	stw	r18,8(sp)
   8c0ac:	2825883a 	mov	r18,r5
   8c0b0:	dc000015 	stw	r16,0(sp)
   8c0b4:	90801004 	addi	r2,r18,64
   8c0b8:	04010004 	movi	r16,1024
   8c0bc:	dfc00515 	stw	ra,20(sp)
   8c0c0:	dd000415 	stw	r20,16(sp)
   8c0c4:	dcc00315 	stw	r19,12(sp)
   8c0c8:	dc400115 	stw	r17,4(sp)
   8c0cc:	800b883a 	mov	r5,r16
   8c0d0:	18801b26 	beq	r3,r2,8c140 <__submore+0xa0>
   8c0d4:	94400d17 	ldw	r17,52(r18)
   8c0d8:	180b883a 	mov	r5,r3
   8c0dc:	8c69883a 	add	r20,r17,r17
   8c0e0:	a00d883a 	mov	r6,r20
   8c0e4:	00898e00 	call	898e0 <_realloc_r>
   8c0e8:	1467883a 	add	r19,r2,r17
   8c0ec:	1021883a 	mov	r16,r2
   8c0f0:	880d883a 	mov	r6,r17
   8c0f4:	9809883a 	mov	r4,r19
   8c0f8:	100b883a 	mov	r5,r2
   8c0fc:	10000e26 	beq	r2,zero,8c138 <__submore+0x98>
   8c100:	008865c0 	call	8865c <memcpy>
   8c104:	000d883a 	mov	r6,zero
   8c108:	95000d15 	stw	r20,52(r18)
   8c10c:	94c00015 	stw	r19,0(r18)
   8c110:	94000c15 	stw	r16,48(r18)
   8c114:	3005883a 	mov	r2,r6
   8c118:	dfc00517 	ldw	ra,20(sp)
   8c11c:	dd000417 	ldw	r20,16(sp)
   8c120:	dcc00317 	ldw	r19,12(sp)
   8c124:	dc800217 	ldw	r18,8(sp)
   8c128:	dc400117 	ldw	r17,4(sp)
   8c12c:	dc000017 	ldw	r16,0(sp)
   8c130:	dec00604 	addi	sp,sp,24
   8c134:	f800283a 	ret
   8c138:	01bfffc4 	movi	r6,-1
   8c13c:	003ff506 	br	8c114 <__submore+0x74>
   8c140:	00818fc0 	call	818fc <_malloc_r>
   8c144:	1009883a 	mov	r4,r2
   8c148:	1140ff44 	addi	r5,r2,1021
   8c14c:	000d883a 	mov	r6,zero
   8c150:	103ff926 	beq	r2,zero,8c138 <__submore+0x98>
   8c154:	90801083 	ldbu	r2,66(r18)
   8c158:	94000d15 	stw	r16,52(r18)
   8c15c:	91000c15 	stw	r4,48(r18)
   8c160:	28800085 	stb	r2,2(r5)
   8c164:	90c01043 	ldbu	r3,65(r18)
   8c168:	28c00045 	stb	r3,1(r5)
   8c16c:	90801003 	ldbu	r2,64(r18)
   8c170:	2080ff45 	stb	r2,1021(r4)
   8c174:	91400015 	stw	r5,0(r18)
   8c178:	003fe606 	br	8c114 <__submore+0x74>

0008c17c <_ungetc_r>:
   8c17c:	defffc04 	addi	sp,sp,-16
   8c180:	00bfffc4 	movi	r2,-1
   8c184:	dc400215 	stw	r17,8(sp)
   8c188:	dc000115 	stw	r16,4(sp)
   8c18c:	dfc00315 	stw	ra,12(sp)
   8c190:	2821883a 	mov	r16,r5
   8c194:	2023883a 	mov	r17,r4
   8c198:	28801826 	beq	r5,r2,8c1fc <_ungetc_r+0x80>
   8c19c:	20000226 	beq	r4,zero,8c1a8 <_ungetc_r+0x2c>
   8c1a0:	20800e17 	ldw	r2,56(r4)
   8c1a4:	10001b26 	beq	r2,zero,8c214 <_ungetc_r+0x98>
   8c1a8:	3100030b 	ldhu	r4,12(r6)
   8c1ac:	00bff7c4 	movi	r2,-33
   8c1b0:	2084703a 	and	r2,r4,r2
   8c1b4:	117fffcc 	andi	r5,r2,65535
   8c1b8:	28c0010c 	andi	r3,r5,4
   8c1bc:	1009883a 	mov	r4,r2
   8c1c0:	3080030d 	sth	r2,12(r6)
   8c1c4:	18003526 	beq	r3,zero,8c29c <_ungetc_r+0x120>
   8c1c8:	30800c17 	ldw	r2,48(r6)
   8c1cc:	84003fcc 	andi	r16,r16,255
   8c1d0:	10001426 	beq	r2,zero,8c224 <_ungetc_r+0xa8>
   8c1d4:	30c00117 	ldw	r3,4(r6)
   8c1d8:	30800d17 	ldw	r2,52(r6)
   8c1dc:	1880380e 	bge	r3,r2,8c2c0 <_ungetc_r+0x144>
   8c1e0:	30c00017 	ldw	r3,0(r6)
   8c1e4:	19ffffc4 	addi	r7,r3,-1
   8c1e8:	31c00015 	stw	r7,0(r6)
   8c1ec:	1c3fffc5 	stb	r16,-1(r3)
   8c1f0:	30800117 	ldw	r2,4(r6)
   8c1f4:	10800044 	addi	r2,r2,1
   8c1f8:	30800115 	stw	r2,4(r6)
   8c1fc:	8005883a 	mov	r2,r16
   8c200:	dfc00317 	ldw	ra,12(sp)
   8c204:	dc400217 	ldw	r17,8(sp)
   8c208:	dc000117 	ldw	r16,4(sp)
   8c20c:	dec00404 	addi	sp,sp,16
   8c210:	f800283a 	ret
   8c214:	d9800015 	stw	r6,0(sp)
   8c218:	00807ec0 	call	807ec <__sinit>
   8c21c:	d9800017 	ldw	r6,0(sp)
   8c220:	003fe106 	br	8c1a8 <_ungetc_r+0x2c>
   8c224:	30800417 	ldw	r2,16(r6)
   8c228:	10002326 	beq	r2,zero,8c2b8 <_ungetc_r+0x13c>
   8c22c:	31c00017 	ldw	r7,0(r6)
   8c230:	11c0022e 	bgeu	r2,r7,8c23c <_ungetc_r+0xc0>
   8c234:	38bfffc3 	ldbu	r2,-1(r7)
   8c238:	80801226 	beq	r16,r2,8c284 <_ungetc_r+0x108>
   8c23c:	30c00117 	ldw	r3,4(r6)
   8c240:	00800044 	movi	r2,1
   8c244:	30800115 	stw	r2,4(r6)
   8c248:	008000c4 	movi	r2,3
   8c24c:	31001004 	addi	r4,r6,64
   8c250:	31401084 	addi	r5,r6,66
   8c254:	30800d15 	stw	r2,52(r6)
   8c258:	8005883a 	mov	r2,r16
   8c25c:	30c00f15 	stw	r3,60(r6)
   8c260:	31c00e15 	stw	r7,56(r6)
   8c264:	31000c15 	stw	r4,48(r6)
   8c268:	31400015 	stw	r5,0(r6)
   8c26c:	34001085 	stb	r16,66(r6)
   8c270:	dfc00317 	ldw	ra,12(sp)
   8c274:	dc400217 	ldw	r17,8(sp)
   8c278:	dc000117 	ldw	r16,4(sp)
   8c27c:	dec00404 	addi	sp,sp,16
   8c280:	f800283a 	ret
   8c284:	30800117 	ldw	r2,4(r6)
   8c288:	39ffffc4 	addi	r7,r7,-1
   8c28c:	31c00015 	stw	r7,0(r6)
   8c290:	10800044 	addi	r2,r2,1
   8c294:	30800115 	stw	r2,4(r6)
   8c298:	003fd806 	br	8c1fc <_ungetc_r+0x80>
   8c29c:	2880040c 	andi	r2,r5,16
   8c2a0:	10000d26 	beq	r2,zero,8c2d8 <_ungetc_r+0x15c>
   8c2a4:	2880020c 	andi	r2,r5,8
   8c2a8:	10000d1e 	bne	r2,zero,8c2e0 <_ungetc_r+0x164>
   8c2ac:	20800114 	ori	r2,r4,4
   8c2b0:	3080030d 	sth	r2,12(r6)
   8c2b4:	003fc406 	br	8c1c8 <_ungetc_r+0x4c>
   8c2b8:	31c00017 	ldw	r7,0(r6)
   8c2bc:	003fdf06 	br	8c23c <_ungetc_r+0xc0>
   8c2c0:	300b883a 	mov	r5,r6
   8c2c4:	8809883a 	mov	r4,r17
   8c2c8:	d9800015 	stw	r6,0(sp)
   8c2cc:	008c0a00 	call	8c0a0 <__submore>
   8c2d0:	d9800017 	ldw	r6,0(sp)
   8c2d4:	103fc226 	beq	r2,zero,8c1e0 <_ungetc_r+0x64>
   8c2d8:	043fffc4 	movi	r16,-1
   8c2dc:	003fc706 	br	8c1fc <_ungetc_r+0x80>
   8c2e0:	300b883a 	mov	r5,r6
   8c2e4:	8809883a 	mov	r4,r17
   8c2e8:	d9800015 	stw	r6,0(sp)
   8c2ec:	00805540 	call	80554 <_fflush_r>
   8c2f0:	d9800017 	ldw	r6,0(sp)
   8c2f4:	103ff81e 	bne	r2,zero,8c2d8 <_ungetc_r+0x15c>
   8c2f8:	3100030b 	ldhu	r4,12(r6)
   8c2fc:	00bffdc4 	movi	r2,-9
   8c300:	30000215 	stw	zero,8(r6)
   8c304:	2084703a 	and	r2,r4,r2
   8c308:	1009883a 	mov	r4,r2
   8c30c:	3080030d 	sth	r2,12(r6)
   8c310:	30000615 	stw	zero,24(r6)
   8c314:	003fe506 	br	8c2ac <_ungetc_r+0x130>

0008c318 <ungetc>:
   8c318:	01800274 	movhi	r6,9
   8c31c:	31968804 	addi	r6,r6,23072
   8c320:	2007883a 	mov	r3,r4
   8c324:	31000017 	ldw	r4,0(r6)
   8c328:	280d883a 	mov	r6,r5
   8c32c:	180b883a 	mov	r5,r3
   8c330:	008c17c1 	jmpi	8c17c <_ungetc_r>

0008c334 <_calloc_r>:
   8c334:	defffe04 	addi	sp,sp,-8
   8c338:	dc400015 	stw	r17,0(sp)
   8c33c:	2023883a 	mov	r17,r4
   8c340:	2809883a 	mov	r4,r5
   8c344:	300b883a 	mov	r5,r6
   8c348:	dfc00115 	stw	ra,4(sp)
   8c34c:	008f3380 	call	8f338 <__mulsi3>
   8c350:	100b883a 	mov	r5,r2
   8c354:	8809883a 	mov	r4,r17
   8c358:	00818fc0 	call	818fc <_malloc_r>
   8c35c:	1023883a 	mov	r17,r2
   8c360:	01c00904 	movi	r7,36
   8c364:	10000d26 	beq	r2,zero,8c39c <_calloc_r+0x68>
   8c368:	10ffff17 	ldw	r3,-4(r2)
   8c36c:	1009883a 	mov	r4,r2
   8c370:	00bfff04 	movi	r2,-4
   8c374:	1886703a 	and	r3,r3,r2
   8c378:	1887883a 	add	r3,r3,r2
   8c37c:	180d883a 	mov	r6,r3
   8c380:	000b883a 	mov	r5,zero
   8c384:	38c01736 	bltu	r7,r3,8c3e4 <_calloc_r+0xb0>
   8c388:	008004c4 	movi	r2,19
   8c38c:	10c00836 	bltu	r2,r3,8c3b0 <_calloc_r+0x7c>
   8c390:	20000215 	stw	zero,8(r4)
   8c394:	20000015 	stw	zero,0(r4)
   8c398:	20000115 	stw	zero,4(r4)
   8c39c:	8805883a 	mov	r2,r17
   8c3a0:	dfc00117 	ldw	ra,4(sp)
   8c3a4:	dc400017 	ldw	r17,0(sp)
   8c3a8:	dec00204 	addi	sp,sp,8
   8c3ac:	f800283a 	ret
   8c3b0:	008006c4 	movi	r2,27
   8c3b4:	88000015 	stw	zero,0(r17)
   8c3b8:	88000115 	stw	zero,4(r17)
   8c3bc:	89000204 	addi	r4,r17,8
   8c3c0:	10fff32e 	bgeu	r2,r3,8c390 <_calloc_r+0x5c>
   8c3c4:	88000215 	stw	zero,8(r17)
   8c3c8:	88000315 	stw	zero,12(r17)
   8c3cc:	89000404 	addi	r4,r17,16
   8c3d0:	19ffef1e 	bne	r3,r7,8c390 <_calloc_r+0x5c>
   8c3d4:	89000604 	addi	r4,r17,24
   8c3d8:	88000415 	stw	zero,16(r17)
   8c3dc:	88000515 	stw	zero,20(r17)
   8c3e0:	003feb06 	br	8c390 <_calloc_r+0x5c>
   8c3e4:	008203c0 	call	8203c <memset>
   8c3e8:	8805883a 	mov	r2,r17
   8c3ec:	dfc00117 	ldw	ra,4(sp)
   8c3f0:	dc400017 	ldw	r17,0(sp)
   8c3f4:	dec00204 	addi	sp,sp,8
   8c3f8:	f800283a 	ret

0008c3fc <htinit>:
   8c3fc:	28800003 	ldbu	r2,0(r5)
   8c400:	10000626 	beq	r2,zero,8c41c <htinit+0x20>
   8c404:	1105883a 	add	r2,r2,r4
   8c408:	11800005 	stb	r6,0(r2)
   8c40c:	28800043 	ldbu	r2,1(r5)
   8c410:	31800044 	addi	r6,r6,1
   8c414:	29400044 	addi	r5,r5,1
   8c418:	103ffa1e 	bne	r2,zero,8c404 <htinit+0x8>
   8c41c:	f800283a 	ret

0008c420 <__hexdig_init>:
   8c420:	defffd04 	addi	sp,sp,-12
   8c424:	dc400015 	stw	r17,0(sp)
   8c428:	04400274 	movhi	r17,9
   8c42c:	8c5d9e04 	addi	r17,r17,30328
   8c430:	dcc00115 	stw	r19,4(sp)
   8c434:	8809883a 	mov	r4,r17
   8c438:	04c00684 	movi	r19,26
   8c43c:	01400274 	movhi	r5,9
   8c440:	294f5304 	addi	r5,r5,15692
   8c444:	01800404 	movi	r6,16
   8c448:	dfc00215 	stw	ra,8(sp)
   8c44c:	008c3fc0 	call	8c3fc <htinit>
   8c450:	980d883a 	mov	r6,r19
   8c454:	8809883a 	mov	r4,r17
   8c458:	01400274 	movhi	r5,9
   8c45c:	294f5604 	addi	r5,r5,15704
   8c460:	008c3fc0 	call	8c3fc <htinit>
   8c464:	8809883a 	mov	r4,r17
   8c468:	980d883a 	mov	r6,r19
   8c46c:	01400274 	movhi	r5,9
   8c470:	294f5804 	addi	r5,r5,15712
   8c474:	dfc00217 	ldw	ra,8(sp)
   8c478:	dcc00117 	ldw	r19,4(sp)
   8c47c:	dc400017 	ldw	r17,0(sp)
   8c480:	dec00304 	addi	sp,sp,12
   8c484:	008c3fc1 	jmpi	8c3fc <htinit>

0008c488 <rshift>:
   8c488:	2807d17a 	srai	r3,r5,5
   8c48c:	20800417 	ldw	r2,16(r4)
   8c490:	22400504 	addi	r9,r4,20
   8c494:	480f883a 	mov	r7,r9
   8c498:	1880190e 	bge	r3,r2,8c500 <rshift+0x78>
   8c49c:	1085883a 	add	r2,r2,r2
   8c4a0:	18c7883a 	add	r3,r3,r3
   8c4a4:	1085883a 	add	r2,r2,r2
   8c4a8:	18c7883a 	add	r3,r3,r3
   8c4ac:	294007cc 	andi	r5,r5,31
   8c4b0:	4891883a 	add	r8,r9,r2
   8c4b4:	48cd883a 	add	r6,r9,r3
   8c4b8:	28001726 	beq	r5,zero,8c518 <rshift+0x90>
   8c4bc:	30c00017 	ldw	r3,0(r6)
   8c4c0:	00800804 	movi	r2,32
   8c4c4:	31800104 	addi	r6,r6,4
   8c4c8:	1155c83a 	sub	r10,r2,r5
   8c4cc:	1946d83a 	srl	r3,r3,r5
   8c4d0:	3200092e 	bgeu	r6,r8,8c4f8 <rshift+0x70>
   8c4d4:	30800017 	ldw	r2,0(r6)
   8c4d8:	1284983a 	sll	r2,r2,r10
   8c4dc:	10c4b03a 	or	r2,r2,r3
   8c4e0:	38800015 	stw	r2,0(r7)
   8c4e4:	30c00017 	ldw	r3,0(r6)
   8c4e8:	31800104 	addi	r6,r6,4
   8c4ec:	39c00104 	addi	r7,r7,4
   8c4f0:	1946d83a 	srl	r3,r3,r5
   8c4f4:	323ff736 	bltu	r6,r8,8c4d4 <rshift+0x4c>
   8c4f8:	38c00015 	stw	r3,0(r7)
   8c4fc:	18000c1e 	bne	r3,zero,8c530 <rshift+0xa8>
   8c500:	3a45c83a 	sub	r2,r7,r9
   8c504:	1005d0ba 	srai	r2,r2,2
   8c508:	20800415 	stw	r2,16(r4)
   8c50c:	1000011e 	bne	r2,zero,8c514 <rshift+0x8c>
   8c510:	20000515 	stw	zero,20(r4)
   8c514:	f800283a 	ret
   8c518:	323ff92e 	bgeu	r6,r8,8c500 <rshift+0x78>
   8c51c:	30800017 	ldw	r2,0(r6)
   8c520:	31800104 	addi	r6,r6,4
   8c524:	38800015 	stw	r2,0(r7)
   8c528:	39c00104 	addi	r7,r7,4
   8c52c:	003ffa06 	br	8c518 <rshift+0x90>
   8c530:	39c00104 	addi	r7,r7,4
   8c534:	003ff206 	br	8c500 <rshift+0x78>

0008c538 <__gethex>:
   8c538:	defff104 	addi	sp,sp,-60
   8c53c:	df000d15 	stw	fp,52(sp)
   8c540:	dcc00815 	stw	r19,32(sp)
   8c544:	dfc00e15 	stw	ra,56(sp)
   8c548:	ddc00c15 	stw	r23,48(sp)
   8c54c:	dd800b15 	stw	r22,44(sp)
   8c550:	dd400a15 	stw	r21,40(sp)
   8c554:	dd000915 	stw	r20,36(sp)
   8c558:	dc800715 	stw	r18,28(sp)
   8c55c:	dc400615 	stw	r17,24(sp)
   8c560:	dc000515 	stw	r16,20(sp)
   8c564:	04c00274 	movhi	r19,9
   8c568:	9cdd9e04 	addi	r19,r19,30328
   8c56c:	98800c03 	ldbu	r2,48(r19)
   8c570:	d9000115 	stw	r4,4(sp)
   8c574:	2839883a 	mov	fp,r5
   8c578:	d9800215 	stw	r6,8(sp)
   8c57c:	d9c00315 	stw	r7,12(sp)
   8c580:	10007526 	beq	r2,zero,8c758 <__gethex+0x220>
   8c584:	e1800017 	ldw	r6,0(fp)
   8c588:	00800c04 	movi	r2,48
   8c58c:	31000083 	ldbu	r4,2(r6)
   8c590:	30c00084 	addi	r3,r6,2
   8c594:	2080761e 	bne	r4,r2,8c770 <__gethex+0x238>
   8c598:	200b883a 	mov	r5,r4
   8c59c:	3007883a 	mov	r3,r6
   8c5a0:	188000c3 	ldbu	r2,3(r3)
   8c5a4:	18c00044 	addi	r3,r3,1
   8c5a8:	1009883a 	mov	r4,r2
   8c5ac:	117ffc26 	beq	r2,r5,8c5a0 <__gethex+0x68>
   8c5b0:	198fc83a 	sub	r7,r3,r6
   8c5b4:	19400084 	addi	r5,r3,2
   8c5b8:	24c5883a 	add	r2,r4,r19
   8c5bc:	10c00003 	ldbu	r3,0(r2)
   8c5c0:	18002e26 	beq	r3,zero,8c67c <__gethex+0x144>
   8c5c4:	29000003 	ldbu	r4,0(r5)
   8c5c8:	282b883a 	mov	r21,r5
   8c5cc:	000d883a 	mov	r6,zero
   8c5d0:	002d883a 	mov	r22,zero
   8c5d4:	21003fcc 	andi	r4,r4,255
   8c5d8:	24c5883a 	add	r2,r4,r19
   8c5dc:	10c00003 	ldbu	r3,0(r2)
   8c5e0:	18000526 	beq	r3,zero,8c5f8 <__gethex+0xc0>
   8c5e4:	29400044 	addi	r5,r5,1
   8c5e8:	29000003 	ldbu	r4,0(r5)
   8c5ec:	24c5883a 	add	r2,r4,r19
   8c5f0:	10c00003 	ldbu	r3,0(r2)
   8c5f4:	183ffb1e 	bne	r3,zero,8c5e4 <__gethex+0xac>
   8c5f8:	00800b84 	movi	r2,46
   8c5fc:	20805f26 	beq	r4,r2,8c77c <__gethex+0x244>
   8c600:	30008226 	beq	r6,zero,8c80c <__gethex+0x2d4>
   8c604:	2985c83a 	sub	r2,r5,r6
   8c608:	1085883a 	add	r2,r2,r2
   8c60c:	1085883a 	add	r2,r2,r2
   8c610:	0085c83a 	sub	r2,zero,r2
   8c614:	d8800015 	stw	r2,0(sp)
   8c618:	2825883a 	mov	r18,r5
   8c61c:	90c00003 	ldbu	r3,0(r18)
   8c620:	00801404 	movi	r2,80
   8c624:	18801e26 	beq	r3,r2,8c6a0 <__gethex+0x168>
   8c628:	00801c04 	movi	r2,112
   8c62c:	18801c26 	beq	r3,r2,8c6a0 <__gethex+0x168>
   8c630:	9023883a 	mov	r17,r18
   8c634:	b005003a 	cmpeq	r2,r22,zero
   8c638:	e4400015 	stw	r17,0(fp)
   8c63c:	10008d1e 	bne	r2,zero,8c874 <__gethex+0x33c>
   8c640:	38004326 	beq	r7,zero,8c750 <__gethex+0x218>
   8c644:	0025883a 	mov	r18,zero
   8c648:	9005883a 	mov	r2,r18
   8c64c:	dfc00e17 	ldw	ra,56(sp)
   8c650:	df000d17 	ldw	fp,52(sp)
   8c654:	ddc00c17 	ldw	r23,48(sp)
   8c658:	dd800b17 	ldw	r22,44(sp)
   8c65c:	dd400a17 	ldw	r21,40(sp)
   8c660:	dd000917 	ldw	r20,36(sp)
   8c664:	dcc00817 	ldw	r19,32(sp)
   8c668:	dc800717 	ldw	r18,28(sp)
   8c66c:	dc400617 	ldw	r17,24(sp)
   8c670:	dc000517 	ldw	r16,20(sp)
   8c674:	dec00f04 	addi	sp,sp,60
   8c678:	f800283a 	ret
   8c67c:	00800b84 	movi	r2,46
   8c680:	20805126 	beq	r4,r2,8c7c8 <__gethex+0x290>
   8c684:	2825883a 	mov	r18,r5
   8c688:	d8000015 	stw	zero,0(sp)
   8c68c:	90c00003 	ldbu	r3,0(r18)
   8c690:	00801404 	movi	r2,80
   8c694:	282b883a 	mov	r21,r5
   8c698:	05800044 	movi	r22,1
   8c69c:	18bfe21e 	bne	r3,r2,8c628 <__gethex+0xf0>
   8c6a0:	90c00043 	ldbu	r3,1(r18)
   8c6a4:	00800ac4 	movi	r2,43
   8c6a8:	91400044 	addi	r5,r18,1
   8c6ac:	18805126 	beq	r3,r2,8c7f4 <__gethex+0x2bc>
   8c6b0:	00800b44 	movi	r2,45
   8c6b4:	18805326 	beq	r3,r2,8c804 <__gethex+0x2cc>
   8c6b8:	002f883a 	mov	r23,zero
   8c6bc:	1cc5883a 	add	r2,r3,r19
   8c6c0:	10800003 	ldbu	r2,0(r2)
   8c6c4:	103fda26 	beq	r2,zero,8c630 <__gethex+0xf8>
   8c6c8:	01800644 	movi	r6,25
   8c6cc:	30bfd816 	blt	r6,r2,8c630 <__gethex+0xf8>
   8c6d0:	28c00043 	ldbu	r3,1(r5)
   8c6d4:	113ffc04 	addi	r4,r2,-16
   8c6d8:	00800274 	movhi	r2,9
   8c6dc:	109d9e04 	addi	r2,r2,30328
   8c6e0:	1887883a 	add	r3,r3,r2
   8c6e4:	18800003 	ldbu	r2,0(r3)
   8c6e8:	2c400044 	addi	r17,r5,1
   8c6ec:	10001126 	beq	r2,zero,8c734 <__gethex+0x1fc>
   8c6f0:	1021883a 	mov	r16,r2
   8c6f4:	30800f16 	blt	r6,r2,8c734 <__gethex+0x1fc>
   8c6f8:	3029883a 	mov	r20,r6
   8c6fc:	00000106 	br	8c704 <__gethex+0x1cc>
   8c700:	a0800c16 	blt	r20,r2,8c734 <__gethex+0x1fc>
   8c704:	8c400044 	addi	r17,r17,1
   8c708:	01400284 	movi	r5,10
   8c70c:	d9c00415 	stw	r7,16(sp)
   8c710:	008f3380 	call	8f338 <__mulsi3>
   8c714:	88c00003 	ldbu	r3,0(r17)
   8c718:	1405883a 	add	r2,r2,r16
   8c71c:	113ffc04 	addi	r4,r2,-16
   8c720:	1cc7883a 	add	r3,r3,r19
   8c724:	18800003 	ldbu	r2,0(r3)
   8c728:	d9c00417 	ldw	r7,16(sp)
   8c72c:	1021883a 	mov	r16,r2
   8c730:	103ff31e 	bne	r2,zero,8c700 <__gethex+0x1c8>
   8c734:	b805003a 	cmpeq	r2,r23,zero
   8c738:	1000011e 	bne	r2,zero,8c740 <__gethex+0x208>
   8c73c:	0109c83a 	sub	r4,zero,r4
   8c740:	d8800017 	ldw	r2,0(sp)
   8c744:	1105883a 	add	r2,r2,r4
   8c748:	d8800015 	stw	r2,0(sp)
   8c74c:	003fb906 	br	8c634 <__gethex+0xfc>
   8c750:	04800184 	movi	r18,6
   8c754:	003fbc06 	br	8c648 <__gethex+0x110>
   8c758:	008c4200 	call	8c420 <__hexdig_init>
   8c75c:	e1800017 	ldw	r6,0(fp)
   8c760:	00800c04 	movi	r2,48
   8c764:	31000083 	ldbu	r4,2(r6)
   8c768:	30c00084 	addi	r3,r6,2
   8c76c:	20bf8a26 	beq	r4,r2,8c598 <__gethex+0x60>
   8c770:	180b883a 	mov	r5,r3
   8c774:	000f883a 	mov	r7,zero
   8c778:	003f8f06 	br	8c5b8 <__gethex+0x80>
   8c77c:	303fa11e 	bne	r6,zero,8c604 <__gethex+0xcc>
   8c780:	29400044 	addi	r5,r5,1
   8c784:	28800003 	ldbu	r2,0(r5)
   8c788:	14c5883a 	add	r2,r2,r19
   8c78c:	10c00003 	ldbu	r3,0(r2)
   8c790:	1800b526 	beq	r3,zero,8ca68 <__gethex+0x530>
   8c794:	2809883a 	mov	r4,r5
   8c798:	21000044 	addi	r4,r4,1
   8c79c:	20800003 	ldbu	r2,0(r4)
   8c7a0:	14c5883a 	add	r2,r2,r19
   8c7a4:	10c00003 	ldbu	r3,0(r2)
   8c7a8:	183ffb1e 	bne	r3,zero,8c798 <__gethex+0x260>
   8c7ac:	2145c83a 	sub	r2,r4,r5
   8c7b0:	1085883a 	add	r2,r2,r2
   8c7b4:	1085883a 	add	r2,r2,r2
   8c7b8:	0085c83a 	sub	r2,zero,r2
   8c7bc:	200b883a 	mov	r5,r4
   8c7c0:	d8800015 	stw	r2,0(sp)
   8c7c4:	003f9406 	br	8c618 <__gethex+0xe0>
   8c7c8:	29000043 	ldbu	r4,1(r5)
   8c7cc:	00800274 	movhi	r2,9
   8c7d0:	109d9e04 	addi	r2,r2,30328
   8c7d4:	2c800044 	addi	r18,r5,1
   8c7d8:	2085883a 	add	r2,r4,r2
   8c7dc:	10c00003 	ldbu	r3,0(r2)
   8c7e0:	18000d1e 	bne	r3,zero,8c818 <__gethex+0x2e0>
   8c7e4:	282b883a 	mov	r21,r5
   8c7e8:	05800044 	movi	r22,1
   8c7ec:	d8000015 	stw	zero,0(sp)
   8c7f0:	003f8a06 	br	8c61c <__gethex+0xe4>
   8c7f4:	002f883a 	mov	r23,zero
   8c7f8:	29400044 	addi	r5,r5,1
   8c7fc:	28c00003 	ldbu	r3,0(r5)
   8c800:	003fae06 	br	8c6bc <__gethex+0x184>
   8c804:	05c00044 	movi	r23,1
   8c808:	003ffb06 	br	8c7f8 <__gethex+0x2c0>
   8c80c:	2825883a 	mov	r18,r5
   8c810:	d8000015 	stw	zero,0(sp)
   8c814:	003f8106 	br	8c61c <__gethex+0xe4>
   8c818:	00800c04 	movi	r2,48
   8c81c:	20800e1e 	bne	r4,r2,8c858 <__gethex+0x320>
   8c820:	2007883a 	mov	r3,r4
   8c824:	900b883a 	mov	r5,r18
   8c828:	29400044 	addi	r5,r5,1
   8c82c:	29000003 	ldbu	r4,0(r5)
   8c830:	20803fcc 	andi	r2,r4,255
   8c834:	10fffc26 	beq	r2,r3,8c828 <__gethex+0x2f0>
   8c838:	14c5883a 	add	r2,r2,r19
   8c83c:	10c00003 	ldbu	r3,0(r2)
   8c840:	1800071e 	bne	r3,zero,8c860 <__gethex+0x328>
   8c844:	01c00044 	movi	r7,1
   8c848:	900d883a 	mov	r6,r18
   8c84c:	282b883a 	mov	r21,r5
   8c850:	382d883a 	mov	r22,r7
   8c854:	003f5f06 	br	8c5d4 <__gethex+0x9c>
   8c858:	91000003 	ldbu	r4,0(r18)
   8c85c:	900b883a 	mov	r5,r18
   8c860:	900d883a 	mov	r6,r18
   8c864:	282b883a 	mov	r21,r5
   8c868:	01c00044 	movi	r7,1
   8c86c:	002d883a 	mov	r22,zero
   8c870:	003f5806 	br	8c5d4 <__gethex+0x9c>
   8c874:	9545c83a 	sub	r2,r18,r21
   8c878:	10bfffc4 	addi	r2,r2,-1
   8c87c:	00c001c4 	movi	r3,7
   8c880:	1880770e 	bge	r3,r2,8ca60 <__gethex+0x528>
   8c884:	000b883a 	mov	r5,zero
   8c888:	1005d07a 	srai	r2,r2,1
   8c88c:	29400044 	addi	r5,r5,1
   8c890:	18bffd16 	blt	r3,r2,8c888 <__gethex+0x350>
   8c894:	d9000117 	ldw	r4,4(sp)
   8c898:	0088d5c0 	call	88d5c <_Balloc>
   8c89c:	1029883a 	mov	r20,r2
   8c8a0:	15800504 	addi	r22,r2,20
   8c8a4:	ac80562e 	bgeu	r21,r18,8ca00 <__gethex+0x4c8>
   8c8a8:	900b883a 	mov	r5,r18
   8c8ac:	b011883a 	mov	r8,r22
   8c8b0:	000f883a 	mov	r7,zero
   8c8b4:	0009883a 	mov	r4,zero
   8c8b8:	02400b84 	movi	r9,46
   8c8bc:	02800804 	movi	r10,32
   8c8c0:	297fffc4 	addi	r5,r5,-1
   8c8c4:	28c00003 	ldbu	r3,0(r5)
   8c8c8:	1a400826 	beq	r3,r9,8c8ec <__gethex+0x3b4>
   8c8cc:	380d883a 	mov	r6,r7
   8c8d0:	3a802a26 	beq	r7,r10,8c97c <__gethex+0x444>
   8c8d4:	39c00104 	addi	r7,r7,4
   8c8d8:	1cc7883a 	add	r3,r3,r19
   8c8dc:	18800003 	ldbu	r2,0(r3)
   8c8e0:	108003cc 	andi	r2,r2,15
   8c8e4:	1184983a 	sll	r2,r2,r6
   8c8e8:	2088b03a 	or	r4,r4,r2
   8c8ec:	a97ff436 	bltu	r21,r5,8c8c0 <__gethex+0x388>
   8c8f0:	40800104 	addi	r2,r8,4
   8c8f4:	1585c83a 	sub	r2,r2,r22
   8c8f8:	1021d0ba 	srai	r16,r2,2
   8c8fc:	41000015 	stw	r4,0(r8)
   8c900:	a4000415 	stw	r16,16(r20)
   8c904:	00888040 	call	88804 <__hi0bits>
   8c908:	d9000217 	ldw	r4,8(sp)
   8c90c:	8006917a 	slli	r3,r16,5
   8c910:	24c00017 	ldw	r19,0(r4)
   8c914:	1885c83a 	sub	r2,r3,r2
   8c918:	98801f16 	blt	r19,r2,8c998 <__gethex+0x460>
   8c91c:	14c00c16 	blt	r2,r19,8c950 <__gethex+0x418>
   8c920:	002b883a 	mov	r21,zero
   8c924:	d9000217 	ldw	r4,8(sp)
   8c928:	d8c00017 	ldw	r3,0(sp)
   8c92c:	20800217 	ldw	r2,8(r4)
   8c930:	10c0360e 	bge	r2,r3,8ca0c <__gethex+0x4d4>
   8c934:	d9000117 	ldw	r4,4(sp)
   8c938:	a00b883a 	mov	r5,r20
   8c93c:	048028c4 	movi	r18,163
   8c940:	00887dc0 	call	887dc <_Bfree>
   8c944:	d9000f17 	ldw	r4,60(sp)
   8c948:	20000015 	stw	zero,0(r4)
   8c94c:	003f3e06 	br	8c648 <__gethex+0x110>
   8c950:	d9000117 	ldw	r4,4(sp)
   8c954:	98a1c83a 	sub	r16,r19,r2
   8c958:	a00b883a 	mov	r5,r20
   8c95c:	800d883a 	mov	r6,r16
   8c960:	00891200 	call	89120 <__lshift>
   8c964:	d8c00017 	ldw	r3,0(sp)
   8c968:	1029883a 	mov	r20,r2
   8c96c:	15800504 	addi	r22,r2,20
   8c970:	1c07c83a 	sub	r3,r3,r16
   8c974:	d8c00015 	stw	r3,0(sp)
   8c978:	003fe906 	br	8c920 <__gethex+0x3e8>
   8c97c:	41000015 	stw	r4,0(r8)
   8c980:	28c00003 	ldbu	r3,0(r5)
   8c984:	01c00104 	movi	r7,4
   8c988:	000d883a 	mov	r6,zero
   8c98c:	41d1883a 	add	r8,r8,r7
   8c990:	0009883a 	mov	r4,zero
   8c994:	003fd006 	br	8c8d8 <__gethex+0x3a0>
   8c998:	14e1c83a 	sub	r16,r2,r19
   8c99c:	a009883a 	mov	r4,r20
   8c9a0:	800b883a 	mov	r5,r16
   8c9a4:	0088cd40 	call	88cd4 <__any_on>
   8c9a8:	1000081e 	bne	r2,zero,8c9cc <__gethex+0x494>
   8c9ac:	002b883a 	mov	r21,zero
   8c9b0:	a009883a 	mov	r4,r20
   8c9b4:	800b883a 	mov	r5,r16
   8c9b8:	008c4880 	call	8c488 <rshift>
   8c9bc:	d8800017 	ldw	r2,0(sp)
   8c9c0:	1405883a 	add	r2,r2,r16
   8c9c4:	d8800015 	stw	r2,0(sp)
   8c9c8:	003fd606 	br	8c924 <__gethex+0x3ec>
   8c9cc:	817fffc4 	addi	r5,r16,-1
   8c9d0:	2805d17a 	srai	r2,r5,5
   8c9d4:	290007cc 	andi	r4,r5,31
   8c9d8:	01800044 	movi	r6,1
   8c9dc:	1085883a 	add	r2,r2,r2
   8c9e0:	1085883a 	add	r2,r2,r2
   8c9e4:	1585883a 	add	r2,r2,r22
   8c9e8:	3108983a 	sll	r4,r6,r4
   8c9ec:	10c00017 	ldw	r3,0(r2)
   8c9f0:	20c8703a 	and	r4,r4,r3
   8c9f4:	20001e1e 	bne	r4,zero,8ca70 <__gethex+0x538>
   8c9f8:	302b883a 	mov	r21,r6
   8c9fc:	003fec06 	br	8c9b0 <__gethex+0x478>
   8ca00:	b011883a 	mov	r8,r22
   8ca04:	0009883a 	mov	r4,zero
   8ca08:	003fb906 	br	8c8f0 <__gethex+0x3b8>
   8ca0c:	d8800217 	ldw	r2,8(sp)
   8ca10:	d8c00017 	ldw	r3,0(sp)
   8ca14:	11000117 	ldw	r4,4(r2)
   8ca18:	19001c16 	blt	r3,r4,8ca8c <__gethex+0x554>
   8ca1c:	04800044 	movi	r18,1
   8ca20:	a8000926 	beq	r21,zero,8ca48 <__gethex+0x510>
   8ca24:	d8c00217 	ldw	r3,8(sp)
   8ca28:	00800084 	movi	r2,2
   8ca2c:	19000317 	ldw	r4,12(r3)
   8ca30:	20809826 	beq	r4,r2,8cc94 <__gethex+0x75c>
   8ca34:	008000c4 	movi	r2,3
   8ca38:	20805b26 	beq	r4,r2,8cba8 <__gethex+0x670>
   8ca3c:	00800044 	movi	r2,1
   8ca40:	20804326 	beq	r4,r2,8cb50 <__gethex+0x618>
   8ca44:	94800414 	ori	r18,r18,16
   8ca48:	d9000f17 	ldw	r4,60(sp)
   8ca4c:	d8800017 	ldw	r2,0(sp)
   8ca50:	d8c00317 	ldw	r3,12(sp)
   8ca54:	25000015 	stw	r20,0(r4)
   8ca58:	18800015 	stw	r2,0(r3)
   8ca5c:	003efa06 	br	8c648 <__gethex+0x110>
   8ca60:	000b883a 	mov	r5,zero
   8ca64:	003f8b06 	br	8c894 <__gethex+0x35c>
   8ca68:	d8000015 	stw	zero,0(sp)
   8ca6c:	003eea06 	br	8c618 <__gethex+0xe0>
   8ca70:	3140180e 	bge	r6,r5,8cad4 <__gethex+0x59c>
   8ca74:	a009883a 	mov	r4,r20
   8ca78:	817fff84 	addi	r5,r16,-2
   8ca7c:	0088cd40 	call	88cd4 <__any_on>
   8ca80:	10001426 	beq	r2,zero,8cad4 <__gethex+0x59c>
   8ca84:	054000c4 	movi	r21,3
   8ca88:	003fc906 	br	8c9b0 <__gethex+0x478>
   8ca8c:	d8800017 	ldw	r2,0(sp)
   8ca90:	20a3c83a 	sub	r17,r4,r2
   8ca94:	8cc01116 	blt	r17,r19,8cadc <__gethex+0x5a4>
   8ca98:	d8800217 	ldw	r2,8(sp)
   8ca9c:	10c00317 	ldw	r3,12(r2)
   8caa0:	00800084 	movi	r2,2
   8caa4:	18809426 	beq	r3,r2,8ccf8 <__gethex+0x7c0>
   8caa8:	008000c4 	movi	r2,3
   8caac:	18808f26 	beq	r3,r2,8ccec <__gethex+0x7b4>
   8cab0:	00800044 	movi	r2,1
   8cab4:	18807c26 	beq	r3,r2,8cca8 <__gethex+0x770>
   8cab8:	d9000117 	ldw	r4,4(sp)
   8cabc:	a00b883a 	mov	r5,r20
   8cac0:	04801404 	movi	r18,80
   8cac4:	00887dc0 	call	887dc <_Bfree>
   8cac8:	d9000f17 	ldw	r4,60(sp)
   8cacc:	20000015 	stw	zero,0(r4)
   8cad0:	003edd06 	br	8c648 <__gethex+0x110>
   8cad4:	05400084 	movi	r21,2
   8cad8:	003fb506 	br	8c9b0 <__gethex+0x478>
   8cadc:	8c3fffc4 	addi	r16,r17,-1
   8cae0:	a8001526 	beq	r21,zero,8cb38 <__gethex+0x600>
   8cae4:	05400044 	movi	r21,1
   8cae8:	8005d17a 	srai	r2,r16,5
   8caec:	814007cc 	andi	r5,r16,31
   8caf0:	00c00044 	movi	r3,1
   8caf4:	1085883a 	add	r2,r2,r2
   8caf8:	1085883a 	add	r2,r2,r2
   8cafc:	1585883a 	add	r2,r2,r22
   8cb00:	1946983a 	sll	r3,r3,r5
   8cb04:	11000017 	ldw	r4,0(r2)
   8cb08:	1906703a 	and	r3,r3,r4
   8cb0c:	18000126 	beq	r3,zero,8cb14 <__gethex+0x5dc>
   8cb10:	ad400094 	ori	r21,r21,2
   8cb14:	880b883a 	mov	r5,r17
   8cb18:	a009883a 	mov	r4,r20
   8cb1c:	008c4880 	call	8c488 <rshift>
   8cb20:	d8800217 	ldw	r2,8(sp)
   8cb24:	9c67c83a 	sub	r19,r19,r17
   8cb28:	04800084 	movi	r18,2
   8cb2c:	10800117 	ldw	r2,4(r2)
   8cb30:	d8800015 	stw	r2,0(sp)
   8cb34:	003fba06 	br	8ca20 <__gethex+0x4e8>
   8cb38:	043feb0e 	bge	zero,r16,8cae8 <__gethex+0x5b0>
   8cb3c:	a009883a 	mov	r4,r20
   8cb40:	800b883a 	mov	r5,r16
   8cb44:	0088cd40 	call	88cd4 <__any_on>
   8cb48:	102b883a 	mov	r21,r2
   8cb4c:	003fe606 	br	8cae8 <__gethex+0x5b0>
   8cb50:	a880008c 	andi	r2,r21,2
   8cb54:	103fbb26 	beq	r2,zero,8ca44 <__gethex+0x50c>
   8cb58:	b0800017 	ldw	r2,0(r22)
   8cb5c:	a884b03a 	or	r2,r21,r2
   8cb60:	1104703a 	and	r2,r2,r4
   8cb64:	103fb726 	beq	r2,zero,8ca44 <__gethex+0x50c>
   8cb68:	a4000417 	ldw	r16,16(r20)
   8cb6c:	b007883a 	mov	r3,r22
   8cb70:	017fffc4 	movi	r5,-1
   8cb74:	8405883a 	add	r2,r16,r16
   8cb78:	10ab883a 	add	r21,r2,r2
   8cb7c:	802f883a 	mov	r23,r16
   8cb80:	b549883a 	add	r4,r22,r21
   8cb84:	00000306 	br	8cb94 <__gethex+0x65c>
   8cb88:	18000015 	stw	zero,0(r3)
   8cb8c:	18c00104 	addi	r3,r3,4
   8cb90:	1900082e 	bgeu	r3,r4,8cbb4 <__gethex+0x67c>
   8cb94:	18800017 	ldw	r2,0(r3)
   8cb98:	117ffb26 	beq	r2,r5,8cb88 <__gethex+0x650>
   8cb9c:	10800044 	addi	r2,r2,1
   8cba0:	18800015 	stw	r2,0(r3)
   8cba4:	00001e06 	br	8cc20 <__gethex+0x6e8>
   8cba8:	d8801017 	ldw	r2,64(sp)
   8cbac:	103fa526 	beq	r2,zero,8ca44 <__gethex+0x50c>
   8cbb0:	003fed06 	br	8cb68 <__gethex+0x630>
   8cbb4:	a0800217 	ldw	r2,8(r20)
   8cbb8:	80801216 	blt	r16,r2,8cc04 <__gethex+0x6cc>
   8cbbc:	a1400117 	ldw	r5,4(r20)
   8cbc0:	d9000117 	ldw	r4,4(sp)
   8cbc4:	29400044 	addi	r5,r5,1
   8cbc8:	0088d5c0 	call	88d5c <_Balloc>
   8cbcc:	a1800417 	ldw	r6,16(r20)
   8cbd0:	a1400304 	addi	r5,r20,12
   8cbd4:	11000304 	addi	r4,r2,12
   8cbd8:	318d883a 	add	r6,r6,r6
   8cbdc:	318d883a 	add	r6,r6,r6
   8cbe0:	31800204 	addi	r6,r6,8
   8cbe4:	1023883a 	mov	r17,r2
   8cbe8:	008865c0 	call	8865c <memcpy>
   8cbec:	d9000117 	ldw	r4,4(sp)
   8cbf0:	a00b883a 	mov	r5,r20
   8cbf4:	8d800504 	addi	r22,r17,20
   8cbf8:	00887dc0 	call	887dc <_Bfree>
   8cbfc:	8c000417 	ldw	r16,16(r17)
   8cc00:	8829883a 	mov	r20,r17
   8cc04:	8405883a 	add	r2,r16,r16
   8cc08:	1085883a 	add	r2,r2,r2
   8cc0c:	1505883a 	add	r2,r2,r20
   8cc10:	84000044 	addi	r16,r16,1
   8cc14:	00c00044 	movi	r3,1
   8cc18:	10c00515 	stw	r3,20(r2)
   8cc1c:	a4000415 	stw	r16,16(r20)
   8cc20:	00800084 	movi	r2,2
   8cc24:	90801526 	beq	r18,r2,8cc7c <__gethex+0x744>
   8cc28:	bc000a16 	blt	r23,r16,8cc54 <__gethex+0x71c>
   8cc2c:	9c0007cc 	andi	r16,r19,31
   8cc30:	8000021e 	bne	r16,zero,8cc3c <__gethex+0x704>
   8cc34:	94800814 	ori	r18,r18,32
   8cc38:	003f8306 	br	8ca48 <__gethex+0x510>
   8cc3c:	b545883a 	add	r2,r22,r21
   8cc40:	113fff17 	ldw	r4,-4(r2)
   8cc44:	00888040 	call	88804 <__hi0bits>
   8cc48:	00c00804 	movi	r3,32
   8cc4c:	1c07c83a 	sub	r3,r3,r16
   8cc50:	10fff80e 	bge	r2,r3,8cc34 <__gethex+0x6fc>
   8cc54:	a009883a 	mov	r4,r20
   8cc58:	01400044 	movi	r5,1
   8cc5c:	008c4880 	call	8c488 <rshift>
   8cc60:	d9000217 	ldw	r4,8(sp)
   8cc64:	d8c00017 	ldw	r3,0(sp)
   8cc68:	20800217 	ldw	r2,8(r4)
   8cc6c:	18c00044 	addi	r3,r3,1
   8cc70:	d8c00015 	stw	r3,0(sp)
   8cc74:	10ff2f16 	blt	r2,r3,8c934 <__gethex+0x3fc>
   8cc78:	003fee06 	br	8cc34 <__gethex+0x6fc>
   8cc7c:	d8c00217 	ldw	r3,8(sp)
   8cc80:	18800017 	ldw	r2,0(r3)
   8cc84:	10bfffc4 	addi	r2,r2,-1
   8cc88:	98801e26 	beq	r19,r2,8cd04 <__gethex+0x7cc>
   8cc8c:	04800884 	movi	r18,34
   8cc90:	003f6d06 	br	8ca48 <__gethex+0x510>
   8cc94:	d9001017 	ldw	r4,64(sp)
   8cc98:	00800044 	movi	r2,1
   8cc9c:	1105c83a 	sub	r2,r2,r4
   8cca0:	103f6826 	beq	r2,zero,8ca44 <__gethex+0x50c>
   8cca4:	003fb006 	br	8cb68 <__gethex+0x630>
   8cca8:	9c7f831e 	bne	r19,r17,8cab8 <__gethex+0x580>
   8ccac:	1cc0060e 	bge	r3,r19,8ccc8 <__gethex+0x790>
   8ccb0:	98cbc83a 	sub	r5,r19,r3
   8ccb4:	a009883a 	mov	r4,r20
   8ccb8:	0088cd40 	call	88cd4 <__any_on>
   8ccbc:	103f7e26 	beq	r2,zero,8cab8 <__gethex+0x580>
   8ccc0:	d8c00217 	ldw	r3,8(sp)
   8ccc4:	19000117 	ldw	r4,4(r3)
   8ccc8:	d8800317 	ldw	r2,12(sp)
   8cccc:	d8c00f17 	ldw	r3,60(sp)
   8ccd0:	04000044 	movi	r16,1
   8ccd4:	11000015 	stw	r4,0(r2)
   8ccd8:	04801884 	movi	r18,98
   8ccdc:	b4000015 	stw	r16,0(r22)
   8cce0:	1d000015 	stw	r20,0(r3)
   8cce4:	a4000415 	stw	r16,16(r20)
   8cce8:	003e5706 	br	8c648 <__gethex+0x110>
   8ccec:	d8801017 	ldw	r2,64(sp)
   8ccf0:	103f7126 	beq	r2,zero,8cab8 <__gethex+0x580>
   8ccf4:	003ff406 	br	8ccc8 <__gethex+0x790>
   8ccf8:	d8c01017 	ldw	r3,64(sp)
   8ccfc:	183ff226 	beq	r3,zero,8ccc8 <__gethex+0x790>
   8cd00:	003f6d06 	br	8cab8 <__gethex+0x580>
   8cd04:	9805d17a 	srai	r2,r19,5
   8cd08:	994007cc 	andi	r5,r19,31
   8cd0c:	00c00044 	movi	r3,1
   8cd10:	1085883a 	add	r2,r2,r2
   8cd14:	1085883a 	add	r2,r2,r2
   8cd18:	1585883a 	add	r2,r2,r22
   8cd1c:	1946983a 	sll	r3,r3,r5
   8cd20:	11000017 	ldw	r4,0(r2)
   8cd24:	1906703a 	and	r3,r3,r4
   8cd28:	183fd826 	beq	r3,zero,8cc8c <__gethex+0x754>
   8cd2c:	04800844 	movi	r18,33
   8cd30:	003f4506 	br	8ca48 <__gethex+0x510>

0008cd34 <L_shift>:
   8cd34:	00800204 	movi	r2,8
   8cd38:	1185c83a 	sub	r2,r2,r6
   8cd3c:	1085883a 	add	r2,r2,r2
   8cd40:	21c00017 	ldw	r7,0(r4)
   8cd44:	1093883a 	add	r9,r2,r2
   8cd48:	00800804 	movi	r2,32
   8cd4c:	200d883a 	mov	r6,r4
   8cd50:	1251c83a 	sub	r8,r2,r9
   8cd54:	31800104 	addi	r6,r6,4
   8cd58:	3805883a 	mov	r2,r7
   8cd5c:	31c00017 	ldw	r7,0(r6)
   8cd60:	3a08983a 	sll	r4,r7,r8
   8cd64:	3a46d83a 	srl	r3,r7,r9
   8cd68:	1104b03a 	or	r2,r2,r4
   8cd6c:	180f883a 	mov	r7,r3
   8cd70:	30bfff15 	stw	r2,-4(r6)
   8cd74:	30c00015 	stw	r3,0(r6)
   8cd78:	317ff636 	bltu	r6,r5,8cd54 <L_shift+0x20>
   8cd7c:	f800283a 	ret

0008cd80 <__hexnan>:
   8cd80:	defff404 	addi	sp,sp,-48
   8cd84:	dd800815 	stw	r22,32(sp)
   8cd88:	05800274 	movhi	r22,9
   8cd8c:	b59d9e04 	addi	r22,r22,30328
   8cd90:	b0800c03 	ldbu	r2,48(r22)
   8cd94:	dcc00515 	stw	r19,20(sp)
   8cd98:	dc000215 	stw	r16,8(sp)
   8cd9c:	dfc00b15 	stw	ra,44(sp)
   8cda0:	df000a15 	stw	fp,40(sp)
   8cda4:	ddc00915 	stw	r23,36(sp)
   8cda8:	dd400715 	stw	r21,28(sp)
   8cdac:	dd000615 	stw	r20,24(sp)
   8cdb0:	dc800415 	stw	r18,16(sp)
   8cdb4:	dc400315 	stw	r17,12(sp)
   8cdb8:	d9000115 	stw	r4,4(sp)
   8cdbc:	2821883a 	mov	r16,r5
   8cdc0:	3027883a 	mov	r19,r6
   8cdc4:	10007426 	beq	r2,zero,8cf98 <__hexnan+0x218>
   8cdc8:	80c00017 	ldw	r3,0(r16)
   8cdcc:	1805d17a 	srai	r2,r3,5
   8cdd0:	18c007cc 	andi	r3,r3,31
   8cdd4:	1839003a 	cmpeq	fp,r3,zero
   8cdd8:	1085883a 	add	r2,r2,r2
   8cddc:	1085883a 	add	r2,r2,r2
   8cde0:	d8c00015 	stw	r3,0(sp)
   8cde4:	14c5883a 	add	r2,r2,r19
   8cde8:	e000011e 	bne	fp,zero,8cdf0 <__hexnan+0x70>
   8cdec:	10800104 	addi	r2,r2,4
   8cdf0:	d8c00117 	ldw	r3,4(sp)
   8cdf4:	153fff04 	addi	r20,r2,-4
   8cdf8:	a021883a 	mov	r16,r20
   8cdfc:	1c400017 	ldw	r17,0(r3)
   8ce00:	a02b883a 	mov	r21,r20
   8ce04:	0025883a 	mov	r18,zero
   8ce08:	002f883a 	mov	r23,zero
   8ce0c:	000d883a 	mov	r6,zero
   8ce10:	103fff15 	stw	zero,-4(r2)
   8ce14:	8c400044 	addi	r17,r17,1
   8ce18:	89000003 	ldbu	r4,0(r17)
   8ce1c:	20000e26 	beq	r4,zero,8ce58 <__hexnan+0xd8>
   8ce20:	2585883a 	add	r2,r4,r22
   8ce24:	10c00003 	ldbu	r3,0(r2)
   8ce28:	18002e1e 	bne	r3,zero,8cee4 <__hexnan+0x164>
   8ce2c:	00800804 	movi	r2,32
   8ce30:	11005536 	bltu	r2,r4,8cf88 <__hexnan+0x208>
   8ce34:	bcbff70e 	bge	r23,r18,8ce14 <__hexnan+0x94>
   8ce38:	8540022e 	bgeu	r16,r21,8ce44 <__hexnan+0xc4>
   8ce3c:	008001c4 	movi	r2,7
   8ce40:	11803c0e 	bge	r2,r6,8cf34 <__hexnan+0x1b4>
   8ce44:	9c003536 	bltu	r19,r16,8cf1c <__hexnan+0x19c>
   8ce48:	8c400044 	addi	r17,r17,1
   8ce4c:	89000003 	ldbu	r4,0(r17)
   8ce50:	01800204 	movi	r6,8
   8ce54:	203ff21e 	bne	r4,zero,8ce20 <__hexnan+0xa0>
   8ce58:	90004d26 	beq	r18,zero,8cf90 <__hexnan+0x210>
   8ce5c:	85404336 	bltu	r16,r21,8cf6c <__hexnan+0x1ec>
   8ce60:	9c00382e 	bgeu	r19,r16,8cf44 <__hexnan+0x1c4>
   8ce64:	9807883a 	mov	r3,r19
   8ce68:	80800017 	ldw	r2,0(r16)
   8ce6c:	84000104 	addi	r16,r16,4
   8ce70:	18800015 	stw	r2,0(r3)
   8ce74:	18c00104 	addi	r3,r3,4
   8ce78:	a43ffb2e 	bgeu	r20,r16,8ce68 <__hexnan+0xe8>
   8ce7c:	18000015 	stw	zero,0(r3)
   8ce80:	18c00104 	addi	r3,r3,4
   8ce84:	a0fffd2e 	bgeu	r20,r3,8ce7c <__hexnan+0xfc>
   8ce88:	a0800017 	ldw	r2,0(r20)
   8ce8c:	1000071e 	bne	r2,zero,8ceac <__hexnan+0x12c>
   8ce90:	9d004326 	beq	r19,r20,8cfa0 <__hexnan+0x220>
   8ce94:	a007883a 	mov	r3,r20
   8ce98:	00000106 	br	8cea0 <__hexnan+0x120>
   8ce9c:	98c04026 	beq	r19,r3,8cfa0 <__hexnan+0x220>
   8cea0:	18ffff04 	addi	r3,r3,-4
   8cea4:	18800017 	ldw	r2,0(r3)
   8cea8:	103ffc26 	beq	r2,zero,8ce9c <__hexnan+0x11c>
   8ceac:	00c00144 	movi	r3,5
   8ceb0:	1805883a 	mov	r2,r3
   8ceb4:	dfc00b17 	ldw	ra,44(sp)
   8ceb8:	df000a17 	ldw	fp,40(sp)
   8cebc:	ddc00917 	ldw	r23,36(sp)
   8cec0:	dd800817 	ldw	r22,32(sp)
   8cec4:	dd400717 	ldw	r21,28(sp)
   8cec8:	dd000617 	ldw	r20,24(sp)
   8cecc:	dcc00517 	ldw	r19,20(sp)
   8ced0:	dc800417 	ldw	r18,16(sp)
   8ced4:	dc400317 	ldw	r17,12(sp)
   8ced8:	dc000217 	ldw	r16,8(sp)
   8cedc:	dec00c04 	addi	sp,sp,48
   8cee0:	f800283a 	ret
   8cee4:	31800044 	addi	r6,r6,1
   8cee8:	00800204 	movi	r2,8
   8ceec:	94800044 	addi	r18,r18,1
   8cef0:	1180040e 	bge	r2,r6,8cf04 <__hexnan+0x184>
   8cef4:	9c3fc72e 	bgeu	r19,r16,8ce14 <__hexnan+0x94>
   8cef8:	843fff04 	addi	r16,r16,-4
   8cefc:	80000015 	stw	zero,0(r16)
   8cf00:	01800044 	movi	r6,1
   8cf04:	80800017 	ldw	r2,0(r16)
   8cf08:	18c003cc 	andi	r3,r3,15
   8cf0c:	1004913a 	slli	r2,r2,4
   8cf10:	10c4b03a 	or	r2,r2,r3
   8cf14:	80800015 	stw	r2,0(r16)
   8cf18:	003fbe06 	br	8ce14 <__hexnan+0x94>
   8cf1c:	843fff04 	addi	r16,r16,-4
   8cf20:	802b883a 	mov	r21,r16
   8cf24:	902f883a 	mov	r23,r18
   8cf28:	000d883a 	mov	r6,zero
   8cf2c:	80000015 	stw	zero,0(r16)
   8cf30:	003fb806 	br	8ce14 <__hexnan+0x94>
   8cf34:	8009883a 	mov	r4,r16
   8cf38:	a80b883a 	mov	r5,r21
   8cf3c:	008cd340 	call	8cd34 <L_shift>
   8cf40:	003fc006 	br	8ce44 <__hexnan+0xc4>
   8cf44:	e03fd01e 	bne	fp,zero,8ce88 <__hexnan+0x108>
   8cf48:	d8c00017 	ldw	r3,0(sp)
   8cf4c:	00800804 	movi	r2,32
   8cf50:	10c5c83a 	sub	r2,r2,r3
   8cf54:	00ffffc4 	movi	r3,-1
   8cf58:	1886d83a 	srl	r3,r3,r2
   8cf5c:	a0800017 	ldw	r2,0(r20)
   8cf60:	10c4703a 	and	r2,r2,r3
   8cf64:	a0800015 	stw	r2,0(r20)
   8cf68:	003fc806 	br	8ce8c <__hexnan+0x10c>
   8cf6c:	008001c4 	movi	r2,7
   8cf70:	11bfbb16 	blt	r2,r6,8ce60 <__hexnan+0xe0>
   8cf74:	a80b883a 	mov	r5,r21
   8cf78:	8009883a 	mov	r4,r16
   8cf7c:	008cd340 	call	8cd34 <L_shift>
   8cf80:	9c3ff02e 	bgeu	r19,r16,8cf44 <__hexnan+0x1c4>
   8cf84:	003fb706 	br	8ce64 <__hexnan+0xe4>
   8cf88:	00800a44 	movi	r2,41
   8cf8c:	20800826 	beq	r4,r2,8cfb0 <__hexnan+0x230>
   8cf90:	00c00104 	movi	r3,4
   8cf94:	003fc606 	br	8ceb0 <__hexnan+0x130>
   8cf98:	008c4200 	call	8c420 <__hexdig_init>
   8cf9c:	003f8a06 	br	8cdc8 <__hexnan+0x48>
   8cfa0:	00800044 	movi	r2,1
   8cfa4:	00c00144 	movi	r3,5
   8cfa8:	98800015 	stw	r2,0(r19)
   8cfac:	003fc006 	br	8ceb0 <__hexnan+0x130>
   8cfb0:	903ff726 	beq	r18,zero,8cf90 <__hexnan+0x210>
   8cfb4:	d8c00117 	ldw	r3,4(sp)
   8cfb8:	88800044 	addi	r2,r17,1
   8cfbc:	18800015 	stw	r2,0(r3)
   8cfc0:	857fa72e 	bgeu	r16,r21,8ce60 <__hexnan+0xe0>
   8cfc4:	003fe906 	br	8cf6c <__hexnan+0x1ec>

0008cfc8 <__muldi3>:
   8cfc8:	defff204 	addi	sp,sp,-56
   8cfcc:	df000c15 	stw	fp,48(sp)
   8cfd0:	3038d43a 	srli	fp,r6,16
   8cfd4:	dd000815 	stw	r20,32(sp)
   8cfd8:	dc400515 	stw	r17,20(sp)
   8cfdc:	2028d43a 	srli	r20,r4,16
   8cfe0:	247fffcc 	andi	r17,r4,65535
   8cfe4:	dc000415 	stw	r16,16(sp)
   8cfe8:	343fffcc 	andi	r16,r6,65535
   8cfec:	dcc00715 	stw	r19,28(sp)
   8cff0:	d9000015 	stw	r4,0(sp)
   8cff4:	2827883a 	mov	r19,r5
   8cff8:	8809883a 	mov	r4,r17
   8cffc:	d9400115 	stw	r5,4(sp)
   8d000:	800b883a 	mov	r5,r16
   8d004:	d9800215 	stw	r6,8(sp)
   8d008:	dfc00d15 	stw	ra,52(sp)
   8d00c:	d9c00315 	stw	r7,12(sp)
   8d010:	dd800a15 	stw	r22,40(sp)
   8d014:	dd400915 	stw	r21,36(sp)
   8d018:	302d883a 	mov	r22,r6
   8d01c:	ddc00b15 	stw	r23,44(sp)
   8d020:	dc800615 	stw	r18,24(sp)
   8d024:	008f3380 	call	8f338 <__mulsi3>
   8d028:	8809883a 	mov	r4,r17
   8d02c:	e00b883a 	mov	r5,fp
   8d030:	102b883a 	mov	r21,r2
   8d034:	008f3380 	call	8f338 <__mulsi3>
   8d038:	800b883a 	mov	r5,r16
   8d03c:	a009883a 	mov	r4,r20
   8d040:	1023883a 	mov	r17,r2
   8d044:	008f3380 	call	8f338 <__mulsi3>
   8d048:	a009883a 	mov	r4,r20
   8d04c:	e00b883a 	mov	r5,fp
   8d050:	1021883a 	mov	r16,r2
   8d054:	008f3380 	call	8f338 <__mulsi3>
   8d058:	a8ffffcc 	andi	r3,r21,65535
   8d05c:	a82ad43a 	srli	r21,r21,16
   8d060:	8c23883a 	add	r17,r17,r16
   8d064:	1011883a 	mov	r8,r2
   8d068:	ac6b883a 	add	r21,r21,r17
   8d06c:	a804943a 	slli	r2,r21,16
   8d070:	b009883a 	mov	r4,r22
   8d074:	980b883a 	mov	r5,r19
   8d078:	10c7883a 	add	r3,r2,r3
   8d07c:	a812d43a 	srli	r9,r21,16
   8d080:	180d883a 	mov	r6,r3
   8d084:	ac00022e 	bgeu	r21,r16,8d090 <__muldi3+0xc8>
   8d088:	00800074 	movhi	r2,1
   8d08c:	4091883a 	add	r8,r8,r2
   8d090:	4267883a 	add	r19,r8,r9
   8d094:	302d883a 	mov	r22,r6
   8d098:	008f3380 	call	8f338 <__mulsi3>
   8d09c:	d9400317 	ldw	r5,12(sp)
   8d0a0:	d9000017 	ldw	r4,0(sp)
   8d0a4:	1023883a 	mov	r17,r2
   8d0a8:	008f3380 	call	8f338 <__mulsi3>
   8d0ac:	14cb883a 	add	r5,r2,r19
   8d0b0:	894b883a 	add	r5,r17,r5
   8d0b4:	b005883a 	mov	r2,r22
   8d0b8:	2807883a 	mov	r3,r5
   8d0bc:	dfc00d17 	ldw	ra,52(sp)
   8d0c0:	df000c17 	ldw	fp,48(sp)
   8d0c4:	ddc00b17 	ldw	r23,44(sp)
   8d0c8:	dd800a17 	ldw	r22,40(sp)
   8d0cc:	dd400917 	ldw	r21,36(sp)
   8d0d0:	dd000817 	ldw	r20,32(sp)
   8d0d4:	dcc00717 	ldw	r19,28(sp)
   8d0d8:	dc800617 	ldw	r18,24(sp)
   8d0dc:	dc400517 	ldw	r17,20(sp)
   8d0e0:	dc000417 	ldw	r16,16(sp)
   8d0e4:	dec00e04 	addi	sp,sp,56
   8d0e8:	f800283a 	ret

0008d0ec <__fixunsdfsi>:
   8d0ec:	defffb04 	addi	sp,sp,-20
   8d0f0:	dc400115 	stw	r17,4(sp)
   8d0f4:	dc000015 	stw	r16,0(sp)
   8d0f8:	04507834 	movhi	r17,16864
   8d0fc:	0021883a 	mov	r16,zero
   8d100:	800d883a 	mov	r6,r16
   8d104:	880f883a 	mov	r7,r17
   8d108:	dcc00315 	stw	r19,12(sp)
   8d10c:	dc800215 	stw	r18,8(sp)
   8d110:	2827883a 	mov	r19,r5
   8d114:	2025883a 	mov	r18,r4
   8d118:	dfc00415 	stw	ra,16(sp)
   8d11c:	008ec7c0 	call	8ec7c <__gedf2>
   8d120:	000d883a 	mov	r6,zero
   8d124:	880f883a 	mov	r7,r17
   8d128:	980b883a 	mov	r5,r19
   8d12c:	9009883a 	mov	r4,r18
   8d130:	10000d16 	blt	r2,zero,8d168 <__fixunsdfsi+0x7c>
   8d134:	008e3d40 	call	8e3d4 <__subdf3>
   8d138:	180b883a 	mov	r5,r3
   8d13c:	1009883a 	mov	r4,r2
   8d140:	008ef0c0 	call	8ef0c <__fixdfsi>
   8d144:	00e00034 	movhi	r3,32768
   8d148:	10c5883a 	add	r2,r2,r3
   8d14c:	dfc00417 	ldw	ra,16(sp)
   8d150:	dcc00317 	ldw	r19,12(sp)
   8d154:	dc800217 	ldw	r18,8(sp)
   8d158:	dc400117 	ldw	r17,4(sp)
   8d15c:	dc000017 	ldw	r16,0(sp)
   8d160:	dec00504 	addi	sp,sp,20
   8d164:	f800283a 	ret
   8d168:	980b883a 	mov	r5,r19
   8d16c:	9009883a 	mov	r4,r18
   8d170:	008ef0c0 	call	8ef0c <__fixdfsi>
   8d174:	dfc00417 	ldw	ra,16(sp)
   8d178:	dcc00317 	ldw	r19,12(sp)
   8d17c:	dc800217 	ldw	r18,8(sp)
   8d180:	dc400117 	ldw	r17,4(sp)
   8d184:	dc000017 	ldw	r16,0(sp)
   8d188:	dec00504 	addi	sp,sp,20
   8d18c:	f800283a 	ret

0008d190 <__udivdi3>:
   8d190:	defff104 	addi	sp,sp,-60
   8d194:	0015883a 	mov	r10,zero
   8d198:	2005883a 	mov	r2,r4
   8d19c:	3011883a 	mov	r8,r6
   8d1a0:	df000d15 	stw	fp,52(sp)
   8d1a4:	dd400a15 	stw	r21,40(sp)
   8d1a8:	dcc00815 	stw	r19,32(sp)
   8d1ac:	dfc00e15 	stw	ra,56(sp)
   8d1b0:	ddc00c15 	stw	r23,48(sp)
   8d1b4:	dd800b15 	stw	r22,44(sp)
   8d1b8:	dd000915 	stw	r20,36(sp)
   8d1bc:	dc800715 	stw	r18,28(sp)
   8d1c0:	dc400615 	stw	r17,24(sp)
   8d1c4:	dc000515 	stw	r16,20(sp)
   8d1c8:	da800315 	stw	r10,12(sp)
   8d1cc:	4027883a 	mov	r19,r8
   8d1d0:	1039883a 	mov	fp,r2
   8d1d4:	282b883a 	mov	r21,r5
   8d1d8:	da800415 	stw	r10,16(sp)
   8d1dc:	3800401e 	bne	r7,zero,8d2e0 <__udivdi3+0x150>
   8d1e0:	2a006536 	bltu	r5,r8,8d378 <__udivdi3+0x1e8>
   8d1e4:	4000b526 	beq	r8,zero,8d4bc <__udivdi3+0x32c>
   8d1e8:	00bfffd4 	movui	r2,65535
   8d1ec:	14c0ad36 	bltu	r2,r19,8d4a4 <__udivdi3+0x314>
   8d1f0:	00803fc4 	movi	r2,255
   8d1f4:	14c15e36 	bltu	r2,r19,8d770 <__udivdi3+0x5e0>
   8d1f8:	000b883a 	mov	r5,zero
   8d1fc:	0005883a 	mov	r2,zero
   8d200:	9884d83a 	srl	r2,r19,r2
   8d204:	01000274 	movhi	r4,9
   8d208:	210f5f04 	addi	r4,r4,15740
   8d20c:	01800804 	movi	r6,32
   8d210:	1105883a 	add	r2,r2,r4
   8d214:	10c00003 	ldbu	r3,0(r2)
   8d218:	28c7883a 	add	r3,r5,r3
   8d21c:	30e9c83a 	sub	r20,r6,r3
   8d220:	a0010a1e 	bne	r20,zero,8d64c <__udivdi3+0x4bc>
   8d224:	982ed43a 	srli	r23,r19,16
   8d228:	acebc83a 	sub	r21,r21,r19
   8d22c:	9dbfffcc 	andi	r22,r19,65535
   8d230:	05000044 	movi	r20,1
   8d234:	a809883a 	mov	r4,r21
   8d238:	b80b883a 	mov	r5,r23
   8d23c:	008f3280 	call	8f328 <__udivsi3>
   8d240:	100b883a 	mov	r5,r2
   8d244:	b009883a 	mov	r4,r22
   8d248:	1021883a 	mov	r16,r2
   8d24c:	008f3380 	call	8f338 <__mulsi3>
   8d250:	a809883a 	mov	r4,r21
   8d254:	b80b883a 	mov	r5,r23
   8d258:	1023883a 	mov	r17,r2
   8d25c:	008f3300 	call	8f330 <__umodsi3>
   8d260:	1004943a 	slli	r2,r2,16
   8d264:	e006d43a 	srli	r3,fp,16
   8d268:	10c4b03a 	or	r2,r2,r3
   8d26c:	1440042e 	bgeu	r2,r17,8d280 <__udivdi3+0xf0>
   8d270:	14c5883a 	add	r2,r2,r19
   8d274:	843fffc4 	addi	r16,r16,-1
   8d278:	14c00136 	bltu	r2,r19,8d280 <__udivdi3+0xf0>
   8d27c:	14415c36 	bltu	r2,r17,8d7f0 <__udivdi3+0x660>
   8d280:	1463c83a 	sub	r17,r2,r17
   8d284:	8809883a 	mov	r4,r17
   8d288:	b80b883a 	mov	r5,r23
   8d28c:	008f3280 	call	8f328 <__udivsi3>
   8d290:	100b883a 	mov	r5,r2
   8d294:	b009883a 	mov	r4,r22
   8d298:	102b883a 	mov	r21,r2
   8d29c:	008f3380 	call	8f338 <__mulsi3>
   8d2a0:	8809883a 	mov	r4,r17
   8d2a4:	b80b883a 	mov	r5,r23
   8d2a8:	1025883a 	mov	r18,r2
   8d2ac:	008f3300 	call	8f330 <__umodsi3>
   8d2b0:	1004943a 	slli	r2,r2,16
   8d2b4:	e0ffffcc 	andi	r3,fp,65535
   8d2b8:	10c4b03a 	or	r2,r2,r3
   8d2bc:	1480042e 	bgeu	r2,r18,8d2d0 <__udivdi3+0x140>
   8d2c0:	9885883a 	add	r2,r19,r2
   8d2c4:	ad7fffc4 	addi	r21,r21,-1
   8d2c8:	14c00136 	bltu	r2,r19,8d2d0 <__udivdi3+0x140>
   8d2cc:	14813c36 	bltu	r2,r18,8d7c0 <__udivdi3+0x630>
   8d2d0:	8004943a 	slli	r2,r16,16
   8d2d4:	a009883a 	mov	r4,r20
   8d2d8:	a884b03a 	or	r2,r21,r2
   8d2dc:	00001506 	br	8d334 <__udivdi3+0x1a4>
   8d2e0:	380d883a 	mov	r6,r7
   8d2e4:	29c06c36 	bltu	r5,r7,8d498 <__udivdi3+0x308>
   8d2e8:	00bfffd4 	movui	r2,65535
   8d2ec:	11c06436 	bltu	r2,r7,8d480 <__udivdi3+0x2f0>
   8d2f0:	00803fc4 	movi	r2,255
   8d2f4:	11c11836 	bltu	r2,r7,8d758 <__udivdi3+0x5c8>
   8d2f8:	000b883a 	mov	r5,zero
   8d2fc:	0005883a 	mov	r2,zero
   8d300:	3084d83a 	srl	r2,r6,r2
   8d304:	01000274 	movhi	r4,9
   8d308:	210f5f04 	addi	r4,r4,15740
   8d30c:	01c00804 	movi	r7,32
   8d310:	1105883a 	add	r2,r2,r4
   8d314:	10c00003 	ldbu	r3,0(r2)
   8d318:	28c7883a 	add	r3,r5,r3
   8d31c:	38edc83a 	sub	r22,r7,r3
   8d320:	b000731e 	bne	r22,zero,8d4f0 <__udivdi3+0x360>
   8d324:	35400136 	bltu	r6,r21,8d32c <__udivdi3+0x19c>
   8d328:	e4c05b36 	bltu	fp,r19,8d498 <__udivdi3+0x308>
   8d32c:	00800044 	movi	r2,1
   8d330:	0009883a 	mov	r4,zero
   8d334:	d8800315 	stw	r2,12(sp)
   8d338:	d9400317 	ldw	r5,12(sp)
   8d33c:	2007883a 	mov	r3,r4
   8d340:	d9000415 	stw	r4,16(sp)
   8d344:	2805883a 	mov	r2,r5
   8d348:	dfc00e17 	ldw	ra,56(sp)
   8d34c:	df000d17 	ldw	fp,52(sp)
   8d350:	ddc00c17 	ldw	r23,48(sp)
   8d354:	dd800b17 	ldw	r22,44(sp)
   8d358:	dd400a17 	ldw	r21,40(sp)
   8d35c:	dd000917 	ldw	r20,36(sp)
   8d360:	dcc00817 	ldw	r19,32(sp)
   8d364:	dc800717 	ldw	r18,28(sp)
   8d368:	dc400617 	ldw	r17,24(sp)
   8d36c:	dc000517 	ldw	r16,20(sp)
   8d370:	dec00f04 	addi	sp,sp,60
   8d374:	f800283a 	ret
   8d378:	00bfffd4 	movui	r2,65535
   8d37c:	12005636 	bltu	r2,r8,8d4d8 <__udivdi3+0x348>
   8d380:	00803fc4 	movi	r2,255
   8d384:	12010036 	bltu	r2,r8,8d788 <__udivdi3+0x5f8>
   8d388:	000b883a 	mov	r5,zero
   8d38c:	0005883a 	mov	r2,zero
   8d390:	9884d83a 	srl	r2,r19,r2
   8d394:	01000274 	movhi	r4,9
   8d398:	210f5f04 	addi	r4,r4,15740
   8d39c:	01800804 	movi	r6,32
   8d3a0:	1105883a 	add	r2,r2,r4
   8d3a4:	10c00003 	ldbu	r3,0(r2)
   8d3a8:	28c7883a 	add	r3,r5,r3
   8d3ac:	30cbc83a 	sub	r5,r6,r3
   8d3b0:	28000626 	beq	r5,zero,8d3cc <__udivdi3+0x23c>
   8d3b4:	3145c83a 	sub	r2,r6,r5
   8d3b8:	e084d83a 	srl	r2,fp,r2
   8d3bc:	a946983a 	sll	r3,r21,r5
   8d3c0:	e178983a 	sll	fp,fp,r5
   8d3c4:	9966983a 	sll	r19,r19,r5
   8d3c8:	18aab03a 	or	r21,r3,r2
   8d3cc:	982ed43a 	srli	r23,r19,16
   8d3d0:	a809883a 	mov	r4,r21
   8d3d4:	9cbfffcc 	andi	r18,r19,65535
   8d3d8:	b80b883a 	mov	r5,r23
   8d3dc:	008f3280 	call	8f328 <__udivsi3>
   8d3e0:	100b883a 	mov	r5,r2
   8d3e4:	9009883a 	mov	r4,r18
   8d3e8:	1021883a 	mov	r16,r2
   8d3ec:	008f3380 	call	8f338 <__mulsi3>
   8d3f0:	a809883a 	mov	r4,r21
   8d3f4:	b80b883a 	mov	r5,r23
   8d3f8:	1023883a 	mov	r17,r2
   8d3fc:	008f3300 	call	8f330 <__umodsi3>
   8d400:	1004943a 	slli	r2,r2,16
   8d404:	e006d43a 	srli	r3,fp,16
   8d408:	10c4b03a 	or	r2,r2,r3
   8d40c:	1440042e 	bgeu	r2,r17,8d420 <__udivdi3+0x290>
   8d410:	14c5883a 	add	r2,r2,r19
   8d414:	843fffc4 	addi	r16,r16,-1
   8d418:	14c00136 	bltu	r2,r19,8d420 <__udivdi3+0x290>
   8d41c:	1440ea36 	bltu	r2,r17,8d7c8 <__udivdi3+0x638>
   8d420:	1463c83a 	sub	r17,r2,r17
   8d424:	8809883a 	mov	r4,r17
   8d428:	b80b883a 	mov	r5,r23
   8d42c:	008f3280 	call	8f328 <__udivsi3>
   8d430:	100b883a 	mov	r5,r2
   8d434:	9009883a 	mov	r4,r18
   8d438:	102b883a 	mov	r21,r2
   8d43c:	008f3380 	call	8f338 <__mulsi3>
   8d440:	8809883a 	mov	r4,r17
   8d444:	b80b883a 	mov	r5,r23
   8d448:	1025883a 	mov	r18,r2
   8d44c:	008f3300 	call	8f330 <__umodsi3>
   8d450:	1004943a 	slli	r2,r2,16
   8d454:	e0ffffcc 	andi	r3,fp,65535
   8d458:	10c4b03a 	or	r2,r2,r3
   8d45c:	1480042e 	bgeu	r2,r18,8d470 <__udivdi3+0x2e0>
   8d460:	9885883a 	add	r2,r19,r2
   8d464:	ad7fffc4 	addi	r21,r21,-1
   8d468:	14c00136 	bltu	r2,r19,8d470 <__udivdi3+0x2e0>
   8d46c:	1480d936 	bltu	r2,r18,8d7d4 <__udivdi3+0x644>
   8d470:	8004943a 	slli	r2,r16,16
   8d474:	0009883a 	mov	r4,zero
   8d478:	a884b03a 	or	r2,r21,r2
   8d47c:	003fad06 	br	8d334 <__udivdi3+0x1a4>
   8d480:	00804034 	movhi	r2,256
   8d484:	10bfffc4 	addi	r2,r2,-1
   8d488:	11c0b636 	bltu	r2,r7,8d764 <__udivdi3+0x5d4>
   8d48c:	01400404 	movi	r5,16
   8d490:	2805883a 	mov	r2,r5
   8d494:	003f9a06 	br	8d300 <__udivdi3+0x170>
   8d498:	0005883a 	mov	r2,zero
   8d49c:	0009883a 	mov	r4,zero
   8d4a0:	003fa406 	br	8d334 <__udivdi3+0x1a4>
   8d4a4:	00804034 	movhi	r2,256
   8d4a8:	10bfffc4 	addi	r2,r2,-1
   8d4ac:	14c0b336 	bltu	r2,r19,8d77c <__udivdi3+0x5ec>
   8d4b0:	01400404 	movi	r5,16
   8d4b4:	2805883a 	mov	r2,r5
   8d4b8:	003f5106 	br	8d200 <__udivdi3+0x70>
   8d4bc:	01000044 	movi	r4,1
   8d4c0:	000b883a 	mov	r5,zero
   8d4c4:	008f3280 	call	8f328 <__udivsi3>
   8d4c8:	1027883a 	mov	r19,r2
   8d4cc:	00bfffd4 	movui	r2,65535
   8d4d0:	14fff436 	bltu	r2,r19,8d4a4 <__udivdi3+0x314>
   8d4d4:	003f4606 	br	8d1f0 <__udivdi3+0x60>
   8d4d8:	00804034 	movhi	r2,256
   8d4dc:	10bfffc4 	addi	r2,r2,-1
   8d4e0:	1200ac36 	bltu	r2,r8,8d794 <__udivdi3+0x604>
   8d4e4:	01400404 	movi	r5,16
   8d4e8:	2805883a 	mov	r2,r5
   8d4ec:	003fa806 	br	8d390 <__udivdi3+0x200>
   8d4f0:	3d85c83a 	sub	r2,r7,r22
   8d4f4:	3588983a 	sll	r4,r6,r22
   8d4f8:	9886d83a 	srl	r3,r19,r2
   8d4fc:	a8a2d83a 	srl	r17,r21,r2
   8d500:	e084d83a 	srl	r2,fp,r2
   8d504:	20eeb03a 	or	r23,r4,r3
   8d508:	b824d43a 	srli	r18,r23,16
   8d50c:	ad86983a 	sll	r3,r21,r22
   8d510:	8809883a 	mov	r4,r17
   8d514:	900b883a 	mov	r5,r18
   8d518:	1886b03a 	or	r3,r3,r2
   8d51c:	d8c00115 	stw	r3,4(sp)
   8d520:	bc3fffcc 	andi	r16,r23,65535
   8d524:	008f3280 	call	8f328 <__udivsi3>
   8d528:	100b883a 	mov	r5,r2
   8d52c:	8009883a 	mov	r4,r16
   8d530:	1029883a 	mov	r20,r2
   8d534:	008f3380 	call	8f338 <__mulsi3>
   8d538:	900b883a 	mov	r5,r18
   8d53c:	8809883a 	mov	r4,r17
   8d540:	102b883a 	mov	r21,r2
   8d544:	008f3300 	call	8f330 <__umodsi3>
   8d548:	d9400117 	ldw	r5,4(sp)
   8d54c:	1004943a 	slli	r2,r2,16
   8d550:	9da6983a 	sll	r19,r19,r22
   8d554:	2806d43a 	srli	r3,r5,16
   8d558:	10c4b03a 	or	r2,r2,r3
   8d55c:	1540032e 	bgeu	r2,r21,8d56c <__udivdi3+0x3dc>
   8d560:	15c5883a 	add	r2,r2,r23
   8d564:	a53fffc4 	addi	r20,r20,-1
   8d568:	15c0912e 	bgeu	r2,r23,8d7b0 <__udivdi3+0x620>
   8d56c:	1563c83a 	sub	r17,r2,r21
   8d570:	8809883a 	mov	r4,r17
   8d574:	900b883a 	mov	r5,r18
   8d578:	008f3280 	call	8f328 <__udivsi3>
   8d57c:	100b883a 	mov	r5,r2
   8d580:	8009883a 	mov	r4,r16
   8d584:	102b883a 	mov	r21,r2
   8d588:	008f3380 	call	8f338 <__mulsi3>
   8d58c:	8809883a 	mov	r4,r17
   8d590:	900b883a 	mov	r5,r18
   8d594:	1021883a 	mov	r16,r2
   8d598:	008f3300 	call	8f330 <__umodsi3>
   8d59c:	da800117 	ldw	r10,4(sp)
   8d5a0:	1004943a 	slli	r2,r2,16
   8d5a4:	50ffffcc 	andi	r3,r10,65535
   8d5a8:	10c6b03a 	or	r3,r2,r3
   8d5ac:	1c00032e 	bgeu	r3,r16,8d5bc <__udivdi3+0x42c>
   8d5b0:	1dc7883a 	add	r3,r3,r23
   8d5b4:	ad7fffc4 	addi	r21,r21,-1
   8d5b8:	1dc0792e 	bgeu	r3,r23,8d7a0 <__udivdi3+0x610>
   8d5bc:	a004943a 	slli	r2,r20,16
   8d5c0:	982ed43a 	srli	r23,r19,16
   8d5c4:	9cffffcc 	andi	r19,r19,65535
   8d5c8:	a8a4b03a 	or	r18,r21,r2
   8d5cc:	947fffcc 	andi	r17,r18,65535
   8d5d0:	902ad43a 	srli	r21,r18,16
   8d5d4:	8809883a 	mov	r4,r17
   8d5d8:	980b883a 	mov	r5,r19
   8d5dc:	1c21c83a 	sub	r16,r3,r16
   8d5e0:	008f3380 	call	8f338 <__mulsi3>
   8d5e4:	8809883a 	mov	r4,r17
   8d5e8:	b80b883a 	mov	r5,r23
   8d5ec:	1029883a 	mov	r20,r2
   8d5f0:	008f3380 	call	8f338 <__mulsi3>
   8d5f4:	980b883a 	mov	r5,r19
   8d5f8:	a809883a 	mov	r4,r21
   8d5fc:	1023883a 	mov	r17,r2
   8d600:	008f3380 	call	8f338 <__mulsi3>
   8d604:	a809883a 	mov	r4,r21
   8d608:	b80b883a 	mov	r5,r23
   8d60c:	1027883a 	mov	r19,r2
   8d610:	008f3380 	call	8f338 <__mulsi3>
   8d614:	1009883a 	mov	r4,r2
   8d618:	a004d43a 	srli	r2,r20,16
   8d61c:	8ce3883a 	add	r17,r17,r19
   8d620:	1447883a 	add	r3,r2,r17
   8d624:	1cc0022e 	bgeu	r3,r19,8d630 <__udivdi3+0x4a0>
   8d628:	00800074 	movhi	r2,1
   8d62c:	2089883a 	add	r4,r4,r2
   8d630:	1804d43a 	srli	r2,r3,16
   8d634:	2085883a 	add	r2,r4,r2
   8d638:	80804436 	bltu	r16,r2,8d74c <__udivdi3+0x5bc>
   8d63c:	80803e26 	beq	r16,r2,8d738 <__udivdi3+0x5a8>
   8d640:	9005883a 	mov	r2,r18
   8d644:	0009883a 	mov	r4,zero
   8d648:	003f3a06 	br	8d334 <__udivdi3+0x1a4>
   8d64c:	9d26983a 	sll	r19,r19,r20
   8d650:	3505c83a 	sub	r2,r6,r20
   8d654:	a8a2d83a 	srl	r17,r21,r2
   8d658:	982ed43a 	srli	r23,r19,16
   8d65c:	e084d83a 	srl	r2,fp,r2
   8d660:	ad06983a 	sll	r3,r21,r20
   8d664:	8809883a 	mov	r4,r17
   8d668:	b80b883a 	mov	r5,r23
   8d66c:	1886b03a 	or	r3,r3,r2
   8d670:	d8c00015 	stw	r3,0(sp)
   8d674:	9dbfffcc 	andi	r22,r19,65535
   8d678:	008f3280 	call	8f328 <__udivsi3>
   8d67c:	100b883a 	mov	r5,r2
   8d680:	b009883a 	mov	r4,r22
   8d684:	d8800215 	stw	r2,8(sp)
   8d688:	008f3380 	call	8f338 <__mulsi3>
   8d68c:	8809883a 	mov	r4,r17
   8d690:	b80b883a 	mov	r5,r23
   8d694:	102b883a 	mov	r21,r2
   8d698:	008f3300 	call	8f330 <__umodsi3>
   8d69c:	d9000017 	ldw	r4,0(sp)
   8d6a0:	1004943a 	slli	r2,r2,16
   8d6a4:	2006d43a 	srli	r3,r4,16
   8d6a8:	10c4b03a 	or	r2,r2,r3
   8d6ac:	1540052e 	bgeu	r2,r21,8d6c4 <__udivdi3+0x534>
   8d6b0:	d9400217 	ldw	r5,8(sp)
   8d6b4:	14c5883a 	add	r2,r2,r19
   8d6b8:	297fffc4 	addi	r5,r5,-1
   8d6bc:	d9400215 	stw	r5,8(sp)
   8d6c0:	14c0462e 	bgeu	r2,r19,8d7dc <__udivdi3+0x64c>
   8d6c4:	1563c83a 	sub	r17,r2,r21
   8d6c8:	8809883a 	mov	r4,r17
   8d6cc:	b80b883a 	mov	r5,r23
   8d6d0:	008f3280 	call	8f328 <__udivsi3>
   8d6d4:	100b883a 	mov	r5,r2
   8d6d8:	b009883a 	mov	r4,r22
   8d6dc:	1025883a 	mov	r18,r2
   8d6e0:	008f3380 	call	8f338 <__mulsi3>
   8d6e4:	8809883a 	mov	r4,r17
   8d6e8:	b80b883a 	mov	r5,r23
   8d6ec:	1021883a 	mov	r16,r2
   8d6f0:	008f3300 	call	8f330 <__umodsi3>
   8d6f4:	da800017 	ldw	r10,0(sp)
   8d6f8:	1004943a 	slli	r2,r2,16
   8d6fc:	50ffffcc 	andi	r3,r10,65535
   8d700:	10c6b03a 	or	r3,r2,r3
   8d704:	1c00062e 	bgeu	r3,r16,8d720 <__udivdi3+0x590>
   8d708:	1cc7883a 	add	r3,r3,r19
   8d70c:	94bfffc4 	addi	r18,r18,-1
   8d710:	1cc00336 	bltu	r3,r19,8d720 <__udivdi3+0x590>
   8d714:	1c00022e 	bgeu	r3,r16,8d720 <__udivdi3+0x590>
   8d718:	94bfffc4 	addi	r18,r18,-1
   8d71c:	1cc7883a 	add	r3,r3,r19
   8d720:	d9000217 	ldw	r4,8(sp)
   8d724:	e538983a 	sll	fp,fp,r20
   8d728:	1c2bc83a 	sub	r21,r3,r16
   8d72c:	2004943a 	slli	r2,r4,16
   8d730:	90a8b03a 	or	r20,r18,r2
   8d734:	003ebf06 	br	8d234 <__udivdi3+0xa4>
   8d738:	1804943a 	slli	r2,r3,16
   8d73c:	e588983a 	sll	r4,fp,r22
   8d740:	a0ffffcc 	andi	r3,r20,65535
   8d744:	10c5883a 	add	r2,r2,r3
   8d748:	20bfbd2e 	bgeu	r4,r2,8d640 <__udivdi3+0x4b0>
   8d74c:	90bfffc4 	addi	r2,r18,-1
   8d750:	0009883a 	mov	r4,zero
   8d754:	003ef706 	br	8d334 <__udivdi3+0x1a4>
   8d758:	01400204 	movi	r5,8
   8d75c:	2805883a 	mov	r2,r5
   8d760:	003ee706 	br	8d300 <__udivdi3+0x170>
   8d764:	01400604 	movi	r5,24
   8d768:	2805883a 	mov	r2,r5
   8d76c:	003ee406 	br	8d300 <__udivdi3+0x170>
   8d770:	01400204 	movi	r5,8
   8d774:	2805883a 	mov	r2,r5
   8d778:	003ea106 	br	8d200 <__udivdi3+0x70>
   8d77c:	01400604 	movi	r5,24
   8d780:	2805883a 	mov	r2,r5
   8d784:	003e9e06 	br	8d200 <__udivdi3+0x70>
   8d788:	01400204 	movi	r5,8
   8d78c:	2805883a 	mov	r2,r5
   8d790:	003eff06 	br	8d390 <__udivdi3+0x200>
   8d794:	01400604 	movi	r5,24
   8d798:	2805883a 	mov	r2,r5
   8d79c:	003efc06 	br	8d390 <__udivdi3+0x200>
   8d7a0:	1c3f862e 	bgeu	r3,r16,8d5bc <__udivdi3+0x42c>
   8d7a4:	1dc7883a 	add	r3,r3,r23
   8d7a8:	ad7fffc4 	addi	r21,r21,-1
   8d7ac:	003f8306 	br	8d5bc <__udivdi3+0x42c>
   8d7b0:	157f6e2e 	bgeu	r2,r21,8d56c <__udivdi3+0x3dc>
   8d7b4:	a53fffc4 	addi	r20,r20,-1
   8d7b8:	15c5883a 	add	r2,r2,r23
   8d7bc:	003f6b06 	br	8d56c <__udivdi3+0x3dc>
   8d7c0:	ad7fffc4 	addi	r21,r21,-1
   8d7c4:	003ec206 	br	8d2d0 <__udivdi3+0x140>
   8d7c8:	843fffc4 	addi	r16,r16,-1
   8d7cc:	14c5883a 	add	r2,r2,r19
   8d7d0:	003f1306 	br	8d420 <__udivdi3+0x290>
   8d7d4:	ad7fffc4 	addi	r21,r21,-1
   8d7d8:	003f2506 	br	8d470 <__udivdi3+0x2e0>
   8d7dc:	157fb92e 	bgeu	r2,r21,8d6c4 <__udivdi3+0x534>
   8d7e0:	297fffc4 	addi	r5,r5,-1
   8d7e4:	14c5883a 	add	r2,r2,r19
   8d7e8:	d9400215 	stw	r5,8(sp)
   8d7ec:	003fb506 	br	8d6c4 <__udivdi3+0x534>
   8d7f0:	843fffc4 	addi	r16,r16,-1
   8d7f4:	14c5883a 	add	r2,r2,r19
   8d7f8:	003ea106 	br	8d280 <__udivdi3+0xf0>

0008d7fc <__umoddi3>:
   8d7fc:	defff004 	addi	sp,sp,-64
   8d800:	3011883a 	mov	r8,r6
   8d804:	000d883a 	mov	r6,zero
   8d808:	dd400b15 	stw	r21,44(sp)
   8d80c:	dcc00915 	stw	r19,36(sp)
   8d810:	dc000615 	stw	r16,24(sp)
   8d814:	dfc00f15 	stw	ra,60(sp)
   8d818:	df000e15 	stw	fp,56(sp)
   8d81c:	ddc00d15 	stw	r23,52(sp)
   8d820:	dd800c15 	stw	r22,48(sp)
   8d824:	dd000a15 	stw	r20,40(sp)
   8d828:	dc800815 	stw	r18,32(sp)
   8d82c:	dc400715 	stw	r17,28(sp)
   8d830:	2817883a 	mov	r11,r5
   8d834:	d9800415 	stw	r6,16(sp)
   8d838:	4027883a 	mov	r19,r8
   8d83c:	d9800515 	stw	r6,20(sp)
   8d840:	2021883a 	mov	r16,r4
   8d844:	282b883a 	mov	r21,r5
   8d848:	38002c1e 	bne	r7,zero,8d8fc <__umoddi3+0x100>
   8d84c:	2a005636 	bltu	r5,r8,8d9a8 <__umoddi3+0x1ac>
   8d850:	40009a26 	beq	r8,zero,8dabc <__umoddi3+0x2c0>
   8d854:	00bfffd4 	movui	r2,65535
   8d858:	14c09236 	bltu	r2,r19,8daa4 <__umoddi3+0x2a8>
   8d85c:	00803fc4 	movi	r2,255
   8d860:	14c15c36 	bltu	r2,r19,8ddd4 <__umoddi3+0x5d8>
   8d864:	000b883a 	mov	r5,zero
   8d868:	0005883a 	mov	r2,zero
   8d86c:	9884d83a 	srl	r2,r19,r2
   8d870:	01000274 	movhi	r4,9
   8d874:	210f5f04 	addi	r4,r4,15740
   8d878:	01800804 	movi	r6,32
   8d87c:	1105883a 	add	r2,r2,r4
   8d880:	10c00003 	ldbu	r3,0(r2)
   8d884:	28c7883a 	add	r3,r5,r3
   8d888:	30e5c83a 	sub	r18,r6,r3
   8d88c:	9000a41e 	bne	r18,zero,8db20 <__umoddi3+0x324>
   8d890:	982ed43a 	srli	r23,r19,16
   8d894:	acebc83a 	sub	r21,r21,r19
   8d898:	9d3fffcc 	andi	r20,r19,65535
   8d89c:	002d883a 	mov	r22,zero
   8d8a0:	a809883a 	mov	r4,r21
   8d8a4:	b80b883a 	mov	r5,r23
   8d8a8:	008f3280 	call	8f328 <__udivsi3>
   8d8ac:	100b883a 	mov	r5,r2
   8d8b0:	a009883a 	mov	r4,r20
   8d8b4:	008f3380 	call	8f338 <__mulsi3>
   8d8b8:	a809883a 	mov	r4,r21
   8d8bc:	b80b883a 	mov	r5,r23
   8d8c0:	1023883a 	mov	r17,r2
   8d8c4:	008f3300 	call	8f330 <__umodsi3>
   8d8c8:	1004943a 	slli	r2,r2,16
   8d8cc:	8006d43a 	srli	r3,r16,16
   8d8d0:	10c4b03a 	or	r2,r2,r3
   8d8d4:	1440032e 	bgeu	r2,r17,8d8e4 <__umoddi3+0xe8>
   8d8d8:	14c5883a 	add	r2,r2,r19
   8d8dc:	14c00136 	bltu	r2,r19,8d8e4 <__umoddi3+0xe8>
   8d8e0:	14415836 	bltu	r2,r17,8de44 <__umoddi3+0x648>
   8d8e4:	1463c83a 	sub	r17,r2,r17
   8d8e8:	8809883a 	mov	r4,r17
   8d8ec:	b80b883a 	mov	r5,r23
   8d8f0:	008f3280 	call	8f328 <__udivsi3>
   8d8f4:	a009883a 	mov	r4,r20
   8d8f8:	00005306 	br	8da48 <__umoddi3+0x24c>
   8d8fc:	380d883a 	mov	r6,r7
   8d900:	29c0132e 	bgeu	r5,r7,8d950 <__umoddi3+0x154>
   8d904:	d9000415 	stw	r4,16(sp)
   8d908:	d9400515 	stw	r5,20(sp)
   8d90c:	d9400417 	ldw	r5,16(sp)
   8d910:	5813883a 	mov	r9,r11
   8d914:	2811883a 	mov	r8,r5
   8d918:	4005883a 	mov	r2,r8
   8d91c:	4807883a 	mov	r3,r9
   8d920:	dfc00f17 	ldw	ra,60(sp)
   8d924:	df000e17 	ldw	fp,56(sp)
   8d928:	ddc00d17 	ldw	r23,52(sp)
   8d92c:	dd800c17 	ldw	r22,48(sp)
   8d930:	dd400b17 	ldw	r21,44(sp)
   8d934:	dd000a17 	ldw	r20,40(sp)
   8d938:	dcc00917 	ldw	r19,36(sp)
   8d93c:	dc800817 	ldw	r18,32(sp)
   8d940:	dc400717 	ldw	r17,28(sp)
   8d944:	dc000617 	ldw	r16,24(sp)
   8d948:	dec01004 	addi	sp,sp,64
   8d94c:	f800283a 	ret
   8d950:	00bfffd4 	movui	r2,65535
   8d954:	11c06636 	bltu	r2,r7,8daf0 <__umoddi3+0x2f4>
   8d958:	00803fc4 	movi	r2,255
   8d95c:	11c12036 	bltu	r2,r7,8dde0 <__umoddi3+0x5e4>
   8d960:	000b883a 	mov	r5,zero
   8d964:	0005883a 	mov	r2,zero
   8d968:	3084d83a 	srl	r2,r6,r2
   8d96c:	01000274 	movhi	r4,9
   8d970:	210f5f04 	addi	r4,r4,15740
   8d974:	01c00804 	movi	r7,32
   8d978:	1105883a 	add	r2,r2,r4
   8d97c:	10c00003 	ldbu	r3,0(r2)
   8d980:	28c7883a 	add	r3,r5,r3
   8d984:	38e5c83a 	sub	r18,r7,r3
   8d988:	9000941e 	bne	r18,zero,8dbdc <__umoddi3+0x3e0>
   8d98c:	35405e36 	bltu	r6,r21,8db08 <__umoddi3+0x30c>
   8d990:	84c05d2e 	bgeu	r16,r19,8db08 <__umoddi3+0x30c>
   8d994:	8011883a 	mov	r8,r16
   8d998:	a813883a 	mov	r9,r21
   8d99c:	dc000415 	stw	r16,16(sp)
   8d9a0:	dd400515 	stw	r21,20(sp)
   8d9a4:	003fdc06 	br	8d918 <__umoddi3+0x11c>
   8d9a8:	00bfffd4 	movui	r2,65535
   8d9ac:	12004a36 	bltu	r2,r8,8dad8 <__umoddi3+0x2dc>
   8d9b0:	00803fc4 	movi	r2,255
   8d9b4:	12010d36 	bltu	r2,r8,8ddec <__umoddi3+0x5f0>
   8d9b8:	000b883a 	mov	r5,zero
   8d9bc:	0005883a 	mov	r2,zero
   8d9c0:	9884d83a 	srl	r2,r19,r2
   8d9c4:	01000274 	movhi	r4,9
   8d9c8:	210f5f04 	addi	r4,r4,15740
   8d9cc:	01800804 	movi	r6,32
   8d9d0:	1105883a 	add	r2,r2,r4
   8d9d4:	10c00003 	ldbu	r3,0(r2)
   8d9d8:	28c7883a 	add	r3,r5,r3
   8d9dc:	30c7c83a 	sub	r3,r6,r3
   8d9e0:	1800dc1e 	bne	r3,zero,8dd54 <__umoddi3+0x558>
   8d9e4:	002d883a 	mov	r22,zero
   8d9e8:	982ed43a 	srli	r23,r19,16
   8d9ec:	a809883a 	mov	r4,r21
   8d9f0:	9cbfffcc 	andi	r18,r19,65535
   8d9f4:	b80b883a 	mov	r5,r23
   8d9f8:	008f3280 	call	8f328 <__udivsi3>
   8d9fc:	100b883a 	mov	r5,r2
   8da00:	9009883a 	mov	r4,r18
   8da04:	008f3380 	call	8f338 <__mulsi3>
   8da08:	a809883a 	mov	r4,r21
   8da0c:	b80b883a 	mov	r5,r23
   8da10:	1023883a 	mov	r17,r2
   8da14:	008f3300 	call	8f330 <__umodsi3>
   8da18:	1004943a 	slli	r2,r2,16
   8da1c:	8006d43a 	srli	r3,r16,16
   8da20:	10c4b03a 	or	r2,r2,r3
   8da24:	1440032e 	bgeu	r2,r17,8da34 <__umoddi3+0x238>
   8da28:	14c5883a 	add	r2,r2,r19
   8da2c:	14c00136 	bltu	r2,r19,8da34 <__umoddi3+0x238>
   8da30:	14410236 	bltu	r2,r17,8de3c <__umoddi3+0x640>
   8da34:	1463c83a 	sub	r17,r2,r17
   8da38:	8809883a 	mov	r4,r17
   8da3c:	b80b883a 	mov	r5,r23
   8da40:	008f3280 	call	8f328 <__udivsi3>
   8da44:	9009883a 	mov	r4,r18
   8da48:	100b883a 	mov	r5,r2
   8da4c:	008f3380 	call	8f338 <__mulsi3>
   8da50:	8809883a 	mov	r4,r17
   8da54:	b80b883a 	mov	r5,r23
   8da58:	102b883a 	mov	r21,r2
   8da5c:	008f3300 	call	8f330 <__umodsi3>
   8da60:	1004943a 	slli	r2,r2,16
   8da64:	80ffffcc 	andi	r3,r16,65535
   8da68:	10c4b03a 	or	r2,r2,r3
   8da6c:	1540042e 	bgeu	r2,r21,8da80 <__umoddi3+0x284>
   8da70:	14c5883a 	add	r2,r2,r19
   8da74:	14c00236 	bltu	r2,r19,8da80 <__umoddi3+0x284>
   8da78:	1540012e 	bgeu	r2,r21,8da80 <__umoddi3+0x284>
   8da7c:	14c5883a 	add	r2,r2,r19
   8da80:	1545c83a 	sub	r2,r2,r21
   8da84:	1584d83a 	srl	r2,r2,r22
   8da88:	0013883a 	mov	r9,zero
   8da8c:	d8800415 	stw	r2,16(sp)
   8da90:	d8c00417 	ldw	r3,16(sp)
   8da94:	0005883a 	mov	r2,zero
   8da98:	d8800515 	stw	r2,20(sp)
   8da9c:	1811883a 	mov	r8,r3
   8daa0:	003f9d06 	br	8d918 <__umoddi3+0x11c>
   8daa4:	00804034 	movhi	r2,256
   8daa8:	10bfffc4 	addi	r2,r2,-1
   8daac:	14c0c636 	bltu	r2,r19,8ddc8 <__umoddi3+0x5cc>
   8dab0:	01400404 	movi	r5,16
   8dab4:	2805883a 	mov	r2,r5
   8dab8:	003f6c06 	br	8d86c <__umoddi3+0x70>
   8dabc:	01000044 	movi	r4,1
   8dac0:	000b883a 	mov	r5,zero
   8dac4:	008f3280 	call	8f328 <__udivsi3>
   8dac8:	1027883a 	mov	r19,r2
   8dacc:	00bfffd4 	movui	r2,65535
   8dad0:	14fff436 	bltu	r2,r19,8daa4 <__umoddi3+0x2a8>
   8dad4:	003f6106 	br	8d85c <__umoddi3+0x60>
   8dad8:	00804034 	movhi	r2,256
   8dadc:	10bfffc4 	addi	r2,r2,-1
   8dae0:	1200c536 	bltu	r2,r8,8ddf8 <__umoddi3+0x5fc>
   8dae4:	01400404 	movi	r5,16
   8dae8:	2805883a 	mov	r2,r5
   8daec:	003fb406 	br	8d9c0 <__umoddi3+0x1c4>
   8daf0:	00804034 	movhi	r2,256
   8daf4:	10bfffc4 	addi	r2,r2,-1
   8daf8:	11c0c236 	bltu	r2,r7,8de04 <__umoddi3+0x608>
   8dafc:	01400404 	movi	r5,16
   8db00:	2805883a 	mov	r2,r5
   8db04:	003f9806 	br	8d968 <__umoddi3+0x16c>
   8db08:	84c9c83a 	sub	r4,r16,r19
   8db0c:	8105803a 	cmpltu	r2,r16,r4
   8db10:	a987c83a 	sub	r3,r21,r6
   8db14:	18abc83a 	sub	r21,r3,r2
   8db18:	2021883a 	mov	r16,r4
   8db1c:	003f9d06 	br	8d994 <__umoddi3+0x198>
   8db20:	9ca6983a 	sll	r19,r19,r18
   8db24:	3485c83a 	sub	r2,r6,r18
   8db28:	a8a2d83a 	srl	r17,r21,r2
   8db2c:	982ed43a 	srli	r23,r19,16
   8db30:	ac86983a 	sll	r3,r21,r18
   8db34:	8084d83a 	srl	r2,r16,r2
   8db38:	8809883a 	mov	r4,r17
   8db3c:	b80b883a 	mov	r5,r23
   8db40:	18b8b03a 	or	fp,r3,r2
   8db44:	9d3fffcc 	andi	r20,r19,65535
   8db48:	008f3280 	call	8f328 <__udivsi3>
   8db4c:	100b883a 	mov	r5,r2
   8db50:	a009883a 	mov	r4,r20
   8db54:	008f3380 	call	8f338 <__mulsi3>
   8db58:	8809883a 	mov	r4,r17
   8db5c:	b80b883a 	mov	r5,r23
   8db60:	102b883a 	mov	r21,r2
   8db64:	008f3300 	call	8f330 <__umodsi3>
   8db68:	1004943a 	slli	r2,r2,16
   8db6c:	e006d43a 	srli	r3,fp,16
   8db70:	902d883a 	mov	r22,r18
   8db74:	10c4b03a 	or	r2,r2,r3
   8db78:	1540022e 	bgeu	r2,r21,8db84 <__umoddi3+0x388>
   8db7c:	14c5883a 	add	r2,r2,r19
   8db80:	14c0ab2e 	bgeu	r2,r19,8de30 <__umoddi3+0x634>
   8db84:	1563c83a 	sub	r17,r2,r21
   8db88:	8809883a 	mov	r4,r17
   8db8c:	b80b883a 	mov	r5,r23
   8db90:	008f3280 	call	8f328 <__udivsi3>
   8db94:	100b883a 	mov	r5,r2
   8db98:	a009883a 	mov	r4,r20
   8db9c:	008f3380 	call	8f338 <__mulsi3>
   8dba0:	8809883a 	mov	r4,r17
   8dba4:	b80b883a 	mov	r5,r23
   8dba8:	102b883a 	mov	r21,r2
   8dbac:	008f3300 	call	8f330 <__umodsi3>
   8dbb0:	1004943a 	slli	r2,r2,16
   8dbb4:	e0ffffcc 	andi	r3,fp,65535
   8dbb8:	10c4b03a 	or	r2,r2,r3
   8dbbc:	1540042e 	bgeu	r2,r21,8dbd0 <__umoddi3+0x3d4>
   8dbc0:	14c5883a 	add	r2,r2,r19
   8dbc4:	14c00236 	bltu	r2,r19,8dbd0 <__umoddi3+0x3d4>
   8dbc8:	1540012e 	bgeu	r2,r21,8dbd0 <__umoddi3+0x3d4>
   8dbcc:	14c5883a 	add	r2,r2,r19
   8dbd0:	84a0983a 	sll	r16,r16,r18
   8dbd4:	156bc83a 	sub	r21,r2,r21
   8dbd8:	003f3106 	br	8d8a0 <__umoddi3+0xa4>
   8dbdc:	3c8fc83a 	sub	r7,r7,r18
   8dbe0:	3486983a 	sll	r3,r6,r18
   8dbe4:	99c4d83a 	srl	r2,r19,r7
   8dbe8:	a9e2d83a 	srl	r17,r21,r7
   8dbec:	ac8c983a 	sll	r6,r21,r18
   8dbf0:	18acb03a 	or	r22,r3,r2
   8dbf4:	b02ed43a 	srli	r23,r22,16
   8dbf8:	81c4d83a 	srl	r2,r16,r7
   8dbfc:	8809883a 	mov	r4,r17
   8dc00:	b80b883a 	mov	r5,r23
   8dc04:	308cb03a 	or	r6,r6,r2
   8dc08:	d9c00315 	stw	r7,12(sp)
   8dc0c:	d9800215 	stw	r6,8(sp)
   8dc10:	b53fffcc 	andi	r20,r22,65535
   8dc14:	008f3280 	call	8f328 <__udivsi3>
   8dc18:	100b883a 	mov	r5,r2
   8dc1c:	a009883a 	mov	r4,r20
   8dc20:	1039883a 	mov	fp,r2
   8dc24:	008f3380 	call	8f338 <__mulsi3>
   8dc28:	8809883a 	mov	r4,r17
   8dc2c:	b80b883a 	mov	r5,r23
   8dc30:	102b883a 	mov	r21,r2
   8dc34:	008f3300 	call	8f330 <__umodsi3>
   8dc38:	d9000217 	ldw	r4,8(sp)
   8dc3c:	1004943a 	slli	r2,r2,16
   8dc40:	9ca6983a 	sll	r19,r19,r18
   8dc44:	2006d43a 	srli	r3,r4,16
   8dc48:	84a0983a 	sll	r16,r16,r18
   8dc4c:	dcc00015 	stw	r19,0(sp)
   8dc50:	10c4b03a 	or	r2,r2,r3
   8dc54:	dc000115 	stw	r16,4(sp)
   8dc58:	1540032e 	bgeu	r2,r21,8dc68 <__umoddi3+0x46c>
   8dc5c:	1585883a 	add	r2,r2,r22
   8dc60:	e73fffc4 	addi	fp,fp,-1
   8dc64:	15806e2e 	bgeu	r2,r22,8de20 <__umoddi3+0x624>
   8dc68:	1563c83a 	sub	r17,r2,r21
   8dc6c:	8809883a 	mov	r4,r17
   8dc70:	b80b883a 	mov	r5,r23
   8dc74:	008f3280 	call	8f328 <__udivsi3>
   8dc78:	100b883a 	mov	r5,r2
   8dc7c:	a009883a 	mov	r4,r20
   8dc80:	1021883a 	mov	r16,r2
   8dc84:	008f3380 	call	8f338 <__mulsi3>
   8dc88:	b80b883a 	mov	r5,r23
   8dc8c:	8809883a 	mov	r4,r17
   8dc90:	1029883a 	mov	r20,r2
   8dc94:	008f3300 	call	8f330 <__umodsi3>
   8dc98:	d9400217 	ldw	r5,8(sp)
   8dc9c:	1004943a 	slli	r2,r2,16
   8dca0:	28ffffcc 	andi	r3,r5,65535
   8dca4:	10c4b03a 	or	r2,r2,r3
   8dca8:	1500032e 	bgeu	r2,r20,8dcb8 <__umoddi3+0x4bc>
   8dcac:	1585883a 	add	r2,r2,r22
   8dcb0:	843fffc4 	addi	r16,r16,-1
   8dcb4:	1580562e 	bgeu	r2,r22,8de10 <__umoddi3+0x614>
   8dcb8:	d9800017 	ldw	r6,0(sp)
   8dcbc:	e022943a 	slli	r17,fp,16
   8dcc0:	302ed43a 	srli	r23,r6,16
   8dcc4:	8462b03a 	or	r17,r16,r17
   8dcc8:	34ffffcc 	andi	r19,r6,65535
   8dccc:	882ad43a 	srli	r21,r17,16
   8dcd0:	8c7fffcc 	andi	r17,r17,65535
   8dcd4:	8809883a 	mov	r4,r17
   8dcd8:	980b883a 	mov	r5,r19
   8dcdc:	1521c83a 	sub	r16,r2,r20
   8dce0:	008f3380 	call	8f338 <__mulsi3>
   8dce4:	8809883a 	mov	r4,r17
   8dce8:	b80b883a 	mov	r5,r23
   8dcec:	1029883a 	mov	r20,r2
   8dcf0:	008f3380 	call	8f338 <__mulsi3>
   8dcf4:	980b883a 	mov	r5,r19
   8dcf8:	a809883a 	mov	r4,r21
   8dcfc:	1023883a 	mov	r17,r2
   8dd00:	008f3380 	call	8f338 <__mulsi3>
   8dd04:	a809883a 	mov	r4,r21
   8dd08:	b80b883a 	mov	r5,r23
   8dd0c:	1027883a 	mov	r19,r2
   8dd10:	008f3380 	call	8f338 <__mulsi3>
   8dd14:	100b883a 	mov	r5,r2
   8dd18:	a004d43a 	srli	r2,r20,16
   8dd1c:	8ce3883a 	add	r17,r17,r19
   8dd20:	1449883a 	add	r4,r2,r17
   8dd24:	24c0022e 	bgeu	r4,r19,8dd30 <__umoddi3+0x534>
   8dd28:	00800074 	movhi	r2,1
   8dd2c:	288b883a 	add	r5,r5,r2
   8dd30:	2004d43a 	srli	r2,r4,16
   8dd34:	2008943a 	slli	r4,r4,16
   8dd38:	a0ffffcc 	andi	r3,r20,65535
   8dd3c:	288d883a 	add	r6,r5,r2
   8dd40:	20c9883a 	add	r4,r4,r3
   8dd44:	81800b36 	bltu	r16,r6,8dd74 <__umoddi3+0x578>
   8dd48:	81804026 	beq	r16,r6,8de4c <__umoddi3+0x650>
   8dd4c:	818dc83a 	sub	r6,r16,r6
   8dd50:	00000f06 	br	8dd90 <__umoddi3+0x594>
   8dd54:	30c5c83a 	sub	r2,r6,r3
   8dd58:	182d883a 	mov	r22,r3
   8dd5c:	8084d83a 	srl	r2,r16,r2
   8dd60:	a8c6983a 	sll	r3,r21,r3
   8dd64:	9da6983a 	sll	r19,r19,r22
   8dd68:	85a0983a 	sll	r16,r16,r22
   8dd6c:	18aab03a 	or	r21,r3,r2
   8dd70:	003f1d06 	br	8d9e8 <__umoddi3+0x1ec>
   8dd74:	d8c00017 	ldw	r3,0(sp)
   8dd78:	20c5c83a 	sub	r2,r4,r3
   8dd7c:	2089803a 	cmpltu	r4,r4,r2
   8dd80:	3587c83a 	sub	r3,r6,r22
   8dd84:	1907c83a 	sub	r3,r3,r4
   8dd88:	80cdc83a 	sub	r6,r16,r3
   8dd8c:	1009883a 	mov	r4,r2
   8dd90:	d9400117 	ldw	r5,4(sp)
   8dd94:	2905c83a 	sub	r2,r5,r4
   8dd98:	2887803a 	cmpltu	r3,r5,r2
   8dd9c:	30c7c83a 	sub	r3,r6,r3
   8dda0:	d9800317 	ldw	r6,12(sp)
   8dda4:	1484d83a 	srl	r2,r2,r18
   8dda8:	1988983a 	sll	r4,r3,r6
   8ddac:	1c86d83a 	srl	r3,r3,r18
   8ddb0:	2088b03a 	or	r4,r4,r2
   8ddb4:	2011883a 	mov	r8,r4
   8ddb8:	1813883a 	mov	r9,r3
   8ddbc:	d9000415 	stw	r4,16(sp)
   8ddc0:	d8c00515 	stw	r3,20(sp)
   8ddc4:	003ed406 	br	8d918 <__umoddi3+0x11c>
   8ddc8:	01400604 	movi	r5,24
   8ddcc:	2805883a 	mov	r2,r5
   8ddd0:	003ea606 	br	8d86c <__umoddi3+0x70>
   8ddd4:	01400204 	movi	r5,8
   8ddd8:	2805883a 	mov	r2,r5
   8dddc:	003ea306 	br	8d86c <__umoddi3+0x70>
   8dde0:	01400204 	movi	r5,8
   8dde4:	2805883a 	mov	r2,r5
   8dde8:	003edf06 	br	8d968 <__umoddi3+0x16c>
   8ddec:	01400204 	movi	r5,8
   8ddf0:	2805883a 	mov	r2,r5
   8ddf4:	003ef206 	br	8d9c0 <__umoddi3+0x1c4>
   8ddf8:	01400604 	movi	r5,24
   8ddfc:	2805883a 	mov	r2,r5
   8de00:	003eef06 	br	8d9c0 <__umoddi3+0x1c4>
   8de04:	01400604 	movi	r5,24
   8de08:	2805883a 	mov	r2,r5
   8de0c:	003ed606 	br	8d968 <__umoddi3+0x16c>
   8de10:	153fa92e 	bgeu	r2,r20,8dcb8 <__umoddi3+0x4bc>
   8de14:	843fffc4 	addi	r16,r16,-1
   8de18:	1585883a 	add	r2,r2,r22
   8de1c:	003fa606 	br	8dcb8 <__umoddi3+0x4bc>
   8de20:	157f912e 	bgeu	r2,r21,8dc68 <__umoddi3+0x46c>
   8de24:	e73fffc4 	addi	fp,fp,-1
   8de28:	1585883a 	add	r2,r2,r22
   8de2c:	003f8e06 	br	8dc68 <__umoddi3+0x46c>
   8de30:	157f542e 	bgeu	r2,r21,8db84 <__umoddi3+0x388>
   8de34:	14c5883a 	add	r2,r2,r19
   8de38:	003f5206 	br	8db84 <__umoddi3+0x388>
   8de3c:	14c5883a 	add	r2,r2,r19
   8de40:	003efc06 	br	8da34 <__umoddi3+0x238>
   8de44:	14c5883a 	add	r2,r2,r19
   8de48:	003ea606 	br	8d8e4 <__umoddi3+0xe8>
   8de4c:	d8800117 	ldw	r2,4(sp)
   8de50:	113fc836 	bltu	r2,r4,8dd74 <__umoddi3+0x578>
   8de54:	000d883a 	mov	r6,zero
   8de58:	003fcd06 	br	8dd90 <__umoddi3+0x594>

0008de5c <__nesf2>:
   8de5c:	defff304 	addi	sp,sp,-52
   8de60:	dc400b15 	stw	r17,44(sp)
   8de64:	dc400204 	addi	r17,sp,8
   8de68:	dc000a15 	stw	r16,40(sp)
   8de6c:	d9000015 	stw	r4,0(sp)
   8de70:	d9400115 	stw	r5,4(sp)
   8de74:	d809883a 	mov	r4,sp
   8de78:	880b883a 	mov	r5,r17
   8de7c:	dc000604 	addi	r16,sp,24
   8de80:	dfc00c15 	stw	ra,48(sp)
   8de84:	008f3f00 	call	8f3f0 <__unpack_f>
   8de88:	d9000104 	addi	r4,sp,4
   8de8c:	800b883a 	mov	r5,r16
   8de90:	008f3f00 	call	8f3f0 <__unpack_f>
   8de94:	d8800217 	ldw	r2,8(sp)
   8de98:	00c00044 	movi	r3,1
   8de9c:	180d883a 	mov	r6,r3
   8dea0:	1880062e 	bgeu	r3,r2,8debc <__nesf2+0x60>
   8dea4:	d8800617 	ldw	r2,24(sp)
   8dea8:	8809883a 	mov	r4,r17
   8deac:	800b883a 	mov	r5,r16
   8deb0:	1880022e 	bgeu	r3,r2,8debc <__nesf2+0x60>
   8deb4:	008f4b80 	call	8f4b8 <__fpcmp_parts_f>
   8deb8:	100d883a 	mov	r6,r2
   8debc:	3005883a 	mov	r2,r6
   8dec0:	dfc00c17 	ldw	ra,48(sp)
   8dec4:	dc400b17 	ldw	r17,44(sp)
   8dec8:	dc000a17 	ldw	r16,40(sp)
   8decc:	dec00d04 	addi	sp,sp,52
   8ded0:	f800283a 	ret

0008ded4 <__gtsf2>:
   8ded4:	defff304 	addi	sp,sp,-52
   8ded8:	dc400b15 	stw	r17,44(sp)
   8dedc:	dc400204 	addi	r17,sp,8
   8dee0:	dc000a15 	stw	r16,40(sp)
   8dee4:	d9000015 	stw	r4,0(sp)
   8dee8:	d9400115 	stw	r5,4(sp)
   8deec:	d809883a 	mov	r4,sp
   8def0:	880b883a 	mov	r5,r17
   8def4:	dc000604 	addi	r16,sp,24
   8def8:	dfc00c15 	stw	ra,48(sp)
   8defc:	008f3f00 	call	8f3f0 <__unpack_f>
   8df00:	d9000104 	addi	r4,sp,4
   8df04:	800b883a 	mov	r5,r16
   8df08:	008f3f00 	call	8f3f0 <__unpack_f>
   8df0c:	d8800217 	ldw	r2,8(sp)
   8df10:	00c00044 	movi	r3,1
   8df14:	01bfffc4 	movi	r6,-1
   8df18:	1880062e 	bgeu	r3,r2,8df34 <__gtsf2+0x60>
   8df1c:	d8800617 	ldw	r2,24(sp)
   8df20:	8809883a 	mov	r4,r17
   8df24:	800b883a 	mov	r5,r16
   8df28:	1880022e 	bgeu	r3,r2,8df34 <__gtsf2+0x60>
   8df2c:	008f4b80 	call	8f4b8 <__fpcmp_parts_f>
   8df30:	100d883a 	mov	r6,r2
   8df34:	3005883a 	mov	r2,r6
   8df38:	dfc00c17 	ldw	ra,48(sp)
   8df3c:	dc400b17 	ldw	r17,44(sp)
   8df40:	dc000a17 	ldw	r16,40(sp)
   8df44:	dec00d04 	addi	sp,sp,52
   8df48:	f800283a 	ret

0008df4c <__ltsf2>:
   8df4c:	defff304 	addi	sp,sp,-52
   8df50:	dc400b15 	stw	r17,44(sp)
   8df54:	dc400204 	addi	r17,sp,8
   8df58:	dc000a15 	stw	r16,40(sp)
   8df5c:	d9000015 	stw	r4,0(sp)
   8df60:	d9400115 	stw	r5,4(sp)
   8df64:	d809883a 	mov	r4,sp
   8df68:	880b883a 	mov	r5,r17
   8df6c:	dc000604 	addi	r16,sp,24
   8df70:	dfc00c15 	stw	ra,48(sp)
   8df74:	008f3f00 	call	8f3f0 <__unpack_f>
   8df78:	d9000104 	addi	r4,sp,4
   8df7c:	800b883a 	mov	r5,r16
   8df80:	008f3f00 	call	8f3f0 <__unpack_f>
   8df84:	d8800217 	ldw	r2,8(sp)
   8df88:	00c00044 	movi	r3,1
   8df8c:	180d883a 	mov	r6,r3
   8df90:	1880062e 	bgeu	r3,r2,8dfac <__ltsf2+0x60>
   8df94:	d8800617 	ldw	r2,24(sp)
   8df98:	8809883a 	mov	r4,r17
   8df9c:	800b883a 	mov	r5,r16
   8dfa0:	1880022e 	bgeu	r3,r2,8dfac <__ltsf2+0x60>
   8dfa4:	008f4b80 	call	8f4b8 <__fpcmp_parts_f>
   8dfa8:	100d883a 	mov	r6,r2
   8dfac:	3005883a 	mov	r2,r6
   8dfb0:	dfc00c17 	ldw	ra,48(sp)
   8dfb4:	dc400b17 	ldw	r17,44(sp)
   8dfb8:	dc000a17 	ldw	r16,40(sp)
   8dfbc:	dec00d04 	addi	sp,sp,52
   8dfc0:	f800283a 	ret

0008dfc4 <_fpadd_parts>:
   8dfc4:	defff804 	addi	sp,sp,-32
   8dfc8:	dcc00315 	stw	r19,12(sp)
   8dfcc:	2027883a 	mov	r19,r4
   8dfd0:	21000017 	ldw	r4,0(r4)
   8dfd4:	00c00044 	movi	r3,1
   8dfd8:	dd400515 	stw	r21,20(sp)
   8dfdc:	dd000415 	stw	r20,16(sp)
   8dfe0:	ddc00715 	stw	r23,28(sp)
   8dfe4:	dd800615 	stw	r22,24(sp)
   8dfe8:	dc800215 	stw	r18,8(sp)
   8dfec:	dc400115 	stw	r17,4(sp)
   8dff0:	dc000015 	stw	r16,0(sp)
   8dff4:	282b883a 	mov	r21,r5
   8dff8:	3029883a 	mov	r20,r6
   8dffc:	1900632e 	bgeu	r3,r4,8e18c <_fpadd_parts+0x1c8>
   8e000:	28800017 	ldw	r2,0(r5)
   8e004:	1880812e 	bgeu	r3,r2,8e20c <_fpadd_parts+0x248>
   8e008:	00c00104 	movi	r3,4
   8e00c:	20c0dc26 	beq	r4,r3,8e380 <_fpadd_parts+0x3bc>
   8e010:	10c07e26 	beq	r2,r3,8e20c <_fpadd_parts+0x248>
   8e014:	00c00084 	movi	r3,2
   8e018:	10c06726 	beq	r2,r3,8e1b8 <_fpadd_parts+0x1f4>
   8e01c:	20c07b26 	beq	r4,r3,8e20c <_fpadd_parts+0x248>
   8e020:	9dc00217 	ldw	r23,8(r19)
   8e024:	28c00217 	ldw	r3,8(r5)
   8e028:	9c400317 	ldw	r17,12(r19)
   8e02c:	2bc00317 	ldw	r15,12(r5)
   8e030:	b8cdc83a 	sub	r6,r23,r3
   8e034:	9c800417 	ldw	r18,16(r19)
   8e038:	2c000417 	ldw	r16,16(r5)
   8e03c:	3009883a 	mov	r4,r6
   8e040:	30009716 	blt	r6,zero,8e2a0 <_fpadd_parts+0x2dc>
   8e044:	00800fc4 	movi	r2,63
   8e048:	11806b16 	blt	r2,r6,8e1f8 <_fpadd_parts+0x234>
   8e04c:	0100a40e 	bge	zero,r4,8e2e0 <_fpadd_parts+0x31c>
   8e050:	35bff804 	addi	r22,r6,-32
   8e054:	b000bc16 	blt	r22,zero,8e348 <_fpadd_parts+0x384>
   8e058:	8596d83a 	srl	r11,r16,r22
   8e05c:	0019883a 	mov	r12,zero
   8e060:	0013883a 	mov	r9,zero
   8e064:	01000044 	movi	r4,1
   8e068:	0015883a 	mov	r10,zero
   8e06c:	b000be16 	blt	r22,zero,8e368 <_fpadd_parts+0x3a4>
   8e070:	2590983a 	sll	r8,r4,r22
   8e074:	000f883a 	mov	r7,zero
   8e078:	00bfffc4 	movi	r2,-1
   8e07c:	3889883a 	add	r4,r7,r2
   8e080:	408b883a 	add	r5,r8,r2
   8e084:	21cd803a 	cmpltu	r6,r4,r7
   8e088:	314b883a 	add	r5,r6,r5
   8e08c:	7904703a 	and	r2,r15,r4
   8e090:	8146703a 	and	r3,r16,r5
   8e094:	10c4b03a 	or	r2,r2,r3
   8e098:	10000226 	beq	r2,zero,8e0a4 <_fpadd_parts+0xe0>
   8e09c:	02400044 	movi	r9,1
   8e0a0:	0015883a 	mov	r10,zero
   8e0a4:	5a5eb03a 	or	r15,r11,r9
   8e0a8:	62a0b03a 	or	r16,r12,r10
   8e0ac:	99400117 	ldw	r5,4(r19)
   8e0b0:	a8800117 	ldw	r2,4(r21)
   8e0b4:	28806e26 	beq	r5,r2,8e270 <_fpadd_parts+0x2ac>
   8e0b8:	28006626 	beq	r5,zero,8e254 <_fpadd_parts+0x290>
   8e0bc:	7c45c83a 	sub	r2,r15,r17
   8e0c0:	7889803a 	cmpltu	r4,r15,r2
   8e0c4:	8487c83a 	sub	r3,r16,r18
   8e0c8:	1909c83a 	sub	r4,r3,r4
   8e0cc:	100d883a 	mov	r6,r2
   8e0d0:	200f883a 	mov	r7,r4
   8e0d4:	38007716 	blt	r7,zero,8e2b4 <_fpadd_parts+0x2f0>
   8e0d8:	a5c00215 	stw	r23,8(r20)
   8e0dc:	a1c00415 	stw	r7,16(r20)
   8e0e0:	a0000115 	stw	zero,4(r20)
   8e0e4:	a1800315 	stw	r6,12(r20)
   8e0e8:	a2000317 	ldw	r8,12(r20)
   8e0ec:	a2400417 	ldw	r9,16(r20)
   8e0f0:	00bfffc4 	movi	r2,-1
   8e0f4:	408b883a 	add	r5,r8,r2
   8e0f8:	2a09803a 	cmpltu	r4,r5,r8
   8e0fc:	488d883a 	add	r6,r9,r2
   8e100:	01c40034 	movhi	r7,4096
   8e104:	39ffffc4 	addi	r7,r7,-1
   8e108:	218d883a 	add	r6,r4,r6
   8e10c:	39801736 	bltu	r7,r6,8e16c <_fpadd_parts+0x1a8>
   8e110:	31c06526 	beq	r6,r7,8e2a8 <_fpadd_parts+0x2e4>
   8e114:	a3000217 	ldw	r12,8(r20)
   8e118:	4209883a 	add	r4,r8,r8
   8e11c:	00bfffc4 	movi	r2,-1
   8e120:	220f803a 	cmpltu	r7,r4,r8
   8e124:	4a4b883a 	add	r5,r9,r9
   8e128:	394f883a 	add	r7,r7,r5
   8e12c:	2095883a 	add	r10,r4,r2
   8e130:	3897883a 	add	r11,r7,r2
   8e134:	510d803a 	cmpltu	r6,r10,r4
   8e138:	6099883a 	add	r12,r12,r2
   8e13c:	32d7883a 	add	r11,r6,r11
   8e140:	00840034 	movhi	r2,4096
   8e144:	10bfffc4 	addi	r2,r2,-1
   8e148:	2011883a 	mov	r8,r4
   8e14c:	3813883a 	mov	r9,r7
   8e150:	a1000315 	stw	r4,12(r20)
   8e154:	a1c00415 	stw	r7,16(r20)
   8e158:	a3000215 	stw	r12,8(r20)
   8e15c:	12c00336 	bltu	r2,r11,8e16c <_fpadd_parts+0x1a8>
   8e160:	58bfed1e 	bne	r11,r2,8e118 <_fpadd_parts+0x154>
   8e164:	00bfff84 	movi	r2,-2
   8e168:	12bfeb2e 	bgeu	r2,r10,8e118 <_fpadd_parts+0x154>
   8e16c:	a2800417 	ldw	r10,16(r20)
   8e170:	008000c4 	movi	r2,3
   8e174:	00c80034 	movhi	r3,8192
   8e178:	18ffffc4 	addi	r3,r3,-1
   8e17c:	a2400317 	ldw	r9,12(r20)
   8e180:	a0800015 	stw	r2,0(r20)
   8e184:	1a802336 	bltu	r3,r10,8e214 <_fpadd_parts+0x250>
   8e188:	a027883a 	mov	r19,r20
   8e18c:	9805883a 	mov	r2,r19
   8e190:	ddc00717 	ldw	r23,28(sp)
   8e194:	dd800617 	ldw	r22,24(sp)
   8e198:	dd400517 	ldw	r21,20(sp)
   8e19c:	dd000417 	ldw	r20,16(sp)
   8e1a0:	dcc00317 	ldw	r19,12(sp)
   8e1a4:	dc800217 	ldw	r18,8(sp)
   8e1a8:	dc400117 	ldw	r17,4(sp)
   8e1ac:	dc000017 	ldw	r16,0(sp)
   8e1b0:	dec00804 	addi	sp,sp,32
   8e1b4:	f800283a 	ret
   8e1b8:	20fff41e 	bne	r4,r3,8e18c <_fpadd_parts+0x1c8>
   8e1bc:	31000015 	stw	r4,0(r6)
   8e1c0:	98800117 	ldw	r2,4(r19)
   8e1c4:	30800115 	stw	r2,4(r6)
   8e1c8:	98c00217 	ldw	r3,8(r19)
   8e1cc:	30c00215 	stw	r3,8(r6)
   8e1d0:	98800317 	ldw	r2,12(r19)
   8e1d4:	30800315 	stw	r2,12(r6)
   8e1d8:	98c00417 	ldw	r3,16(r19)
   8e1dc:	30c00415 	stw	r3,16(r6)
   8e1e0:	98800117 	ldw	r2,4(r19)
   8e1e4:	28c00117 	ldw	r3,4(r5)
   8e1e8:	3027883a 	mov	r19,r6
   8e1ec:	10c4703a 	and	r2,r2,r3
   8e1f0:	30800115 	stw	r2,4(r6)
   8e1f4:	003fe506 	br	8e18c <_fpadd_parts+0x1c8>
   8e1f8:	1dc02616 	blt	r3,r23,8e294 <_fpadd_parts+0x2d0>
   8e1fc:	0023883a 	mov	r17,zero
   8e200:	182f883a 	mov	r23,r3
   8e204:	0025883a 	mov	r18,zero
   8e208:	003fa806 	br	8e0ac <_fpadd_parts+0xe8>
   8e20c:	a827883a 	mov	r19,r21
   8e210:	003fde06 	br	8e18c <_fpadd_parts+0x1c8>
   8e214:	01800044 	movi	r6,1
   8e218:	500497fa 	slli	r2,r10,31
   8e21c:	4808d07a 	srli	r4,r9,1
   8e220:	518ad83a 	srl	r5,r10,r6
   8e224:	a2000217 	ldw	r8,8(r20)
   8e228:	1108b03a 	or	r4,r2,r4
   8e22c:	0007883a 	mov	r3,zero
   8e230:	4984703a 	and	r2,r9,r6
   8e234:	208cb03a 	or	r6,r4,r2
   8e238:	28ceb03a 	or	r7,r5,r3
   8e23c:	42000044 	addi	r8,r8,1
   8e240:	a027883a 	mov	r19,r20
   8e244:	a1c00415 	stw	r7,16(r20)
   8e248:	a2000215 	stw	r8,8(r20)
   8e24c:	a1800315 	stw	r6,12(r20)
   8e250:	003fce06 	br	8e18c <_fpadd_parts+0x1c8>
   8e254:	8bc5c83a 	sub	r2,r17,r15
   8e258:	8889803a 	cmpltu	r4,r17,r2
   8e25c:	9407c83a 	sub	r3,r18,r16
   8e260:	1909c83a 	sub	r4,r3,r4
   8e264:	100d883a 	mov	r6,r2
   8e268:	200f883a 	mov	r7,r4
   8e26c:	003f9906 	br	8e0d4 <_fpadd_parts+0x110>
   8e270:	7c45883a 	add	r2,r15,r17
   8e274:	13c9803a 	cmpltu	r4,r2,r15
   8e278:	8487883a 	add	r3,r16,r18
   8e27c:	20c9883a 	add	r4,r4,r3
   8e280:	a1400115 	stw	r5,4(r20)
   8e284:	a5c00215 	stw	r23,8(r20)
   8e288:	a0800315 	stw	r2,12(r20)
   8e28c:	a1000415 	stw	r4,16(r20)
   8e290:	003fb606 	br	8e16c <_fpadd_parts+0x1a8>
   8e294:	001f883a 	mov	r15,zero
   8e298:	0021883a 	mov	r16,zero
   8e29c:	003f8306 	br	8e0ac <_fpadd_parts+0xe8>
   8e2a0:	018dc83a 	sub	r6,zero,r6
   8e2a4:	003f6706 	br	8e044 <_fpadd_parts+0x80>
   8e2a8:	00bfff84 	movi	r2,-2
   8e2ac:	117faf36 	bltu	r2,r5,8e16c <_fpadd_parts+0x1a8>
   8e2b0:	003f9806 	br	8e114 <_fpadd_parts+0x150>
   8e2b4:	0005883a 	mov	r2,zero
   8e2b8:	1189c83a 	sub	r4,r2,r6
   8e2bc:	1105803a 	cmpltu	r2,r2,r4
   8e2c0:	01cbc83a 	sub	r5,zero,r7
   8e2c4:	2885c83a 	sub	r2,r5,r2
   8e2c8:	01800044 	movi	r6,1
   8e2cc:	a1800115 	stw	r6,4(r20)
   8e2d0:	a5c00215 	stw	r23,8(r20)
   8e2d4:	a1000315 	stw	r4,12(r20)
   8e2d8:	a0800415 	stw	r2,16(r20)
   8e2dc:	003f8206 	br	8e0e8 <_fpadd_parts+0x124>
   8e2e0:	203f7226 	beq	r4,zero,8e0ac <_fpadd_parts+0xe8>
   8e2e4:	35bff804 	addi	r22,r6,-32
   8e2e8:	b9af883a 	add	r23,r23,r6
   8e2ec:	b0003116 	blt	r22,zero,8e3b4 <_fpadd_parts+0x3f0>
   8e2f0:	959ad83a 	srl	r13,r18,r22
   8e2f4:	001d883a 	mov	r14,zero
   8e2f8:	000f883a 	mov	r7,zero
   8e2fc:	01000044 	movi	r4,1
   8e300:	0011883a 	mov	r8,zero
   8e304:	b0002516 	blt	r22,zero,8e39c <_fpadd_parts+0x3d8>
   8e308:	2594983a 	sll	r10,r4,r22
   8e30c:	0013883a 	mov	r9,zero
   8e310:	00bfffc4 	movi	r2,-1
   8e314:	4889883a 	add	r4,r9,r2
   8e318:	508b883a 	add	r5,r10,r2
   8e31c:	224d803a 	cmpltu	r6,r4,r9
   8e320:	314b883a 	add	r5,r6,r5
   8e324:	8904703a 	and	r2,r17,r4
   8e328:	9146703a 	and	r3,r18,r5
   8e32c:	10c4b03a 	or	r2,r2,r3
   8e330:	10000226 	beq	r2,zero,8e33c <_fpadd_parts+0x378>
   8e334:	01c00044 	movi	r7,1
   8e338:	0011883a 	mov	r8,zero
   8e33c:	69e2b03a 	or	r17,r13,r7
   8e340:	7224b03a 	or	r18,r14,r8
   8e344:	003f5906 	br	8e0ac <_fpadd_parts+0xe8>
   8e348:	8407883a 	add	r3,r16,r16
   8e34c:	008007c4 	movi	r2,31
   8e350:	1185c83a 	sub	r2,r2,r6
   8e354:	1886983a 	sll	r3,r3,r2
   8e358:	7996d83a 	srl	r11,r15,r6
   8e35c:	8198d83a 	srl	r12,r16,r6
   8e360:	1ad6b03a 	or	r11,r3,r11
   8e364:	003f3e06 	br	8e060 <_fpadd_parts+0x9c>
   8e368:	2006d07a 	srli	r3,r4,1
   8e36c:	008007c4 	movi	r2,31
   8e370:	1185c83a 	sub	r2,r2,r6
   8e374:	1890d83a 	srl	r8,r3,r2
   8e378:	218e983a 	sll	r7,r4,r6
   8e37c:	003f3e06 	br	8e078 <_fpadd_parts+0xb4>
   8e380:	113f821e 	bne	r2,r4,8e18c <_fpadd_parts+0x1c8>
   8e384:	28c00117 	ldw	r3,4(r5)
   8e388:	98800117 	ldw	r2,4(r19)
   8e38c:	10ff7f26 	beq	r2,r3,8e18c <_fpadd_parts+0x1c8>
   8e390:	04c00274 	movhi	r19,9
   8e394:	9ccf5a04 	addi	r19,r19,15720
   8e398:	003f7c06 	br	8e18c <_fpadd_parts+0x1c8>
   8e39c:	2006d07a 	srli	r3,r4,1
   8e3a0:	008007c4 	movi	r2,31
   8e3a4:	1185c83a 	sub	r2,r2,r6
   8e3a8:	1894d83a 	srl	r10,r3,r2
   8e3ac:	2192983a 	sll	r9,r4,r6
   8e3b0:	003fd706 	br	8e310 <_fpadd_parts+0x34c>
   8e3b4:	9487883a 	add	r3,r18,r18
   8e3b8:	008007c4 	movi	r2,31
   8e3bc:	1185c83a 	sub	r2,r2,r6
   8e3c0:	1886983a 	sll	r3,r3,r2
   8e3c4:	899ad83a 	srl	r13,r17,r6
   8e3c8:	919cd83a 	srl	r14,r18,r6
   8e3cc:	1b5ab03a 	or	r13,r3,r13
   8e3d0:	003fc906 	br	8e2f8 <_fpadd_parts+0x334>

0008e3d4 <__subdf3>:
   8e3d4:	deffea04 	addi	sp,sp,-88
   8e3d8:	dcc01415 	stw	r19,80(sp)
   8e3dc:	dcc00404 	addi	r19,sp,16
   8e3e0:	2011883a 	mov	r8,r4
   8e3e4:	2813883a 	mov	r9,r5
   8e3e8:	dc401315 	stw	r17,76(sp)
   8e3ec:	d809883a 	mov	r4,sp
   8e3f0:	980b883a 	mov	r5,r19
   8e3f4:	dc400904 	addi	r17,sp,36
   8e3f8:	dfc01515 	stw	ra,84(sp)
   8e3fc:	da400115 	stw	r9,4(sp)
   8e400:	d9c00315 	stw	r7,12(sp)
   8e404:	da000015 	stw	r8,0(sp)
   8e408:	d9800215 	stw	r6,8(sp)
   8e40c:	008f8a00 	call	8f8a0 <__unpack_d>
   8e410:	d9000204 	addi	r4,sp,8
   8e414:	880b883a 	mov	r5,r17
   8e418:	008f8a00 	call	8f8a0 <__unpack_d>
   8e41c:	d8800a17 	ldw	r2,40(sp)
   8e420:	880b883a 	mov	r5,r17
   8e424:	9809883a 	mov	r4,r19
   8e428:	d9800e04 	addi	r6,sp,56
   8e42c:	1080005c 	xori	r2,r2,1
   8e430:	d8800a15 	stw	r2,40(sp)
   8e434:	008dfc40 	call	8dfc4 <_fpadd_parts>
   8e438:	1009883a 	mov	r4,r2
   8e43c:	008f58c0 	call	8f58c <__pack_d>
   8e440:	dfc01517 	ldw	ra,84(sp)
   8e444:	dcc01417 	ldw	r19,80(sp)
   8e448:	dc401317 	ldw	r17,76(sp)
   8e44c:	dec01604 	addi	sp,sp,88
   8e450:	f800283a 	ret

0008e454 <__adddf3>:
   8e454:	deffea04 	addi	sp,sp,-88
   8e458:	dcc01415 	stw	r19,80(sp)
   8e45c:	dcc00404 	addi	r19,sp,16
   8e460:	2011883a 	mov	r8,r4
   8e464:	2813883a 	mov	r9,r5
   8e468:	dc401315 	stw	r17,76(sp)
   8e46c:	d809883a 	mov	r4,sp
   8e470:	980b883a 	mov	r5,r19
   8e474:	dc400904 	addi	r17,sp,36
   8e478:	dfc01515 	stw	ra,84(sp)
   8e47c:	da400115 	stw	r9,4(sp)
   8e480:	d9c00315 	stw	r7,12(sp)
   8e484:	da000015 	stw	r8,0(sp)
   8e488:	d9800215 	stw	r6,8(sp)
   8e48c:	008f8a00 	call	8f8a0 <__unpack_d>
   8e490:	d9000204 	addi	r4,sp,8
   8e494:	880b883a 	mov	r5,r17
   8e498:	008f8a00 	call	8f8a0 <__unpack_d>
   8e49c:	d9800e04 	addi	r6,sp,56
   8e4a0:	9809883a 	mov	r4,r19
   8e4a4:	880b883a 	mov	r5,r17
   8e4a8:	008dfc40 	call	8dfc4 <_fpadd_parts>
   8e4ac:	1009883a 	mov	r4,r2
   8e4b0:	008f58c0 	call	8f58c <__pack_d>
   8e4b4:	dfc01517 	ldw	ra,84(sp)
   8e4b8:	dcc01417 	ldw	r19,80(sp)
   8e4bc:	dc401317 	ldw	r17,76(sp)
   8e4c0:	dec01604 	addi	sp,sp,88
   8e4c4:	f800283a 	ret

0008e4c8 <__muldf3>:
   8e4c8:	deffe004 	addi	sp,sp,-128
   8e4cc:	dc401815 	stw	r17,96(sp)
   8e4d0:	dc400404 	addi	r17,sp,16
   8e4d4:	2011883a 	mov	r8,r4
   8e4d8:	2813883a 	mov	r9,r5
   8e4dc:	dc001715 	stw	r16,92(sp)
   8e4e0:	d809883a 	mov	r4,sp
   8e4e4:	880b883a 	mov	r5,r17
   8e4e8:	dc000904 	addi	r16,sp,36
   8e4ec:	dfc01f15 	stw	ra,124(sp)
   8e4f0:	da400115 	stw	r9,4(sp)
   8e4f4:	d9c00315 	stw	r7,12(sp)
   8e4f8:	da000015 	stw	r8,0(sp)
   8e4fc:	d9800215 	stw	r6,8(sp)
   8e500:	ddc01e15 	stw	r23,120(sp)
   8e504:	dd801d15 	stw	r22,116(sp)
   8e508:	dd401c15 	stw	r21,112(sp)
   8e50c:	dd001b15 	stw	r20,108(sp)
   8e510:	dcc01a15 	stw	r19,104(sp)
   8e514:	dc801915 	stw	r18,100(sp)
   8e518:	008f8a00 	call	8f8a0 <__unpack_d>
   8e51c:	d9000204 	addi	r4,sp,8
   8e520:	800b883a 	mov	r5,r16
   8e524:	008f8a00 	call	8f8a0 <__unpack_d>
   8e528:	d9000417 	ldw	r4,16(sp)
   8e52c:	00800044 	movi	r2,1
   8e530:	1100102e 	bgeu	r2,r4,8e574 <__muldf3+0xac>
   8e534:	d8c00917 	ldw	r3,36(sp)
   8e538:	10c0062e 	bgeu	r2,r3,8e554 <__muldf3+0x8c>
   8e53c:	00800104 	movi	r2,4
   8e540:	20800a26 	beq	r4,r2,8e56c <__muldf3+0xa4>
   8e544:	1880cc26 	beq	r3,r2,8e878 <__muldf3+0x3b0>
   8e548:	00800084 	movi	r2,2
   8e54c:	20800926 	beq	r4,r2,8e574 <__muldf3+0xac>
   8e550:	1880191e 	bne	r3,r2,8e5b8 <__muldf3+0xf0>
   8e554:	d8c00a17 	ldw	r3,40(sp)
   8e558:	d8800517 	ldw	r2,20(sp)
   8e55c:	8009883a 	mov	r4,r16
   8e560:	10c4c03a 	cmpne	r2,r2,r3
   8e564:	d8800a15 	stw	r2,40(sp)
   8e568:	00000706 	br	8e588 <__muldf3+0xc0>
   8e56c:	00800084 	movi	r2,2
   8e570:	1880c326 	beq	r3,r2,8e880 <__muldf3+0x3b8>
   8e574:	d8800517 	ldw	r2,20(sp)
   8e578:	d8c00a17 	ldw	r3,40(sp)
   8e57c:	8809883a 	mov	r4,r17
   8e580:	10c4c03a 	cmpne	r2,r2,r3
   8e584:	d8800515 	stw	r2,20(sp)
   8e588:	008f58c0 	call	8f58c <__pack_d>
   8e58c:	dfc01f17 	ldw	ra,124(sp)
   8e590:	ddc01e17 	ldw	r23,120(sp)
   8e594:	dd801d17 	ldw	r22,116(sp)
   8e598:	dd401c17 	ldw	r21,112(sp)
   8e59c:	dd001b17 	ldw	r20,108(sp)
   8e5a0:	dcc01a17 	ldw	r19,104(sp)
   8e5a4:	dc801917 	ldw	r18,100(sp)
   8e5a8:	dc401817 	ldw	r17,96(sp)
   8e5ac:	dc001717 	ldw	r16,92(sp)
   8e5b0:	dec02004 	addi	sp,sp,128
   8e5b4:	f800283a 	ret
   8e5b8:	dd800717 	ldw	r22,28(sp)
   8e5bc:	dc800c17 	ldw	r18,48(sp)
   8e5c0:	002b883a 	mov	r21,zero
   8e5c4:	0023883a 	mov	r17,zero
   8e5c8:	a80b883a 	mov	r5,r21
   8e5cc:	b00d883a 	mov	r6,r22
   8e5d0:	880f883a 	mov	r7,r17
   8e5d4:	ddc00817 	ldw	r23,32(sp)
   8e5d8:	dcc00d17 	ldw	r19,52(sp)
   8e5dc:	9009883a 	mov	r4,r18
   8e5e0:	008cfc80 	call	8cfc8 <__muldi3>
   8e5e4:	001b883a 	mov	r13,zero
   8e5e8:	680f883a 	mov	r7,r13
   8e5ec:	b009883a 	mov	r4,r22
   8e5f0:	000b883a 	mov	r5,zero
   8e5f4:	980d883a 	mov	r6,r19
   8e5f8:	b82d883a 	mov	r22,r23
   8e5fc:	002f883a 	mov	r23,zero
   8e600:	db401615 	stw	r13,88(sp)
   8e604:	d8801315 	stw	r2,76(sp)
   8e608:	d8c01415 	stw	r3,80(sp)
   8e60c:	dcc01515 	stw	r19,84(sp)
   8e610:	008cfc80 	call	8cfc8 <__muldi3>
   8e614:	b00d883a 	mov	r6,r22
   8e618:	000b883a 	mov	r5,zero
   8e61c:	9009883a 	mov	r4,r18
   8e620:	b80f883a 	mov	r7,r23
   8e624:	1021883a 	mov	r16,r2
   8e628:	1823883a 	mov	r17,r3
   8e62c:	008cfc80 	call	8cfc8 <__muldi3>
   8e630:	8085883a 	add	r2,r16,r2
   8e634:	140d803a 	cmpltu	r6,r2,r16
   8e638:	88c7883a 	add	r3,r17,r3
   8e63c:	30cd883a 	add	r6,r6,r3
   8e640:	1029883a 	mov	r20,r2
   8e644:	302b883a 	mov	r21,r6
   8e648:	da801317 	ldw	r10,76(sp)
   8e64c:	dac01417 	ldw	r11,80(sp)
   8e650:	db001517 	ldw	r12,84(sp)
   8e654:	db401617 	ldw	r13,88(sp)
   8e658:	3440612e 	bgeu	r6,r17,8e7e0 <__muldf3+0x318>
   8e65c:	0009883a 	mov	r4,zero
   8e660:	5105883a 	add	r2,r10,r4
   8e664:	128d803a 	cmpltu	r6,r2,r10
   8e668:	5d07883a 	add	r3,r11,r20
   8e66c:	30cd883a 	add	r6,r6,r3
   8e670:	0021883a 	mov	r16,zero
   8e674:	04400044 	movi	r17,1
   8e678:	1025883a 	mov	r18,r2
   8e67c:	3027883a 	mov	r19,r6
   8e680:	32c06236 	bltu	r6,r11,8e80c <__muldf3+0x344>
   8e684:	59807a26 	beq	r11,r6,8e870 <__muldf3+0x3a8>
   8e688:	680b883a 	mov	r5,r13
   8e68c:	b80f883a 	mov	r7,r23
   8e690:	6009883a 	mov	r4,r12
   8e694:	b00d883a 	mov	r6,r22
   8e698:	008cfc80 	call	8cfc8 <__muldi3>
   8e69c:	1009883a 	mov	r4,r2
   8e6a0:	000f883a 	mov	r7,zero
   8e6a4:	1545883a 	add	r2,r2,r21
   8e6a8:	1111803a 	cmpltu	r8,r2,r4
   8e6ac:	19c7883a 	add	r3,r3,r7
   8e6b0:	40c7883a 	add	r3,r8,r3
   8e6b4:	88cb883a 	add	r5,r17,r3
   8e6b8:	d8c00617 	ldw	r3,24(sp)
   8e6bc:	8089883a 	add	r4,r16,r2
   8e6c0:	d8800b17 	ldw	r2,44(sp)
   8e6c4:	18c00104 	addi	r3,r3,4
   8e6c8:	240d803a 	cmpltu	r6,r4,r16
   8e6cc:	10c7883a 	add	r3,r2,r3
   8e6d0:	2013883a 	mov	r9,r4
   8e6d4:	d8800a17 	ldw	r2,40(sp)
   8e6d8:	d9000517 	ldw	r4,20(sp)
   8e6dc:	314d883a 	add	r6,r6,r5
   8e6e0:	3015883a 	mov	r10,r6
   8e6e4:	2088c03a 	cmpne	r4,r4,r2
   8e6e8:	00880034 	movhi	r2,8192
   8e6ec:	10bfffc4 	addi	r2,r2,-1
   8e6f0:	d9000f15 	stw	r4,60(sp)
   8e6f4:	d8c01015 	stw	r3,64(sp)
   8e6f8:	1180162e 	bgeu	r2,r6,8e754 <__muldf3+0x28c>
   8e6fc:	1811883a 	mov	r8,r3
   8e700:	101f883a 	mov	r15,r2
   8e704:	980497fa 	slli	r2,r19,31
   8e708:	9016d07a 	srli	r11,r18,1
   8e70c:	500697fa 	slli	r3,r10,31
   8e710:	480cd07a 	srli	r6,r9,1
   8e714:	500ed07a 	srli	r7,r10,1
   8e718:	12d6b03a 	or	r11,r2,r11
   8e71c:	00800044 	movi	r2,1
   8e720:	198cb03a 	or	r6,r3,r6
   8e724:	4888703a 	and	r4,r9,r2
   8e728:	9818d07a 	srli	r12,r19,1
   8e72c:	001b883a 	mov	r13,zero
   8e730:	03a00034 	movhi	r14,32768
   8e734:	3013883a 	mov	r9,r6
   8e738:	3815883a 	mov	r10,r7
   8e73c:	4091883a 	add	r8,r8,r2
   8e740:	20000226 	beq	r4,zero,8e74c <__muldf3+0x284>
   8e744:	5b64b03a 	or	r18,r11,r13
   8e748:	63a6b03a 	or	r19,r12,r14
   8e74c:	7abfed36 	bltu	r15,r10,8e704 <__muldf3+0x23c>
   8e750:	da001015 	stw	r8,64(sp)
   8e754:	00840034 	movhi	r2,4096
   8e758:	10bfffc4 	addi	r2,r2,-1
   8e75c:	12801436 	bltu	r2,r10,8e7b0 <__muldf3+0x2e8>
   8e760:	da001017 	ldw	r8,64(sp)
   8e764:	101f883a 	mov	r15,r2
   8e768:	4a45883a 	add	r2,r9,r9
   8e76c:	124d803a 	cmpltu	r6,r2,r9
   8e770:	5287883a 	add	r3,r10,r10
   8e774:	9497883a 	add	r11,r18,r18
   8e778:	5c8f803a 	cmpltu	r7,r11,r18
   8e77c:	9cd9883a 	add	r12,r19,r19
   8e780:	01000044 	movi	r4,1
   8e784:	30cd883a 	add	r6,r6,r3
   8e788:	3b0f883a 	add	r7,r7,r12
   8e78c:	423fffc4 	addi	r8,r8,-1
   8e790:	1013883a 	mov	r9,r2
   8e794:	3015883a 	mov	r10,r6
   8e798:	111ab03a 	or	r13,r2,r4
   8e79c:	98003016 	blt	r19,zero,8e860 <__muldf3+0x398>
   8e7a0:	5825883a 	mov	r18,r11
   8e7a4:	3827883a 	mov	r19,r7
   8e7a8:	7abfef2e 	bgeu	r15,r10,8e768 <__muldf3+0x2a0>
   8e7ac:	da001015 	stw	r8,64(sp)
   8e7b0:	00803fc4 	movi	r2,255
   8e7b4:	488e703a 	and	r7,r9,r2
   8e7b8:	00802004 	movi	r2,128
   8e7bc:	0007883a 	mov	r3,zero
   8e7c0:	0011883a 	mov	r8,zero
   8e7c4:	38801826 	beq	r7,r2,8e828 <__muldf3+0x360>
   8e7c8:	008000c4 	movi	r2,3
   8e7cc:	d9000e04 	addi	r4,sp,56
   8e7d0:	da801215 	stw	r10,72(sp)
   8e7d4:	d8800e15 	stw	r2,56(sp)
   8e7d8:	da401115 	stw	r9,68(sp)
   8e7dc:	003f6a06 	br	8e588 <__muldf3+0xc0>
   8e7e0:	89802126 	beq	r17,r6,8e868 <__muldf3+0x3a0>
   8e7e4:	0009883a 	mov	r4,zero
   8e7e8:	5105883a 	add	r2,r10,r4
   8e7ec:	128d803a 	cmpltu	r6,r2,r10
   8e7f0:	5d07883a 	add	r3,r11,r20
   8e7f4:	30cd883a 	add	r6,r6,r3
   8e7f8:	0021883a 	mov	r16,zero
   8e7fc:	0023883a 	mov	r17,zero
   8e800:	1025883a 	mov	r18,r2
   8e804:	3027883a 	mov	r19,r6
   8e808:	32ff9e2e 	bgeu	r6,r11,8e684 <__muldf3+0x1bc>
   8e80c:	00800044 	movi	r2,1
   8e810:	8089883a 	add	r4,r16,r2
   8e814:	240d803a 	cmpltu	r6,r4,r16
   8e818:	344d883a 	add	r6,r6,r17
   8e81c:	2021883a 	mov	r16,r4
   8e820:	3023883a 	mov	r17,r6
   8e824:	003f9806 	br	8e688 <__muldf3+0x1c0>
   8e828:	403fe71e 	bne	r8,zero,8e7c8 <__muldf3+0x300>
   8e82c:	01004004 	movi	r4,256
   8e830:	4904703a 	and	r2,r9,r4
   8e834:	10c4b03a 	or	r2,r2,r3
   8e838:	103fe31e 	bne	r2,zero,8e7c8 <__muldf3+0x300>
   8e83c:	94c4b03a 	or	r2,r18,r19
   8e840:	103fe126 	beq	r2,zero,8e7c8 <__muldf3+0x300>
   8e844:	49c5883a 	add	r2,r9,r7
   8e848:	1251803a 	cmpltu	r8,r2,r9
   8e84c:	4291883a 	add	r8,r8,r10
   8e850:	013fc004 	movi	r4,-256
   8e854:	1112703a 	and	r9,r2,r4
   8e858:	4015883a 	mov	r10,r8
   8e85c:	003fda06 	br	8e7c8 <__muldf3+0x300>
   8e860:	6813883a 	mov	r9,r13
   8e864:	003fce06 	br	8e7a0 <__muldf3+0x2d8>
   8e868:	143f7c36 	bltu	r2,r16,8e65c <__muldf3+0x194>
   8e86c:	003fdd06 	br	8e7e4 <__muldf3+0x31c>
   8e870:	12bf852e 	bgeu	r2,r10,8e688 <__muldf3+0x1c0>
   8e874:	003fe506 	br	8e80c <__muldf3+0x344>
   8e878:	00800084 	movi	r2,2
   8e87c:	20bf351e 	bne	r4,r2,8e554 <__muldf3+0x8c>
   8e880:	01000274 	movhi	r4,9
   8e884:	210f5a04 	addi	r4,r4,15720
   8e888:	003f3f06 	br	8e588 <__muldf3+0xc0>

0008e88c <__divdf3>:
   8e88c:	deffed04 	addi	sp,sp,-76
   8e890:	dcc01115 	stw	r19,68(sp)
   8e894:	dcc00404 	addi	r19,sp,16
   8e898:	2011883a 	mov	r8,r4
   8e89c:	2813883a 	mov	r9,r5
   8e8a0:	dc000e15 	stw	r16,56(sp)
   8e8a4:	d809883a 	mov	r4,sp
   8e8a8:	980b883a 	mov	r5,r19
   8e8ac:	dc000904 	addi	r16,sp,36
   8e8b0:	dfc01215 	stw	ra,72(sp)
   8e8b4:	da400115 	stw	r9,4(sp)
   8e8b8:	d9c00315 	stw	r7,12(sp)
   8e8bc:	da000015 	stw	r8,0(sp)
   8e8c0:	d9800215 	stw	r6,8(sp)
   8e8c4:	dc801015 	stw	r18,64(sp)
   8e8c8:	dc400f15 	stw	r17,60(sp)
   8e8cc:	008f8a00 	call	8f8a0 <__unpack_d>
   8e8d0:	d9000204 	addi	r4,sp,8
   8e8d4:	800b883a 	mov	r5,r16
   8e8d8:	008f8a00 	call	8f8a0 <__unpack_d>
   8e8dc:	d9000417 	ldw	r4,16(sp)
   8e8e0:	00800044 	movi	r2,1
   8e8e4:	11000b2e 	bgeu	r2,r4,8e914 <__divdf3+0x88>
   8e8e8:	d9400917 	ldw	r5,36(sp)
   8e8ec:	1140762e 	bgeu	r2,r5,8eac8 <__divdf3+0x23c>
   8e8f0:	d8800517 	ldw	r2,20(sp)
   8e8f4:	d8c00a17 	ldw	r3,40(sp)
   8e8f8:	01800104 	movi	r6,4
   8e8fc:	10c4f03a 	xor	r2,r2,r3
   8e900:	d8800515 	stw	r2,20(sp)
   8e904:	21800226 	beq	r4,r6,8e910 <__divdf3+0x84>
   8e908:	00800084 	movi	r2,2
   8e90c:	2080141e 	bne	r4,r2,8e960 <__divdf3+0xd4>
   8e910:	29000926 	beq	r5,r4,8e938 <__divdf3+0xac>
   8e914:	9809883a 	mov	r4,r19
   8e918:	008f58c0 	call	8f58c <__pack_d>
   8e91c:	dfc01217 	ldw	ra,72(sp)
   8e920:	dcc01117 	ldw	r19,68(sp)
   8e924:	dc801017 	ldw	r18,64(sp)
   8e928:	dc400f17 	ldw	r17,60(sp)
   8e92c:	dc000e17 	ldw	r16,56(sp)
   8e930:	dec01304 	addi	sp,sp,76
   8e934:	f800283a 	ret
   8e938:	01000274 	movhi	r4,9
   8e93c:	210f5a04 	addi	r4,r4,15720
   8e940:	008f58c0 	call	8f58c <__pack_d>
   8e944:	dfc01217 	ldw	ra,72(sp)
   8e948:	dcc01117 	ldw	r19,68(sp)
   8e94c:	dc801017 	ldw	r18,64(sp)
   8e950:	dc400f17 	ldw	r17,60(sp)
   8e954:	dc000e17 	ldw	r16,56(sp)
   8e958:	dec01304 	addi	sp,sp,76
   8e95c:	f800283a 	ret
   8e960:	29805b26 	beq	r5,r6,8ead0 <__divdf3+0x244>
   8e964:	28802d26 	beq	r5,r2,8ea1c <__divdf3+0x190>
   8e968:	d8c00617 	ldw	r3,24(sp)
   8e96c:	d8800b17 	ldw	r2,44(sp)
   8e970:	d9c00817 	ldw	r7,32(sp)
   8e974:	dc400d17 	ldw	r17,52(sp)
   8e978:	188bc83a 	sub	r5,r3,r2
   8e97c:	d9800717 	ldw	r6,28(sp)
   8e980:	dc000c17 	ldw	r16,48(sp)
   8e984:	d9400615 	stw	r5,24(sp)
   8e988:	3c403836 	bltu	r7,r17,8ea6c <__divdf3+0x1e0>
   8e98c:	89c03626 	beq	r17,r7,8ea68 <__divdf3+0x1dc>
   8e990:	0015883a 	mov	r10,zero
   8e994:	001d883a 	mov	r14,zero
   8e998:	02c40034 	movhi	r11,4096
   8e99c:	001f883a 	mov	r15,zero
   8e9a0:	003f883a 	mov	ra,zero
   8e9a4:	04800f44 	movi	r18,61
   8e9a8:	00000f06 	br	8e9e8 <__divdf3+0x15c>
   8e9ac:	601d883a 	mov	r14,r12
   8e9b0:	681f883a 	mov	r15,r13
   8e9b4:	400d883a 	mov	r6,r8
   8e9b8:	100f883a 	mov	r7,r2
   8e9bc:	3191883a 	add	r8,r6,r6
   8e9c0:	5808d07a 	srli	r4,r11,1
   8e9c4:	4185803a 	cmpltu	r2,r8,r6
   8e9c8:	39d3883a 	add	r9,r7,r7
   8e9cc:	28c6b03a 	or	r3,r5,r3
   8e9d0:	1245883a 	add	r2,r2,r9
   8e9d4:	1815883a 	mov	r10,r3
   8e9d8:	2017883a 	mov	r11,r4
   8e9dc:	400d883a 	mov	r6,r8
   8e9e0:	100f883a 	mov	r7,r2
   8e9e4:	fc801726 	beq	ra,r18,8ea44 <__divdf3+0x1b8>
   8e9e8:	580a97fa 	slli	r5,r11,31
   8e9ec:	5006d07a 	srli	r3,r10,1
   8e9f0:	ffc00044 	addi	ra,ra,1
   8e9f4:	3c7ff136 	bltu	r7,r17,8e9bc <__divdf3+0x130>
   8e9f8:	3411c83a 	sub	r8,r6,r16
   8e9fc:	3205803a 	cmpltu	r2,r6,r8
   8ea00:	3c53c83a 	sub	r9,r7,r17
   8ea04:	7298b03a 	or	r12,r14,r10
   8ea08:	7adab03a 	or	r13,r15,r11
   8ea0c:	4885c83a 	sub	r2,r9,r2
   8ea10:	89ffe61e 	bne	r17,r7,8e9ac <__divdf3+0x120>
   8ea14:	343fe936 	bltu	r6,r16,8e9bc <__divdf3+0x130>
   8ea18:	003fe406 	br	8e9ac <__divdf3+0x120>
   8ea1c:	9809883a 	mov	r4,r19
   8ea20:	d9800415 	stw	r6,16(sp)
   8ea24:	008f58c0 	call	8f58c <__pack_d>
   8ea28:	dfc01217 	ldw	ra,72(sp)
   8ea2c:	dcc01117 	ldw	r19,68(sp)
   8ea30:	dc801017 	ldw	r18,64(sp)
   8ea34:	dc400f17 	ldw	r17,60(sp)
   8ea38:	dc000e17 	ldw	r16,56(sp)
   8ea3c:	dec01304 	addi	sp,sp,76
   8ea40:	f800283a 	ret
   8ea44:	00803fc4 	movi	r2,255
   8ea48:	7090703a 	and	r8,r14,r2
   8ea4c:	00802004 	movi	r2,128
   8ea50:	0007883a 	mov	r3,zero
   8ea54:	0013883a 	mov	r9,zero
   8ea58:	40800d26 	beq	r8,r2,8ea90 <__divdf3+0x204>
   8ea5c:	dbc00815 	stw	r15,32(sp)
   8ea60:	db800715 	stw	r14,28(sp)
   8ea64:	003fab06 	br	8e914 <__divdf3+0x88>
   8ea68:	343fc92e 	bgeu	r6,r16,8e990 <__divdf3+0x104>
   8ea6c:	3185883a 	add	r2,r6,r6
   8ea70:	1189803a 	cmpltu	r4,r2,r6
   8ea74:	39c7883a 	add	r3,r7,r7
   8ea78:	20c9883a 	add	r4,r4,r3
   8ea7c:	297fffc4 	addi	r5,r5,-1
   8ea80:	100d883a 	mov	r6,r2
   8ea84:	200f883a 	mov	r7,r4
   8ea88:	d9400615 	stw	r5,24(sp)
   8ea8c:	003fc006 	br	8e990 <__divdf3+0x104>
   8ea90:	483ff21e 	bne	r9,zero,8ea5c <__divdf3+0x1d0>
   8ea94:	01004004 	movi	r4,256
   8ea98:	7104703a 	and	r2,r14,r4
   8ea9c:	10c4b03a 	or	r2,r2,r3
   8eaa0:	103fee1e 	bne	r2,zero,8ea5c <__divdf3+0x1d0>
   8eaa4:	31c4b03a 	or	r2,r6,r7
   8eaa8:	103fec26 	beq	r2,zero,8ea5c <__divdf3+0x1d0>
   8eaac:	7205883a 	add	r2,r14,r8
   8eab0:	1391803a 	cmpltu	r8,r2,r14
   8eab4:	43d1883a 	add	r8,r8,r15
   8eab8:	013fc004 	movi	r4,-256
   8eabc:	111c703a 	and	r14,r2,r4
   8eac0:	401f883a 	mov	r15,r8
   8eac4:	003fe506 	br	8ea5c <__divdf3+0x1d0>
   8eac8:	8009883a 	mov	r4,r16
   8eacc:	003f9206 	br	8e918 <__divdf3+0x8c>
   8ead0:	9809883a 	mov	r4,r19
   8ead4:	d8000715 	stw	zero,28(sp)
   8ead8:	d8000815 	stw	zero,32(sp)
   8eadc:	d8000615 	stw	zero,24(sp)
   8eae0:	003f8d06 	br	8e918 <__divdf3+0x8c>

0008eae4 <__eqdf2>:
   8eae4:	deffef04 	addi	sp,sp,-68
   8eae8:	dc400f15 	stw	r17,60(sp)
   8eaec:	dc400404 	addi	r17,sp,16
   8eaf0:	2005883a 	mov	r2,r4
   8eaf4:	2807883a 	mov	r3,r5
   8eaf8:	dc000e15 	stw	r16,56(sp)
   8eafc:	d809883a 	mov	r4,sp
   8eb00:	880b883a 	mov	r5,r17
   8eb04:	dc000904 	addi	r16,sp,36
   8eb08:	d8c00115 	stw	r3,4(sp)
   8eb0c:	d8800015 	stw	r2,0(sp)
   8eb10:	d9800215 	stw	r6,8(sp)
   8eb14:	dfc01015 	stw	ra,64(sp)
   8eb18:	d9c00315 	stw	r7,12(sp)
   8eb1c:	008f8a00 	call	8f8a0 <__unpack_d>
   8eb20:	d9000204 	addi	r4,sp,8
   8eb24:	800b883a 	mov	r5,r16
   8eb28:	008f8a00 	call	8f8a0 <__unpack_d>
   8eb2c:	d8800417 	ldw	r2,16(sp)
   8eb30:	00c00044 	movi	r3,1
   8eb34:	180d883a 	mov	r6,r3
   8eb38:	1880062e 	bgeu	r3,r2,8eb54 <__eqdf2+0x70>
   8eb3c:	d8800917 	ldw	r2,36(sp)
   8eb40:	8809883a 	mov	r4,r17
   8eb44:	800b883a 	mov	r5,r16
   8eb48:	1880022e 	bgeu	r3,r2,8eb54 <__eqdf2+0x70>
   8eb4c:	008f9d80 	call	8f9d8 <__fpcmp_parts_d>
   8eb50:	100d883a 	mov	r6,r2
   8eb54:	3005883a 	mov	r2,r6
   8eb58:	dfc01017 	ldw	ra,64(sp)
   8eb5c:	dc400f17 	ldw	r17,60(sp)
   8eb60:	dc000e17 	ldw	r16,56(sp)
   8eb64:	dec01104 	addi	sp,sp,68
   8eb68:	f800283a 	ret

0008eb6c <__nedf2>:
   8eb6c:	deffef04 	addi	sp,sp,-68
   8eb70:	dc400f15 	stw	r17,60(sp)
   8eb74:	dc400404 	addi	r17,sp,16
   8eb78:	2005883a 	mov	r2,r4
   8eb7c:	2807883a 	mov	r3,r5
   8eb80:	dc000e15 	stw	r16,56(sp)
   8eb84:	d809883a 	mov	r4,sp
   8eb88:	880b883a 	mov	r5,r17
   8eb8c:	dc000904 	addi	r16,sp,36
   8eb90:	d8c00115 	stw	r3,4(sp)
   8eb94:	d8800015 	stw	r2,0(sp)
   8eb98:	d9800215 	stw	r6,8(sp)
   8eb9c:	dfc01015 	stw	ra,64(sp)
   8eba0:	d9c00315 	stw	r7,12(sp)
   8eba4:	008f8a00 	call	8f8a0 <__unpack_d>
   8eba8:	d9000204 	addi	r4,sp,8
   8ebac:	800b883a 	mov	r5,r16
   8ebb0:	008f8a00 	call	8f8a0 <__unpack_d>
   8ebb4:	d8800417 	ldw	r2,16(sp)
   8ebb8:	00c00044 	movi	r3,1
   8ebbc:	180d883a 	mov	r6,r3
   8ebc0:	1880062e 	bgeu	r3,r2,8ebdc <__nedf2+0x70>
   8ebc4:	d8800917 	ldw	r2,36(sp)
   8ebc8:	8809883a 	mov	r4,r17
   8ebcc:	800b883a 	mov	r5,r16
   8ebd0:	1880022e 	bgeu	r3,r2,8ebdc <__nedf2+0x70>
   8ebd4:	008f9d80 	call	8f9d8 <__fpcmp_parts_d>
   8ebd8:	100d883a 	mov	r6,r2
   8ebdc:	3005883a 	mov	r2,r6
   8ebe0:	dfc01017 	ldw	ra,64(sp)
   8ebe4:	dc400f17 	ldw	r17,60(sp)
   8ebe8:	dc000e17 	ldw	r16,56(sp)
   8ebec:	dec01104 	addi	sp,sp,68
   8ebf0:	f800283a 	ret

0008ebf4 <__gtdf2>:
   8ebf4:	deffef04 	addi	sp,sp,-68
   8ebf8:	dc400f15 	stw	r17,60(sp)
   8ebfc:	dc400404 	addi	r17,sp,16
   8ec00:	2005883a 	mov	r2,r4
   8ec04:	2807883a 	mov	r3,r5
   8ec08:	dc000e15 	stw	r16,56(sp)
   8ec0c:	d809883a 	mov	r4,sp
   8ec10:	880b883a 	mov	r5,r17
   8ec14:	dc000904 	addi	r16,sp,36
   8ec18:	d8c00115 	stw	r3,4(sp)
   8ec1c:	d8800015 	stw	r2,0(sp)
   8ec20:	d9800215 	stw	r6,8(sp)
   8ec24:	dfc01015 	stw	ra,64(sp)
   8ec28:	d9c00315 	stw	r7,12(sp)
   8ec2c:	008f8a00 	call	8f8a0 <__unpack_d>
   8ec30:	d9000204 	addi	r4,sp,8
   8ec34:	800b883a 	mov	r5,r16
   8ec38:	008f8a00 	call	8f8a0 <__unpack_d>
   8ec3c:	d8800417 	ldw	r2,16(sp)
   8ec40:	00c00044 	movi	r3,1
   8ec44:	01bfffc4 	movi	r6,-1
   8ec48:	1880062e 	bgeu	r3,r2,8ec64 <__gtdf2+0x70>
   8ec4c:	d8800917 	ldw	r2,36(sp)
   8ec50:	8809883a 	mov	r4,r17
   8ec54:	800b883a 	mov	r5,r16
   8ec58:	1880022e 	bgeu	r3,r2,8ec64 <__gtdf2+0x70>
   8ec5c:	008f9d80 	call	8f9d8 <__fpcmp_parts_d>
   8ec60:	100d883a 	mov	r6,r2
   8ec64:	3005883a 	mov	r2,r6
   8ec68:	dfc01017 	ldw	ra,64(sp)
   8ec6c:	dc400f17 	ldw	r17,60(sp)
   8ec70:	dc000e17 	ldw	r16,56(sp)
   8ec74:	dec01104 	addi	sp,sp,68
   8ec78:	f800283a 	ret

0008ec7c <__gedf2>:
   8ec7c:	deffef04 	addi	sp,sp,-68
   8ec80:	dc400f15 	stw	r17,60(sp)
   8ec84:	dc400404 	addi	r17,sp,16
   8ec88:	2005883a 	mov	r2,r4
   8ec8c:	2807883a 	mov	r3,r5
   8ec90:	dc000e15 	stw	r16,56(sp)
   8ec94:	d809883a 	mov	r4,sp
   8ec98:	880b883a 	mov	r5,r17
   8ec9c:	dc000904 	addi	r16,sp,36
   8eca0:	d8c00115 	stw	r3,4(sp)
   8eca4:	d8800015 	stw	r2,0(sp)
   8eca8:	d9800215 	stw	r6,8(sp)
   8ecac:	dfc01015 	stw	ra,64(sp)
   8ecb0:	d9c00315 	stw	r7,12(sp)
   8ecb4:	008f8a00 	call	8f8a0 <__unpack_d>
   8ecb8:	d9000204 	addi	r4,sp,8
   8ecbc:	800b883a 	mov	r5,r16
   8ecc0:	008f8a00 	call	8f8a0 <__unpack_d>
   8ecc4:	d8800417 	ldw	r2,16(sp)
   8ecc8:	00c00044 	movi	r3,1
   8eccc:	01bfffc4 	movi	r6,-1
   8ecd0:	1880062e 	bgeu	r3,r2,8ecec <__gedf2+0x70>
   8ecd4:	d8800917 	ldw	r2,36(sp)
   8ecd8:	8809883a 	mov	r4,r17
   8ecdc:	800b883a 	mov	r5,r16
   8ece0:	1880022e 	bgeu	r3,r2,8ecec <__gedf2+0x70>
   8ece4:	008f9d80 	call	8f9d8 <__fpcmp_parts_d>
   8ece8:	100d883a 	mov	r6,r2
   8ecec:	3005883a 	mov	r2,r6
   8ecf0:	dfc01017 	ldw	ra,64(sp)
   8ecf4:	dc400f17 	ldw	r17,60(sp)
   8ecf8:	dc000e17 	ldw	r16,56(sp)
   8ecfc:	dec01104 	addi	sp,sp,68
   8ed00:	f800283a 	ret

0008ed04 <__ltdf2>:
   8ed04:	deffef04 	addi	sp,sp,-68
   8ed08:	dc400f15 	stw	r17,60(sp)
   8ed0c:	dc400404 	addi	r17,sp,16
   8ed10:	2005883a 	mov	r2,r4
   8ed14:	2807883a 	mov	r3,r5
   8ed18:	dc000e15 	stw	r16,56(sp)
   8ed1c:	d809883a 	mov	r4,sp
   8ed20:	880b883a 	mov	r5,r17
   8ed24:	dc000904 	addi	r16,sp,36
   8ed28:	d8c00115 	stw	r3,4(sp)
   8ed2c:	d8800015 	stw	r2,0(sp)
   8ed30:	d9800215 	stw	r6,8(sp)
   8ed34:	dfc01015 	stw	ra,64(sp)
   8ed38:	d9c00315 	stw	r7,12(sp)
   8ed3c:	008f8a00 	call	8f8a0 <__unpack_d>
   8ed40:	d9000204 	addi	r4,sp,8
   8ed44:	800b883a 	mov	r5,r16
   8ed48:	008f8a00 	call	8f8a0 <__unpack_d>
   8ed4c:	d8800417 	ldw	r2,16(sp)
   8ed50:	00c00044 	movi	r3,1
   8ed54:	180d883a 	mov	r6,r3
   8ed58:	1880062e 	bgeu	r3,r2,8ed74 <__ltdf2+0x70>
   8ed5c:	d8800917 	ldw	r2,36(sp)
   8ed60:	8809883a 	mov	r4,r17
   8ed64:	800b883a 	mov	r5,r16
   8ed68:	1880022e 	bgeu	r3,r2,8ed74 <__ltdf2+0x70>
   8ed6c:	008f9d80 	call	8f9d8 <__fpcmp_parts_d>
   8ed70:	100d883a 	mov	r6,r2
   8ed74:	3005883a 	mov	r2,r6
   8ed78:	dfc01017 	ldw	ra,64(sp)
   8ed7c:	dc400f17 	ldw	r17,60(sp)
   8ed80:	dc000e17 	ldw	r16,56(sp)
   8ed84:	dec01104 	addi	sp,sp,68
   8ed88:	f800283a 	ret

0008ed8c <__ledf2>:
   8ed8c:	deffef04 	addi	sp,sp,-68
   8ed90:	dc400f15 	stw	r17,60(sp)
   8ed94:	dc400404 	addi	r17,sp,16
   8ed98:	2005883a 	mov	r2,r4
   8ed9c:	2807883a 	mov	r3,r5
   8eda0:	dc000e15 	stw	r16,56(sp)
   8eda4:	d809883a 	mov	r4,sp
   8eda8:	880b883a 	mov	r5,r17
   8edac:	dc000904 	addi	r16,sp,36
   8edb0:	d8c00115 	stw	r3,4(sp)
   8edb4:	d8800015 	stw	r2,0(sp)
   8edb8:	d9800215 	stw	r6,8(sp)
   8edbc:	dfc01015 	stw	ra,64(sp)
   8edc0:	d9c00315 	stw	r7,12(sp)
   8edc4:	008f8a00 	call	8f8a0 <__unpack_d>
   8edc8:	d9000204 	addi	r4,sp,8
   8edcc:	800b883a 	mov	r5,r16
   8edd0:	008f8a00 	call	8f8a0 <__unpack_d>
   8edd4:	d8800417 	ldw	r2,16(sp)
   8edd8:	00c00044 	movi	r3,1
   8eddc:	180d883a 	mov	r6,r3
   8ede0:	1880062e 	bgeu	r3,r2,8edfc <__ledf2+0x70>
   8ede4:	d8800917 	ldw	r2,36(sp)
   8ede8:	8809883a 	mov	r4,r17
   8edec:	800b883a 	mov	r5,r16
   8edf0:	1880022e 	bgeu	r3,r2,8edfc <__ledf2+0x70>
   8edf4:	008f9d80 	call	8f9d8 <__fpcmp_parts_d>
   8edf8:	100d883a 	mov	r6,r2
   8edfc:	3005883a 	mov	r2,r6
   8ee00:	dfc01017 	ldw	ra,64(sp)
   8ee04:	dc400f17 	ldw	r17,60(sp)
   8ee08:	dc000e17 	ldw	r16,56(sp)
   8ee0c:	dec01104 	addi	sp,sp,68
   8ee10:	f800283a 	ret

0008ee14 <__floatsidf>:
   8ee14:	2006d7fa 	srli	r3,r4,31
   8ee18:	defff604 	addi	sp,sp,-40
   8ee1c:	008000c4 	movi	r2,3
   8ee20:	dfc00915 	stw	ra,36(sp)
   8ee24:	dcc00815 	stw	r19,32(sp)
   8ee28:	dc800715 	stw	r18,28(sp)
   8ee2c:	dc400615 	stw	r17,24(sp)
   8ee30:	dc000515 	stw	r16,20(sp)
   8ee34:	d8800015 	stw	r2,0(sp)
   8ee38:	d8c00115 	stw	r3,4(sp)
   8ee3c:	20000f1e 	bne	r4,zero,8ee7c <__floatsidf+0x68>
   8ee40:	00800084 	movi	r2,2
   8ee44:	d8800015 	stw	r2,0(sp)
   8ee48:	d809883a 	mov	r4,sp
   8ee4c:	008f58c0 	call	8f58c <__pack_d>
   8ee50:	1009883a 	mov	r4,r2
   8ee54:	180b883a 	mov	r5,r3
   8ee58:	2005883a 	mov	r2,r4
   8ee5c:	2807883a 	mov	r3,r5
   8ee60:	dfc00917 	ldw	ra,36(sp)
   8ee64:	dcc00817 	ldw	r19,32(sp)
   8ee68:	dc800717 	ldw	r18,28(sp)
   8ee6c:	dc400617 	ldw	r17,24(sp)
   8ee70:	dc000517 	ldw	r16,20(sp)
   8ee74:	dec00a04 	addi	sp,sp,40
   8ee78:	f800283a 	ret
   8ee7c:	00800f04 	movi	r2,60
   8ee80:	1807003a 	cmpeq	r3,r3,zero
   8ee84:	d8800215 	stw	r2,8(sp)
   8ee88:	18001126 	beq	r3,zero,8eed0 <__floatsidf+0xbc>
   8ee8c:	0027883a 	mov	r19,zero
   8ee90:	2025883a 	mov	r18,r4
   8ee94:	d9000315 	stw	r4,12(sp)
   8ee98:	dcc00415 	stw	r19,16(sp)
   8ee9c:	008f3700 	call	8f370 <__clzsi2>
   8eea0:	11000744 	addi	r4,r2,29
   8eea4:	013fe80e 	bge	zero,r4,8ee48 <__floatsidf+0x34>
   8eea8:	10bfff44 	addi	r2,r2,-3
   8eeac:	10000c16 	blt	r2,zero,8eee0 <__floatsidf+0xcc>
   8eeb0:	90a2983a 	sll	r17,r18,r2
   8eeb4:	0021883a 	mov	r16,zero
   8eeb8:	d8800217 	ldw	r2,8(sp)
   8eebc:	dc400415 	stw	r17,16(sp)
   8eec0:	dc000315 	stw	r16,12(sp)
   8eec4:	1105c83a 	sub	r2,r2,r4
   8eec8:	d8800215 	stw	r2,8(sp)
   8eecc:	003fde06 	br	8ee48 <__floatsidf+0x34>
   8eed0:	00a00034 	movhi	r2,32768
   8eed4:	20800a26 	beq	r4,r2,8ef00 <__floatsidf+0xec>
   8eed8:	0109c83a 	sub	r4,zero,r4
   8eedc:	003feb06 	br	8ee8c <__floatsidf+0x78>
   8eee0:	9006d07a 	srli	r3,r18,1
   8eee4:	008007c4 	movi	r2,31
   8eee8:	1105c83a 	sub	r2,r2,r4
   8eeec:	1886d83a 	srl	r3,r3,r2
   8eef0:	9922983a 	sll	r17,r19,r4
   8eef4:	9120983a 	sll	r16,r18,r4
   8eef8:	1c62b03a 	or	r17,r3,r17
   8eefc:	003fee06 	br	8eeb8 <__floatsidf+0xa4>
   8ef00:	0009883a 	mov	r4,zero
   8ef04:	01707834 	movhi	r5,49632
   8ef08:	003fd306 	br	8ee58 <__floatsidf+0x44>

0008ef0c <__fixdfsi>:
   8ef0c:	defff804 	addi	sp,sp,-32
   8ef10:	2005883a 	mov	r2,r4
   8ef14:	2807883a 	mov	r3,r5
   8ef18:	d809883a 	mov	r4,sp
   8ef1c:	d9400204 	addi	r5,sp,8
   8ef20:	d8c00115 	stw	r3,4(sp)
   8ef24:	d8800015 	stw	r2,0(sp)
   8ef28:	dfc00715 	stw	ra,28(sp)
   8ef2c:	008f8a00 	call	8f8a0 <__unpack_d>
   8ef30:	d8c00217 	ldw	r3,8(sp)
   8ef34:	00800084 	movi	r2,2
   8ef38:	1880051e 	bne	r3,r2,8ef50 <__fixdfsi+0x44>
   8ef3c:	0007883a 	mov	r3,zero
   8ef40:	1805883a 	mov	r2,r3
   8ef44:	dfc00717 	ldw	ra,28(sp)
   8ef48:	dec00804 	addi	sp,sp,32
   8ef4c:	f800283a 	ret
   8ef50:	00800044 	movi	r2,1
   8ef54:	10fff92e 	bgeu	r2,r3,8ef3c <__fixdfsi+0x30>
   8ef58:	00800104 	movi	r2,4
   8ef5c:	18800426 	beq	r3,r2,8ef70 <__fixdfsi+0x64>
   8ef60:	d8c00417 	ldw	r3,16(sp)
   8ef64:	183ff516 	blt	r3,zero,8ef3c <__fixdfsi+0x30>
   8ef68:	00800784 	movi	r2,30
   8ef6c:	10c0080e 	bge	r2,r3,8ef90 <__fixdfsi+0x84>
   8ef70:	d8800317 	ldw	r2,12(sp)
   8ef74:	1000121e 	bne	r2,zero,8efc0 <__fixdfsi+0xb4>
   8ef78:	00e00034 	movhi	r3,32768
   8ef7c:	18ffffc4 	addi	r3,r3,-1
   8ef80:	1805883a 	mov	r2,r3
   8ef84:	dfc00717 	ldw	ra,28(sp)
   8ef88:	dec00804 	addi	sp,sp,32
   8ef8c:	f800283a 	ret
   8ef90:	00800f04 	movi	r2,60
   8ef94:	10d1c83a 	sub	r8,r2,r3
   8ef98:	40bff804 	addi	r2,r8,-32
   8ef9c:	d9800517 	ldw	r6,20(sp)
   8efa0:	d9c00617 	ldw	r7,24(sp)
   8efa4:	10000816 	blt	r2,zero,8efc8 <__fixdfsi+0xbc>
   8efa8:	3888d83a 	srl	r4,r7,r2
   8efac:	d8800317 	ldw	r2,12(sp)
   8efb0:	2007883a 	mov	r3,r4
   8efb4:	103fe226 	beq	r2,zero,8ef40 <__fixdfsi+0x34>
   8efb8:	0107c83a 	sub	r3,zero,r4
   8efbc:	003fe006 	br	8ef40 <__fixdfsi+0x34>
   8efc0:	00e00034 	movhi	r3,32768
   8efc4:	003fde06 	br	8ef40 <__fixdfsi+0x34>
   8efc8:	39c7883a 	add	r3,r7,r7
   8efcc:	008007c4 	movi	r2,31
   8efd0:	1205c83a 	sub	r2,r2,r8
   8efd4:	1886983a 	sll	r3,r3,r2
   8efd8:	3208d83a 	srl	r4,r6,r8
   8efdc:	1908b03a 	or	r4,r3,r4
   8efe0:	003ff206 	br	8efac <__fixdfsi+0xa0>

0008efe4 <__truncdfsf2>:
   8efe4:	defff804 	addi	sp,sp,-32
   8efe8:	2005883a 	mov	r2,r4
   8efec:	2807883a 	mov	r3,r5
   8eff0:	d809883a 	mov	r4,sp
   8eff4:	d9400204 	addi	r5,sp,8
   8eff8:	d8c00115 	stw	r3,4(sp)
   8effc:	d8800015 	stw	r2,0(sp)
   8f000:	dfc00715 	stw	ra,28(sp)
   8f004:	008f8a00 	call	8f8a0 <__unpack_d>
   8f008:	d9c00517 	ldw	r7,20(sp)
   8f00c:	da000617 	ldw	r8,24(sp)
   8f010:	02d00034 	movhi	r11,16384
   8f014:	5affffc4 	addi	r11,r11,-1
   8f018:	3812d7ba 	srli	r9,r7,30
   8f01c:	401a90ba 	slli	r13,r8,2
   8f020:	3ac4703a 	and	r2,r7,r11
   8f024:	0007883a 	mov	r3,zero
   8f028:	6a52b03a 	or	r9,r13,r9
   8f02c:	10c4b03a 	or	r2,r2,r3
   8f030:	d9000217 	ldw	r4,8(sp)
   8f034:	d9400317 	ldw	r5,12(sp)
   8f038:	d9800417 	ldw	r6,16(sp)
   8f03c:	480f883a 	mov	r7,r9
   8f040:	10000126 	beq	r2,zero,8f048 <__truncdfsf2+0x64>
   8f044:	49c00054 	ori	r7,r9,1
   8f048:	008f5600 	call	8f560 <__make_fp>
   8f04c:	dfc00717 	ldw	ra,28(sp)
   8f050:	dec00804 	addi	sp,sp,32
   8f054:	f800283a 	ret

0008f058 <__floatunsidf>:
   8f058:	defff204 	addi	sp,sp,-56
   8f05c:	dfc00d15 	stw	ra,52(sp)
   8f060:	ddc00c15 	stw	r23,48(sp)
   8f064:	dd800b15 	stw	r22,44(sp)
   8f068:	dd400a15 	stw	r21,40(sp)
   8f06c:	dd000915 	stw	r20,36(sp)
   8f070:	dcc00815 	stw	r19,32(sp)
   8f074:	dc800715 	stw	r18,28(sp)
   8f078:	dc400615 	stw	r17,24(sp)
   8f07c:	dc000515 	stw	r16,20(sp)
   8f080:	d8000115 	stw	zero,4(sp)
   8f084:	20000f1e 	bne	r4,zero,8f0c4 <__floatunsidf+0x6c>
   8f088:	00800084 	movi	r2,2
   8f08c:	d8800015 	stw	r2,0(sp)
   8f090:	d809883a 	mov	r4,sp
   8f094:	008f58c0 	call	8f58c <__pack_d>
   8f098:	dfc00d17 	ldw	ra,52(sp)
   8f09c:	ddc00c17 	ldw	r23,48(sp)
   8f0a0:	dd800b17 	ldw	r22,44(sp)
   8f0a4:	dd400a17 	ldw	r21,40(sp)
   8f0a8:	dd000917 	ldw	r20,36(sp)
   8f0ac:	dcc00817 	ldw	r19,32(sp)
   8f0b0:	dc800717 	ldw	r18,28(sp)
   8f0b4:	dc400617 	ldw	r17,24(sp)
   8f0b8:	dc000517 	ldw	r16,20(sp)
   8f0bc:	dec00e04 	addi	sp,sp,56
   8f0c0:	f800283a 	ret
   8f0c4:	008000c4 	movi	r2,3
   8f0c8:	00c00f04 	movi	r3,60
   8f0cc:	002f883a 	mov	r23,zero
   8f0d0:	202d883a 	mov	r22,r4
   8f0d4:	d8800015 	stw	r2,0(sp)
   8f0d8:	d8c00215 	stw	r3,8(sp)
   8f0dc:	d9000315 	stw	r4,12(sp)
   8f0e0:	ddc00415 	stw	r23,16(sp)
   8f0e4:	008f3700 	call	8f370 <__clzsi2>
   8f0e8:	12400744 	addi	r9,r2,29
   8f0ec:	48000b16 	blt	r9,zero,8f11c <__floatunsidf+0xc4>
   8f0f0:	483fe726 	beq	r9,zero,8f090 <__floatunsidf+0x38>
   8f0f4:	10bfff44 	addi	r2,r2,-3
   8f0f8:	10002e16 	blt	r2,zero,8f1b4 <__floatunsidf+0x15c>
   8f0fc:	b0a2983a 	sll	r17,r22,r2
   8f100:	0021883a 	mov	r16,zero
   8f104:	d8800217 	ldw	r2,8(sp)
   8f108:	dc400415 	stw	r17,16(sp)
   8f10c:	dc000315 	stw	r16,12(sp)
   8f110:	1245c83a 	sub	r2,r2,r9
   8f114:	d8800215 	stw	r2,8(sp)
   8f118:	003fdd06 	br	8f090 <__floatunsidf+0x38>
   8f11c:	0255c83a 	sub	r10,zero,r9
   8f120:	51bff804 	addi	r6,r10,-32
   8f124:	30001b16 	blt	r6,zero,8f194 <__floatunsidf+0x13c>
   8f128:	b9a8d83a 	srl	r20,r23,r6
   8f12c:	002b883a 	mov	r21,zero
   8f130:	000f883a 	mov	r7,zero
   8f134:	01000044 	movi	r4,1
   8f138:	0011883a 	mov	r8,zero
   8f13c:	30002516 	blt	r6,zero,8f1d4 <__floatunsidf+0x17c>
   8f140:	21a6983a 	sll	r19,r4,r6
   8f144:	0025883a 	mov	r18,zero
   8f148:	00bfffc4 	movi	r2,-1
   8f14c:	9089883a 	add	r4,r18,r2
   8f150:	988b883a 	add	r5,r19,r2
   8f154:	248d803a 	cmpltu	r6,r4,r18
   8f158:	314b883a 	add	r5,r6,r5
   8f15c:	b104703a 	and	r2,r22,r4
   8f160:	b946703a 	and	r3,r23,r5
   8f164:	10c4b03a 	or	r2,r2,r3
   8f168:	10000226 	beq	r2,zero,8f174 <__floatunsidf+0x11c>
   8f16c:	01c00044 	movi	r7,1
   8f170:	0011883a 	mov	r8,zero
   8f174:	d9000217 	ldw	r4,8(sp)
   8f178:	a1c4b03a 	or	r2,r20,r7
   8f17c:	aa06b03a 	or	r3,r21,r8
   8f180:	2249c83a 	sub	r4,r4,r9
   8f184:	d8c00415 	stw	r3,16(sp)
   8f188:	d9000215 	stw	r4,8(sp)
   8f18c:	d8800315 	stw	r2,12(sp)
   8f190:	003fbf06 	br	8f090 <__floatunsidf+0x38>
   8f194:	bdc7883a 	add	r3,r23,r23
   8f198:	008007c4 	movi	r2,31
   8f19c:	1285c83a 	sub	r2,r2,r10
   8f1a0:	1886983a 	sll	r3,r3,r2
   8f1a4:	b2a8d83a 	srl	r20,r22,r10
   8f1a8:	baaad83a 	srl	r21,r23,r10
   8f1ac:	1d28b03a 	or	r20,r3,r20
   8f1b0:	003fdf06 	br	8f130 <__floatunsidf+0xd8>
   8f1b4:	b006d07a 	srli	r3,r22,1
   8f1b8:	008007c4 	movi	r2,31
   8f1bc:	1245c83a 	sub	r2,r2,r9
   8f1c0:	1886d83a 	srl	r3,r3,r2
   8f1c4:	ba62983a 	sll	r17,r23,r9
   8f1c8:	b260983a 	sll	r16,r22,r9
   8f1cc:	1c62b03a 	or	r17,r3,r17
   8f1d0:	003fcc06 	br	8f104 <__floatunsidf+0xac>
   8f1d4:	2006d07a 	srli	r3,r4,1
   8f1d8:	008007c4 	movi	r2,31
   8f1dc:	1285c83a 	sub	r2,r2,r10
   8f1e0:	18a6d83a 	srl	r19,r3,r2
   8f1e4:	22a4983a 	sll	r18,r4,r10
   8f1e8:	003fd706 	br	8f148 <__floatunsidf+0xf0>

0008f1ec <udivmodsi4>:
   8f1ec:	29001b2e 	bgeu	r5,r4,8f25c <udivmodsi4+0x70>
   8f1f0:	28001a16 	blt	r5,zero,8f25c <udivmodsi4+0x70>
   8f1f4:	00800044 	movi	r2,1
   8f1f8:	0007883a 	mov	r3,zero
   8f1fc:	01c007c4 	movi	r7,31
   8f200:	00000306 	br	8f210 <udivmodsi4+0x24>
   8f204:	19c01326 	beq	r3,r7,8f254 <udivmodsi4+0x68>
   8f208:	18c00044 	addi	r3,r3,1
   8f20c:	28000416 	blt	r5,zero,8f220 <udivmodsi4+0x34>
   8f210:	294b883a 	add	r5,r5,r5
   8f214:	1085883a 	add	r2,r2,r2
   8f218:	293ffa36 	bltu	r5,r4,8f204 <udivmodsi4+0x18>
   8f21c:	10000d26 	beq	r2,zero,8f254 <udivmodsi4+0x68>
   8f220:	0007883a 	mov	r3,zero
   8f224:	21400236 	bltu	r4,r5,8f230 <udivmodsi4+0x44>
   8f228:	2149c83a 	sub	r4,r4,r5
   8f22c:	1886b03a 	or	r3,r3,r2
   8f230:	1004d07a 	srli	r2,r2,1
   8f234:	280ad07a 	srli	r5,r5,1
   8f238:	103ffa1e 	bne	r2,zero,8f224 <udivmodsi4+0x38>
   8f23c:	30000226 	beq	r6,zero,8f248 <udivmodsi4+0x5c>
   8f240:	2005883a 	mov	r2,r4
   8f244:	f800283a 	ret
   8f248:	1809883a 	mov	r4,r3
   8f24c:	2005883a 	mov	r2,r4
   8f250:	f800283a 	ret
   8f254:	0007883a 	mov	r3,zero
   8f258:	003ff806 	br	8f23c <udivmodsi4+0x50>
   8f25c:	00800044 	movi	r2,1
   8f260:	0007883a 	mov	r3,zero
   8f264:	003fef06 	br	8f224 <udivmodsi4+0x38>

0008f268 <__divsi3>:
   8f268:	defffe04 	addi	sp,sp,-8
   8f26c:	dc000015 	stw	r16,0(sp)
   8f270:	dfc00115 	stw	ra,4(sp)
   8f274:	0021883a 	mov	r16,zero
   8f278:	20000c16 	blt	r4,zero,8f2ac <__divsi3+0x44>
   8f27c:	000d883a 	mov	r6,zero
   8f280:	28000e16 	blt	r5,zero,8f2bc <__divsi3+0x54>
   8f284:	008f1ec0 	call	8f1ec <udivmodsi4>
   8f288:	1007883a 	mov	r3,r2
   8f28c:	8005003a 	cmpeq	r2,r16,zero
   8f290:	1000011e 	bne	r2,zero,8f298 <__divsi3+0x30>
   8f294:	00c7c83a 	sub	r3,zero,r3
   8f298:	1805883a 	mov	r2,r3
   8f29c:	dfc00117 	ldw	ra,4(sp)
   8f2a0:	dc000017 	ldw	r16,0(sp)
   8f2a4:	dec00204 	addi	sp,sp,8
   8f2a8:	f800283a 	ret
   8f2ac:	0109c83a 	sub	r4,zero,r4
   8f2b0:	04000044 	movi	r16,1
   8f2b4:	000d883a 	mov	r6,zero
   8f2b8:	283ff20e 	bge	r5,zero,8f284 <__divsi3+0x1c>
   8f2bc:	014bc83a 	sub	r5,zero,r5
   8f2c0:	8021003a 	cmpeq	r16,r16,zero
   8f2c4:	003fef06 	br	8f284 <__divsi3+0x1c>

0008f2c8 <__modsi3>:
   8f2c8:	deffff04 	addi	sp,sp,-4
   8f2cc:	dfc00015 	stw	ra,0(sp)
   8f2d0:	01800044 	movi	r6,1
   8f2d4:	2807883a 	mov	r3,r5
   8f2d8:	20000416 	blt	r4,zero,8f2ec <__modsi3+0x24>
   8f2dc:	28000c16 	blt	r5,zero,8f310 <__modsi3+0x48>
   8f2e0:	dfc00017 	ldw	ra,0(sp)
   8f2e4:	dec00104 	addi	sp,sp,4
   8f2e8:	008f1ec1 	jmpi	8f1ec <udivmodsi4>
   8f2ec:	0109c83a 	sub	r4,zero,r4
   8f2f0:	28000b16 	blt	r5,zero,8f320 <__modsi3+0x58>
   8f2f4:	180b883a 	mov	r5,r3
   8f2f8:	01800044 	movi	r6,1
   8f2fc:	008f1ec0 	call	8f1ec <udivmodsi4>
   8f300:	0085c83a 	sub	r2,zero,r2
   8f304:	dfc00017 	ldw	ra,0(sp)
   8f308:	dec00104 	addi	sp,sp,4
   8f30c:	f800283a 	ret
   8f310:	014bc83a 	sub	r5,zero,r5
   8f314:	dfc00017 	ldw	ra,0(sp)
   8f318:	dec00104 	addi	sp,sp,4
   8f31c:	008f1ec1 	jmpi	8f1ec <udivmodsi4>
   8f320:	0147c83a 	sub	r3,zero,r5
   8f324:	003ff306 	br	8f2f4 <__modsi3+0x2c>

0008f328 <__udivsi3>:
   8f328:	000d883a 	mov	r6,zero
   8f32c:	008f1ec1 	jmpi	8f1ec <udivmodsi4>

0008f330 <__umodsi3>:
   8f330:	01800044 	movi	r6,1
   8f334:	008f1ec1 	jmpi	8f1ec <udivmodsi4>

0008f338 <__mulsi3>:
   8f338:	20000a26 	beq	r4,zero,8f364 <__mulsi3+0x2c>
   8f33c:	0007883a 	mov	r3,zero
   8f340:	2080004c 	andi	r2,r4,1
   8f344:	1005003a 	cmpeq	r2,r2,zero
   8f348:	2008d07a 	srli	r4,r4,1
   8f34c:	1000011e 	bne	r2,zero,8f354 <__mulsi3+0x1c>
   8f350:	1947883a 	add	r3,r3,r5
   8f354:	294b883a 	add	r5,r5,r5
   8f358:	203ff91e 	bne	r4,zero,8f340 <__mulsi3+0x8>
   8f35c:	1805883a 	mov	r2,r3
   8f360:	f800283a 	ret
   8f364:	0007883a 	mov	r3,zero
   8f368:	1805883a 	mov	r2,r3
   8f36c:	f800283a 	ret

0008f370 <__clzsi2>:
   8f370:	00bfffd4 	movui	r2,65535
   8f374:	11000e36 	bltu	r2,r4,8f3b0 <__clzsi2+0x40>
   8f378:	00803fc4 	movi	r2,255
   8f37c:	01400204 	movi	r5,8
   8f380:	0007883a 	mov	r3,zero
   8f384:	11001036 	bltu	r2,r4,8f3c8 <__clzsi2+0x58>
   8f388:	000b883a 	mov	r5,zero
   8f38c:	20c6d83a 	srl	r3,r4,r3
   8f390:	00800274 	movhi	r2,9
   8f394:	108f5f04 	addi	r2,r2,15740
   8f398:	1887883a 	add	r3,r3,r2
   8f39c:	18800003 	ldbu	r2,0(r3)
   8f3a0:	00c00804 	movi	r3,32
   8f3a4:	2885883a 	add	r2,r5,r2
   8f3a8:	1885c83a 	sub	r2,r3,r2
   8f3ac:	f800283a 	ret
   8f3b0:	01400404 	movi	r5,16
   8f3b4:	00804034 	movhi	r2,256
   8f3b8:	10bfffc4 	addi	r2,r2,-1
   8f3bc:	2807883a 	mov	r3,r5
   8f3c0:	113ff22e 	bgeu	r2,r4,8f38c <__clzsi2+0x1c>
   8f3c4:	01400604 	movi	r5,24
   8f3c8:	2807883a 	mov	r3,r5
   8f3cc:	20c6d83a 	srl	r3,r4,r3
   8f3d0:	00800274 	movhi	r2,9
   8f3d4:	108f5f04 	addi	r2,r2,15740
   8f3d8:	1887883a 	add	r3,r3,r2
   8f3dc:	18800003 	ldbu	r2,0(r3)
   8f3e0:	00c00804 	movi	r3,32
   8f3e4:	2885883a 	add	r2,r5,r2
   8f3e8:	1885c83a 	sub	r2,r3,r2
   8f3ec:	f800283a 	ret

0008f3f0 <__unpack_f>:
   8f3f0:	21800017 	ldw	r6,0(r4)
   8f3f4:	00c02034 	movhi	r3,128
   8f3f8:	18ffffc4 	addi	r3,r3,-1
   8f3fc:	3004d5fa 	srli	r2,r6,23
   8f400:	3008d7fa 	srli	r4,r6,31
   8f404:	30ce703a 	and	r7,r6,r3
   8f408:	10c03fcc 	andi	r3,r2,255
   8f40c:	29000115 	stw	r4,4(r5)
   8f410:	1800131e 	bne	r3,zero,8f460 <__unpack_f+0x70>
   8f414:	38000f26 	beq	r7,zero,8f454 <__unpack_f+0x64>
   8f418:	380691fa 	slli	r3,r7,7
   8f41c:	01bfe084 	movi	r6,-126
   8f420:	008000c4 	movi	r2,3
   8f424:	01100034 	movhi	r4,16384
   8f428:	213fffc4 	addi	r4,r4,-1
   8f42c:	28800015 	stw	r2,0(r5)
   8f430:	29800215 	stw	r6,8(r5)
   8f434:	20c00536 	bltu	r4,r3,8f44c <__unpack_f+0x5c>
   8f438:	3005883a 	mov	r2,r6
   8f43c:	18c7883a 	add	r3,r3,r3
   8f440:	10bfffc4 	addi	r2,r2,-1
   8f444:	20fffd2e 	bgeu	r4,r3,8f43c <__unpack_f+0x4c>
   8f448:	28800215 	stw	r2,8(r5)
   8f44c:	28c00315 	stw	r3,12(r5)
   8f450:	f800283a 	ret
   8f454:	00800084 	movi	r2,2
   8f458:	28800015 	stw	r2,0(r5)
   8f45c:	f800283a 	ret
   8f460:	00803fc4 	movi	r2,255
   8f464:	18800826 	beq	r3,r2,8f488 <__unpack_f+0x98>
   8f468:	380491fa 	slli	r2,r7,7
   8f46c:	18ffe044 	addi	r3,r3,-127
   8f470:	28c00215 	stw	r3,8(r5)
   8f474:	10900034 	orhi	r2,r2,16384
   8f478:	28800315 	stw	r2,12(r5)
   8f47c:	008000c4 	movi	r2,3
   8f480:	28800015 	stw	r2,0(r5)
   8f484:	f800283a 	ret
   8f488:	3800031e 	bne	r7,zero,8f498 <__unpack_f+0xa8>
   8f48c:	00800104 	movi	r2,4
   8f490:	28800015 	stw	r2,0(r5)
   8f494:	f800283a 	ret
   8f498:	3080042c 	andhi	r2,r6,16
   8f49c:	10000426 	beq	r2,zero,8f4b0 <__unpack_f+0xc0>
   8f4a0:	00800044 	movi	r2,1
   8f4a4:	28800015 	stw	r2,0(r5)
   8f4a8:	29c00315 	stw	r7,12(r5)
   8f4ac:	f800283a 	ret
   8f4b0:	28000015 	stw	zero,0(r5)
   8f4b4:	003ffc06 	br	8f4a8 <__unpack_f+0xb8>

0008f4b8 <__fpcmp_parts_f>:
   8f4b8:	21800017 	ldw	r6,0(r4)
   8f4bc:	00c00044 	movi	r3,1
   8f4c0:	19800a2e 	bgeu	r3,r6,8f4ec <__fpcmp_parts_f+0x34>
   8f4c4:	28800017 	ldw	r2,0(r5)
   8f4c8:	1880082e 	bgeu	r3,r2,8f4ec <__fpcmp_parts_f+0x34>
   8f4cc:	00c00104 	movi	r3,4
   8f4d0:	30c01e26 	beq	r6,r3,8f54c <__fpcmp_parts_f+0x94>
   8f4d4:	10c01a26 	beq	r2,r3,8f540 <__fpcmp_parts_f+0x88>
   8f4d8:	00c00084 	movi	r3,2
   8f4dc:	30c00526 	beq	r6,r3,8f4f4 <__fpcmp_parts_f+0x3c>
   8f4e0:	10c0071e 	bne	r2,r3,8f500 <__fpcmp_parts_f+0x48>
   8f4e4:	20800117 	ldw	r2,4(r4)
   8f4e8:	1000091e 	bne	r2,zero,8f510 <__fpcmp_parts_f+0x58>
   8f4ec:	00800044 	movi	r2,1
   8f4f0:	f800283a 	ret
   8f4f4:	10c0121e 	bne	r2,r3,8f540 <__fpcmp_parts_f+0x88>
   8f4f8:	0005883a 	mov	r2,zero
   8f4fc:	f800283a 	ret
   8f500:	20c00117 	ldw	r3,4(r4)
   8f504:	28800117 	ldw	r2,4(r5)
   8f508:	18800326 	beq	r3,r2,8f518 <__fpcmp_parts_f+0x60>
   8f50c:	183ff726 	beq	r3,zero,8f4ec <__fpcmp_parts_f+0x34>
   8f510:	00bfffc4 	movi	r2,-1
   8f514:	f800283a 	ret
   8f518:	21800217 	ldw	r6,8(r4)
   8f51c:	28800217 	ldw	r2,8(r5)
   8f520:	11bffa16 	blt	r2,r6,8f50c <__fpcmp_parts_f+0x54>
   8f524:	30800416 	blt	r6,r2,8f538 <__fpcmp_parts_f+0x80>
   8f528:	21000317 	ldw	r4,12(r4)
   8f52c:	29400317 	ldw	r5,12(r5)
   8f530:	293ff636 	bltu	r5,r4,8f50c <__fpcmp_parts_f+0x54>
   8f534:	217ff02e 	bgeu	r4,r5,8f4f8 <__fpcmp_parts_f+0x40>
   8f538:	183fec1e 	bne	r3,zero,8f4ec <__fpcmp_parts_f+0x34>
   8f53c:	003ff406 	br	8f510 <__fpcmp_parts_f+0x58>
   8f540:	28800117 	ldw	r2,4(r5)
   8f544:	103fe91e 	bne	r2,zero,8f4ec <__fpcmp_parts_f+0x34>
   8f548:	003ff106 	br	8f510 <__fpcmp_parts_f+0x58>
   8f54c:	11bfe51e 	bne	r2,r6,8f4e4 <__fpcmp_parts_f+0x2c>
   8f550:	28c00117 	ldw	r3,4(r5)
   8f554:	20800117 	ldw	r2,4(r4)
   8f558:	1885c83a 	sub	r2,r3,r2
   8f55c:	f800283a 	ret

0008f560 <__make_fp>:
   8f560:	defffb04 	addi	sp,sp,-20
   8f564:	d9000015 	stw	r4,0(sp)
   8f568:	d809883a 	mov	r4,sp
   8f56c:	dfc00415 	stw	ra,16(sp)
   8f570:	d9400115 	stw	r5,4(sp)
   8f574:	d9800215 	stw	r6,8(sp)
   8f578:	d9c00315 	stw	r7,12(sp)
   8f57c:	008faa00 	call	8faa0 <__pack_f>
   8f580:	dfc00417 	ldw	ra,16(sp)
   8f584:	dec00504 	addi	sp,sp,20
   8f588:	f800283a 	ret

0008f58c <__pack_d>:
   8f58c:	20c00017 	ldw	r3,0(r4)
   8f590:	defffd04 	addi	sp,sp,-12
   8f594:	dc000015 	stw	r16,0(sp)
   8f598:	dc800215 	stw	r18,8(sp)
   8f59c:	dc400115 	stw	r17,4(sp)
   8f5a0:	00800044 	movi	r2,1
   8f5a4:	22000317 	ldw	r8,12(r4)
   8f5a8:	001f883a 	mov	r15,zero
   8f5ac:	22400417 	ldw	r9,16(r4)
   8f5b0:	24000117 	ldw	r16,4(r4)
   8f5b4:	10c0552e 	bgeu	r2,r3,8f70c <__pack_d+0x180>
   8f5b8:	00800104 	movi	r2,4
   8f5bc:	18804f26 	beq	r3,r2,8f6fc <__pack_d+0x170>
   8f5c0:	00800084 	movi	r2,2
   8f5c4:	18800226 	beq	r3,r2,8f5d0 <__pack_d+0x44>
   8f5c8:	4244b03a 	or	r2,r8,r9
   8f5cc:	10001a1e 	bne	r2,zero,8f638 <__pack_d+0xac>
   8f5d0:	000d883a 	mov	r6,zero
   8f5d4:	000f883a 	mov	r7,zero
   8f5d8:	0011883a 	mov	r8,zero
   8f5dc:	00800434 	movhi	r2,16
   8f5e0:	10bfffc4 	addi	r2,r2,-1
   8f5e4:	301d883a 	mov	r14,r6
   8f5e8:	3884703a 	and	r2,r7,r2
   8f5ec:	400a953a 	slli	r5,r8,20
   8f5f0:	79bffc2c 	andhi	r6,r15,65520
   8f5f4:	308cb03a 	or	r6,r6,r2
   8f5f8:	00e00434 	movhi	r3,32784
   8f5fc:	18ffffc4 	addi	r3,r3,-1
   8f600:	800497fa 	slli	r2,r16,31
   8f604:	30c6703a 	and	r3,r6,r3
   8f608:	1946b03a 	or	r3,r3,r5
   8f60c:	01600034 	movhi	r5,32768
   8f610:	297fffc4 	addi	r5,r5,-1
   8f614:	194a703a 	and	r5,r3,r5
   8f618:	288ab03a 	or	r5,r5,r2
   8f61c:	2807883a 	mov	r3,r5
   8f620:	7005883a 	mov	r2,r14
   8f624:	dc800217 	ldw	r18,8(sp)
   8f628:	dc400117 	ldw	r17,4(sp)
   8f62c:	dc000017 	ldw	r16,0(sp)
   8f630:	dec00304 	addi	sp,sp,12
   8f634:	f800283a 	ret
   8f638:	21000217 	ldw	r4,8(r4)
   8f63c:	00bf0084 	movi	r2,-1022
   8f640:	20803f16 	blt	r4,r2,8f740 <__pack_d+0x1b4>
   8f644:	0080ffc4 	movi	r2,1023
   8f648:	11002c16 	blt	r2,r4,8f6fc <__pack_d+0x170>
   8f64c:	00803fc4 	movi	r2,255
   8f650:	408c703a 	and	r6,r8,r2
   8f654:	00802004 	movi	r2,128
   8f658:	0007883a 	mov	r3,zero
   8f65c:	000f883a 	mov	r7,zero
   8f660:	2280ffc4 	addi	r10,r4,1023
   8f664:	30801e26 	beq	r6,r2,8f6e0 <__pack_d+0x154>
   8f668:	00801fc4 	movi	r2,127
   8f66c:	4089883a 	add	r4,r8,r2
   8f670:	220d803a 	cmpltu	r6,r4,r8
   8f674:	324d883a 	add	r6,r6,r9
   8f678:	2011883a 	mov	r8,r4
   8f67c:	3013883a 	mov	r9,r6
   8f680:	00880034 	movhi	r2,8192
   8f684:	10bfffc4 	addi	r2,r2,-1
   8f688:	12400d36 	bltu	r2,r9,8f6c0 <__pack_d+0x134>
   8f68c:	4804963a 	slli	r2,r9,24
   8f690:	400cd23a 	srli	r6,r8,8
   8f694:	480ed23a 	srli	r7,r9,8
   8f698:	013fffc4 	movi	r4,-1
   8f69c:	118cb03a 	or	r6,r2,r6
   8f6a0:	01400434 	movhi	r5,16
   8f6a4:	297fffc4 	addi	r5,r5,-1
   8f6a8:	3104703a 	and	r2,r6,r4
   8f6ac:	3946703a 	and	r3,r7,r5
   8f6b0:	5201ffcc 	andi	r8,r10,2047
   8f6b4:	100d883a 	mov	r6,r2
   8f6b8:	180f883a 	mov	r7,r3
   8f6bc:	003fc706 	br	8f5dc <__pack_d+0x50>
   8f6c0:	480897fa 	slli	r4,r9,31
   8f6c4:	4004d07a 	srli	r2,r8,1
   8f6c8:	4806d07a 	srli	r3,r9,1
   8f6cc:	52800044 	addi	r10,r10,1
   8f6d0:	2084b03a 	or	r2,r4,r2
   8f6d4:	1011883a 	mov	r8,r2
   8f6d8:	1813883a 	mov	r9,r3
   8f6dc:	003feb06 	br	8f68c <__pack_d+0x100>
   8f6e0:	383fe11e 	bne	r7,zero,8f668 <__pack_d+0xdc>
   8f6e4:	01004004 	movi	r4,256
   8f6e8:	4104703a 	and	r2,r8,r4
   8f6ec:	10c4b03a 	or	r2,r2,r3
   8f6f0:	103fe326 	beq	r2,zero,8f680 <__pack_d+0xf4>
   8f6f4:	3005883a 	mov	r2,r6
   8f6f8:	003fdc06 	br	8f66c <__pack_d+0xe0>
   8f6fc:	000d883a 	mov	r6,zero
   8f700:	000f883a 	mov	r7,zero
   8f704:	0201ffc4 	movi	r8,2047
   8f708:	003fb406 	br	8f5dc <__pack_d+0x50>
   8f70c:	0005883a 	mov	r2,zero
   8f710:	00c00234 	movhi	r3,8
   8f714:	408cb03a 	or	r6,r8,r2
   8f718:	48ceb03a 	or	r7,r9,r3
   8f71c:	013fffc4 	movi	r4,-1
   8f720:	01400434 	movhi	r5,16
   8f724:	297fffc4 	addi	r5,r5,-1
   8f728:	3104703a 	and	r2,r6,r4
   8f72c:	3946703a 	and	r3,r7,r5
   8f730:	100d883a 	mov	r6,r2
   8f734:	180f883a 	mov	r7,r3
   8f738:	0201ffc4 	movi	r8,2047
   8f73c:	003fa706 	br	8f5dc <__pack_d+0x50>
   8f740:	1109c83a 	sub	r4,r2,r4
   8f744:	00800e04 	movi	r2,56
   8f748:	11004316 	blt	r2,r4,8f858 <__pack_d+0x2cc>
   8f74c:	21fff804 	addi	r7,r4,-32
   8f750:	38004516 	blt	r7,zero,8f868 <__pack_d+0x2dc>
   8f754:	49d8d83a 	srl	r12,r9,r7
   8f758:	001b883a 	mov	r13,zero
   8f75c:	0023883a 	mov	r17,zero
   8f760:	01400044 	movi	r5,1
   8f764:	0025883a 	mov	r18,zero
   8f768:	38004716 	blt	r7,zero,8f888 <__pack_d+0x2fc>
   8f76c:	29d6983a 	sll	r11,r5,r7
   8f770:	0015883a 	mov	r10,zero
   8f774:	00bfffc4 	movi	r2,-1
   8f778:	5089883a 	add	r4,r10,r2
   8f77c:	588b883a 	add	r5,r11,r2
   8f780:	228d803a 	cmpltu	r6,r4,r10
   8f784:	314b883a 	add	r5,r6,r5
   8f788:	4104703a 	and	r2,r8,r4
   8f78c:	4946703a 	and	r3,r9,r5
   8f790:	10c4b03a 	or	r2,r2,r3
   8f794:	10000226 	beq	r2,zero,8f7a0 <__pack_d+0x214>
   8f798:	04400044 	movi	r17,1
   8f79c:	0025883a 	mov	r18,zero
   8f7a0:	00803fc4 	movi	r2,255
   8f7a4:	644eb03a 	or	r7,r12,r17
   8f7a8:	3892703a 	and	r9,r7,r2
   8f7ac:	00802004 	movi	r2,128
   8f7b0:	6c90b03a 	or	r8,r13,r18
   8f7b4:	0015883a 	mov	r10,zero
   8f7b8:	48801626 	beq	r9,r2,8f814 <__pack_d+0x288>
   8f7bc:	01001fc4 	movi	r4,127
   8f7c0:	3905883a 	add	r2,r7,r4
   8f7c4:	11cd803a 	cmpltu	r6,r2,r7
   8f7c8:	320d883a 	add	r6,r6,r8
   8f7cc:	100f883a 	mov	r7,r2
   8f7d0:	00840034 	movhi	r2,4096
   8f7d4:	10bfffc4 	addi	r2,r2,-1
   8f7d8:	3011883a 	mov	r8,r6
   8f7dc:	0007883a 	mov	r3,zero
   8f7e0:	11801b36 	bltu	r2,r6,8f850 <__pack_d+0x2c4>
   8f7e4:	4004963a 	slli	r2,r8,24
   8f7e8:	3808d23a 	srli	r4,r7,8
   8f7ec:	400ad23a 	srli	r5,r8,8
   8f7f0:	1813883a 	mov	r9,r3
   8f7f4:	1108b03a 	or	r4,r2,r4
   8f7f8:	00bfffc4 	movi	r2,-1
   8f7fc:	00c00434 	movhi	r3,16
   8f800:	18ffffc4 	addi	r3,r3,-1
   8f804:	208c703a 	and	r6,r4,r2
   8f808:	28ce703a 	and	r7,r5,r3
   8f80c:	4a01ffcc 	andi	r8,r9,2047
   8f810:	003f7206 	br	8f5dc <__pack_d+0x50>
   8f814:	503fe91e 	bne	r10,zero,8f7bc <__pack_d+0x230>
   8f818:	01004004 	movi	r4,256
   8f81c:	3904703a 	and	r2,r7,r4
   8f820:	0007883a 	mov	r3,zero
   8f824:	10c4b03a 	or	r2,r2,r3
   8f828:	10000626 	beq	r2,zero,8f844 <__pack_d+0x2b8>
   8f82c:	3a45883a 	add	r2,r7,r9
   8f830:	11cd803a 	cmpltu	r6,r2,r7
   8f834:	320d883a 	add	r6,r6,r8
   8f838:	100f883a 	mov	r7,r2
   8f83c:	3011883a 	mov	r8,r6
   8f840:	0007883a 	mov	r3,zero
   8f844:	00840034 	movhi	r2,4096
   8f848:	10bfffc4 	addi	r2,r2,-1
   8f84c:	123fe52e 	bgeu	r2,r8,8f7e4 <__pack_d+0x258>
   8f850:	00c00044 	movi	r3,1
   8f854:	003fe306 	br	8f7e4 <__pack_d+0x258>
   8f858:	0009883a 	mov	r4,zero
   8f85c:	0013883a 	mov	r9,zero
   8f860:	000b883a 	mov	r5,zero
   8f864:	003fe406 	br	8f7f8 <__pack_d+0x26c>
   8f868:	4a47883a 	add	r3,r9,r9
   8f86c:	008007c4 	movi	r2,31
   8f870:	1105c83a 	sub	r2,r2,r4
   8f874:	1886983a 	sll	r3,r3,r2
   8f878:	4118d83a 	srl	r12,r8,r4
   8f87c:	491ad83a 	srl	r13,r9,r4
   8f880:	1b18b03a 	or	r12,r3,r12
   8f884:	003fb506 	br	8f75c <__pack_d+0x1d0>
   8f888:	2806d07a 	srli	r3,r5,1
   8f88c:	008007c4 	movi	r2,31
   8f890:	1105c83a 	sub	r2,r2,r4
   8f894:	1896d83a 	srl	r11,r3,r2
   8f898:	2914983a 	sll	r10,r5,r4
   8f89c:	003fb506 	br	8f774 <__pack_d+0x1e8>

0008f8a0 <__unpack_d>:
   8f8a0:	20c00117 	ldw	r3,4(r4)
   8f8a4:	22400017 	ldw	r9,0(r4)
   8f8a8:	00800434 	movhi	r2,16
   8f8ac:	10bfffc4 	addi	r2,r2,-1
   8f8b0:	1808d53a 	srli	r4,r3,20
   8f8b4:	180cd7fa 	srli	r6,r3,31
   8f8b8:	1894703a 	and	r10,r3,r2
   8f8bc:	2201ffcc 	andi	r8,r4,2047
   8f8c0:	281b883a 	mov	r13,r5
   8f8c4:	4817883a 	mov	r11,r9
   8f8c8:	29800115 	stw	r6,4(r5)
   8f8cc:	5019883a 	mov	r12,r10
   8f8d0:	40001e1e 	bne	r8,zero,8f94c <__unpack_d+0xac>
   8f8d4:	4a84b03a 	or	r2,r9,r10
   8f8d8:	10001926 	beq	r2,zero,8f940 <__unpack_d+0xa0>
   8f8dc:	4804d63a 	srli	r2,r9,24
   8f8e0:	500c923a 	slli	r6,r10,8
   8f8e4:	013f0084 	movi	r4,-1022
   8f8e8:	00c40034 	movhi	r3,4096
   8f8ec:	18ffffc4 	addi	r3,r3,-1
   8f8f0:	118cb03a 	or	r6,r2,r6
   8f8f4:	008000c4 	movi	r2,3
   8f8f8:	480a923a 	slli	r5,r9,8
   8f8fc:	68800015 	stw	r2,0(r13)
   8f900:	69000215 	stw	r4,8(r13)
   8f904:	19800b36 	bltu	r3,r6,8f934 <__unpack_d+0x94>
   8f908:	200f883a 	mov	r7,r4
   8f90c:	1811883a 	mov	r8,r3
   8f910:	2945883a 	add	r2,r5,r5
   8f914:	1149803a 	cmpltu	r4,r2,r5
   8f918:	3187883a 	add	r3,r6,r6
   8f91c:	20c9883a 	add	r4,r4,r3
   8f920:	100b883a 	mov	r5,r2
   8f924:	200d883a 	mov	r6,r4
   8f928:	39ffffc4 	addi	r7,r7,-1
   8f92c:	413ff82e 	bgeu	r8,r4,8f910 <__unpack_d+0x70>
   8f930:	69c00215 	stw	r7,8(r13)
   8f934:	69800415 	stw	r6,16(r13)
   8f938:	69400315 	stw	r5,12(r13)
   8f93c:	f800283a 	ret
   8f940:	00800084 	movi	r2,2
   8f944:	28800015 	stw	r2,0(r5)
   8f948:	f800283a 	ret
   8f94c:	0081ffc4 	movi	r2,2047
   8f950:	40800f26 	beq	r8,r2,8f990 <__unpack_d+0xf0>
   8f954:	480cd63a 	srli	r6,r9,24
   8f958:	5006923a 	slli	r3,r10,8
   8f95c:	4804923a 	slli	r2,r9,8
   8f960:	0009883a 	mov	r4,zero
   8f964:	30c6b03a 	or	r3,r6,r3
   8f968:	01440034 	movhi	r5,4096
   8f96c:	110cb03a 	or	r6,r2,r4
   8f970:	423f0044 	addi	r8,r8,-1023
   8f974:	194eb03a 	or	r7,r3,r5
   8f978:	008000c4 	movi	r2,3
   8f97c:	69c00415 	stw	r7,16(r13)
   8f980:	6a000215 	stw	r8,8(r13)
   8f984:	68800015 	stw	r2,0(r13)
   8f988:	69800315 	stw	r6,12(r13)
   8f98c:	f800283a 	ret
   8f990:	4a84b03a 	or	r2,r9,r10
   8f994:	1000031e 	bne	r2,zero,8f9a4 <__unpack_d+0x104>
   8f998:	00800104 	movi	r2,4
   8f99c:	28800015 	stw	r2,0(r5)
   8f9a0:	f800283a 	ret
   8f9a4:	0009883a 	mov	r4,zero
   8f9a8:	01400234 	movhi	r5,8
   8f9ac:	4904703a 	and	r2,r9,r4
   8f9b0:	5146703a 	and	r3,r10,r5
   8f9b4:	10c4b03a 	or	r2,r2,r3
   8f9b8:	10000526 	beq	r2,zero,8f9d0 <__unpack_d+0x130>
   8f9bc:	00800044 	movi	r2,1
   8f9c0:	68800015 	stw	r2,0(r13)
   8f9c4:	6b000415 	stw	r12,16(r13)
   8f9c8:	6ac00315 	stw	r11,12(r13)
   8f9cc:	f800283a 	ret
   8f9d0:	68000015 	stw	zero,0(r13)
   8f9d4:	003ffb06 	br	8f9c4 <__unpack_d+0x124>

0008f9d8 <__fpcmp_parts_d>:
   8f9d8:	21800017 	ldw	r6,0(r4)
   8f9dc:	00c00044 	movi	r3,1
   8f9e0:	19800a2e 	bgeu	r3,r6,8fa0c <__fpcmp_parts_d+0x34>
   8f9e4:	28800017 	ldw	r2,0(r5)
   8f9e8:	1880082e 	bgeu	r3,r2,8fa0c <__fpcmp_parts_d+0x34>
   8f9ec:	00c00104 	movi	r3,4
   8f9f0:	30c02626 	beq	r6,r3,8fa8c <__fpcmp_parts_d+0xb4>
   8f9f4:	10c02226 	beq	r2,r3,8fa80 <__fpcmp_parts_d+0xa8>
   8f9f8:	00c00084 	movi	r3,2
   8f9fc:	30c00526 	beq	r6,r3,8fa14 <__fpcmp_parts_d+0x3c>
   8fa00:	10c0071e 	bne	r2,r3,8fa20 <__fpcmp_parts_d+0x48>
   8fa04:	20800117 	ldw	r2,4(r4)
   8fa08:	1000091e 	bne	r2,zero,8fa30 <__fpcmp_parts_d+0x58>
   8fa0c:	00800044 	movi	r2,1
   8fa10:	f800283a 	ret
   8fa14:	10c01a1e 	bne	r2,r3,8fa80 <__fpcmp_parts_d+0xa8>
   8fa18:	0005883a 	mov	r2,zero
   8fa1c:	f800283a 	ret
   8fa20:	22000117 	ldw	r8,4(r4)
   8fa24:	28800117 	ldw	r2,4(r5)
   8fa28:	40800326 	beq	r8,r2,8fa38 <__fpcmp_parts_d+0x60>
   8fa2c:	403ff726 	beq	r8,zero,8fa0c <__fpcmp_parts_d+0x34>
   8fa30:	00bfffc4 	movi	r2,-1
   8fa34:	f800283a 	ret
   8fa38:	20c00217 	ldw	r3,8(r4)
   8fa3c:	28800217 	ldw	r2,8(r5)
   8fa40:	10fffa16 	blt	r2,r3,8fa2c <__fpcmp_parts_d+0x54>
   8fa44:	18800916 	blt	r3,r2,8fa6c <__fpcmp_parts_d+0x94>
   8fa48:	21c00417 	ldw	r7,16(r4)
   8fa4c:	28c00417 	ldw	r3,16(r5)
   8fa50:	21800317 	ldw	r6,12(r4)
   8fa54:	28800317 	ldw	r2,12(r5)
   8fa58:	19fff436 	bltu	r3,r7,8fa2c <__fpcmp_parts_d+0x54>
   8fa5c:	38c00526 	beq	r7,r3,8fa74 <__fpcmp_parts_d+0x9c>
   8fa60:	38c00236 	bltu	r7,r3,8fa6c <__fpcmp_parts_d+0x94>
   8fa64:	19ffec1e 	bne	r3,r7,8fa18 <__fpcmp_parts_d+0x40>
   8fa68:	30bfeb2e 	bgeu	r6,r2,8fa18 <__fpcmp_parts_d+0x40>
   8fa6c:	403fe71e 	bne	r8,zero,8fa0c <__fpcmp_parts_d+0x34>
   8fa70:	003fef06 	br	8fa30 <__fpcmp_parts_d+0x58>
   8fa74:	11bffa2e 	bgeu	r2,r6,8fa60 <__fpcmp_parts_d+0x88>
   8fa78:	403fe426 	beq	r8,zero,8fa0c <__fpcmp_parts_d+0x34>
   8fa7c:	003fec06 	br	8fa30 <__fpcmp_parts_d+0x58>
   8fa80:	28800117 	ldw	r2,4(r5)
   8fa84:	103fe11e 	bne	r2,zero,8fa0c <__fpcmp_parts_d+0x34>
   8fa88:	003fe906 	br	8fa30 <__fpcmp_parts_d+0x58>
   8fa8c:	11bfdd1e 	bne	r2,r6,8fa04 <__fpcmp_parts_d+0x2c>
   8fa90:	28c00117 	ldw	r3,4(r5)
   8fa94:	20800117 	ldw	r2,4(r4)
   8fa98:	1885c83a 	sub	r2,r3,r2
   8fa9c:	f800283a 	ret

0008faa0 <__pack_f>:
   8faa0:	20c00017 	ldw	r3,0(r4)
   8faa4:	01c00044 	movi	r7,1
   8faa8:	21800317 	ldw	r6,12(r4)
   8faac:	21400117 	ldw	r5,4(r4)
   8fab0:	38c02d2e 	bgeu	r7,r3,8fb68 <__pack_f+0xc8>
   8fab4:	00800104 	movi	r2,4
   8fab8:	18802826 	beq	r3,r2,8fb5c <__pack_f+0xbc>
   8fabc:	00800084 	movi	r2,2
   8fac0:	18800126 	beq	r3,r2,8fac8 <__pack_f+0x28>
   8fac4:	3000101e 	bne	r6,zero,8fb08 <__pack_f+0x68>
   8fac8:	000d883a 	mov	r6,zero
   8facc:	0007883a 	mov	r3,zero
   8fad0:	19003fcc 	andi	r4,r3,255
   8fad4:	200895fa 	slli	r4,r4,23
   8fad8:	00c02034 	movhi	r3,128
   8fadc:	18ffffc4 	addi	r3,r3,-1
   8fae0:	30c6703a 	and	r3,r6,r3
   8fae4:	10a0002c 	andhi	r2,r2,32768
   8fae8:	10c4b03a 	or	r2,r2,r3
   8faec:	280a97fa 	slli	r5,r5,31
   8faf0:	1104b03a 	or	r2,r2,r4
   8faf4:	00e00034 	movhi	r3,32768
   8faf8:	18ffffc4 	addi	r3,r3,-1
   8fafc:	10c4703a 	and	r2,r2,r3
   8fb00:	1144b03a 	or	r2,r2,r5
   8fb04:	f800283a 	ret
   8fb08:	21000217 	ldw	r4,8(r4)
   8fb0c:	00bfe084 	movi	r2,-126
   8fb10:	20801b16 	blt	r4,r2,8fb80 <__pack_f+0xe0>
   8fb14:	00801fc4 	movi	r2,127
   8fb18:	11001016 	blt	r2,r4,8fb5c <__pack_f+0xbc>
   8fb1c:	308e703a 	and	r7,r6,r2
   8fb20:	2087883a 	add	r3,r4,r2
   8fb24:	00801004 	movi	r2,64
   8fb28:	38800526 	beq	r7,r2,8fb40 <__pack_f+0xa0>
   8fb2c:	31800fc4 	addi	r6,r6,63
   8fb30:	30000716 	blt	r6,zero,8fb50 <__pack_f+0xb0>
   8fb34:	300490ba 	slli	r2,r6,2
   8fb38:	100cd27a 	srli	r6,r2,9
   8fb3c:	003fe406 	br	8fad0 <__pack_f+0x30>
   8fb40:	3080200c 	andi	r2,r6,128
   8fb44:	103ffa26 	beq	r2,zero,8fb30 <__pack_f+0x90>
   8fb48:	31cd883a 	add	r6,r6,r7
   8fb4c:	003ff806 	br	8fb30 <__pack_f+0x90>
   8fb50:	300cd07a 	srli	r6,r6,1
   8fb54:	18c00044 	addi	r3,r3,1
   8fb58:	003ff606 	br	8fb34 <__pack_f+0x94>
   8fb5c:	000d883a 	mov	r6,zero
   8fb60:	00ffffc4 	movi	r3,-1
   8fb64:	003fda06 	br	8fad0 <__pack_f+0x30>
   8fb68:	31800434 	orhi	r6,r6,16
   8fb6c:	00802034 	movhi	r2,128
   8fb70:	10bfffc4 	addi	r2,r2,-1
   8fb74:	308c703a 	and	r6,r6,r2
   8fb78:	00ffffc4 	movi	r3,-1
   8fb7c:	003fd406 	br	8fad0 <__pack_f+0x30>
   8fb80:	1109c83a 	sub	r4,r2,r4
   8fb84:	00800644 	movi	r2,25
   8fb88:	11001216 	blt	r2,r4,8fbd4 <__pack_f+0x134>
   8fb8c:	3904983a 	sll	r2,r7,r4
   8fb90:	3106d83a 	srl	r3,r6,r4
   8fb94:	10bfffc4 	addi	r2,r2,-1
   8fb98:	3084703a 	and	r2,r6,r2
   8fb9c:	1004c03a 	cmpne	r2,r2,zero
   8fba0:	1886b03a 	or	r3,r3,r2
   8fba4:	19001fcc 	andi	r4,r3,127
   8fba8:	00801004 	movi	r2,64
   8fbac:	20800c26 	beq	r4,r2,8fbe0 <__pack_f+0x140>
   8fbb0:	18c00fc4 	addi	r3,r3,63
   8fbb4:	00900034 	movhi	r2,16384
   8fbb8:	10bfffc4 	addi	r2,r2,-1
   8fbbc:	180cd1fa 	srli	r6,r3,7
   8fbc0:	10c7803a 	cmpltu	r3,r2,r3
   8fbc4:	00802034 	movhi	r2,128
   8fbc8:	10bfffc4 	addi	r2,r2,-1
   8fbcc:	308c703a 	and	r6,r6,r2
   8fbd0:	003fbf06 	br	8fad0 <__pack_f+0x30>
   8fbd4:	0007883a 	mov	r3,zero
   8fbd8:	000d883a 	mov	r6,zero
   8fbdc:	003ff906 	br	8fbc4 <__pack_f+0x124>
   8fbe0:	1880200c 	andi	r2,r3,128
   8fbe4:	10000126 	beq	r2,zero,8fbec <__pack_f+0x14c>
   8fbe8:	1907883a 	add	r3,r3,r4
   8fbec:	180cd1fa 	srli	r6,r3,7
   8fbf0:	00900034 	movhi	r2,16384
   8fbf4:	10bfffc4 	addi	r2,r2,-1
   8fbf8:	10c7803a 	cmpltu	r3,r2,r3
   8fbfc:	003ff106 	br	8fbc4 <__pack_f+0x124>

0008fc00 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   8fc00:	defff804 	addi	sp,sp,-32
   8fc04:	dfc00715 	stw	ra,28(sp)
   8fc08:	df000615 	stw	fp,24(sp)
   8fc0c:	df000604 	addi	fp,sp,24
   8fc10:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   8fc14:	e0bffc17 	ldw	r2,-16(fp)
   8fc18:	1004803a 	cmplt	r2,r2,zero
   8fc1c:	1000091e 	bne	r2,zero,8fc44 <close+0x44>
   8fc20:	e13ffc17 	ldw	r4,-16(fp)
   8fc24:	01400304 	movi	r5,12
   8fc28:	008f3380 	call	8f338 <__mulsi3>
   8fc2c:	1007883a 	mov	r3,r2
   8fc30:	00800274 	movhi	r2,9
   8fc34:	1091c804 	addi	r2,r2,18208
   8fc38:	1887883a 	add	r3,r3,r2
   8fc3c:	e0ffff15 	stw	r3,-4(fp)
   8fc40:	00000106 	br	8fc48 <close+0x48>
   8fc44:	e03fff15 	stw	zero,-4(fp)
   8fc48:	e0bfff17 	ldw	r2,-4(fp)
   8fc4c:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
   8fc50:	e0bffb17 	ldw	r2,-20(fp)
   8fc54:	1005003a 	cmpeq	r2,r2,zero
   8fc58:	10001d1e 	bne	r2,zero,8fcd0 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   8fc5c:	e0bffb17 	ldw	r2,-20(fp)
   8fc60:	10800017 	ldw	r2,0(r2)
   8fc64:	10800417 	ldw	r2,16(r2)
   8fc68:	1005003a 	cmpeq	r2,r2,zero
   8fc6c:	1000071e 	bne	r2,zero,8fc8c <close+0x8c>
   8fc70:	e0bffb17 	ldw	r2,-20(fp)
   8fc74:	10800017 	ldw	r2,0(r2)
   8fc78:	10800417 	ldw	r2,16(r2)
   8fc7c:	e13ffb17 	ldw	r4,-20(fp)
   8fc80:	103ee83a 	callr	r2
   8fc84:	e0bffe15 	stw	r2,-8(fp)
   8fc88:	00000106 	br	8fc90 <close+0x90>
   8fc8c:	e03ffe15 	stw	zero,-8(fp)
   8fc90:	e0bffe17 	ldw	r2,-8(fp)
   8fc94:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   8fc98:	e13ffc17 	ldw	r4,-16(fp)
   8fc9c:	009073c0 	call	9073c <alt_release_fd>
    if (rval < 0)
   8fca0:	e0bffa17 	ldw	r2,-24(fp)
   8fca4:	1004403a 	cmpge	r2,r2,zero
   8fca8:	1000071e 	bne	r2,zero,8fcc8 <close+0xc8>
    {
      ALT_ERRNO = -rval;
   8fcac:	008fd000 	call	8fd00 <alt_get_errno>
   8fcb0:	e0fffa17 	ldw	r3,-24(fp)
   8fcb4:	00c7c83a 	sub	r3,zero,r3
   8fcb8:	10c00015 	stw	r3,0(r2)
      return -1;
   8fcbc:	00bfffc4 	movi	r2,-1
   8fcc0:	e0bffd15 	stw	r2,-12(fp)
   8fcc4:	00000806 	br	8fce8 <close+0xe8>
    }
    return 0;
   8fcc8:	e03ffd15 	stw	zero,-12(fp)
   8fccc:	00000606 	br	8fce8 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8fcd0:	008fd000 	call	8fd00 <alt_get_errno>
   8fcd4:	1007883a 	mov	r3,r2
   8fcd8:	00801444 	movi	r2,81
   8fcdc:	18800015 	stw	r2,0(r3)
    return -1;
   8fce0:	00bfffc4 	movi	r2,-1
   8fce4:	e0bffd15 	stw	r2,-12(fp)
   8fce8:	e0bffd17 	ldw	r2,-12(fp)
  }
}
   8fcec:	e037883a 	mov	sp,fp
   8fcf0:	dfc00117 	ldw	ra,4(sp)
   8fcf4:	df000017 	ldw	fp,0(sp)
   8fcf8:	dec00204 	addi	sp,sp,8
   8fcfc:	f800283a 	ret

0008fd00 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8fd00:	defffd04 	addi	sp,sp,-12
   8fd04:	dfc00215 	stw	ra,8(sp)
   8fd08:	df000115 	stw	fp,4(sp)
   8fd0c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8fd10:	00800274 	movhi	r2,9
   8fd14:	10969404 	addi	r2,r2,23120
   8fd18:	10800017 	ldw	r2,0(r2)
   8fd1c:	1005003a 	cmpeq	r2,r2,zero
   8fd20:	1000061e 	bne	r2,zero,8fd3c <alt_get_errno+0x3c>
   8fd24:	00800274 	movhi	r2,9
   8fd28:	10969404 	addi	r2,r2,23120
   8fd2c:	10800017 	ldw	r2,0(r2)
   8fd30:	103ee83a 	callr	r2
   8fd34:	e0bfff15 	stw	r2,-4(fp)
   8fd38:	00000306 	br	8fd48 <alt_get_errno+0x48>
   8fd3c:	00800274 	movhi	r2,9
   8fd40:	109d8504 	addi	r2,r2,30228
   8fd44:	e0bfff15 	stw	r2,-4(fp)
   8fd48:	e0bfff17 	ldw	r2,-4(fp)
}
   8fd4c:	e037883a 	mov	sp,fp
   8fd50:	dfc00117 	ldw	ra,4(sp)
   8fd54:	df000017 	ldw	fp,0(sp)
   8fd58:	dec00204 	addi	sp,sp,8
   8fd5c:	f800283a 	ret

0008fd60 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   8fd60:	defffc04 	addi	sp,sp,-16
   8fd64:	df000315 	stw	fp,12(sp)
   8fd68:	df000304 	addi	fp,sp,12
   8fd6c:	e13ffd15 	stw	r4,-12(fp)
   8fd70:	e17ffe15 	stw	r5,-8(fp)
   8fd74:	e1bfff15 	stw	r6,-4(fp)
  return len;
   8fd78:	e0bfff17 	ldw	r2,-4(fp)
}
   8fd7c:	e037883a 	mov	sp,fp
   8fd80:	df000017 	ldw	fp,0(sp)
   8fd84:	dec00104 	addi	sp,sp,4
   8fd88:	f800283a 	ret

0008fd8c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   8fd8c:	defff904 	addi	sp,sp,-28
   8fd90:	dfc00615 	stw	ra,24(sp)
   8fd94:	df000515 	stw	fp,20(sp)
   8fd98:	df000504 	addi	fp,sp,20
   8fd9c:	e13ffc15 	stw	r4,-16(fp)
   8fda0:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8fda4:	e0bffc17 	ldw	r2,-16(fp)
   8fda8:	1004803a 	cmplt	r2,r2,zero
   8fdac:	1000091e 	bne	r2,zero,8fdd4 <fstat+0x48>
   8fdb0:	e13ffc17 	ldw	r4,-16(fp)
   8fdb4:	01400304 	movi	r5,12
   8fdb8:	008f3380 	call	8f338 <__mulsi3>
   8fdbc:	1007883a 	mov	r3,r2
   8fdc0:	00800274 	movhi	r2,9
   8fdc4:	1091c804 	addi	r2,r2,18208
   8fdc8:	1887883a 	add	r3,r3,r2
   8fdcc:	e0ffff15 	stw	r3,-4(fp)
   8fdd0:	00000106 	br	8fdd8 <fstat+0x4c>
   8fdd4:	e03fff15 	stw	zero,-4(fp)
   8fdd8:	e0bfff17 	ldw	r2,-4(fp)
   8fddc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8fde0:	e0bffb17 	ldw	r2,-20(fp)
   8fde4:	1005003a 	cmpeq	r2,r2,zero
   8fde8:	1000121e 	bne	r2,zero,8fe34 <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   8fdec:	e0bffb17 	ldw	r2,-20(fp)
   8fdf0:	10800017 	ldw	r2,0(r2)
   8fdf4:	10800817 	ldw	r2,32(r2)
   8fdf8:	1005003a 	cmpeq	r2,r2,zero
   8fdfc:	1000081e 	bne	r2,zero,8fe20 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
   8fe00:	e0bffb17 	ldw	r2,-20(fp)
   8fe04:	10800017 	ldw	r2,0(r2)
   8fe08:	10800817 	ldw	r2,32(r2)
   8fe0c:	e13ffb17 	ldw	r4,-20(fp)
   8fe10:	e17ffd17 	ldw	r5,-12(fp)
   8fe14:	103ee83a 	callr	r2
   8fe18:	e0bffe15 	stw	r2,-8(fp)
   8fe1c:	00000b06 	br	8fe4c <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   8fe20:	e0fffd17 	ldw	r3,-12(fp)
   8fe24:	00880004 	movi	r2,8192
   8fe28:	18800115 	stw	r2,4(r3)
      return 0;
   8fe2c:	e03ffe15 	stw	zero,-8(fp)
   8fe30:	00000606 	br	8fe4c <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8fe34:	008fe640 	call	8fe64 <alt_get_errno>
   8fe38:	1007883a 	mov	r3,r2
   8fe3c:	00801444 	movi	r2,81
   8fe40:	18800015 	stw	r2,0(r3)
    return -1;
   8fe44:	00bfffc4 	movi	r2,-1
   8fe48:	e0bffe15 	stw	r2,-8(fp)
   8fe4c:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   8fe50:	e037883a 	mov	sp,fp
   8fe54:	dfc00117 	ldw	ra,4(sp)
   8fe58:	df000017 	ldw	fp,0(sp)
   8fe5c:	dec00204 	addi	sp,sp,8
   8fe60:	f800283a 	ret

0008fe64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8fe64:	defffd04 	addi	sp,sp,-12
   8fe68:	dfc00215 	stw	ra,8(sp)
   8fe6c:	df000115 	stw	fp,4(sp)
   8fe70:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8fe74:	00800274 	movhi	r2,9
   8fe78:	10969404 	addi	r2,r2,23120
   8fe7c:	10800017 	ldw	r2,0(r2)
   8fe80:	1005003a 	cmpeq	r2,r2,zero
   8fe84:	1000061e 	bne	r2,zero,8fea0 <alt_get_errno+0x3c>
   8fe88:	00800274 	movhi	r2,9
   8fe8c:	10969404 	addi	r2,r2,23120
   8fe90:	10800017 	ldw	r2,0(r2)
   8fe94:	103ee83a 	callr	r2
   8fe98:	e0bfff15 	stw	r2,-4(fp)
   8fe9c:	00000306 	br	8feac <alt_get_errno+0x48>
   8fea0:	00800274 	movhi	r2,9
   8fea4:	109d8504 	addi	r2,r2,30228
   8fea8:	e0bfff15 	stw	r2,-4(fp)
   8feac:	e0bfff17 	ldw	r2,-4(fp)
}
   8feb0:	e037883a 	mov	sp,fp
   8feb4:	dfc00117 	ldw	ra,4(sp)
   8feb8:	df000017 	ldw	fp,0(sp)
   8febc:	dec00204 	addi	sp,sp,8
   8fec0:	f800283a 	ret

0008fec4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   8fec4:	deffeb04 	addi	sp,sp,-84
   8fec8:	dfc01415 	stw	ra,80(sp)
   8fecc:	df001315 	stw	fp,76(sp)
   8fed0:	df001304 	addi	fp,sp,76
   8fed4:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8fed8:	e0bffd17 	ldw	r2,-12(fp)
   8fedc:	1004803a 	cmplt	r2,r2,zero
   8fee0:	1000091e 	bne	r2,zero,8ff08 <isatty+0x44>
   8fee4:	e13ffd17 	ldw	r4,-12(fp)
   8fee8:	01400304 	movi	r5,12
   8feec:	008f3380 	call	8f338 <__mulsi3>
   8fef0:	1007883a 	mov	r3,r2
   8fef4:	00800274 	movhi	r2,9
   8fef8:	1091c804 	addi	r2,r2,18208
   8fefc:	1887883a 	add	r3,r3,r2
   8ff00:	e0ffff15 	stw	r3,-4(fp)
   8ff04:	00000106 	br	8ff0c <isatty+0x48>
   8ff08:	e03fff15 	stw	zero,-4(fp)
   8ff0c:	e0bfff17 	ldw	r2,-4(fp)
   8ff10:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
   8ff14:	e0bfed17 	ldw	r2,-76(fp)
   8ff18:	1005003a 	cmpeq	r2,r2,zero
   8ff1c:	10000f1e 	bne	r2,zero,8ff5c <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   8ff20:	e0bfed17 	ldw	r2,-76(fp)
   8ff24:	10800017 	ldw	r2,0(r2)
   8ff28:	10800817 	ldw	r2,32(r2)
   8ff2c:	1004c03a 	cmpne	r2,r2,zero
   8ff30:	1000031e 	bne	r2,zero,8ff40 <isatty+0x7c>
    {
      return 1;
   8ff34:	00800044 	movi	r2,1
   8ff38:	e0bffe15 	stw	r2,-8(fp)
   8ff3c:	00000c06 	br	8ff70 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8ff40:	e17fee04 	addi	r5,fp,-72
   8ff44:	e13ffd17 	ldw	r4,-12(fp)
   8ff48:	008fd8c0 	call	8fd8c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8ff4c:	e0bfef17 	ldw	r2,-68(fp)
   8ff50:	10880020 	cmpeqi	r2,r2,8192
   8ff54:	e0bffe15 	stw	r2,-8(fp)
   8ff58:	00000506 	br	8ff70 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8ff5c:	008ff880 	call	8ff88 <alt_get_errno>
   8ff60:	1007883a 	mov	r3,r2
   8ff64:	00801444 	movi	r2,81
   8ff68:	18800015 	stw	r2,0(r3)
    return 0;
   8ff6c:	e03ffe15 	stw	zero,-8(fp)
   8ff70:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   8ff74:	e037883a 	mov	sp,fp
   8ff78:	dfc00117 	ldw	ra,4(sp)
   8ff7c:	df000017 	ldw	fp,0(sp)
   8ff80:	dec00204 	addi	sp,sp,8
   8ff84:	f800283a 	ret

0008ff88 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ff88:	defffd04 	addi	sp,sp,-12
   8ff8c:	dfc00215 	stw	ra,8(sp)
   8ff90:	df000115 	stw	fp,4(sp)
   8ff94:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8ff98:	00800274 	movhi	r2,9
   8ff9c:	10969404 	addi	r2,r2,23120
   8ffa0:	10800017 	ldw	r2,0(r2)
   8ffa4:	1005003a 	cmpeq	r2,r2,zero
   8ffa8:	1000061e 	bne	r2,zero,8ffc4 <alt_get_errno+0x3c>
   8ffac:	00800274 	movhi	r2,9
   8ffb0:	10969404 	addi	r2,r2,23120
   8ffb4:	10800017 	ldw	r2,0(r2)
   8ffb8:	103ee83a 	callr	r2
   8ffbc:	e0bfff15 	stw	r2,-4(fp)
   8ffc0:	00000306 	br	8ffd0 <alt_get_errno+0x48>
   8ffc4:	00800274 	movhi	r2,9
   8ffc8:	109d8504 	addi	r2,r2,30228
   8ffcc:	e0bfff15 	stw	r2,-4(fp)
   8ffd0:	e0bfff17 	ldw	r2,-4(fp)
}
   8ffd4:	e037883a 	mov	sp,fp
   8ffd8:	dfc00117 	ldw	ra,4(sp)
   8ffdc:	df000017 	ldw	fp,0(sp)
   8ffe0:	dec00204 	addi	sp,sp,8
   8ffe4:	f800283a 	ret

0008ffe8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8ffe8:	defffe04 	addi	sp,sp,-8
   8ffec:	dfc00115 	stw	ra,4(sp)
   8fff0:	df000015 	stw	fp,0(sp)
   8fff4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8fff8:	01000274 	movhi	r4,9
   8fffc:	21169a04 	addi	r4,r4,23144
   90000:	01400274 	movhi	r5,9
   90004:	294faf04 	addi	r5,r5,16060
   90008:	01800274 	movhi	r6,9
   9000c:	31969a04 	addi	r6,r6,23144
   90010:	00900680 	call	90068 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   90014:	01000234 	movhi	r4,8
   90018:	21000804 	addi	r4,r4,32
   9001c:	01400234 	movhi	r5,8
   90020:	29400804 	addi	r5,r5,32
   90024:	01800234 	movhi	r6,8
   90028:	31806d04 	addi	r6,r6,436
   9002c:	00900680 	call	90068 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   90030:	01000274 	movhi	r4,9
   90034:	210df904 	addi	r4,r4,14308
   90038:	01400274 	movhi	r5,9
   9003c:	294df904 	addi	r5,r5,14308
   90040:	01800274 	movhi	r6,9
   90044:	318faf04 	addi	r6,r6,16060
   90048:	00900680 	call	90068 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   9004c:	00927d40 	call	927d4 <alt_dcache_flush_all>
  alt_icache_flush_all();
   90050:	0092c500 	call	92c50 <alt_icache_flush_all>
}
   90054:	e037883a 	mov	sp,fp
   90058:	dfc00117 	ldw	ra,4(sp)
   9005c:	df000017 	ldw	fp,0(sp)
   90060:	dec00204 	addi	sp,sp,8
   90064:	f800283a 	ret

00090068 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   90068:	defffc04 	addi	sp,sp,-16
   9006c:	df000315 	stw	fp,12(sp)
   90070:	df000304 	addi	fp,sp,12
   90074:	e13ffd15 	stw	r4,-12(fp)
   90078:	e17ffe15 	stw	r5,-8(fp)
   9007c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   90080:	e0fffe17 	ldw	r3,-8(fp)
   90084:	e0bffd17 	ldw	r2,-12(fp)
   90088:	18800e26 	beq	r3,r2,900c4 <alt_load_section+0x5c>
  {
    while( to != end )
   9008c:	00000a06 	br	900b8 <alt_load_section+0x50>
    {
      *to++ = *from++;
   90090:	e0bffd17 	ldw	r2,-12(fp)
   90094:	10c00017 	ldw	r3,0(r2)
   90098:	e0bffe17 	ldw	r2,-8(fp)
   9009c:	10c00015 	stw	r3,0(r2)
   900a0:	e0bffe17 	ldw	r2,-8(fp)
   900a4:	10800104 	addi	r2,r2,4
   900a8:	e0bffe15 	stw	r2,-8(fp)
   900ac:	e0bffd17 	ldw	r2,-12(fp)
   900b0:	10800104 	addi	r2,r2,4
   900b4:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   900b8:	e0fffe17 	ldw	r3,-8(fp)
   900bc:	e0bfff17 	ldw	r2,-4(fp)
   900c0:	18bff31e 	bne	r3,r2,90090 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   900c4:	e037883a 	mov	sp,fp
   900c8:	df000017 	ldw	fp,0(sp)
   900cc:	dec00104 	addi	sp,sp,4
   900d0:	f800283a 	ret

000900d4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   900d4:	defff804 	addi	sp,sp,-32
   900d8:	dfc00715 	stw	ra,28(sp)
   900dc:	df000615 	stw	fp,24(sp)
   900e0:	df000604 	addi	fp,sp,24
   900e4:	e13ffc15 	stw	r4,-16(fp)
   900e8:	e17ffd15 	stw	r5,-12(fp)
   900ec:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   900f0:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   900f4:	e0bffc17 	ldw	r2,-16(fp)
   900f8:	1004803a 	cmplt	r2,r2,zero
   900fc:	1000091e 	bne	r2,zero,90124 <lseek+0x50>
   90100:	e13ffc17 	ldw	r4,-16(fp)
   90104:	01400304 	movi	r5,12
   90108:	008f3380 	call	8f338 <__mulsi3>
   9010c:	1007883a 	mov	r3,r2
   90110:	00800274 	movhi	r2,9
   90114:	1091c804 	addi	r2,r2,18208
   90118:	1887883a 	add	r3,r3,r2
   9011c:	e0ffff15 	stw	r3,-4(fp)
   90120:	00000106 	br	90128 <lseek+0x54>
   90124:	e03fff15 	stw	zero,-4(fp)
   90128:	e0bfff17 	ldw	r2,-4(fp)
   9012c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
   90130:	e0bffb17 	ldw	r2,-20(fp)
   90134:	1005003a 	cmpeq	r2,r2,zero
   90138:	1000111e 	bne	r2,zero,90180 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   9013c:	e0bffb17 	ldw	r2,-20(fp)
   90140:	10800017 	ldw	r2,0(r2)
   90144:	10800717 	ldw	r2,28(r2)
   90148:	1005003a 	cmpeq	r2,r2,zero
   9014c:	1000091e 	bne	r2,zero,90174 <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   90150:	e0bffb17 	ldw	r2,-20(fp)
   90154:	10800017 	ldw	r2,0(r2)
   90158:	10800717 	ldw	r2,28(r2)
   9015c:	e13ffb17 	ldw	r4,-20(fp)
   90160:	e17ffd17 	ldw	r5,-12(fp)
   90164:	e1bffe17 	ldw	r6,-8(fp)
   90168:	103ee83a 	callr	r2
   9016c:	e0bffa15 	stw	r2,-24(fp)
   90170:	00000506 	br	90188 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   90174:	00bfde84 	movi	r2,-134
   90178:	e0bffa15 	stw	r2,-24(fp)
   9017c:	00000206 	br	90188 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
   90180:	00bfebc4 	movi	r2,-81
   90184:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
   90188:	e0bffa17 	ldw	r2,-24(fp)
   9018c:	1004403a 	cmpge	r2,r2,zero
   90190:	1000071e 	bne	r2,zero,901b0 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
   90194:	00901c80 	call	901c8 <alt_get_errno>
   90198:	1007883a 	mov	r3,r2
   9019c:	e0bffa17 	ldw	r2,-24(fp)
   901a0:	0085c83a 	sub	r2,zero,r2
   901a4:	18800015 	stw	r2,0(r3)
    rc = -1;
   901a8:	00bfffc4 	movi	r2,-1
   901ac:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
   901b0:	e0bffa17 	ldw	r2,-24(fp)
}
   901b4:	e037883a 	mov	sp,fp
   901b8:	dfc00117 	ldw	ra,4(sp)
   901bc:	df000017 	ldw	fp,0(sp)
   901c0:	dec00204 	addi	sp,sp,8
   901c4:	f800283a 	ret

000901c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   901c8:	defffd04 	addi	sp,sp,-12
   901cc:	dfc00215 	stw	ra,8(sp)
   901d0:	df000115 	stw	fp,4(sp)
   901d4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   901d8:	00800274 	movhi	r2,9
   901dc:	10969404 	addi	r2,r2,23120
   901e0:	10800017 	ldw	r2,0(r2)
   901e4:	1005003a 	cmpeq	r2,r2,zero
   901e8:	1000061e 	bne	r2,zero,90204 <alt_get_errno+0x3c>
   901ec:	00800274 	movhi	r2,9
   901f0:	10969404 	addi	r2,r2,23120
   901f4:	10800017 	ldw	r2,0(r2)
   901f8:	103ee83a 	callr	r2
   901fc:	e0bfff15 	stw	r2,-4(fp)
   90200:	00000306 	br	90210 <alt_get_errno+0x48>
   90204:	00800274 	movhi	r2,9
   90208:	109d8504 	addi	r2,r2,30228
   9020c:	e0bfff15 	stw	r2,-4(fp)
   90210:	e0bfff17 	ldw	r2,-4(fp)
}
   90214:	e037883a 	mov	sp,fp
   90218:	dfc00117 	ldw	ra,4(sp)
   9021c:	df000017 	ldw	fp,0(sp)
   90220:	dec00204 	addi	sp,sp,8
   90224:	f800283a 	ret

00090228 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   90228:	defffd04 	addi	sp,sp,-12
   9022c:	dfc00215 	stw	ra,8(sp)
   90230:	df000115 	stw	fp,4(sp)
   90234:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   90238:	0009883a 	mov	r4,zero
   9023c:	00909f40 	call	909f4 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   90240:	0090a280 	call	90a28 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   90244:	01000274 	movhi	r4,9
   90248:	210fa204 	addi	r4,r4,16008
   9024c:	01400274 	movhi	r5,9
   90250:	294fa204 	addi	r5,r5,16008
   90254:	01800274 	movhi	r6,9
   90258:	318fa204 	addi	r6,r6,16008
   9025c:	00930100 	call	93010 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   90260:	00929040 	call	92904 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   90264:	01000274 	movhi	r4,9
   90268:	210a5a04 	addi	r4,r4,10600
   9026c:	00933d80 	call	933d8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   90270:	d1270417 	ldw	r4,-25584(gp)
   90274:	d1670517 	ldw	r5,-25580(gp)
   90278:	d1a70617 	ldw	r6,-25576(gp)
   9027c:	00801f00 	call	801f0 <main>
   90280:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   90284:	01000044 	movi	r4,1
   90288:	008fc000 	call	8fc00 <close>
  exit (result);
   9028c:	e13fff17 	ldw	r4,-4(fp)
   90290:	00933ec0 	call	933ec <exit>

00090294 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   90294:	defffe04 	addi	sp,sp,-8
   90298:	df000115 	stw	fp,4(sp)
   9029c:	df000104 	addi	fp,sp,4
   902a0:	e13fff15 	stw	r4,-4(fp)
}
   902a4:	e037883a 	mov	sp,fp
   902a8:	df000017 	ldw	fp,0(sp)
   902ac:	dec00104 	addi	sp,sp,4
   902b0:	f800283a 	ret

000902b4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   902b4:	defffe04 	addi	sp,sp,-8
   902b8:	df000115 	stw	fp,4(sp)
   902bc:	df000104 	addi	fp,sp,4
   902c0:	e13fff15 	stw	r4,-4(fp)
}
   902c4:	e037883a 	mov	sp,fp
   902c8:	df000017 	ldw	fp,0(sp)
   902cc:	dec00104 	addi	sp,sp,4
   902d0:	f800283a 	ret

000902d4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   902d4:	defffa04 	addi	sp,sp,-24
   902d8:	dfc00515 	stw	ra,20(sp)
   902dc:	df000415 	stw	fp,16(sp)
   902e0:	dc000315 	stw	r16,12(sp)
   902e4:	df000304 	addi	fp,sp,12
   902e8:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   902ec:	e0bffe17 	ldw	r2,-8(fp)
   902f0:	10800217 	ldw	r2,8(r2)
   902f4:	10d00034 	orhi	r3,r2,16384
   902f8:	e0bffe17 	ldw	r2,-8(fp)
   902fc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   90300:	e03ffd15 	stw	zero,-12(fp)
   90304:	00002306 	br	90394 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   90308:	e13ffd17 	ldw	r4,-12(fp)
   9030c:	04000274 	movhi	r16,9
   90310:	8411c804 	addi	r16,r16,18208
   90314:	01400304 	movi	r5,12
   90318:	008f3380 	call	8f338 <__mulsi3>
   9031c:	1405883a 	add	r2,r2,r16
   90320:	10c00017 	ldw	r3,0(r2)
   90324:	e0bffe17 	ldw	r2,-8(fp)
   90328:	10800017 	ldw	r2,0(r2)
   9032c:	1880161e 	bne	r3,r2,90388 <alt_file_locked+0xb4>
   90330:	e13ffd17 	ldw	r4,-12(fp)
   90334:	04000274 	movhi	r16,9
   90338:	8411c804 	addi	r16,r16,18208
   9033c:	01400304 	movi	r5,12
   90340:	008f3380 	call	8f338 <__mulsi3>
   90344:	1405883a 	add	r2,r2,r16
   90348:	10800204 	addi	r2,r2,8
   9034c:	10800017 	ldw	r2,0(r2)
   90350:	1004403a 	cmpge	r2,r2,zero
   90354:	10000c1e 	bne	r2,zero,90388 <alt_file_locked+0xb4>
   90358:	e13ffd17 	ldw	r4,-12(fp)
   9035c:	01400304 	movi	r5,12
   90360:	008f3380 	call	8f338 <__mulsi3>
   90364:	1007883a 	mov	r3,r2
   90368:	00800274 	movhi	r2,9
   9036c:	1091c804 	addi	r2,r2,18208
   90370:	1887883a 	add	r3,r3,r2
   90374:	e0bffe17 	ldw	r2,-8(fp)
   90378:	18800326 	beq	r3,r2,90388 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   9037c:	00bffcc4 	movi	r2,-13
   90380:	e0bfff15 	stw	r2,-4(fp)
   90384:	00000a06 	br	903b0 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   90388:	e0bffd17 	ldw	r2,-12(fp)
   9038c:	10800044 	addi	r2,r2,1
   90390:	e0bffd15 	stw	r2,-12(fp)
   90394:	00800274 	movhi	r2,9
   90398:	10969304 	addi	r2,r2,23116
   9039c:	10800017 	ldw	r2,0(r2)
   903a0:	1007883a 	mov	r3,r2
   903a4:	e0bffd17 	ldw	r2,-12(fp)
   903a8:	18bfd72e 	bgeu	r3,r2,90308 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   903ac:	e03fff15 	stw	zero,-4(fp)
   903b0:	e0bfff17 	ldw	r2,-4(fp)
}
   903b4:	e037883a 	mov	sp,fp
   903b8:	dfc00217 	ldw	ra,8(sp)
   903bc:	df000117 	ldw	fp,4(sp)
   903c0:	dc000017 	ldw	r16,0(sp)
   903c4:	dec00304 	addi	sp,sp,12
   903c8:	f800283a 	ret

000903cc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   903cc:	defff404 	addi	sp,sp,-48
   903d0:	dfc00b15 	stw	ra,44(sp)
   903d4:	df000a15 	stw	fp,40(sp)
   903d8:	df000a04 	addi	fp,sp,40
   903dc:	e13ffb15 	stw	r4,-20(fp)
   903e0:	e17ffc15 	stw	r5,-16(fp)
   903e4:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   903e8:	00bfffc4 	movi	r2,-1
   903ec:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   903f0:	00bffb44 	movi	r2,-19
   903f4:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   903f8:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   903fc:	e13ffb17 	ldw	r4,-20(fp)
   90400:	01400274 	movhi	r5,9
   90404:	29569104 	addi	r5,r5,23108
   90408:	00929cc0 	call	929cc <alt_find_dev>
   9040c:	e0bffa15 	stw	r2,-24(fp)
   90410:	e0bffa17 	ldw	r2,-24(fp)
   90414:	1004c03a 	cmpne	r2,r2,zero
   90418:	1000051e 	bne	r2,zero,90430 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   9041c:	e13ffb17 	ldw	r4,-20(fp)
   90420:	0092a600 	call	92a60 <alt_find_file>
   90424:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   90428:	00800044 	movi	r2,1
   9042c:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   90430:	e0bffa17 	ldw	r2,-24(fp)
   90434:	1005003a 	cmpeq	r2,r2,zero
   90438:	1000311e 	bne	r2,zero,90500 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
   9043c:	e13ffa17 	ldw	r4,-24(fp)
   90440:	0092b800 	call	92b80 <alt_get_fd>
   90444:	e0bff815 	stw	r2,-32(fp)
   90448:	e0bff817 	ldw	r2,-32(fp)
   9044c:	1004403a 	cmpge	r2,r2,zero
   90450:	1000031e 	bne	r2,zero,90460 <open+0x94>
    {
      status = index;
   90454:	e0bff817 	ldw	r2,-32(fp)
   90458:	e0bff715 	stw	r2,-36(fp)
   9045c:	00002a06 	br	90508 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
   90460:	e13ff817 	ldw	r4,-32(fp)
   90464:	01400304 	movi	r5,12
   90468:	008f3380 	call	8f338 <__mulsi3>
   9046c:	1007883a 	mov	r3,r2
   90470:	00800274 	movhi	r2,9
   90474:	1091c804 	addi	r2,r2,18208
   90478:	1885883a 	add	r2,r3,r2
   9047c:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   90480:	e0fffc17 	ldw	r3,-16(fp)
   90484:	00900034 	movhi	r2,16384
   90488:	10bfffc4 	addi	r2,r2,-1
   9048c:	1886703a 	and	r3,r3,r2
   90490:	e0bff917 	ldw	r2,-28(fp)
   90494:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   90498:	e0bff617 	ldw	r2,-40(fp)
   9049c:	1004c03a 	cmpne	r2,r2,zero
   904a0:	1000061e 	bne	r2,zero,904bc <open+0xf0>
   904a4:	e13ff917 	ldw	r4,-28(fp)
   904a8:	00902d40 	call	902d4 <alt_file_locked>
   904ac:	e0bff715 	stw	r2,-36(fp)
   904b0:	e0bff717 	ldw	r2,-36(fp)
   904b4:	1004803a 	cmplt	r2,r2,zero
   904b8:	1000131e 	bne	r2,zero,90508 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   904bc:	e0bffa17 	ldw	r2,-24(fp)
   904c0:	10800317 	ldw	r2,12(r2)
   904c4:	1005003a 	cmpeq	r2,r2,zero
   904c8:	1000091e 	bne	r2,zero,904f0 <open+0x124>
   904cc:	e0bffa17 	ldw	r2,-24(fp)
   904d0:	10800317 	ldw	r2,12(r2)
   904d4:	e13ff917 	ldw	r4,-28(fp)
   904d8:	e17ffb17 	ldw	r5,-20(fp)
   904dc:	e1bffc17 	ldw	r6,-16(fp)
   904e0:	e1fffd17 	ldw	r7,-12(fp)
   904e4:	103ee83a 	callr	r2
   904e8:	e0bfff15 	stw	r2,-4(fp)
   904ec:	00000106 	br	904f4 <open+0x128>
   904f0:	e03fff15 	stw	zero,-4(fp)
   904f4:	e0bfff17 	ldw	r2,-4(fp)
   904f8:	e0bff715 	stw	r2,-36(fp)
   904fc:	00000206 	br	90508 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   90500:	00bffb44 	movi	r2,-19
   90504:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   90508:	e0bff717 	ldw	r2,-36(fp)
   9050c:	1004403a 	cmpge	r2,r2,zero
   90510:	1000091e 	bne	r2,zero,90538 <open+0x16c>
  {
    alt_release_fd (index);  
   90514:	e13ff817 	ldw	r4,-32(fp)
   90518:	009073c0 	call	9073c <alt_release_fd>
    ALT_ERRNO = -status;
   9051c:	00905580 	call	90558 <alt_get_errno>
   90520:	e0fff717 	ldw	r3,-36(fp)
   90524:	00c7c83a 	sub	r3,zero,r3
   90528:	10c00015 	stw	r3,0(r2)
    return -1;
   9052c:	00bfffc4 	movi	r2,-1
   90530:	e0bffe15 	stw	r2,-8(fp)
   90534:	00000206 	br	90540 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
   90538:	e0bff817 	ldw	r2,-32(fp)
   9053c:	e0bffe15 	stw	r2,-8(fp)
   90540:	e0bffe17 	ldw	r2,-8(fp)
}
   90544:	e037883a 	mov	sp,fp
   90548:	dfc00117 	ldw	ra,4(sp)
   9054c:	df000017 	ldw	fp,0(sp)
   90550:	dec00204 	addi	sp,sp,8
   90554:	f800283a 	ret

00090558 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   90558:	defffd04 	addi	sp,sp,-12
   9055c:	dfc00215 	stw	ra,8(sp)
   90560:	df000115 	stw	fp,4(sp)
   90564:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   90568:	00800274 	movhi	r2,9
   9056c:	10969404 	addi	r2,r2,23120
   90570:	10800017 	ldw	r2,0(r2)
   90574:	1005003a 	cmpeq	r2,r2,zero
   90578:	1000061e 	bne	r2,zero,90594 <alt_get_errno+0x3c>
   9057c:	00800274 	movhi	r2,9
   90580:	10969404 	addi	r2,r2,23120
   90584:	10800017 	ldw	r2,0(r2)
   90588:	103ee83a 	callr	r2
   9058c:	e0bfff15 	stw	r2,-4(fp)
   90590:	00000306 	br	905a0 <alt_get_errno+0x48>
   90594:	00800274 	movhi	r2,9
   90598:	109d8504 	addi	r2,r2,30228
   9059c:	e0bfff15 	stw	r2,-4(fp)
   905a0:	e0bfff17 	ldw	r2,-4(fp)
}
   905a4:	e037883a 	mov	sp,fp
   905a8:	dfc00117 	ldw	ra,4(sp)
   905ac:	df000017 	ldw	fp,0(sp)
   905b0:	dec00204 	addi	sp,sp,8
   905b4:	f800283a 	ret

000905b8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   905b8:	defff704 	addi	sp,sp,-36
   905bc:	dfc00815 	stw	ra,32(sp)
   905c0:	df000715 	stw	fp,28(sp)
   905c4:	df000704 	addi	fp,sp,28
   905c8:	e13ffb15 	stw	r4,-20(fp)
   905cc:	e17ffc15 	stw	r5,-16(fp)
   905d0:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   905d4:	e0bffb17 	ldw	r2,-20(fp)
   905d8:	1004803a 	cmplt	r2,r2,zero
   905dc:	1000091e 	bne	r2,zero,90604 <read+0x4c>
   905e0:	e13ffb17 	ldw	r4,-20(fp)
   905e4:	01400304 	movi	r5,12
   905e8:	008f3380 	call	8f338 <__mulsi3>
   905ec:	1007883a 	mov	r3,r2
   905f0:	00800274 	movhi	r2,9
   905f4:	1091c804 	addi	r2,r2,18208
   905f8:	1887883a 	add	r3,r3,r2
   905fc:	e0ffff15 	stw	r3,-4(fp)
   90600:	00000106 	br	90608 <read+0x50>
   90604:	e03fff15 	stw	zero,-4(fp)
   90608:	e0bfff17 	ldw	r2,-4(fp)
   9060c:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   90610:	e0bffa17 	ldw	r2,-24(fp)
   90614:	1005003a 	cmpeq	r2,r2,zero
   90618:	1000241e 	bne	r2,zero,906ac <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   9061c:	e0bffa17 	ldw	r2,-24(fp)
   90620:	10800217 	ldw	r2,8(r2)
   90624:	108000cc 	andi	r2,r2,3
   90628:	10800060 	cmpeqi	r2,r2,1
   9062c:	10001a1e 	bne	r2,zero,90698 <read+0xe0>
   90630:	e0bffa17 	ldw	r2,-24(fp)
   90634:	10800017 	ldw	r2,0(r2)
   90638:	10800517 	ldw	r2,20(r2)
   9063c:	1005003a 	cmpeq	r2,r2,zero
   90640:	1000151e 	bne	r2,zero,90698 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   90644:	e0bffa17 	ldw	r2,-24(fp)
   90648:	10800017 	ldw	r2,0(r2)
   9064c:	10800517 	ldw	r2,20(r2)
   90650:	e17ffc17 	ldw	r5,-16(fp)
   90654:	e1bffd17 	ldw	r6,-12(fp)
   90658:	e13ffa17 	ldw	r4,-24(fp)
   9065c:	103ee83a 	callr	r2
   90660:	e0bff915 	stw	r2,-28(fp)
   90664:	e0bff917 	ldw	r2,-28(fp)
   90668:	1004403a 	cmpge	r2,r2,zero
   9066c:	1000071e 	bne	r2,zero,9068c <read+0xd4>
        {
          ALT_ERRNO = -rval;
   90670:	00906dc0 	call	906dc <alt_get_errno>
   90674:	e0fff917 	ldw	r3,-28(fp)
   90678:	00c7c83a 	sub	r3,zero,r3
   9067c:	10c00015 	stw	r3,0(r2)
          return -1;
   90680:	00bfffc4 	movi	r2,-1
   90684:	e0bffe15 	stw	r2,-8(fp)
   90688:	00000e06 	br	906c4 <read+0x10c>
        }
        return rval;
   9068c:	e0bff917 	ldw	r2,-28(fp)
   90690:	e0bffe15 	stw	r2,-8(fp)
   90694:	00000b06 	br	906c4 <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
   90698:	00906dc0 	call	906dc <alt_get_errno>
   9069c:	1007883a 	mov	r3,r2
   906a0:	00800344 	movi	r2,13
   906a4:	18800015 	stw	r2,0(r3)
   906a8:	00000406 	br	906bc <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   906ac:	00906dc0 	call	906dc <alt_get_errno>
   906b0:	1007883a 	mov	r3,r2
   906b4:	00801444 	movi	r2,81
   906b8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   906bc:	00bfffc4 	movi	r2,-1
   906c0:	e0bffe15 	stw	r2,-8(fp)
   906c4:	e0bffe17 	ldw	r2,-8(fp)
}
   906c8:	e037883a 	mov	sp,fp
   906cc:	dfc00117 	ldw	ra,4(sp)
   906d0:	df000017 	ldw	fp,0(sp)
   906d4:	dec00204 	addi	sp,sp,8
   906d8:	f800283a 	ret

000906dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   906dc:	defffd04 	addi	sp,sp,-12
   906e0:	dfc00215 	stw	ra,8(sp)
   906e4:	df000115 	stw	fp,4(sp)
   906e8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   906ec:	00800274 	movhi	r2,9
   906f0:	10969404 	addi	r2,r2,23120
   906f4:	10800017 	ldw	r2,0(r2)
   906f8:	1005003a 	cmpeq	r2,r2,zero
   906fc:	1000061e 	bne	r2,zero,90718 <alt_get_errno+0x3c>
   90700:	00800274 	movhi	r2,9
   90704:	10969404 	addi	r2,r2,23120
   90708:	10800017 	ldw	r2,0(r2)
   9070c:	103ee83a 	callr	r2
   90710:	e0bfff15 	stw	r2,-4(fp)
   90714:	00000306 	br	90724 <alt_get_errno+0x48>
   90718:	00800274 	movhi	r2,9
   9071c:	109d8504 	addi	r2,r2,30228
   90720:	e0bfff15 	stw	r2,-4(fp)
   90724:	e0bfff17 	ldw	r2,-4(fp)
}
   90728:	e037883a 	mov	sp,fp
   9072c:	dfc00117 	ldw	ra,4(sp)
   90730:	df000017 	ldw	fp,0(sp)
   90734:	dec00204 	addi	sp,sp,8
   90738:	f800283a 	ret

0009073c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   9073c:	defffc04 	addi	sp,sp,-16
   90740:	dfc00315 	stw	ra,12(sp)
   90744:	df000215 	stw	fp,8(sp)
   90748:	dc000115 	stw	r16,4(sp)
   9074c:	df000104 	addi	fp,sp,4
   90750:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   90754:	e0bfff17 	ldw	r2,-4(fp)
   90758:	108000d0 	cmplti	r2,r2,3
   9075c:	10000f1e 	bne	r2,zero,9079c <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
   90760:	e13fff17 	ldw	r4,-4(fp)
   90764:	04000274 	movhi	r16,9
   90768:	8411c804 	addi	r16,r16,18208
   9076c:	01400304 	movi	r5,12
   90770:	008f3380 	call	8f338 <__mulsi3>
   90774:	1405883a 	add	r2,r2,r16
   90778:	10800204 	addi	r2,r2,8
   9077c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   90780:	e13fff17 	ldw	r4,-4(fp)
   90784:	04000274 	movhi	r16,9
   90788:	8411c804 	addi	r16,r16,18208
   9078c:	01400304 	movi	r5,12
   90790:	008f3380 	call	8f338 <__mulsi3>
   90794:	1405883a 	add	r2,r2,r16
   90798:	10000015 	stw	zero,0(r2)
  }
}
   9079c:	e037883a 	mov	sp,fp
   907a0:	dfc00217 	ldw	ra,8(sp)
   907a4:	df000117 	ldw	fp,4(sp)
   907a8:	dc000017 	ldw	r16,0(sp)
   907ac:	dec00304 	addi	sp,sp,12
   907b0:	f800283a 	ret

000907b4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   907b4:	defff804 	addi	sp,sp,-32
   907b8:	df000715 	stw	fp,28(sp)
   907bc:	df000704 	addi	fp,sp,28
   907c0:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   907c4:	0005303a 	rdctl	r2,status
   907c8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   907cc:	e0fffb17 	ldw	r3,-20(fp)
   907d0:	00bfff84 	movi	r2,-2
   907d4:	1884703a 	and	r2,r3,r2
   907d8:	1001703a 	wrctl	status,r2
  
  return context;
   907dc:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   907e0:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   907e4:	d0a00d17 	ldw	r2,-32716(gp)
   907e8:	10c000c4 	addi	r3,r2,3
   907ec:	00bfff04 	movi	r2,-4
   907f0:	1884703a 	and	r2,r3,r2
   907f4:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   907f8:	d0e00d17 	ldw	r3,-32716(gp)
   907fc:	e0bffe17 	ldw	r2,-8(fp)
   90800:	1887883a 	add	r3,r3,r2
   90804:	00800434 	movhi	r2,16
   90808:	10800004 	addi	r2,r2,0
   9080c:	10c0072e 	bgeu	r2,r3,9082c <sbrk+0x78>
   90810:	e0bffd17 	ldw	r2,-12(fp)
   90814:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   90818:	e0bffa17 	ldw	r2,-24(fp)
   9081c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   90820:	00bfffc4 	movi	r2,-1
   90824:	e0bfff15 	stw	r2,-4(fp)
   90828:	00000c06 	br	9085c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   9082c:	d0a00d17 	ldw	r2,-32716(gp)
   90830:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   90834:	d0e00d17 	ldw	r3,-32716(gp)
   90838:	e0bffe17 	ldw	r2,-8(fp)
   9083c:	1885883a 	add	r2,r3,r2
   90840:	d0a00d15 	stw	r2,-32716(gp)
   90844:	e0bffd17 	ldw	r2,-12(fp)
   90848:	e0bff915 	stw	r2,-28(fp)
   9084c:	e0bff917 	ldw	r2,-28(fp)
   90850:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   90854:	e0bffc17 	ldw	r2,-16(fp)
   90858:	e0bfff15 	stw	r2,-4(fp)
   9085c:	e0bfff17 	ldw	r2,-4(fp)
} 
   90860:	e037883a 	mov	sp,fp
   90864:	df000017 	ldw	fp,0(sp)
   90868:	dec00104 	addi	sp,sp,4
   9086c:	f800283a 	ret

00090870 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   90870:	defff704 	addi	sp,sp,-36
   90874:	dfc00815 	stw	ra,32(sp)
   90878:	df000715 	stw	fp,28(sp)
   9087c:	df000704 	addi	fp,sp,28
   90880:	e13ffb15 	stw	r4,-20(fp)
   90884:	e17ffc15 	stw	r5,-16(fp)
   90888:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   9088c:	e0bffb17 	ldw	r2,-20(fp)
   90890:	1004803a 	cmplt	r2,r2,zero
   90894:	1000091e 	bne	r2,zero,908bc <write+0x4c>
   90898:	e13ffb17 	ldw	r4,-20(fp)
   9089c:	01400304 	movi	r5,12
   908a0:	008f3380 	call	8f338 <__mulsi3>
   908a4:	1007883a 	mov	r3,r2
   908a8:	00800274 	movhi	r2,9
   908ac:	1091c804 	addi	r2,r2,18208
   908b0:	1887883a 	add	r3,r3,r2
   908b4:	e0ffff15 	stw	r3,-4(fp)
   908b8:	00000106 	br	908c0 <write+0x50>
   908bc:	e03fff15 	stw	zero,-4(fp)
   908c0:	e0bfff17 	ldw	r2,-4(fp)
   908c4:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   908c8:	e0bffa17 	ldw	r2,-24(fp)
   908cc:	1005003a 	cmpeq	r2,r2,zero
   908d0:	1000241e 	bne	r2,zero,90964 <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   908d4:	e0bffa17 	ldw	r2,-24(fp)
   908d8:	10800217 	ldw	r2,8(r2)
   908dc:	108000cc 	andi	r2,r2,3
   908e0:	1005003a 	cmpeq	r2,r2,zero
   908e4:	10001a1e 	bne	r2,zero,90950 <write+0xe0>
   908e8:	e0bffa17 	ldw	r2,-24(fp)
   908ec:	10800017 	ldw	r2,0(r2)
   908f0:	10800617 	ldw	r2,24(r2)
   908f4:	1005003a 	cmpeq	r2,r2,zero
   908f8:	1000151e 	bne	r2,zero,90950 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   908fc:	e0bffa17 	ldw	r2,-24(fp)
   90900:	10800017 	ldw	r2,0(r2)
   90904:	10800617 	ldw	r2,24(r2)
   90908:	e17ffc17 	ldw	r5,-16(fp)
   9090c:	e1bffd17 	ldw	r6,-12(fp)
   90910:	e13ffa17 	ldw	r4,-24(fp)
   90914:	103ee83a 	callr	r2
   90918:	e0bff915 	stw	r2,-28(fp)
   9091c:	e0bff917 	ldw	r2,-28(fp)
   90920:	1004403a 	cmpge	r2,r2,zero
   90924:	1000071e 	bne	r2,zero,90944 <write+0xd4>
      {
        ALT_ERRNO = -rval;
   90928:	00909940 	call	90994 <alt_get_errno>
   9092c:	e0fff917 	ldw	r3,-28(fp)
   90930:	00c7c83a 	sub	r3,zero,r3
   90934:	10c00015 	stw	r3,0(r2)
        return -1;
   90938:	00bfffc4 	movi	r2,-1
   9093c:	e0bffe15 	stw	r2,-8(fp)
   90940:	00000e06 	br	9097c <write+0x10c>
      }
      return rval;
   90944:	e0bff917 	ldw	r2,-28(fp)
   90948:	e0bffe15 	stw	r2,-8(fp)
   9094c:	00000b06 	br	9097c <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
   90950:	00909940 	call	90994 <alt_get_errno>
   90954:	1007883a 	mov	r3,r2
   90958:	00800344 	movi	r2,13
   9095c:	18800015 	stw	r2,0(r3)
   90960:	00000406 	br	90974 <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   90964:	00909940 	call	90994 <alt_get_errno>
   90968:	1007883a 	mov	r3,r2
   9096c:	00801444 	movi	r2,81
   90970:	18800015 	stw	r2,0(r3)
  }
  return -1;
   90974:	00bfffc4 	movi	r2,-1
   90978:	e0bffe15 	stw	r2,-8(fp)
   9097c:	e0bffe17 	ldw	r2,-8(fp)
}
   90980:	e037883a 	mov	sp,fp
   90984:	dfc00117 	ldw	ra,4(sp)
   90988:	df000017 	ldw	fp,0(sp)
   9098c:	dec00204 	addi	sp,sp,8
   90990:	f800283a 	ret

00090994 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   90994:	defffd04 	addi	sp,sp,-12
   90998:	dfc00215 	stw	ra,8(sp)
   9099c:	df000115 	stw	fp,4(sp)
   909a0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   909a4:	00800274 	movhi	r2,9
   909a8:	10969404 	addi	r2,r2,23120
   909ac:	10800017 	ldw	r2,0(r2)
   909b0:	1005003a 	cmpeq	r2,r2,zero
   909b4:	1000061e 	bne	r2,zero,909d0 <alt_get_errno+0x3c>
   909b8:	00800274 	movhi	r2,9
   909bc:	10969404 	addi	r2,r2,23120
   909c0:	10800017 	ldw	r2,0(r2)
   909c4:	103ee83a 	callr	r2
   909c8:	e0bfff15 	stw	r2,-4(fp)
   909cc:	00000306 	br	909dc <alt_get_errno+0x48>
   909d0:	00800274 	movhi	r2,9
   909d4:	109d8504 	addi	r2,r2,30228
   909d8:	e0bfff15 	stw	r2,-4(fp)
   909dc:	e0bfff17 	ldw	r2,-4(fp)
}
   909e0:	e037883a 	mov	sp,fp
   909e4:	dfc00117 	ldw	ra,4(sp)
   909e8:	df000017 	ldw	fp,0(sp)
   909ec:	dec00204 	addi	sp,sp,8
   909f0:	f800283a 	ret

000909f4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   909f4:	defffd04 	addi	sp,sp,-12
   909f8:	dfc00215 	stw	ra,8(sp)
   909fc:	df000115 	stw	fp,4(sp)
   90a00:	df000104 	addi	fp,sp,4
   90a04:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_IRQ_INIT ( CPU_0, cpu_0);
   90a08:	009325c0 	call	9325c <altera_nios2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   90a0c:	00800044 	movi	r2,1
   90a10:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   90a14:	e037883a 	mov	sp,fp
   90a18:	dfc00117 	ldw	ra,4(sp)
   90a1c:	df000017 	ldw	fp,0(sp)
   90a20:	dec00204 	addi	sp,sp,8
   90a24:	f800283a 	ret

00090a28 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   90a28:	defffe04 	addi	sp,sp,-8
   90a2c:	dfc00115 	stw	ra,4(sp)
   90a30:	df000015 	stw	fp,0(sp)
   90a34:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_SYSTEM, timer_system);
   90a38:	01000434 	movhi	r4,16
   90a3c:	21040004 	addi	r4,r4,4096
   90a40:	000b883a 	mov	r5,zero
   90a44:	01800084 	movi	r6,2
   90a48:	01c0fa04 	movi	r7,1000
   90a4c:	00925f00 	call	925f0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_TIMESTAMP, timer_timestamp);
   90a50:	00c00274 	movhi	r3,9
   90a54:	18dd8f04 	addi	r3,r3,30268
   90a58:	00800434 	movhi	r2,16
   90a5c:	10840804 	addi	r2,r2,4128
   90a60:	18800015 	stw	r2,0(r3)
   90a64:	00c00274 	movhi	r3,9
   90a68:	18dd9004 	addi	r3,r3,30272
   90a6c:	0080bef4 	movhi	r2,763
   90a70:	10bc2004 	addi	r2,r2,-3968
   90a74:	18800015 	stw	r2,0(r3)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   90a78:	01000274 	movhi	r4,9
   90a7c:	21123204 	addi	r4,r4,18632
   90a80:	000b883a 	mov	r5,zero
   90a84:	000d883a 	mov	r6,zero
   90a88:	0090c440 	call	90c44 <altera_avalon_jtag_uart_init>
   90a8c:	01000274 	movhi	r4,9
   90a90:	21122804 	addi	r4,r4,18592
   90a94:	0090ac40 	call	90ac4 <alt_dev_reg>
    ALTERA_AVALON_LCD_16207_INIT ( LCD_0, lcd_0);
   90a98:	01000274 	movhi	r4,9
   90a9c:	21164a04 	addi	r4,r4,22824
   90aa0:	00923ec0 	call	923ec <altera_avalon_lcd_16207_init>
   90aa4:	01000274 	movhi	r4,9
   90aa8:	21164004 	addi	r4,r4,22784
   90aac:	0090ac40 	call	90ac4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_INIT ( SYSID, sysid);
}
   90ab0:	e037883a 	mov	sp,fp
   90ab4:	dfc00117 	ldw	ra,4(sp)
   90ab8:	df000017 	ldw	fp,0(sp)
   90abc:	dec00204 	addi	sp,sp,8
   90ac0:	f800283a 	ret

00090ac4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   90ac4:	defffd04 	addi	sp,sp,-12
   90ac8:	dfc00215 	stw	ra,8(sp)
   90acc:	df000115 	stw	fp,4(sp)
   90ad0:	df000104 	addi	fp,sp,4
   90ad4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   90ad8:	e13fff17 	ldw	r4,-4(fp)
   90adc:	01400274 	movhi	r5,9
   90ae0:	29569104 	addi	r5,r5,23108
   90ae4:	00927f00 	call	927f0 <alt_dev_llist_insert>
}
   90ae8:	e037883a 	mov	sp,fp
   90aec:	dfc00117 	ldw	ra,4(sp)
   90af0:	df000017 	ldw	fp,0(sp)
   90af4:	dec00204 	addi	sp,sp,8
   90af8:	f800283a 	ret

00090afc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   90afc:	defffa04 	addi	sp,sp,-24
   90b00:	dfc00515 	stw	ra,20(sp)
   90b04:	df000415 	stw	fp,16(sp)
   90b08:	df000404 	addi	fp,sp,16
   90b0c:	e13ffd15 	stw	r4,-12(fp)
   90b10:	e17ffe15 	stw	r5,-8(fp)
   90b14:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   90b18:	e0bffd17 	ldw	r2,-12(fp)
   90b1c:	10800017 	ldw	r2,0(r2)
   90b20:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   90b24:	e0bffc17 	ldw	r2,-16(fp)
   90b28:	11000a04 	addi	r4,r2,40
   90b2c:	e0bffd17 	ldw	r2,-12(fp)
   90b30:	11c00217 	ldw	r7,8(r2)
   90b34:	e17ffe17 	ldw	r5,-8(fp)
   90b38:	e1bfff17 	ldw	r6,-4(fp)
   90b3c:	00911440 	call	91144 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   90b40:	e037883a 	mov	sp,fp
   90b44:	dfc00117 	ldw	ra,4(sp)
   90b48:	df000017 	ldw	fp,0(sp)
   90b4c:	dec00204 	addi	sp,sp,8
   90b50:	f800283a 	ret

00090b54 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   90b54:	defffa04 	addi	sp,sp,-24
   90b58:	dfc00515 	stw	ra,20(sp)
   90b5c:	df000415 	stw	fp,16(sp)
   90b60:	df000404 	addi	fp,sp,16
   90b64:	e13ffd15 	stw	r4,-12(fp)
   90b68:	e17ffe15 	stw	r5,-8(fp)
   90b6c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   90b70:	e0bffd17 	ldw	r2,-12(fp)
   90b74:	10800017 	ldw	r2,0(r2)
   90b78:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   90b7c:	e0bffc17 	ldw	r2,-16(fp)
   90b80:	11000a04 	addi	r4,r2,40
   90b84:	e0bffd17 	ldw	r2,-12(fp)
   90b88:	11c00217 	ldw	r7,8(r2)
   90b8c:	e17ffe17 	ldw	r5,-8(fp)
   90b90:	e1bfff17 	ldw	r6,-4(fp)
   90b94:	00913680 	call	91368 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   90b98:	e037883a 	mov	sp,fp
   90b9c:	dfc00117 	ldw	ra,4(sp)
   90ba0:	df000017 	ldw	fp,0(sp)
   90ba4:	dec00204 	addi	sp,sp,8
   90ba8:	f800283a 	ret

00090bac <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   90bac:	defffc04 	addi	sp,sp,-16
   90bb0:	dfc00315 	stw	ra,12(sp)
   90bb4:	df000215 	stw	fp,8(sp)
   90bb8:	df000204 	addi	fp,sp,8
   90bbc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   90bc0:	e0bfff17 	ldw	r2,-4(fp)
   90bc4:	10800017 	ldw	r2,0(r2)
   90bc8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   90bcc:	e0bffe17 	ldw	r2,-8(fp)
   90bd0:	11000a04 	addi	r4,r2,40
   90bd4:	e0bfff17 	ldw	r2,-4(fp)
   90bd8:	11400217 	ldw	r5,8(r2)
   90bdc:	0090fdc0 	call	90fdc <altera_avalon_jtag_uart_close>
}
   90be0:	e037883a 	mov	sp,fp
   90be4:	dfc00117 	ldw	ra,4(sp)
   90be8:	df000017 	ldw	fp,0(sp)
   90bec:	dec00204 	addi	sp,sp,8
   90bf0:	f800283a 	ret

00090bf4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   90bf4:	defffa04 	addi	sp,sp,-24
   90bf8:	dfc00515 	stw	ra,20(sp)
   90bfc:	df000415 	stw	fp,16(sp)
   90c00:	df000404 	addi	fp,sp,16
   90c04:	e13ffd15 	stw	r4,-12(fp)
   90c08:	e17ffe15 	stw	r5,-8(fp)
   90c0c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   90c10:	e0bffd17 	ldw	r2,-12(fp)
   90c14:	10800017 	ldw	r2,0(r2)
   90c18:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   90c1c:	e0bffc17 	ldw	r2,-16(fp)
   90c20:	11000a04 	addi	r4,r2,40
   90c24:	e17ffe17 	ldw	r5,-8(fp)
   90c28:	e1bfff17 	ldw	r6,-4(fp)
   90c2c:	00910500 	call	91050 <altera_avalon_jtag_uart_ioctl>
}
   90c30:	e037883a 	mov	sp,fp
   90c34:	dfc00117 	ldw	ra,4(sp)
   90c38:	df000017 	ldw	fp,0(sp)
   90c3c:	dec00204 	addi	sp,sp,8
   90c40:	f800283a 	ret

00090c44 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   90c44:	defffa04 	addi	sp,sp,-24
   90c48:	dfc00515 	stw	ra,20(sp)
   90c4c:	df000415 	stw	fp,16(sp)
   90c50:	df000404 	addi	fp,sp,16
   90c54:	e13ffd15 	stw	r4,-12(fp)
   90c58:	e17ffe15 	stw	r5,-8(fp)
   90c5c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   90c60:	e0fffd17 	ldw	r3,-12(fp)
   90c64:	00800044 	movi	r2,1
   90c68:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   90c6c:	e0bffd17 	ldw	r2,-12(fp)
   90c70:	10800017 	ldw	r2,0(r2)
   90c74:	11000104 	addi	r4,r2,4
   90c78:	e0bffd17 	ldw	r2,-12(fp)
   90c7c:	10800817 	ldw	r2,32(r2)
   90c80:	1007883a 	mov	r3,r2
   90c84:	2005883a 	mov	r2,r4
   90c88:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   90c8c:	e13ffe17 	ldw	r4,-8(fp)
   90c90:	e17fff17 	ldw	r5,-4(fp)
   90c94:	d8000015 	stw	zero,0(sp)
   90c98:	01800274 	movhi	r6,9
   90c9c:	31834104 	addi	r6,r6,3332
   90ca0:	e1fffd17 	ldw	r7,-12(fp)
   90ca4:	0092c6c0 	call	92c6c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   90ca8:	e0bffd17 	ldw	r2,-12(fp)
   90cac:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   90cb0:	e0bffd17 	ldw	r2,-12(fp)
   90cb4:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   90cb8:	00800274 	movhi	r2,9
   90cbc:	109d9204 	addi	r2,r2,30280
   90cc0:	10800017 	ldw	r2,0(r2)
   90cc4:	100b883a 	mov	r5,r2
   90cc8:	01800274 	movhi	r6,9
   90ccc:	3183cb04 	addi	r6,r6,3884
   90cd0:	e1fffd17 	ldw	r7,-12(fp)
   90cd4:	00926800 	call	92680 <alt_alarm_start>
   90cd8:	1004403a 	cmpge	r2,r2,zero
   90cdc:	1000041e 	bne	r2,zero,90cf0 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   90ce0:	e0fffd17 	ldw	r3,-12(fp)
   90ce4:	00a00034 	movhi	r2,32768
   90ce8:	10bfffc4 	addi	r2,r2,-1
   90cec:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   90cf0:	e037883a 	mov	sp,fp
   90cf4:	dfc00117 	ldw	ra,4(sp)
   90cf8:	df000017 	ldw	fp,0(sp)
   90cfc:	dec00204 	addi	sp,sp,8
   90d00:	f800283a 	ret

00090d04 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   90d04:	defff804 	addi	sp,sp,-32
   90d08:	df000715 	stw	fp,28(sp)
   90d0c:	df000704 	addi	fp,sp,28
   90d10:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   90d14:	e0bfff17 	ldw	r2,-4(fp)
   90d18:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   90d1c:	e0bffe17 	ldw	r2,-8(fp)
   90d20:	10800017 	ldw	r2,0(r2)
   90d24:	e0bffd15 	stw	r2,-12(fp)
   90d28:	00000006 	br	90d2c <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   90d2c:	e0bffd17 	ldw	r2,-12(fp)
   90d30:	10800104 	addi	r2,r2,4
   90d34:	10800037 	ldwio	r2,0(r2)
   90d38:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   90d3c:	e0bffc17 	ldw	r2,-16(fp)
   90d40:	1080c00c 	andi	r2,r2,768
   90d44:	1005003a 	cmpeq	r2,r2,zero
   90d48:	1000741e 	bne	r2,zero,90f1c <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   90d4c:	e0bffc17 	ldw	r2,-16(fp)
   90d50:	1080400c 	andi	r2,r2,256
   90d54:	1005003a 	cmpeq	r2,r2,zero
   90d58:	1000351e 	bne	r2,zero,90e30 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   90d5c:	00800074 	movhi	r2,1
   90d60:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   90d64:	e0bffe17 	ldw	r2,-8(fp)
   90d68:	10800a17 	ldw	r2,40(r2)
   90d6c:	10800044 	addi	r2,r2,1
   90d70:	1081ffcc 	andi	r2,r2,2047
   90d74:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   90d78:	e0bffe17 	ldw	r2,-8(fp)
   90d7c:	10c00b17 	ldw	r3,44(r2)
   90d80:	e0bffa17 	ldw	r2,-24(fp)
   90d84:	18801626 	beq	r3,r2,90de0 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   90d88:	e0bffd17 	ldw	r2,-12(fp)
   90d8c:	10800037 	ldwio	r2,0(r2)
   90d90:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   90d94:	e0bffb17 	ldw	r2,-20(fp)
   90d98:	10a0000c 	andi	r2,r2,32768
   90d9c:	1005003a 	cmpeq	r2,r2,zero
   90da0:	10000f1e 	bne	r2,zero,90de0 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   90da4:	e0bffe17 	ldw	r2,-8(fp)
   90da8:	10c00a17 	ldw	r3,40(r2)
   90dac:	e0bffb17 	ldw	r2,-20(fp)
   90db0:	1009883a 	mov	r4,r2
   90db4:	e0bffe17 	ldw	r2,-8(fp)
   90db8:	1885883a 	add	r2,r3,r2
   90dbc:	10800e04 	addi	r2,r2,56
   90dc0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   90dc4:	e0bffe17 	ldw	r2,-8(fp)
   90dc8:	10800a17 	ldw	r2,40(r2)
   90dcc:	10800044 	addi	r2,r2,1
   90dd0:	10c1ffcc 	andi	r3,r2,2047
   90dd4:	e0bffe17 	ldw	r2,-8(fp)
   90dd8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   90ddc:	003fe106 	br	90d64 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   90de0:	e0bffb17 	ldw	r2,-20(fp)
   90de4:	10bfffec 	andhi	r2,r2,65535
   90de8:	1005003a 	cmpeq	r2,r2,zero
   90dec:	1000101e 	bne	r2,zero,90e30 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   90df0:	e0bffe17 	ldw	r2,-8(fp)
   90df4:	10c00817 	ldw	r3,32(r2)
   90df8:	00bfff84 	movi	r2,-2
   90dfc:	1886703a 	and	r3,r3,r2
   90e00:	e0bffe17 	ldw	r2,-8(fp)
   90e04:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   90e08:	e0bffd17 	ldw	r2,-12(fp)
   90e0c:	11000104 	addi	r4,r2,4
   90e10:	e0bffe17 	ldw	r2,-8(fp)
   90e14:	10800817 	ldw	r2,32(r2)
   90e18:	1007883a 	mov	r3,r2
   90e1c:	2005883a 	mov	r2,r4
   90e20:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   90e24:	e0bffd17 	ldw	r2,-12(fp)
   90e28:	10800104 	addi	r2,r2,4
   90e2c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   90e30:	e0bffc17 	ldw	r2,-16(fp)
   90e34:	1080800c 	andi	r2,r2,512
   90e38:	1005003a 	cmpeq	r2,r2,zero
   90e3c:	103fbb1e 	bne	r2,zero,90d2c <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   90e40:	e0bffc17 	ldw	r2,-16(fp)
   90e44:	10bfffec 	andhi	r2,r2,65535
   90e48:	1004d43a 	srli	r2,r2,16
   90e4c:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   90e50:	00001506 	br	90ea8 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   90e54:	e13ffd17 	ldw	r4,-12(fp)
   90e58:	e0bffe17 	ldw	r2,-8(fp)
   90e5c:	10c00d17 	ldw	r3,52(r2)
   90e60:	e0bffe17 	ldw	r2,-8(fp)
   90e64:	1885883a 	add	r2,r3,r2
   90e68:	10820e04 	addi	r2,r2,2104
   90e6c:	10800003 	ldbu	r2,0(r2)
   90e70:	10c03fcc 	andi	r3,r2,255
   90e74:	18c0201c 	xori	r3,r3,128
   90e78:	18ffe004 	addi	r3,r3,-128
   90e7c:	2005883a 	mov	r2,r4
   90e80:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   90e84:	e0bffe17 	ldw	r2,-8(fp)
   90e88:	10800d17 	ldw	r2,52(r2)
   90e8c:	10800044 	addi	r2,r2,1
   90e90:	10c1ffcc 	andi	r3,r2,2047
   90e94:	e0bffe17 	ldw	r2,-8(fp)
   90e98:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   90e9c:	e0bff917 	ldw	r2,-28(fp)
   90ea0:	10bfffc4 	addi	r2,r2,-1
   90ea4:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   90ea8:	e0bff917 	ldw	r2,-28(fp)
   90eac:	1005003a 	cmpeq	r2,r2,zero
   90eb0:	1000051e 	bne	r2,zero,90ec8 <altera_avalon_jtag_uart_irq+0x1c4>
   90eb4:	e0bffe17 	ldw	r2,-8(fp)
   90eb8:	10c00d17 	ldw	r3,52(r2)
   90ebc:	e0bffe17 	ldw	r2,-8(fp)
   90ec0:	10800c17 	ldw	r2,48(r2)
   90ec4:	18bfe31e 	bne	r3,r2,90e54 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   90ec8:	e0bff917 	ldw	r2,-28(fp)
   90ecc:	1005003a 	cmpeq	r2,r2,zero
   90ed0:	103f961e 	bne	r2,zero,90d2c <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   90ed4:	e0bffe17 	ldw	r2,-8(fp)
   90ed8:	10c00817 	ldw	r3,32(r2)
   90edc:	00bfff44 	movi	r2,-3
   90ee0:	1886703a 	and	r3,r3,r2
   90ee4:	e0bffe17 	ldw	r2,-8(fp)
   90ee8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   90eec:	e0bffe17 	ldw	r2,-8(fp)
   90ef0:	10800017 	ldw	r2,0(r2)
   90ef4:	11000104 	addi	r4,r2,4
   90ef8:	e0bffe17 	ldw	r2,-8(fp)
   90efc:	10800817 	ldw	r2,32(r2)
   90f00:	1007883a 	mov	r3,r2
   90f04:	2005883a 	mov	r2,r4
   90f08:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   90f0c:	e0bffd17 	ldw	r2,-12(fp)
   90f10:	10800104 	addi	r2,r2,4
   90f14:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   90f18:	003f8406 	br	90d2c <altera_avalon_jtag_uart_irq+0x28>
}
   90f1c:	e037883a 	mov	sp,fp
   90f20:	df000017 	ldw	fp,0(sp)
   90f24:	dec00104 	addi	sp,sp,4
   90f28:	f800283a 	ret

00090f2c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   90f2c:	defffc04 	addi	sp,sp,-16
   90f30:	df000315 	stw	fp,12(sp)
   90f34:	df000304 	addi	fp,sp,12
   90f38:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   90f3c:	e0bfff17 	ldw	r2,-4(fp)
   90f40:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   90f44:	e0bffe17 	ldw	r2,-8(fp)
   90f48:	10800017 	ldw	r2,0(r2)
   90f4c:	10800104 	addi	r2,r2,4
   90f50:	10800037 	ldwio	r2,0(r2)
   90f54:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   90f58:	e0bffd17 	ldw	r2,-12(fp)
   90f5c:	1081000c 	andi	r2,r2,1024
   90f60:	1005003a 	cmpeq	r2,r2,zero
   90f64:	10000c1e 	bne	r2,zero,90f98 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   90f68:	e0bffe17 	ldw	r2,-8(fp)
   90f6c:	10800017 	ldw	r2,0(r2)
   90f70:	11000104 	addi	r4,r2,4
   90f74:	e0bffe17 	ldw	r2,-8(fp)
   90f78:	10800817 	ldw	r2,32(r2)
   90f7c:	10810014 	ori	r2,r2,1024
   90f80:	1007883a 	mov	r3,r2
   90f84:	2005883a 	mov	r2,r4
   90f88:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   90f8c:	e0bffe17 	ldw	r2,-8(fp)
   90f90:	10000915 	stw	zero,36(r2)
   90f94:	00000a06 	br	90fc0 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   90f98:	e0bffe17 	ldw	r2,-8(fp)
   90f9c:	10c00917 	ldw	r3,36(r2)
   90fa0:	00a00034 	movhi	r2,32768
   90fa4:	10bfff04 	addi	r2,r2,-4
   90fa8:	10c00536 	bltu	r2,r3,90fc0 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   90fac:	e0bffe17 	ldw	r2,-8(fp)
   90fb0:	10800917 	ldw	r2,36(r2)
   90fb4:	10c00044 	addi	r3,r2,1
   90fb8:	e0bffe17 	ldw	r2,-8(fp)
   90fbc:	10c00915 	stw	r3,36(r2)
   90fc0:	00800274 	movhi	r2,9
   90fc4:	109d9204 	addi	r2,r2,30280
   90fc8:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   90fcc:	e037883a 	mov	sp,fp
   90fd0:	df000017 	ldw	fp,0(sp)
   90fd4:	dec00104 	addi	sp,sp,4
   90fd8:	f800283a 	ret

00090fdc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   90fdc:	defffc04 	addi	sp,sp,-16
   90fe0:	df000315 	stw	fp,12(sp)
   90fe4:	df000304 	addi	fp,sp,12
   90fe8:	e13ffd15 	stw	r4,-12(fp)
   90fec:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   90ff0:	00000706 	br	91010 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   90ff4:	e0bffe17 	ldw	r2,-8(fp)
   90ff8:	1090000c 	andi	r2,r2,16384
   90ffc:	1005003a 	cmpeq	r2,r2,zero
   91000:	1000031e 	bne	r2,zero,91010 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   91004:	00bffd44 	movi	r2,-11
   91008:	e0bfff15 	stw	r2,-4(fp)
   9100c:	00000b06 	br	9103c <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   91010:	e0bffd17 	ldw	r2,-12(fp)
   91014:	10c00d17 	ldw	r3,52(r2)
   91018:	e0bffd17 	ldw	r2,-12(fp)
   9101c:	10800c17 	ldw	r2,48(r2)
   91020:	18800526 	beq	r3,r2,91038 <altera_avalon_jtag_uart_close+0x5c>
   91024:	e0bffd17 	ldw	r2,-12(fp)
   91028:	10c00917 	ldw	r3,36(r2)
   9102c:	e0bffd17 	ldw	r2,-12(fp)
   91030:	10800117 	ldw	r2,4(r2)
   91034:	18bfef36 	bltu	r3,r2,90ff4 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   91038:	e03fff15 	stw	zero,-4(fp)
   9103c:	e0bfff17 	ldw	r2,-4(fp)
}
   91040:	e037883a 	mov	sp,fp
   91044:	df000017 	ldw	fp,0(sp)
   91048:	dec00104 	addi	sp,sp,4
   9104c:	f800283a 	ret

00091050 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   91050:	defff804 	addi	sp,sp,-32
   91054:	df000715 	stw	fp,28(sp)
   91058:	df000704 	addi	fp,sp,28
   9105c:	e13ffb15 	stw	r4,-20(fp)
   91060:	e17ffc15 	stw	r5,-16(fp)
   91064:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   91068:	00bff9c4 	movi	r2,-25
   9106c:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   91070:	e0bffc17 	ldw	r2,-16(fp)
   91074:	e0bfff15 	stw	r2,-4(fp)
   91078:	e0ffff17 	ldw	r3,-4(fp)
   9107c:	189a8060 	cmpeqi	r2,r3,27137
   91080:	1000041e 	bne	r2,zero,91094 <altera_avalon_jtag_uart_ioctl+0x44>
   91084:	e0ffff17 	ldw	r3,-4(fp)
   91088:	189a80a0 	cmpeqi	r2,r3,27138
   9108c:	10001b1e 	bne	r2,zero,910fc <altera_avalon_jtag_uart_ioctl+0xac>
   91090:	00002706 	br	91130 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   91094:	e0bffb17 	ldw	r2,-20(fp)
   91098:	10c00117 	ldw	r3,4(r2)
   9109c:	00a00034 	movhi	r2,32768
   910a0:	10bfffc4 	addi	r2,r2,-1
   910a4:	18802226 	beq	r3,r2,91130 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   910a8:	e0bffd17 	ldw	r2,-12(fp)
   910ac:	10800017 	ldw	r2,0(r2)
   910b0:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   910b4:	e0bff917 	ldw	r2,-28(fp)
   910b8:	10800090 	cmplti	r2,r2,2
   910bc:	1000071e 	bne	r2,zero,910dc <altera_avalon_jtag_uart_ioctl+0x8c>
   910c0:	e0fff917 	ldw	r3,-28(fp)
   910c4:	00a00034 	movhi	r2,32768
   910c8:	10bfffc4 	addi	r2,r2,-1
   910cc:	18800326 	beq	r3,r2,910dc <altera_avalon_jtag_uart_ioctl+0x8c>
   910d0:	e0bff917 	ldw	r2,-28(fp)
   910d4:	e0bffe15 	stw	r2,-8(fp)
   910d8:	00000306 	br	910e8 <altera_avalon_jtag_uart_ioctl+0x98>
   910dc:	00e00034 	movhi	r3,32768
   910e0:	18ffff84 	addi	r3,r3,-2
   910e4:	e0fffe15 	stw	r3,-8(fp)
   910e8:	e0bffb17 	ldw	r2,-20(fp)
   910ec:	e0fffe17 	ldw	r3,-8(fp)
   910f0:	10c00115 	stw	r3,4(r2)
      rc = 0;
   910f4:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   910f8:	00000d06 	br	91130 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   910fc:	e0bffb17 	ldw	r2,-20(fp)
   91100:	10c00117 	ldw	r3,4(r2)
   91104:	00a00034 	movhi	r2,32768
   91108:	10bfffc4 	addi	r2,r2,-1
   9110c:	18800826 	beq	r3,r2,91130 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   91110:	e13ffd17 	ldw	r4,-12(fp)
   91114:	e0bffb17 	ldw	r2,-20(fp)
   91118:	10c00917 	ldw	r3,36(r2)
   9111c:	e0bffb17 	ldw	r2,-20(fp)
   91120:	10800117 	ldw	r2,4(r2)
   91124:	1885803a 	cmpltu	r2,r3,r2
   91128:	20800015 	stw	r2,0(r4)
      rc = 0;
   9112c:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   91130:	e0bffa17 	ldw	r2,-24(fp)
}
   91134:	e037883a 	mov	sp,fp
   91138:	df000017 	ldw	fp,0(sp)
   9113c:	dec00104 	addi	sp,sp,4
   91140:	f800283a 	ret

00091144 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   91144:	defff204 	addi	sp,sp,-56
   91148:	dfc00d15 	stw	ra,52(sp)
   9114c:	df000c15 	stw	fp,48(sp)
   91150:	df000c04 	addi	fp,sp,48
   91154:	e13ffb15 	stw	r4,-20(fp)
   91158:	e17ffc15 	stw	r5,-16(fp)
   9115c:	e1bffd15 	stw	r6,-12(fp)
   91160:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   91164:	e0bffc17 	ldw	r2,-16(fp)
   91168:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   9116c:	00004806 	br	91290 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   91170:	e0bffb17 	ldw	r2,-20(fp)
   91174:	10800a17 	ldw	r2,40(r2)
   91178:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   9117c:	e0bffb17 	ldw	r2,-20(fp)
   91180:	10800b17 	ldw	r2,44(r2)
   91184:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   91188:	e0fff717 	ldw	r3,-36(fp)
   9118c:	e0bff617 	ldw	r2,-40(fp)
   91190:	18800536 	bltu	r3,r2,911a8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   91194:	e0bff717 	ldw	r2,-36(fp)
   91198:	e0fff617 	ldw	r3,-40(fp)
   9119c:	10c5c83a 	sub	r2,r2,r3
   911a0:	e0bff815 	stw	r2,-32(fp)
   911a4:	00000406 	br	911b8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   911a8:	00820004 	movi	r2,2048
   911ac:	e0fff617 	ldw	r3,-40(fp)
   911b0:	10c5c83a 	sub	r2,r2,r3
   911b4:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   911b8:	e0bff817 	ldw	r2,-32(fp)
   911bc:	1005003a 	cmpeq	r2,r2,zero
   911c0:	10001f1e 	bne	r2,zero,91240 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   911c4:	e0fffd17 	ldw	r3,-12(fp)
   911c8:	e0bff817 	ldw	r2,-32(fp)
   911cc:	1880022e 	bgeu	r3,r2,911d8 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   911d0:	e0bffd17 	ldw	r2,-12(fp)
   911d4:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   911d8:	e0bffb17 	ldw	r2,-20(fp)
   911dc:	10c00e04 	addi	r3,r2,56
   911e0:	e0bff617 	ldw	r2,-40(fp)
   911e4:	1887883a 	add	r3,r3,r2
   911e8:	e0bffa17 	ldw	r2,-24(fp)
   911ec:	1009883a 	mov	r4,r2
   911f0:	180b883a 	mov	r5,r3
   911f4:	e1bff817 	ldw	r6,-32(fp)
   911f8:	008865c0 	call	8865c <memcpy>
      ptr   += n;
   911fc:	e0fff817 	ldw	r3,-32(fp)
   91200:	e0bffa17 	ldw	r2,-24(fp)
   91204:	10c5883a 	add	r2,r2,r3
   91208:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   9120c:	e0fffd17 	ldw	r3,-12(fp)
   91210:	e0bff817 	ldw	r2,-32(fp)
   91214:	1885c83a 	sub	r2,r3,r2
   91218:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   9121c:	e0fff617 	ldw	r3,-40(fp)
   91220:	e0bff817 	ldw	r2,-32(fp)
   91224:	1885883a 	add	r2,r3,r2
   91228:	10c1ffcc 	andi	r3,r2,2047
   9122c:	e0bffb17 	ldw	r2,-20(fp)
   91230:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   91234:	e0bffd17 	ldw	r2,-12(fp)
   91238:	10800048 	cmpgei	r2,r2,1
   9123c:	103fcc1e 	bne	r2,zero,91170 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   91240:	e0fffa17 	ldw	r3,-24(fp)
   91244:	e0bffc17 	ldw	r2,-16(fp)
   91248:	1880141e 	bne	r3,r2,9129c <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   9124c:	e0bffe17 	ldw	r2,-8(fp)
   91250:	1090000c 	andi	r2,r2,16384
   91254:	1004c03a 	cmpne	r2,r2,zero
   91258:	1000101e 	bne	r2,zero,9129c <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   9125c:	e0bffb17 	ldw	r2,-20(fp)
   91260:	10c00a17 	ldw	r3,40(r2)
   91264:	e0bff717 	ldw	r2,-36(fp)
   91268:	1880051e 	bne	r3,r2,91280 <altera_avalon_jtag_uart_read+0x13c>
   9126c:	e0bffb17 	ldw	r2,-20(fp)
   91270:	10c00917 	ldw	r3,36(r2)
   91274:	e0bffb17 	ldw	r2,-20(fp)
   91278:	10800117 	ldw	r2,4(r2)
   9127c:	18bff736 	bltu	r3,r2,9125c <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   91280:	e0bffb17 	ldw	r2,-20(fp)
   91284:	10c00a17 	ldw	r3,40(r2)
   91288:	e0bff717 	ldw	r2,-36(fp)
   9128c:	18800326 	beq	r3,r2,9129c <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   91290:	e0bffd17 	ldw	r2,-12(fp)
   91294:	10800048 	cmpgei	r2,r2,1
   91298:	103fb51e 	bne	r2,zero,91170 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   9129c:	e0fffa17 	ldw	r3,-24(fp)
   912a0:	e0bffc17 	ldw	r2,-16(fp)
   912a4:	18801926 	beq	r3,r2,9130c <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   912a8:	0005303a 	rdctl	r2,status
   912ac:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   912b0:	e0fff517 	ldw	r3,-44(fp)
   912b4:	00bfff84 	movi	r2,-2
   912b8:	1884703a 	and	r2,r3,r2
   912bc:	1001703a 	wrctl	status,r2
  
  return context;
   912c0:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   912c4:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   912c8:	e0bffb17 	ldw	r2,-20(fp)
   912cc:	10800817 	ldw	r2,32(r2)
   912d0:	10c00054 	ori	r3,r2,1
   912d4:	e0bffb17 	ldw	r2,-20(fp)
   912d8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   912dc:	e0bffb17 	ldw	r2,-20(fp)
   912e0:	10800017 	ldw	r2,0(r2)
   912e4:	11000104 	addi	r4,r2,4
   912e8:	e0bffb17 	ldw	r2,-20(fp)
   912ec:	10800817 	ldw	r2,32(r2)
   912f0:	1007883a 	mov	r3,r2
   912f4:	2005883a 	mov	r2,r4
   912f8:	10c00035 	stwio	r3,0(r2)
   912fc:	e0bff917 	ldw	r2,-28(fp)
   91300:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   91304:	e0bff417 	ldw	r2,-48(fp)
   91308:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   9130c:	e0fffa17 	ldw	r3,-24(fp)
   91310:	e0bffc17 	ldw	r2,-16(fp)
   91314:	18800526 	beq	r3,r2,9132c <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   91318:	e0fffa17 	ldw	r3,-24(fp)
   9131c:	e0bffc17 	ldw	r2,-16(fp)
   91320:	1887c83a 	sub	r3,r3,r2
   91324:	e0ffff15 	stw	r3,-4(fp)
   91328:	00000906 	br	91350 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   9132c:	e0bffe17 	ldw	r2,-8(fp)
   91330:	1090000c 	andi	r2,r2,16384
   91334:	1005003a 	cmpeq	r2,r2,zero
   91338:	1000031e 	bne	r2,zero,91348 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   9133c:	00bffd44 	movi	r2,-11
   91340:	e0bfff15 	stw	r2,-4(fp)
   91344:	00000206 	br	91350 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   91348:	00bffec4 	movi	r2,-5
   9134c:	e0bfff15 	stw	r2,-4(fp)
   91350:	e0bfff17 	ldw	r2,-4(fp)
}
   91354:	e037883a 	mov	sp,fp
   91358:	dfc00117 	ldw	ra,4(sp)
   9135c:	df000017 	ldw	fp,0(sp)
   91360:	dec00204 	addi	sp,sp,8
   91364:	f800283a 	ret

00091368 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   91368:	defff204 	addi	sp,sp,-56
   9136c:	dfc00d15 	stw	ra,52(sp)
   91370:	df000c15 	stw	fp,48(sp)
   91374:	df000c04 	addi	fp,sp,48
   91378:	e13ffb15 	stw	r4,-20(fp)
   9137c:	e17ffc15 	stw	r5,-16(fp)
   91380:	e1bffd15 	stw	r6,-12(fp)
   91384:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   91388:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   9138c:	e0bffc17 	ldw	r2,-16(fp)
   91390:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   91394:	00003a06 	br	91480 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   91398:	e0bffb17 	ldw	r2,-20(fp)
   9139c:	10800c17 	ldw	r2,48(r2)
   913a0:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   913a4:	e0bffb17 	ldw	r2,-20(fp)
   913a8:	10800d17 	ldw	r2,52(r2)
   913ac:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   913b0:	e0fffa17 	ldw	r3,-24(fp)
   913b4:	e0bff917 	ldw	r2,-28(fp)
   913b8:	1880062e 	bgeu	r3,r2,913d4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   913bc:	e0fff917 	ldw	r3,-28(fp)
   913c0:	e0bffa17 	ldw	r2,-24(fp)
   913c4:	1885c83a 	sub	r2,r3,r2
   913c8:	10bfffc4 	addi	r2,r2,-1
   913cc:	e0bff815 	stw	r2,-32(fp)
   913d0:	00000c06 	br	91404 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   913d4:	e0bff917 	ldw	r2,-28(fp)
   913d8:	1005003a 	cmpeq	r2,r2,zero
   913dc:	1000051e 	bne	r2,zero,913f4 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   913e0:	00820004 	movi	r2,2048
   913e4:	e0fffa17 	ldw	r3,-24(fp)
   913e8:	10c5c83a 	sub	r2,r2,r3
   913ec:	e0bff815 	stw	r2,-32(fp)
   913f0:	00000406 	br	91404 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   913f4:	0081ffc4 	movi	r2,2047
   913f8:	e0fffa17 	ldw	r3,-24(fp)
   913fc:	10c5c83a 	sub	r2,r2,r3
   91400:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   91404:	e0bff817 	ldw	r2,-32(fp)
   91408:	1005003a 	cmpeq	r2,r2,zero
   9140c:	10001f1e 	bne	r2,zero,9148c <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   91410:	e0fffd17 	ldw	r3,-12(fp)
   91414:	e0bff817 	ldw	r2,-32(fp)
   91418:	1880022e 	bgeu	r3,r2,91424 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   9141c:	e0bffd17 	ldw	r2,-12(fp)
   91420:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   91424:	e0bffb17 	ldw	r2,-20(fp)
   91428:	10c20e04 	addi	r3,r2,2104
   9142c:	e0bffa17 	ldw	r2,-24(fp)
   91430:	1885883a 	add	r2,r3,r2
   91434:	e0fffc17 	ldw	r3,-16(fp)
   91438:	1009883a 	mov	r4,r2
   9143c:	180b883a 	mov	r5,r3
   91440:	e1bff817 	ldw	r6,-32(fp)
   91444:	008865c0 	call	8865c <memcpy>
      ptr   += n;
   91448:	e0fff817 	ldw	r3,-32(fp)
   9144c:	e0bffc17 	ldw	r2,-16(fp)
   91450:	10c5883a 	add	r2,r2,r3
   91454:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   91458:	e0fffd17 	ldw	r3,-12(fp)
   9145c:	e0bff817 	ldw	r2,-32(fp)
   91460:	1885c83a 	sub	r2,r3,r2
   91464:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   91468:	e0fffa17 	ldw	r3,-24(fp)
   9146c:	e0bff817 	ldw	r2,-32(fp)
   91470:	1885883a 	add	r2,r3,r2
   91474:	10c1ffcc 	andi	r3,r2,2047
   91478:	e0bffb17 	ldw	r2,-20(fp)
   9147c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   91480:	e0bffd17 	ldw	r2,-12(fp)
   91484:	10800048 	cmpgei	r2,r2,1
   91488:	103fc31e 	bne	r2,zero,91398 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   9148c:	0005303a 	rdctl	r2,status
   91490:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   91494:	e0fff517 	ldw	r3,-44(fp)
   91498:	00bfff84 	movi	r2,-2
   9149c:	1884703a 	and	r2,r3,r2
   914a0:	1001703a 	wrctl	status,r2
  
  return context;
   914a4:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   914a8:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   914ac:	e0bffb17 	ldw	r2,-20(fp)
   914b0:	10800817 	ldw	r2,32(r2)
   914b4:	10c00094 	ori	r3,r2,2
   914b8:	e0bffb17 	ldw	r2,-20(fp)
   914bc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   914c0:	e0bffb17 	ldw	r2,-20(fp)
   914c4:	10800017 	ldw	r2,0(r2)
   914c8:	11000104 	addi	r4,r2,4
   914cc:	e0bffb17 	ldw	r2,-20(fp)
   914d0:	10800817 	ldw	r2,32(r2)
   914d4:	1007883a 	mov	r3,r2
   914d8:	2005883a 	mov	r2,r4
   914dc:	10c00035 	stwio	r3,0(r2)
   914e0:	e0bff717 	ldw	r2,-36(fp)
   914e4:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   914e8:	e0bff417 	ldw	r2,-48(fp)
   914ec:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   914f0:	e0bffd17 	ldw	r2,-12(fp)
   914f4:	10800050 	cmplti	r2,r2,1
   914f8:	1000111e 	bne	r2,zero,91540 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   914fc:	e0bffe17 	ldw	r2,-8(fp)
   91500:	1090000c 	andi	r2,r2,16384
   91504:	1004c03a 	cmpne	r2,r2,zero
   91508:	1000101e 	bne	r2,zero,9154c <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   9150c:	e0bffb17 	ldw	r2,-20(fp)
   91510:	10c00d17 	ldw	r3,52(r2)
   91514:	e0bff917 	ldw	r2,-28(fp)
   91518:	1880051e 	bne	r3,r2,91530 <altera_avalon_jtag_uart_write+0x1c8>
   9151c:	e0bffb17 	ldw	r2,-20(fp)
   91520:	10c00917 	ldw	r3,36(r2)
   91524:	e0bffb17 	ldw	r2,-20(fp)
   91528:	10800117 	ldw	r2,4(r2)
   9152c:	18bff736 	bltu	r3,r2,9150c <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   91530:	e0bffb17 	ldw	r2,-20(fp)
   91534:	10c00d17 	ldw	r3,52(r2)
   91538:	e0bff917 	ldw	r2,-28(fp)
   9153c:	18800326 	beq	r3,r2,9154c <altera_avalon_jtag_uart_write+0x1e4>
        break;
    }
  }
  while (count > 0);
   91540:	e0bffd17 	ldw	r2,-12(fp)
   91544:	10800048 	cmpgei	r2,r2,1
   91548:	103fcd1e 	bne	r2,zero,91480 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   9154c:	e0fffc17 	ldw	r3,-16(fp)
   91550:	e0bff617 	ldw	r2,-40(fp)
   91554:	18800526 	beq	r3,r2,9156c <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   91558:	e0fffc17 	ldw	r3,-16(fp)
   9155c:	e0bff617 	ldw	r2,-40(fp)
   91560:	1887c83a 	sub	r3,r3,r2
   91564:	e0ffff15 	stw	r3,-4(fp)
   91568:	00000906 	br	91590 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   9156c:	e0bffe17 	ldw	r2,-8(fp)
   91570:	1090000c 	andi	r2,r2,16384
   91574:	1005003a 	cmpeq	r2,r2,zero
   91578:	1000031e 	bne	r2,zero,91588 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   9157c:	00bffd44 	movi	r2,-11
   91580:	e0bfff15 	stw	r2,-4(fp)
   91584:	00000206 	br	91590 <altera_avalon_jtag_uart_write+0x228>
  else
    return -EIO; /* Host not connected */
   91588:	00bffec4 	movi	r2,-5
   9158c:	e0bfff15 	stw	r2,-4(fp)
   91590:	e0bfff17 	ldw	r2,-4(fp)
}
   91594:	e037883a 	mov	sp,fp
   91598:	dfc00117 	ldw	ra,4(sp)
   9159c:	df000017 	ldw	fp,0(sp)
   915a0:	dec00204 	addi	sp,sp,8
   915a4:	f800283a 	ret

000915a8 <lcd_write_command>:

/* --------------------------------------------------------------------- */

static void lcd_write_command(altera_avalon_lcd_16207_state* sp, 
  unsigned char command)
{
   915a8:	defffa04 	addi	sp,sp,-24
   915ac:	dfc00515 	stw	ra,20(sp)
   915b0:	df000415 	stw	fp,16(sp)
   915b4:	df000404 	addi	fp,sp,16
   915b8:	e13ffe15 	stw	r4,-8(fp)
   915bc:	e17fff05 	stb	r5,-4(fp)
  unsigned int base = sp->base;
   915c0:	e0bffe17 	ldw	r2,-8(fp)
   915c4:	10800017 	ldw	r2,0(r2)
   915c8:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
   915cc:	008003f4 	movhi	r2,15
   915d0:	10909004 	addi	r2,r2,16960
   915d4:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
   915d8:	e0bffe17 	ldw	r2,-8(fp)
   915dc:	10800803 	ldbu	r2,32(r2)
   915e0:	10803fcc 	andi	r2,r2,255
   915e4:	1080201c 	xori	r2,r2,128
   915e8:	10bfe004 	addi	r2,r2,-128
   915ec:	1004c03a 	cmpne	r2,r2,zero
   915f0:	1000161e 	bne	r2,zero,9164c <lcd_write_command+0xa4>
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   915f4:	00000a06 	br	91620 <lcd_write_command+0x78>
    if (--i == 0)
   915f8:	e0bffc17 	ldw	r2,-16(fp)
   915fc:	10bfffc4 	addi	r2,r2,-1
   91600:	e0bffc15 	stw	r2,-16(fp)
   91604:	e0bffc17 	ldw	r2,-16(fp)
   91608:	1004c03a 	cmpne	r2,r2,zero
   9160c:	1000041e 	bne	r2,zero,91620 <lcd_write_command+0x78>
    {
      sp->broken = 1;
   91610:	e0fffe17 	ldw	r3,-8(fp)
   91614:	00800044 	movi	r2,1
   91618:	18800805 	stb	r2,32(r3)
      return;
   9161c:	00000b06 	br	9164c <lcd_write_command+0xa4>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   91620:	e0bffd17 	ldw	r2,-12(fp)
   91624:	10800104 	addi	r2,r2,4
   91628:	10800037 	ldwio	r2,0(r2)
   9162c:	1080200c 	andi	r2,r2,128
   91630:	1004c03a 	cmpne	r2,r2,zero
   91634:	103ff01e 	bne	r2,zero,915f8 <lcd_write_command+0x50>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
   91638:	01001904 	movi	r4,100
   9163c:	009322c0 	call	9322c <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, command);
   91640:	e0bffd17 	ldw	r2,-12(fp)
   91644:	e0ffff03 	ldbu	r3,-4(fp)
   91648:	10c00035 	stwio	r3,0(r2)
}
   9164c:	e037883a 	mov	sp,fp
   91650:	dfc00117 	ldw	ra,4(sp)
   91654:	df000017 	ldw	fp,0(sp)
   91658:	dec00204 	addi	sp,sp,8
   9165c:	f800283a 	ret

00091660 <lcd_write_data>:

/* --------------------------------------------------------------------- */

static void lcd_write_data(altera_avalon_lcd_16207_state* sp, 
  unsigned char data)
{
   91660:	defffa04 	addi	sp,sp,-24
   91664:	dfc00515 	stw	ra,20(sp)
   91668:	df000415 	stw	fp,16(sp)
   9166c:	df000404 	addi	fp,sp,16
   91670:	e13ffe15 	stw	r4,-8(fp)
   91674:	e17fff05 	stb	r5,-4(fp)
  unsigned int base = sp->base;
   91678:	e0bffe17 	ldw	r2,-8(fp)
   9167c:	10800017 	ldw	r2,0(r2)
   91680:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
   91684:	008003f4 	movhi	r2,15
   91688:	10909004 	addi	r2,r2,16960
   9168c:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
   91690:	e0bffe17 	ldw	r2,-8(fp)
   91694:	10800803 	ldbu	r2,32(r2)
   91698:	10803fcc 	andi	r2,r2,255
   9169c:	1080201c 	xori	r2,r2,128
   916a0:	10bfe004 	addi	r2,r2,-128
   916a4:	1004c03a 	cmpne	r2,r2,zero
   916a8:	10001d1e 	bne	r2,zero,91720 <lcd_write_data+0xc0>
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   916ac:	00000a06 	br	916d8 <lcd_write_data+0x78>
    if (--i == 0)
   916b0:	e0bffc17 	ldw	r2,-16(fp)
   916b4:	10bfffc4 	addi	r2,r2,-1
   916b8:	e0bffc15 	stw	r2,-16(fp)
   916bc:	e0bffc17 	ldw	r2,-16(fp)
   916c0:	1004c03a 	cmpne	r2,r2,zero
   916c4:	1000041e 	bne	r2,zero,916d8 <lcd_write_data+0x78>
    {
      sp->broken = 1;
   916c8:	e0fffe17 	ldw	r3,-8(fp)
   916cc:	00800044 	movi	r2,1
   916d0:	18800805 	stb	r2,32(r3)
      return;
   916d4:	00001206 	br	91720 <lcd_write_data+0xc0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
   916d8:	e0bffd17 	ldw	r2,-12(fp)
   916dc:	10800104 	addi	r2,r2,4
   916e0:	10800037 	ldwio	r2,0(r2)
   916e4:	1080200c 	andi	r2,r2,128
   916e8:	1004c03a 	cmpne	r2,r2,zero
   916ec:	103ff01e 	bne	r2,zero,916b0 <lcd_write_data+0x50>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
   916f0:	01001904 	movi	r4,100
   916f4:	009322c0 	call	9322c <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_DATA(base, data);
   916f8:	e0bffd17 	ldw	r2,-12(fp)
   916fc:	10800204 	addi	r2,r2,8
   91700:	e0ffff03 	ldbu	r3,-4(fp)
   91704:	10c00035 	stwio	r3,0(r2)

  sp->address++;
   91708:	e0bffe17 	ldw	r2,-8(fp)
   9170c:	108008c3 	ldbu	r2,35(r2)
   91710:	10800044 	addi	r2,r2,1
   91714:	1007883a 	mov	r3,r2
   91718:	e0bffe17 	ldw	r2,-8(fp)
   9171c:	10c008c5 	stb	r3,35(r2)
}
   91720:	e037883a 	mov	sp,fp
   91724:	dfc00117 	ldw	ra,4(sp)
   91728:	df000017 	ldw	fp,0(sp)
   9172c:	dec00204 	addi	sp,sp,8
   91730:	f800283a 	ret

00091734 <lcd_clear_screen>:

/* --------------------------------------------------------------------- */

static void lcd_clear_screen(altera_avalon_lcd_16207_state* sp)
{
   91734:	defffb04 	addi	sp,sp,-20
   91738:	dfc00415 	stw	ra,16(sp)
   9173c:	df000315 	stw	fp,12(sp)
   91740:	dc000215 	stw	r16,8(sp)
   91744:	df000204 	addi	fp,sp,8
   91748:	e13fff15 	stw	r4,-4(fp)
  int y;

  lcd_write_command(sp, LCD_CMD_CLEAR);
   9174c:	e13fff17 	ldw	r4,-4(fp)
   91750:	01400044 	movi	r5,1
   91754:	00915a80 	call	915a8 <lcd_write_command>

  sp->x = 0;
   91758:	e0bfff17 	ldw	r2,-4(fp)
   9175c:	10000845 	stb	zero,33(r2)
  sp->y = 0;
   91760:	e0bfff17 	ldw	r2,-4(fp)
   91764:	10000885 	stb	zero,34(r2)
  sp->address = 0;
   91768:	e0bfff17 	ldw	r2,-4(fp)
   9176c:	100008c5 	stb	zero,35(r2)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91770:	e03ffe15 	stw	zero,-8(fp)
   91774:	00001c06 	br	917e8 <lcd_clear_screen+0xb4>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
   91778:	e13ffe17 	ldw	r4,-8(fp)
   9177c:	014018c4 	movi	r5,99
   91780:	008f3380 	call	8f338 <__mulsi3>
   91784:	10c01004 	addi	r3,r2,64
   91788:	e0bfff17 	ldw	r2,-4(fp)
   9178c:	1889883a 	add	r4,r3,r2
   91790:	01400804 	movi	r5,32
   91794:	01801444 	movi	r6,81
   91798:	008203c0 	call	8203c <memset>
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
   9179c:	e13ffe17 	ldw	r4,-8(fp)
   917a0:	014018c4 	movi	r5,99
   917a4:	008f3380 	call	8f338 <__mulsi3>
   917a8:	10c00c04 	addi	r3,r2,48
   917ac:	e0bfff17 	ldw	r2,-4(fp)
   917b0:	1889883a 	add	r4,r3,r2
   917b4:	01400804 	movi	r5,32
   917b8:	01800404 	movi	r6,16
   917bc:	008203c0 	call	8203c <memset>
    sp->line[y].width = 0;
   917c0:	e13ffe17 	ldw	r4,-8(fp)
   917c4:	e43fff17 	ldw	r16,-4(fp)
   917c8:	014018c4 	movi	r5,99
   917cc:	008f3380 	call	8f338 <__mulsi3>
   917d0:	1405883a 	add	r2,r2,r16
   917d4:	10802404 	addi	r2,r2,144
   917d8:	10000045 	stb	zero,1(r2)

  sp->x = 0;
  sp->y = 0;
  sp->address = 0;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   917dc:	e0bffe17 	ldw	r2,-8(fp)
   917e0:	10800044 	addi	r2,r2,1
   917e4:	e0bffe15 	stw	r2,-8(fp)
   917e8:	e0bffe17 	ldw	r2,-8(fp)
   917ec:	10800090 	cmplti	r2,r2,2
   917f0:	103fe11e 	bne	r2,zero,91778 <lcd_clear_screen+0x44>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
    sp->line[y].width = 0;
  }
}
   917f4:	e037883a 	mov	sp,fp
   917f8:	dfc00217 	ldw	ra,8(sp)
   917fc:	df000117 	ldw	fp,4(sp)
   91800:	dc000017 	ldw	r16,0(sp)
   91804:	dec00304 	addi	sp,sp,12
   91808:	f800283a 	ret

0009180c <lcd_repaint_screen>:

/* --------------------------------------------------------------------- */

static void lcd_repaint_screen(altera_avalon_lcd_16207_state* sp)
{
   9180c:	defff404 	addi	sp,sp,-48
   91810:	dfc00b15 	stw	ra,44(sp)
   91814:	df000a15 	stw	fp,40(sp)
   91818:	dc800915 	stw	r18,36(sp)
   9181c:	dc400815 	stw	r17,32(sp)
   91820:	dc000715 	stw	r16,28(sp)
   91824:	df000704 	addi	fp,sp,28
   91828:	e13fff15 	stw	r4,-4(fp)
  /* scrollpos controls how much the lines have scrolled round.  The speed
   * each line scrolls at is controlled by its speed variable - while
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;
   9182c:	e0bfff17 	ldw	r2,-4(fp)
   91830:	10800943 	ldbu	r2,37(r2)
   91834:	10803fcc 	andi	r2,r2,255
   91838:	1080201c 	xori	r2,r2,128
   9183c:	10bfe004 	addi	r2,r2,-128
   91840:	e0bffc15 	stw	r2,-16(fp)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91844:	e03ffe15 	stw	zero,-8(fp)
   91848:	00006a06 	br	919f4 <lcd_repaint_screen+0x1e8>
  {
    int width  = sp->line[y].width;
   9184c:	e13ffe17 	ldw	r4,-8(fp)
   91850:	e43fff17 	ldw	r16,-4(fp)
   91854:	014018c4 	movi	r5,99
   91858:	008f3380 	call	8f338 <__mulsi3>
   9185c:	1405883a 	add	r2,r2,r16
   91860:	10802404 	addi	r2,r2,144
   91864:	10800043 	ldbu	r2,1(r2)
   91868:	10803fcc 	andi	r2,r2,255
   9186c:	1080201c 	xori	r2,r2,128
   91870:	10bfe004 	addi	r2,r2,-128
   91874:	e0bffb15 	stw	r2,-20(fp)
    int offset = (scrollpos * sp->line[y].speed) >> 8;
   91878:	e13ffe17 	ldw	r4,-8(fp)
   9187c:	e43fff17 	ldw	r16,-4(fp)
   91880:	014018c4 	movi	r5,99
   91884:	008f3380 	call	8f338 <__mulsi3>
   91888:	1405883a 	add	r2,r2,r16
   9188c:	10802404 	addi	r2,r2,144
   91890:	10800083 	ldbu	r2,2(r2)
   91894:	11003fcc 	andi	r4,r2,255
   91898:	e17ffc17 	ldw	r5,-16(fp)
   9189c:	008f3380 	call	8f338 <__mulsi3>
   918a0:	1005d23a 	srai	r2,r2,8
   918a4:	e0bffa15 	stw	r2,-24(fp)
    if (offset >= width)
   918a8:	e0fffa17 	ldw	r3,-24(fp)
   918ac:	e0bffb17 	ldw	r2,-20(fp)
   918b0:	18800116 	blt	r3,r2,918b8 <lcd_repaint_screen+0xac>
      offset = 0;
   918b4:	e03ffa15 	stw	zero,-24(fp)

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
   918b8:	e03ffd15 	stw	zero,-12(fp)
   918bc:	00004706 	br	919dc <lcd_repaint_screen+0x1d0>
    {
      char c = sp->line[y].data[(x + offset) % width];
   918c0:	e47ffe17 	ldw	r17,-8(fp)
   918c4:	e0fffd17 	ldw	r3,-12(fp)
   918c8:	e0bffa17 	ldw	r2,-24(fp)
   918cc:	1889883a 	add	r4,r3,r2
   918d0:	e17ffb17 	ldw	r5,-20(fp)
   918d4:	008f2c80 	call	8f2c8 <__modsi3>
   918d8:	1025883a 	mov	r18,r2
   918dc:	e43fff17 	ldw	r16,-4(fp)
   918e0:	8809883a 	mov	r4,r17
   918e4:	014018c4 	movi	r5,99
   918e8:	008f3380 	call	8f338 <__mulsi3>
   918ec:	1405883a 	add	r2,r2,r16
   918f0:	1485883a 	add	r2,r2,r18
   918f4:	10801004 	addi	r2,r2,64
   918f8:	10800003 	ldbu	r2,0(r2)
   918fc:	e0bff945 	stb	r2,-27(fp)

      /* Writing data takes 40us, so don't do it unless required */
      if (sp->line[y].visible[x] != c)
   91900:	e13ffe17 	ldw	r4,-8(fp)
   91904:	e47ffd17 	ldw	r17,-12(fp)
   91908:	e43fff17 	ldw	r16,-4(fp)
   9190c:	014018c4 	movi	r5,99
   91910:	008f3380 	call	8f338 <__mulsi3>
   91914:	1405883a 	add	r2,r2,r16
   91918:	1445883a 	add	r2,r2,r17
   9191c:	10800c04 	addi	r2,r2,48
   91920:	10800003 	ldbu	r2,0(r2)
   91924:	10c03fcc 	andi	r3,r2,255
   91928:	18c0201c 	xori	r3,r3,128
   9192c:	18ffe004 	addi	r3,r3,-128
   91930:	e0bff947 	ldb	r2,-27(fp)
   91934:	18802626 	beq	r3,r2,919d0 <lcd_repaint_screen+0x1c4>
      {
        unsigned char address = x + colstart[y];
   91938:	e0fffe17 	ldw	r3,-8(fp)
   9193c:	d0a00e04 	addi	r2,gp,-32712
   91940:	1885883a 	add	r2,r3,r2
   91944:	10800003 	ldbu	r2,0(r2)
   91948:	1007883a 	mov	r3,r2
   9194c:	e0bffd17 	ldw	r2,-12(fp)
   91950:	1885883a 	add	r2,r3,r2
   91954:	e0bff905 	stb	r2,-28(fp)

        if (address != sp->address)
   91958:	e0fff903 	ldbu	r3,-28(fp)
   9195c:	e0bfff17 	ldw	r2,-4(fp)
   91960:	108008c3 	ldbu	r2,35(r2)
   91964:	10803fcc 	andi	r2,r2,255
   91968:	1080201c 	xori	r2,r2,128
   9196c:	10bfe004 	addi	r2,r2,-128
   91970:	18800926 	beq	r3,r2,91998 <lcd_repaint_screen+0x18c>
        {
          lcd_write_command(sp, LCD_CMD_WRITE_DATA | address);
   91974:	e0fff903 	ldbu	r3,-28(fp)
   91978:	00bfe004 	movi	r2,-128
   9197c:	1884b03a 	or	r2,r3,r2
   91980:	11403fcc 	andi	r5,r2,255
   91984:	e13fff17 	ldw	r4,-4(fp)
   91988:	00915a80 	call	915a8 <lcd_write_command>
          sp->address = address;
   9198c:	e0fff903 	ldbu	r3,-28(fp)
   91990:	e0bfff17 	ldw	r2,-4(fp)
   91994:	10c008c5 	stb	r3,35(r2)
        }

        lcd_write_data(sp, c);
   91998:	e0bff943 	ldbu	r2,-27(fp)
   9199c:	11403fcc 	andi	r5,r2,255
   919a0:	e13fff17 	ldw	r4,-4(fp)
   919a4:	00916600 	call	91660 <lcd_write_data>
        sp->line[y].visible[x] = c;
   919a8:	e13ffe17 	ldw	r4,-8(fp)
   919ac:	e47ffd17 	ldw	r17,-12(fp)
   919b0:	e43fff17 	ldw	r16,-4(fp)
   919b4:	014018c4 	movi	r5,99
   919b8:	008f3380 	call	8f338 <__mulsi3>
   919bc:	1405883a 	add	r2,r2,r16
   919c0:	1445883a 	add	r2,r2,r17
   919c4:	10c00c04 	addi	r3,r2,48
   919c8:	e0bff943 	ldbu	r2,-27(fp)
   919cc:	18800005 	stb	r2,0(r3)
    int width  = sp->line[y].width;
    int offset = (scrollpos * sp->line[y].speed) >> 8;
    if (offset >= width)
      offset = 0;

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
   919d0:	e0bffd17 	ldw	r2,-12(fp)
   919d4:	10800044 	addi	r2,r2,1
   919d8:	e0bffd15 	stw	r2,-12(fp)
   919dc:	e0bffd17 	ldw	r2,-12(fp)
   919e0:	10800410 	cmplti	r2,r2,16
   919e4:	103fb61e 	bne	r2,zero,918c0 <lcd_repaint_screen+0xb4>
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   919e8:	e0bffe17 	ldw	r2,-8(fp)
   919ec:	10800044 	addi	r2,r2,1
   919f0:	e0bffe15 	stw	r2,-8(fp)
   919f4:	e0bffe17 	ldw	r2,-8(fp)
   919f8:	10800090 	cmplti	r2,r2,2
   919fc:	103f931e 	bne	r2,zero,9184c <lcd_repaint_screen+0x40>
        lcd_write_data(sp, c);
        sp->line[y].visible[x] = c;
      }
    }
  }
}
   91a00:	e037883a 	mov	sp,fp
   91a04:	dfc00417 	ldw	ra,16(sp)
   91a08:	df000317 	ldw	fp,12(sp)
   91a0c:	dc800217 	ldw	r18,8(sp)
   91a10:	dc400117 	ldw	r17,4(sp)
   91a14:	dc000017 	ldw	r16,0(sp)
   91a18:	dec00504 	addi	sp,sp,20
   91a1c:	f800283a 	ret

00091a20 <lcd_scroll_up>:

/* --------------------------------------------------------------------- */

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
   91a20:	defffb04 	addi	sp,sp,-20
   91a24:	dfc00415 	stw	ra,16(sp)
   91a28:	df000315 	stw	fp,12(sp)
   91a2c:	dc000215 	stw	r16,8(sp)
   91a30:	df000204 	addi	fp,sp,8
   91a34:	e13fff15 	stw	r4,-4(fp)
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91a38:	e03ffe15 	stw	zero,-8(fp)
   91a3c:	00002106 	br	91ac4 <lcd_scroll_up+0xa4>
  {
    if (y < ALT_LCD_HEIGHT-1)
   91a40:	e0bffe17 	ldw	r2,-8(fp)
   91a44:	10800048 	cmpgei	r2,r2,1
   91a48:	1000121e 	bne	r2,zero,91a94 <lcd_scroll_up+0x74>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
   91a4c:	e13ffe17 	ldw	r4,-8(fp)
   91a50:	014018c4 	movi	r5,99
   91a54:	008f3380 	call	8f338 <__mulsi3>
   91a58:	10c01004 	addi	r3,r2,64
   91a5c:	e0bfff17 	ldw	r2,-4(fp)
   91a60:	18a1883a 	add	r16,r3,r2
   91a64:	e0bffe17 	ldw	r2,-8(fp)
   91a68:	11000044 	addi	r4,r2,1
   91a6c:	014018c4 	movi	r5,99
   91a70:	008f3380 	call	8f338 <__mulsi3>
   91a74:	10c01004 	addi	r3,r2,64
   91a78:	e0bfff17 	ldw	r2,-4(fp)
   91a7c:	1885883a 	add	r2,r3,r2
   91a80:	8009883a 	mov	r4,r16
   91a84:	100b883a 	mov	r5,r2
   91a88:	01801404 	movi	r6,80
   91a8c:	008865c0 	call	8865c <memcpy>
   91a90:	00000906 	br	91ab8 <lcd_scroll_up+0x98>
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
   91a94:	e13ffe17 	ldw	r4,-8(fp)
   91a98:	014018c4 	movi	r5,99
   91a9c:	008f3380 	call	8f338 <__mulsi3>
   91aa0:	10c01004 	addi	r3,r2,64
   91aa4:	e0bfff17 	ldw	r2,-4(fp)
   91aa8:	1889883a 	add	r4,r3,r2
   91aac:	01400804 	movi	r5,32
   91ab0:	01801404 	movi	r6,80
   91ab4:	008203c0 	call	8203c <memset>

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   91ab8:	e0bffe17 	ldw	r2,-8(fp)
   91abc:	10800044 	addi	r2,r2,1
   91ac0:	e0bffe15 	stw	r2,-8(fp)
   91ac4:	e0bffe17 	ldw	r2,-8(fp)
   91ac8:	10800090 	cmplti	r2,r2,2
   91acc:	103fdc1e 	bne	r2,zero,91a40 <lcd_scroll_up+0x20>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  }

  sp->y--;
   91ad0:	e0bfff17 	ldw	r2,-4(fp)
   91ad4:	10800883 	ldbu	r2,34(r2)
   91ad8:	10bfffc4 	addi	r2,r2,-1
   91adc:	1007883a 	mov	r3,r2
   91ae0:	e0bfff17 	ldw	r2,-4(fp)
   91ae4:	10c00885 	stb	r3,34(r2)
}
   91ae8:	e037883a 	mov	sp,fp
   91aec:	dfc00217 	ldw	ra,8(sp)
   91af0:	df000117 	ldw	fp,4(sp)
   91af4:	dc000017 	ldw	r16,0(sp)
   91af8:	dec00304 	addi	sp,sp,12
   91afc:	f800283a 	ret

00091b00 <lcd_handle_escape>:

/* --------------------------------------------------------------------- */

static void lcd_handle_escape(altera_avalon_lcd_16207_state* sp, char c)
{
   91b00:	defff804 	addi	sp,sp,-32
   91b04:	dfc00715 	stw	ra,28(sp)
   91b08:	df000615 	stw	fp,24(sp)
   91b0c:	df000604 	addi	fp,sp,24
   91b10:	e13ffd15 	stw	r4,-12(fp)
   91b14:	e17ffe05 	stb	r5,-8(fp)
  int parm1 = 0, parm2 = 0;
   91b18:	e03ffc15 	stw	zero,-16(fp)
   91b1c:	e03ffb15 	stw	zero,-20(fp)

  if (sp->escape[0] == '[')
   91b20:	e0bffd17 	ldw	r2,-12(fp)
   91b24:	10800a03 	ldbu	r2,40(r2)
   91b28:	10803fcc 	andi	r2,r2,255
   91b2c:	1080201c 	xori	r2,r2,128
   91b30:	10bfe004 	addi	r2,r2,-128
   91b34:	108016d8 	cmpnei	r2,r2,91
   91b38:	10004d1e 	bne	r2,zero,91c70 <lcd_handle_escape+0x170>
  {
    char * ptr = sp->escape+1;
   91b3c:	e0bffd17 	ldw	r2,-12(fp)
   91b40:	10800a04 	addi	r2,r2,40
   91b44:	10800044 	addi	r2,r2,1
   91b48:	e0bffa15 	stw	r2,-24(fp)
    while (isdigit(*ptr))
   91b4c:	00000f06 	br	91b8c <lcd_handle_escape+0x8c>
      parm1 = (parm1 * 10) + (*ptr++ - '0');
   91b50:	e13ffc17 	ldw	r4,-16(fp)
   91b54:	01400284 	movi	r5,10
   91b58:	008f3380 	call	8f338 <__mulsi3>
   91b5c:	1007883a 	mov	r3,r2
   91b60:	e0bffa17 	ldw	r2,-24(fp)
   91b64:	10800003 	ldbu	r2,0(r2)
   91b68:	10803fcc 	andi	r2,r2,255
   91b6c:	1080201c 	xori	r2,r2,128
   91b70:	10bfe004 	addi	r2,r2,-128
   91b74:	1885883a 	add	r2,r3,r2
   91b78:	10bff404 	addi	r2,r2,-48
   91b7c:	e0bffc15 	stw	r2,-16(fp)
   91b80:	e0bffa17 	ldw	r2,-24(fp)
   91b84:	10800044 	addi	r2,r2,1
   91b88:	e0bffa15 	stw	r2,-24(fp)
  int parm1 = 0, parm2 = 0;

  if (sp->escape[0] == '[')
  {
    char * ptr = sp->escape+1;
    while (isdigit(*ptr))
   91b8c:	e0bffa17 	ldw	r2,-24(fp)
   91b90:	10800003 	ldbu	r2,0(r2)
   91b94:	10803fcc 	andi	r2,r2,255
   91b98:	1080201c 	xori	r2,r2,128
   91b9c:	10bfe004 	addi	r2,r2,-128
   91ba0:	1007883a 	mov	r3,r2
   91ba4:	00800274 	movhi	r2,9
   91ba8:	10968c04 	addi	r2,r2,23088
   91bac:	10800017 	ldw	r2,0(r2)
   91bb0:	1885883a 	add	r2,r3,r2
   91bb4:	10800003 	ldbu	r2,0(r2)
   91bb8:	10803fcc 	andi	r2,r2,255
   91bbc:	1080010c 	andi	r2,r2,4
   91bc0:	1004c03a 	cmpne	r2,r2,zero
   91bc4:	103fe21e 	bne	r2,zero,91b50 <lcd_handle_escape+0x50>
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
   91bc8:	e0bffa17 	ldw	r2,-24(fp)
   91bcc:	10800003 	ldbu	r2,0(r2)
   91bd0:	10803fcc 	andi	r2,r2,255
   91bd4:	1080201c 	xori	r2,r2,128
   91bd8:	10bfe004 	addi	r2,r2,-128
   91bdc:	10800ed8 	cmpnei	r2,r2,59
   91be0:	1000251e 	bne	r2,zero,91c78 <lcd_handle_escape+0x178>
    {
      ptr++;
   91be4:	e0bffa17 	ldw	r2,-24(fp)
   91be8:	10800044 	addi	r2,r2,1
   91bec:	e0bffa15 	stw	r2,-24(fp)
      while (isdigit(*ptr))
   91bf0:	00000f06 	br	91c30 <lcd_handle_escape+0x130>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
   91bf4:	e13ffb17 	ldw	r4,-20(fp)
   91bf8:	01400284 	movi	r5,10
   91bfc:	008f3380 	call	8f338 <__mulsi3>
   91c00:	1007883a 	mov	r3,r2
   91c04:	e0bffa17 	ldw	r2,-24(fp)
   91c08:	10800003 	ldbu	r2,0(r2)
   91c0c:	10803fcc 	andi	r2,r2,255
   91c10:	1080201c 	xori	r2,r2,128
   91c14:	10bfe004 	addi	r2,r2,-128
   91c18:	1885883a 	add	r2,r3,r2
   91c1c:	10bff404 	addi	r2,r2,-48
   91c20:	e0bffb15 	stw	r2,-20(fp)
   91c24:	e0bffa17 	ldw	r2,-24(fp)
   91c28:	10800044 	addi	r2,r2,1
   91c2c:	e0bffa15 	stw	r2,-24(fp)
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
    {
      ptr++;
      while (isdigit(*ptr))
   91c30:	e0bffa17 	ldw	r2,-24(fp)
   91c34:	10800003 	ldbu	r2,0(r2)
   91c38:	10803fcc 	andi	r2,r2,255
   91c3c:	1080201c 	xori	r2,r2,128
   91c40:	10bfe004 	addi	r2,r2,-128
   91c44:	1007883a 	mov	r3,r2
   91c48:	00800274 	movhi	r2,9
   91c4c:	10968c04 	addi	r2,r2,23088
   91c50:	10800017 	ldw	r2,0(r2)
   91c54:	1885883a 	add	r2,r3,r2
   91c58:	10800003 	ldbu	r2,0(r2)
   91c5c:	10803fcc 	andi	r2,r2,255
   91c60:	1080010c 	andi	r2,r2,4
   91c64:	1004c03a 	cmpne	r2,r2,zero
   91c68:	103fe21e 	bne	r2,zero,91bf4 <lcd_handle_escape+0xf4>
   91c6c:	00000206 	br	91c78 <lcd_handle_escape+0x178>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
    }
  }
  else
    parm1 = -1;
   91c70:	00bfffc4 	movi	r2,-1
   91c74:	e0bffc15 	stw	r2,-16(fp)

  switch (c)
   91c78:	e0bffe07 	ldb	r2,-8(fp)
   91c7c:	e0bfff15 	stw	r2,-4(fp)
   91c80:	e0ffff17 	ldw	r3,-4(fp)
   91c84:	188012a0 	cmpeqi	r2,r3,74
   91c88:	10002f1e 	bne	r2,zero,91d48 <lcd_handle_escape+0x248>
   91c8c:	e0ffff17 	ldw	r3,-4(fp)
   91c90:	188012c8 	cmpgei	r2,r3,75
   91c94:	1000041e 	bne	r2,zero,91ca8 <lcd_handle_escape+0x1a8>
   91c98:	e0ffff17 	ldw	r3,-4(fp)
   91c9c:	18801220 	cmpeqi	r2,r3,72
   91ca0:	1000081e 	bne	r2,zero,91cc4 <lcd_handle_escape+0x1c4>
   91ca4:	00004a06 	br	91dd0 <lcd_handle_escape+0x2d0>
   91ca8:	e0ffff17 	ldw	r3,-4(fp)
   91cac:	188012e0 	cmpeqi	r2,r3,75
   91cb0:	10002b1e 	bne	r2,zero,91d60 <lcd_handle_escape+0x260>
   91cb4:	e0ffff17 	ldw	r3,-4(fp)
   91cb8:	188019a0 	cmpeqi	r2,r3,102
   91cbc:	1000011e 	bne	r2,zero,91cc4 <lcd_handle_escape+0x1c4>
   91cc0:	00004306 	br	91dd0 <lcd_handle_escape+0x2d0>
  {
  case 'H': /* ESC '[' <y> ';' <x> 'H'  : Move cursor to location */
  case 'f': /* Same as above */
    if (parm2 > 0)
   91cc4:	e0bffb17 	ldw	r2,-20(fp)
   91cc8:	10800050 	cmplti	r2,r2,1
   91ccc:	1000051e 	bne	r2,zero,91ce4 <lcd_handle_escape+0x1e4>
      sp->x = parm2 - 1;
   91cd0:	e0bffb17 	ldw	r2,-20(fp)
   91cd4:	10bfffc4 	addi	r2,r2,-1
   91cd8:	1007883a 	mov	r3,r2
   91cdc:	e0bffd17 	ldw	r2,-12(fp)
   91ce0:	10c00845 	stb	r3,33(r2)
    if (parm1 > 0)
   91ce4:	e0bffc17 	ldw	r2,-16(fp)
   91ce8:	10800050 	cmplti	r2,r2,1
   91cec:	1000381e 	bne	r2,zero,91dd0 <lcd_handle_escape+0x2d0>
    {
      sp->y = parm1 - 1;
   91cf0:	e0bffc17 	ldw	r2,-16(fp)
   91cf4:	10bfffc4 	addi	r2,r2,-1
   91cf8:	1007883a 	mov	r3,r2
   91cfc:	e0bffd17 	ldw	r2,-12(fp)
   91d00:	10c00885 	stb	r3,34(r2)
      if (sp->y > ALT_LCD_HEIGHT * 2)
   91d04:	e0bffd17 	ldw	r2,-12(fp)
   91d08:	10800883 	ldbu	r2,34(r2)
   91d0c:	10803fcc 	andi	r2,r2,255
   91d10:	10800170 	cmpltui	r2,r2,5
   91d14:	1000061e 	bne	r2,zero,91d30 <lcd_handle_escape+0x230>
        sp->y = ALT_LCD_HEIGHT * 2;
   91d18:	e0fffd17 	ldw	r3,-12(fp)
   91d1c:	00800104 	movi	r2,4
   91d20:	18800885 	stb	r2,34(r3)
      while (sp->y > ALT_LCD_HEIGHT)
   91d24:	00000206 	br	91d30 <lcd_handle_escape+0x230>
        lcd_scroll_up(sp);
   91d28:	e13ffd17 	ldw	r4,-12(fp)
   91d2c:	0091a200 	call	91a20 <lcd_scroll_up>
    if (parm1 > 0)
    {
      sp->y = parm1 - 1;
      if (sp->y > ALT_LCD_HEIGHT * 2)
        sp->y = ALT_LCD_HEIGHT * 2;
      while (sp->y > ALT_LCD_HEIGHT)
   91d30:	e0bffd17 	ldw	r2,-12(fp)
   91d34:	10800883 	ldbu	r2,34(r2)
   91d38:	10803fcc 	andi	r2,r2,255
   91d3c:	108000e8 	cmpgeui	r2,r2,3
   91d40:	103ff91e 	bne	r2,zero,91d28 <lcd_handle_escape+0x228>
        lcd_scroll_up(sp);
    }
    break;
   91d44:	00002206 	br	91dd0 <lcd_handle_escape+0x2d0>
    /*   ESC J      is clear to beginning of line    [unimplemented]
     *   ESC [ 0 J  is clear to bottom of screen     [unimplemented]
     *   ESC [ 1 J  is clear to beginning of screen  [unimplemented]
     *   ESC [ 2 J  is clear screen
     */
    if (parm1 == 2)
   91d48:	e0bffc17 	ldw	r2,-16(fp)
   91d4c:	10800098 	cmpnei	r2,r2,2
   91d50:	10001f1e 	bne	r2,zero,91dd0 <lcd_handle_escape+0x2d0>
      lcd_clear_screen(sp);
   91d54:	e13ffd17 	ldw	r4,-12(fp)
   91d58:	00917340 	call	91734 <lcd_clear_screen>
    break;
   91d5c:	00001c06 	br	91dd0 <lcd_handle_escape+0x2d0>
    /*   ESC K      is clear to end of line
     *   ESC [ 0 K  is clear to end of line
     *   ESC [ 1 K  is clear to beginning of line    [unimplemented]
     *   ESC [ 2 K  is clear line                    [unimplemented]
     */
    if (parm1 < 1)
   91d60:	e0bffc17 	ldw	r2,-16(fp)
   91d64:	10800048 	cmpgei	r2,r2,1
   91d68:	1000191e 	bne	r2,zero,91dd0 <lcd_handle_escape+0x2d0>
    {
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
   91d6c:	e0bffd17 	ldw	r2,-12(fp)
   91d70:	10800843 	ldbu	r2,33(r2)
   91d74:	10803fcc 	andi	r2,r2,255
   91d78:	10801428 	cmpgeui	r2,r2,80
   91d7c:	1000141e 	bne	r2,zero,91dd0 <lcd_handle_escape+0x2d0>
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
   91d80:	e0bffd17 	ldw	r2,-12(fp)
   91d84:	10800883 	ldbu	r2,34(r2)
   91d88:	11003fcc 	andi	r4,r2,255
   91d8c:	014018c4 	movi	r5,99
   91d90:	008f3380 	call	8f338 <__mulsi3>
   91d94:	10c01004 	addi	r3,r2,64
   91d98:	e0bffd17 	ldw	r2,-12(fp)
   91d9c:	1887883a 	add	r3,r3,r2
   91da0:	e0bffd17 	ldw	r2,-12(fp)
   91da4:	10800843 	ldbu	r2,33(r2)
   91da8:	10803fcc 	andi	r2,r2,255
   91dac:	1889883a 	add	r4,r3,r2
   91db0:	e0bffd17 	ldw	r2,-12(fp)
   91db4:	10800843 	ldbu	r2,33(r2)
   91db8:	10c03fcc 	andi	r3,r2,255
   91dbc:	00801404 	movi	r2,80
   91dc0:	10c5c83a 	sub	r2,r2,r3
   91dc4:	100d883a 	mov	r6,r2
   91dc8:	01400804 	movi	r5,32
   91dcc:	008203c0 	call	8203c <memset>
    }
    break;
  }
}
   91dd0:	e037883a 	mov	sp,fp
   91dd4:	dfc00117 	ldw	ra,4(sp)
   91dd8:	df000017 	ldw	fp,0(sp)
   91ddc:	dec00204 	addi	sp,sp,8
   91de0:	f800283a 	ret

00091de4 <altera_avalon_lcd_16207_write>:

/* --------------------------------------------------------------------- */

int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp, 
  const char* ptr, int len, int flags)
{
   91de4:	defff004 	addi	sp,sp,-64
   91de8:	dfc00f15 	stw	ra,60(sp)
   91dec:	df000e15 	stw	fp,56(sp)
   91df0:	dc800d15 	stw	r18,52(sp)
   91df4:	dc400c15 	stw	r17,48(sp)
   91df8:	dc000b15 	stw	r16,44(sp)
   91dfc:	df000b04 	addi	fp,sp,44
   91e00:	e13ffc15 	stw	r4,-16(fp)
   91e04:	e17ffd15 	stw	r5,-12(fp)
   91e08:	e1bffe15 	stw	r6,-8(fp)
   91e0c:	e1ffff15 	stw	r7,-4(fp)
  const char* end = ptr + len;
   91e10:	e0bffe17 	ldw	r2,-8(fp)
   91e14:	1007883a 	mov	r3,r2
   91e18:	e0bffd17 	ldw	r2,-12(fp)
   91e1c:	10c5883a 	add	r2,r2,r3
   91e20:	e0bffb15 	stw	r2,-20(fp)

  ALT_SEM_PEND (sp->write_lock, 0);

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;
   91e24:	e0fffc17 	ldw	r3,-16(fp)
   91e28:	00800044 	movi	r2,1
   91e2c:	188009c5 	stb	r2,39(r3)

  for ( ; ptr < end ; ptr++)
   91e30:	0000a306 	br	920c0 <altera_avalon_lcd_16207_write+0x2dc>
  {
    char c = *ptr;
   91e34:	e0bffd17 	ldw	r2,-12(fp)
   91e38:	10800003 	ldbu	r2,0(r2)
   91e3c:	e0bff805 	stb	r2,-32(fp)

    if (sp->esccount >= 0)
   91e40:	e0bffc17 	ldw	r2,-16(fp)
   91e44:	10800903 	ldbu	r2,36(r2)
   91e48:	10803fcc 	andi	r2,r2,255
   91e4c:	1080201c 	xori	r2,r2,128
   91e50:	10bfe004 	addi	r2,r2,-128
   91e54:	1004803a 	cmplt	r2,r2,zero
   91e58:	10003b1e 	bne	r2,zero,91f48 <altera_avalon_lcd_16207_write+0x164>
    {
      unsigned int esccount = sp->esccount;
   91e5c:	e0bffc17 	ldw	r2,-16(fp)
   91e60:	10800903 	ldbu	r2,36(r2)
   91e64:	10803fcc 	andi	r2,r2,255
   91e68:	1080201c 	xori	r2,r2,128
   91e6c:	10bfe004 	addi	r2,r2,-128
   91e70:	e0bff715 	stw	r2,-36(fp)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
   91e74:	e0bff717 	ldw	r2,-36(fp)
   91e78:	1004c03a 	cmpne	r2,r2,zero
   91e7c:	1000031e 	bne	r2,zero,91e8c <altera_avalon_lcd_16207_write+0xa8>
   91e80:	e0bff807 	ldb	r2,-32(fp)
   91e84:	108016d8 	cmpnei	r2,r2,91
   91e88:	1000111e 	bne	r2,zero,91ed0 <altera_avalon_lcd_16207_write+0xec>
   91e8c:	e0bff717 	ldw	r2,-36(fp)
   91e90:	1005003a 	cmpeq	r2,r2,zero
   91e94:	10001a1e 	bne	r2,zero,91f00 <altera_avalon_lcd_16207_write+0x11c>
   91e98:	e0bff807 	ldb	r2,-32(fp)
   91e9c:	1007883a 	mov	r3,r2
   91ea0:	00800274 	movhi	r2,9
   91ea4:	10968c04 	addi	r2,r2,23088
   91ea8:	10800017 	ldw	r2,0(r2)
   91eac:	1885883a 	add	r2,r3,r2
   91eb0:	10800003 	ldbu	r2,0(r2)
   91eb4:	10803fcc 	andi	r2,r2,255
   91eb8:	1080010c 	andi	r2,r2,4
   91ebc:	1004c03a 	cmpne	r2,r2,zero
   91ec0:	10000f1e 	bne	r2,zero,91f00 <altera_avalon_lcd_16207_write+0x11c>
   91ec4:	e0bff807 	ldb	r2,-32(fp)
   91ec8:	10800ee0 	cmpeqi	r2,r2,59
   91ecc:	10000c1e 	bne	r2,zero,91f00 <altera_avalon_lcd_16207_write+0x11c>
          (esccount > 0 && !isdigit(c) && c != ';'))
      {
        sp->escape[esccount] = 0;
   91ed0:	e0fff717 	ldw	r3,-36(fp)
   91ed4:	e0bffc17 	ldw	r2,-16(fp)
   91ed8:	1885883a 	add	r2,r3,r2
   91edc:	10800a04 	addi	r2,r2,40
   91ee0:	10000005 	stb	zero,0(r2)

        lcd_handle_escape(sp, c);
   91ee4:	e17ff807 	ldb	r5,-32(fp)
   91ee8:	e13ffc17 	ldw	r4,-16(fp)
   91eec:	0091b000 	call	91b00 <lcd_handle_escape>

        sp->esccount = -1;
   91ef0:	e0fffc17 	ldw	r3,-16(fp)
   91ef4:	00bfffc4 	movi	r2,-1
   91ef8:	18800905 	stb	r2,36(r3)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
   91efc:	00006d06 	br	920b4 <altera_avalon_lcd_16207_write+0x2d0>

        lcd_handle_escape(sp, c);

        sp->esccount = -1;
      }
      else if (sp->esccount < sizeof(sp->escape)-1)
   91f00:	e0bffc17 	ldw	r2,-16(fp)
   91f04:	10800903 	ldbu	r2,36(r2)
   91f08:	10803fcc 	andi	r2,r2,255
   91f0c:	108001e8 	cmpgeui	r2,r2,7
   91f10:	1000681e 	bne	r2,zero,920b4 <altera_avalon_lcd_16207_write+0x2d0>
      {
        sp->escape[esccount] = c;
   91f14:	e0fff717 	ldw	r3,-36(fp)
   91f18:	e0bffc17 	ldw	r2,-16(fp)
   91f1c:	1885883a 	add	r2,r3,r2
   91f20:	10c00a04 	addi	r3,r2,40
   91f24:	e0bff803 	ldbu	r2,-32(fp)
   91f28:	18800005 	stb	r2,0(r3)
        sp->esccount++;
   91f2c:	e0bffc17 	ldw	r2,-16(fp)
   91f30:	10800903 	ldbu	r2,36(r2)
   91f34:	10800044 	addi	r2,r2,1
   91f38:	1007883a 	mov	r3,r2
   91f3c:	e0bffc17 	ldw	r2,-16(fp)
   91f40:	10c00905 	stb	r3,36(r2)
   91f44:	00005b06 	br	920b4 <altera_avalon_lcd_16207_write+0x2d0>
      }
    }
    else if (c == 27) /* ESC */
   91f48:	e0bff807 	ldb	r2,-32(fp)
   91f4c:	108006d8 	cmpnei	r2,r2,27
   91f50:	1000031e 	bne	r2,zero,91f60 <altera_avalon_lcd_16207_write+0x17c>
    {
      sp->esccount = 0;
   91f54:	e0bffc17 	ldw	r2,-16(fp)
   91f58:	10000905 	stb	zero,36(r2)
   91f5c:	00005506 	br	920b4 <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (c == '\r')
   91f60:	e0bff807 	ldb	r2,-32(fp)
   91f64:	10800358 	cmpnei	r2,r2,13
   91f68:	1000031e 	bne	r2,zero,91f78 <altera_avalon_lcd_16207_write+0x194>
    {
      sp->x = 0;
   91f6c:	e0bffc17 	ldw	r2,-16(fp)
   91f70:	10000845 	stb	zero,33(r2)
   91f74:	00004f06 	br	920b4 <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (c == '\n')
   91f78:	e0bff807 	ldb	r2,-32(fp)
   91f7c:	10800298 	cmpnei	r2,r2,10
   91f80:	1000101e 	bne	r2,zero,91fc4 <altera_avalon_lcd_16207_write+0x1e0>
    {
      sp->x = 0;
   91f84:	e0bffc17 	ldw	r2,-16(fp)
   91f88:	10000845 	stb	zero,33(r2)
      sp->y++;
   91f8c:	e0bffc17 	ldw	r2,-16(fp)
   91f90:	10800883 	ldbu	r2,34(r2)
   91f94:	10800044 	addi	r2,r2,1
   91f98:	1007883a 	mov	r3,r2
   91f9c:	e0bffc17 	ldw	r2,-16(fp)
   91fa0:	10c00885 	stb	r3,34(r2)

      /* Let the cursor sit at X=0, Y=HEIGHT without scrolling so the user
       * can print two lines of data without losing one.
       */
      if (sp->y > ALT_LCD_HEIGHT)
   91fa4:	e0bffc17 	ldw	r2,-16(fp)
   91fa8:	10800883 	ldbu	r2,34(r2)
   91fac:	10803fcc 	andi	r2,r2,255
   91fb0:	108000f0 	cmpltui	r2,r2,3
   91fb4:	10003f1e 	bne	r2,zero,920b4 <altera_avalon_lcd_16207_write+0x2d0>
        lcd_scroll_up(sp);
   91fb8:	e13ffc17 	ldw	r4,-16(fp)
   91fbc:	0091a200 	call	91a20 <lcd_scroll_up>
   91fc0:	00003c06 	br	920b4 <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (c == '\b')
   91fc4:	e0bff807 	ldb	r2,-32(fp)
   91fc8:	10800218 	cmpnei	r2,r2,8
   91fcc:	10000c1e 	bne	r2,zero,92000 <altera_avalon_lcd_16207_write+0x21c>
    {
      if (sp->x > 0)
   91fd0:	e0bffc17 	ldw	r2,-16(fp)
   91fd4:	10800843 	ldbu	r2,33(r2)
   91fd8:	10803fcc 	andi	r2,r2,255
   91fdc:	1005003a 	cmpeq	r2,r2,zero
   91fe0:	1000341e 	bne	r2,zero,920b4 <altera_avalon_lcd_16207_write+0x2d0>
        sp->x--;
   91fe4:	e0bffc17 	ldw	r2,-16(fp)
   91fe8:	10800843 	ldbu	r2,33(r2)
   91fec:	10bfffc4 	addi	r2,r2,-1
   91ff0:	1007883a 	mov	r3,r2
   91ff4:	e0bffc17 	ldw	r2,-16(fp)
   91ff8:	10c00845 	stb	r3,33(r2)
   91ffc:	00002d06 	br	920b4 <altera_avalon_lcd_16207_write+0x2d0>
    }
    else if (isprint(c))
   92000:	e0bff807 	ldb	r2,-32(fp)
   92004:	1007883a 	mov	r3,r2
   92008:	00800274 	movhi	r2,9
   9200c:	10968c04 	addi	r2,r2,23088
   92010:	10800017 	ldw	r2,0(r2)
   92014:	1885883a 	add	r2,r3,r2
   92018:	10800003 	ldbu	r2,0(r2)
   9201c:	10803fcc 	andi	r2,r2,255
   92020:	1080201c 	xori	r2,r2,128
   92024:	10bfe004 	addi	r2,r2,-128
   92028:	108025cc 	andi	r2,r2,151
   9202c:	1005003a 	cmpeq	r2,r2,zero
   92030:	1000201e 	bne	r2,zero,920b4 <altera_avalon_lcd_16207_write+0x2d0>
    {
      /* If we didn't scroll on the last linefeed then we might need to do
       * it now. */
      if (sp->y >= ALT_LCD_HEIGHT)
   92034:	e0bffc17 	ldw	r2,-16(fp)
   92038:	10800883 	ldbu	r2,34(r2)
   9203c:	10803fcc 	andi	r2,r2,255
   92040:	108000b0 	cmpltui	r2,r2,2
   92044:	1000021e 	bne	r2,zero,92050 <altera_avalon_lcd_16207_write+0x26c>
        lcd_scroll_up(sp);
   92048:	e13ffc17 	ldw	r4,-16(fp)
   9204c:	0091a200 	call	91a20 <lcd_scroll_up>

      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
   92050:	e0bffc17 	ldw	r2,-16(fp)
   92054:	10800843 	ldbu	r2,33(r2)
   92058:	10803fcc 	andi	r2,r2,255
   9205c:	10801428 	cmpgeui	r2,r2,80
   92060:	10000e1e 	bne	r2,zero,9209c <altera_avalon_lcd_16207_write+0x2b8>
        sp->line[sp->y].data[sp->x] = c;
   92064:	e0bffc17 	ldw	r2,-16(fp)
   92068:	10800883 	ldbu	r2,34(r2)
   9206c:	11003fcc 	andi	r4,r2,255
   92070:	e0bffc17 	ldw	r2,-16(fp)
   92074:	10800843 	ldbu	r2,33(r2)
   92078:	14403fcc 	andi	r17,r2,255
   9207c:	e43ffc17 	ldw	r16,-16(fp)
   92080:	014018c4 	movi	r5,99
   92084:	008f3380 	call	8f338 <__mulsi3>
   92088:	1405883a 	add	r2,r2,r16
   9208c:	1445883a 	add	r2,r2,r17
   92090:	10c01004 	addi	r3,r2,64
   92094:	e0bff803 	ldbu	r2,-32(fp)
   92098:	18800005 	stb	r2,0(r3)

      sp->x++;
   9209c:	e0bffc17 	ldw	r2,-16(fp)
   920a0:	10800843 	ldbu	r2,33(r2)
   920a4:	10800044 	addi	r2,r2,1
   920a8:	1007883a 	mov	r3,r2
   920ac:	e0bffc17 	ldw	r2,-16(fp)
   920b0:	10c00845 	stb	r3,33(r2)

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;

  for ( ; ptr < end ; ptr++)
   920b4:	e0bffd17 	ldw	r2,-12(fp)
   920b8:	10800044 	addi	r2,r2,1
   920bc:	e0bffd15 	stw	r2,-12(fp)
   920c0:	e0fffd17 	ldw	r3,-12(fp)
   920c4:	e0bffb17 	ldw	r2,-20(fp)
   920c8:	18bf5a36 	bltu	r3,r2,91e34 <altera_avalon_lcd_16207_write+0x50>
      sp->x++;
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
   920cc:	00800404 	movi	r2,16
   920d0:	e0bff915 	stw	r2,-28(fp)
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   920d4:	e03ffa15 	stw	zero,-24(fp)
   920d8:	00003906 	br	921c0 <altera_avalon_lcd_16207_write+0x3dc>
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
   920dc:	00801404 	movi	r2,80
   920e0:	e0bff615 	stw	r2,-40(fp)
   920e4:	00001206 	br	92130 <altera_avalon_lcd_16207_write+0x34c>
      if (sp->line[y].data[width-1] != ' ')
   920e8:	e13ffa17 	ldw	r4,-24(fp)
   920ec:	e0bff617 	ldw	r2,-40(fp)
   920f0:	147fffc4 	addi	r17,r2,-1
   920f4:	e43ffc17 	ldw	r16,-16(fp)
   920f8:	014018c4 	movi	r5,99
   920fc:	008f3380 	call	8f338 <__mulsi3>
   92100:	1405883a 	add	r2,r2,r16
   92104:	1445883a 	add	r2,r2,r17
   92108:	10801004 	addi	r2,r2,64
   9210c:	10800003 	ldbu	r2,0(r2)
   92110:	10803fcc 	andi	r2,r2,255
   92114:	1080201c 	xori	r2,r2,128
   92118:	10bfe004 	addi	r2,r2,-128
   9211c:	10800818 	cmpnei	r2,r2,32
   92120:	1000061e 	bne	r2,zero,9213c <altera_avalon_lcd_16207_write+0x358>
  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
   92124:	e0bff617 	ldw	r2,-40(fp)
   92128:	10bfffc4 	addi	r2,r2,-1
   9212c:	e0bff615 	stw	r2,-40(fp)
   92130:	e0bff617 	ldw	r2,-40(fp)
   92134:	10800048 	cmpgei	r2,r2,1
   92138:	103feb1e 	bne	r2,zero,920e8 <altera_avalon_lcd_16207_write+0x304>

    /* The minimum width is the size of the LCD panel.  If the real width
     * is long enough to require scrolling then add an extra space so the
     * end of the message doesn't run into the beginning of it.
     */
    if (width <= ALT_LCD_WIDTH)
   9213c:	e0bff617 	ldw	r2,-40(fp)
   92140:	10800448 	cmpgei	r2,r2,17
   92144:	1000031e 	bne	r2,zero,92154 <altera_avalon_lcd_16207_write+0x370>
      width = ALT_LCD_WIDTH;
   92148:	00800404 	movi	r2,16
   9214c:	e0bff615 	stw	r2,-40(fp)
   92150:	00000306 	br	92160 <altera_avalon_lcd_16207_write+0x37c>
    else
      width++;
   92154:	e0bff617 	ldw	r2,-40(fp)
   92158:	10800044 	addi	r2,r2,1
   9215c:	e0bff615 	stw	r2,-40(fp)

    sp->line[y].width = width;
   92160:	e13ffa17 	ldw	r4,-24(fp)
   92164:	e0bff617 	ldw	r2,-40(fp)
   92168:	1023883a 	mov	r17,r2
   9216c:	e43ffc17 	ldw	r16,-16(fp)
   92170:	014018c4 	movi	r5,99
   92174:	008f3380 	call	8f338 <__mulsi3>
   92178:	1405883a 	add	r2,r2,r16
   9217c:	10802404 	addi	r2,r2,144
   92180:	14400045 	stb	r17,1(r2)
    if (widthmax < width)
   92184:	e0fff917 	ldw	r3,-28(fp)
   92188:	e0bff617 	ldw	r2,-40(fp)
   9218c:	1880020e 	bge	r3,r2,92198 <altera_avalon_lcd_16207_write+0x3b4>
      widthmax = width;
   92190:	e0bff617 	ldw	r2,-40(fp)
   92194:	e0bff915 	stw	r2,-28(fp)
    sp->line[y].speed = 0; /* By default lines don't scroll */
   92198:	e13ffa17 	ldw	r4,-24(fp)
   9219c:	e43ffc17 	ldw	r16,-16(fp)
   921a0:	014018c4 	movi	r5,99
   921a4:	008f3380 	call	8f338 <__mulsi3>
   921a8:	1405883a 	add	r2,r2,r16
   921ac:	10802404 	addi	r2,r2,144
   921b0:	10000085 	stb	zero,2(r2)
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   921b4:	e0bffa17 	ldw	r2,-24(fp)
   921b8:	10800044 	addi	r2,r2,1
   921bc:	e0bffa15 	stw	r2,-24(fp)
   921c0:	e0bffa17 	ldw	r2,-24(fp)
   921c4:	10800090 	cmplti	r2,r2,2
   921c8:	103fc41e 	bne	r2,zero,920dc <altera_avalon_lcd_16207_write+0x2f8>
    if (widthmax < width)
      widthmax = width;
    sp->line[y].speed = 0; /* By default lines don't scroll */
  }

  if (widthmax <= ALT_LCD_WIDTH)
   921cc:	e0bff917 	ldw	r2,-28(fp)
   921d0:	10800448 	cmpgei	r2,r2,17
   921d4:	1000031e 	bne	r2,zero,921e4 <altera_avalon_lcd_16207_write+0x400>
    sp->scrollmax = 0;
   921d8:	e0bffc17 	ldw	r2,-16(fp)
   921dc:	10000985 	stb	zero,38(r2)
   921e0:	00003106 	br	922a8 <altera_avalon_lcd_16207_write+0x4c4>
  else
  {
    widthmax *= 2;
   921e4:	e0bff917 	ldw	r2,-28(fp)
   921e8:	1085883a 	add	r2,r2,r2
   921ec:	e0bff915 	stw	r2,-28(fp)
    sp->scrollmax = widthmax;
   921f0:	e0bff917 	ldw	r2,-28(fp)
   921f4:	1007883a 	mov	r3,r2
   921f8:	e0bffc17 	ldw	r2,-16(fp)
   921fc:	10c00985 	stb	r3,38(r2)

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   92200:	e03ffa15 	stw	zero,-24(fp)
   92204:	00002506 	br	9229c <altera_avalon_lcd_16207_write+0x4b8>
      if (sp->line[y].width > ALT_LCD_WIDTH)
   92208:	e13ffa17 	ldw	r4,-24(fp)
   9220c:	e43ffc17 	ldw	r16,-16(fp)
   92210:	014018c4 	movi	r5,99
   92214:	008f3380 	call	8f338 <__mulsi3>
   92218:	1405883a 	add	r2,r2,r16
   9221c:	10802404 	addi	r2,r2,144
   92220:	10800043 	ldbu	r2,1(r2)
   92224:	10803fcc 	andi	r2,r2,255
   92228:	1080201c 	xori	r2,r2,128
   9222c:	10bfe004 	addi	r2,r2,-128
   92230:	10800450 	cmplti	r2,r2,17
   92234:	1000161e 	bne	r2,zero,92290 <altera_avalon_lcd_16207_write+0x4ac>
         */
#if 1
        /* This option makes all the lines scroll round at different speeds
         * which are chosen so that all the scrolls finish at the same time.
         */
        sp->line[y].speed = 256 * sp->line[y].width / widthmax;
   92238:	e4bffa17 	ldw	r18,-24(fp)
   9223c:	e13ffa17 	ldw	r4,-24(fp)
   92240:	e43ffc17 	ldw	r16,-16(fp)
   92244:	014018c4 	movi	r5,99
   92248:	008f3380 	call	8f338 <__mulsi3>
   9224c:	1405883a 	add	r2,r2,r16
   92250:	10802404 	addi	r2,r2,144
   92254:	10800043 	ldbu	r2,1(r2)
   92258:	10803fcc 	andi	r2,r2,255
   9225c:	1080201c 	xori	r2,r2,128
   92260:	10bfe004 	addi	r2,r2,-128
   92264:	1008923a 	slli	r4,r2,8
   92268:	e17ff917 	ldw	r5,-28(fp)
   9226c:	008f2680 	call	8f268 <__divsi3>
   92270:	1023883a 	mov	r17,r2
   92274:	e43ffc17 	ldw	r16,-16(fp)
   92278:	9009883a 	mov	r4,r18
   9227c:	014018c4 	movi	r5,99
   92280:	008f3380 	call	8f338 <__mulsi3>
   92284:	1405883a 	add	r2,r2,r16
   92288:	10802404 	addi	r2,r2,144
   9228c:	14400085 	stb	r17,2(r2)
  {
    widthmax *= 2;
    sp->scrollmax = widthmax;

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
   92290:	e0bffa17 	ldw	r2,-24(fp)
   92294:	10800044 	addi	r2,r2,1
   92298:	e0bffa15 	stw	r2,-24(fp)
   9229c:	e0bffa17 	ldw	r2,-24(fp)
   922a0:	10800090 	cmplti	r2,r2,2
   922a4:	103fd81e 	bne	r2,zero,92208 <altera_avalon_lcd_16207_write+0x424>
   * (because active was set when the timer interrupt occurred).  If there
   * has been a missed repaint then paint again.  And again.  etc.
   */
  for ( ; ; )
  {
    int old_scrollpos = sp->scrollpos;
   922a8:	e0bffc17 	ldw	r2,-16(fp)
   922ac:	10800943 	ldbu	r2,37(r2)
   922b0:	10803fcc 	andi	r2,r2,255
   922b4:	1080201c 	xori	r2,r2,128
   922b8:	10bfe004 	addi	r2,r2,-128
   922bc:	e0bff515 	stw	r2,-44(fp)

    lcd_repaint_screen(sp);
   922c0:	e13ffc17 	ldw	r4,-16(fp)
   922c4:	009180c0 	call	9180c <lcd_repaint_screen>

    /* Let the timer routines repaint the display again */
    sp->active = 0;
   922c8:	e0bffc17 	ldw	r2,-16(fp)
   922cc:	100009c5 	stb	zero,39(r2)

    /* Have the timer routines tried to scroll while we were painting?
     * If not then we can exit */
    if (sp->scrollpos == old_scrollpos)
   922d0:	e0bffc17 	ldw	r2,-16(fp)
   922d4:	10800943 	ldbu	r2,37(r2)
   922d8:	10c03fcc 	andi	r3,r2,255
   922dc:	18c0201c 	xori	r3,r3,128
   922e0:	18ffe004 	addi	r3,r3,-128
   922e4:	e0bff517 	ldw	r2,-44(fp)
   922e8:	18800426 	beq	r3,r2,922fc <altera_avalon_lcd_16207_write+0x518>
      break;

    /* We need to repaint again since the display scrolled while we were
     * painting last time */
    sp->active = 1;
   922ec:	e0fffc17 	ldw	r3,-16(fp)
   922f0:	00800044 	movi	r2,1
   922f4:	188009c5 	stb	r2,39(r3)
  }
   922f8:	003feb06 	br	922a8 <altera_avalon_lcd_16207_write+0x4c4>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);

  return len;
   922fc:	e0bffe17 	ldw	r2,-8(fp)
}
   92300:	e037883a 	mov	sp,fp
   92304:	dfc00417 	ldw	ra,16(sp)
   92308:	df000317 	ldw	fp,12(sp)
   9230c:	dc800217 	ldw	r18,8(sp)
   92310:	dc400117 	ldw	r17,4(sp)
   92314:	dc000017 	ldw	r16,0(sp)
   92318:	dec00504 	addi	sp,sp,20
   9231c:	f800283a 	ret

00092320 <alt_lcd_16207_timeout>:
/*
 * Timeout routine is called every second
 */

static alt_u32 alt_lcd_16207_timeout(void* context) 
{
   92320:	defffc04 	addi	sp,sp,-16
   92324:	dfc00315 	stw	ra,12(sp)
   92328:	df000215 	stw	fp,8(sp)
   9232c:	df000204 	addi	fp,sp,8
   92330:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_lcd_16207_state* sp = (altera_avalon_lcd_16207_state*)context;
   92334:	e0bfff17 	ldw	r2,-4(fp)
   92338:	e0bffe15 	stw	r2,-8(fp)

  /* Update the scrolling position */
  if (sp->scrollpos + 1 >= sp->scrollmax)
   9233c:	e0bffe17 	ldw	r2,-8(fp)
   92340:	10800943 	ldbu	r2,37(r2)
   92344:	10803fcc 	andi	r2,r2,255
   92348:	1080201c 	xori	r2,r2,128
   9234c:	10bfe004 	addi	r2,r2,-128
   92350:	10c00044 	addi	r3,r2,1
   92354:	e0bffe17 	ldw	r2,-8(fp)
   92358:	10800983 	ldbu	r2,38(r2)
   9235c:	10803fcc 	andi	r2,r2,255
   92360:	1080201c 	xori	r2,r2,128
   92364:	10bfe004 	addi	r2,r2,-128
   92368:	18800316 	blt	r3,r2,92378 <alt_lcd_16207_timeout+0x58>
    sp->scrollpos = 0;
   9236c:	e0bffe17 	ldw	r2,-8(fp)
   92370:	10000945 	stb	zero,37(r2)
   92374:	00000606 	br	92390 <alt_lcd_16207_timeout+0x70>
  else
    sp->scrollpos = sp->scrollpos + 1;
   92378:	e0bffe17 	ldw	r2,-8(fp)
   9237c:	10800943 	ldbu	r2,37(r2)
   92380:	10800044 	addi	r2,r2,1
   92384:	1007883a 	mov	r3,r2
   92388:	e0bffe17 	ldw	r2,-8(fp)
   9238c:	10c00945 	stb	r3,37(r2)

  /* Repaint the panel unless the foreground will do it again soon */
  if (sp->scrollmax > 0 && !sp->active)
   92390:	e0bffe17 	ldw	r2,-8(fp)
   92394:	10800983 	ldbu	r2,38(r2)
   92398:	10803fcc 	andi	r2,r2,255
   9239c:	1080201c 	xori	r2,r2,128
   923a0:	10bfe004 	addi	r2,r2,-128
   923a4:	10800050 	cmplti	r2,r2,1
   923a8:	1000091e 	bne	r2,zero,923d0 <alt_lcd_16207_timeout+0xb0>
   923ac:	e0bffe17 	ldw	r2,-8(fp)
   923b0:	108009c3 	ldbu	r2,39(r2)
   923b4:	10803fcc 	andi	r2,r2,255
   923b8:	1080201c 	xori	r2,r2,128
   923bc:	10bfe004 	addi	r2,r2,-128
   923c0:	1004c03a 	cmpne	r2,r2,zero
   923c4:	1000021e 	bne	r2,zero,923d0 <alt_lcd_16207_timeout+0xb0>
    lcd_repaint_screen(sp);
   923c8:	e13ffe17 	ldw	r4,-8(fp)
   923cc:	009180c0 	call	9180c <lcd_repaint_screen>

  return sp->period;
   923d0:	e0bffe17 	ldw	r2,-8(fp)
   923d4:	10800717 	ldw	r2,28(r2)
}
   923d8:	e037883a 	mov	sp,fp
   923dc:	dfc00117 	ldw	ra,4(sp)
   923e0:	df000017 	ldw	fp,0(sp)
   923e4:	dec00204 	addi	sp,sp,8
   923e8:	f800283a 	ret

000923ec <altera_avalon_lcd_16207_init>:

/*
 * Called at boot time to initialise the LCD driver
 */
void altera_avalon_lcd_16207_init(altera_avalon_lcd_16207_state* sp)
{
   923ec:	defffc04 	addi	sp,sp,-16
   923f0:	dfc00315 	stw	ra,12(sp)
   923f4:	df000215 	stw	fp,8(sp)
   923f8:	df000204 	addi	fp,sp,8
   923fc:	e13fff15 	stw	r4,-4(fp)
  unsigned int base = sp->base;
   92400:	e0bfff17 	ldw	r2,-4(fp)
   92404:	10800017 	ldw	r2,0(r2)
   92408:	e0bffe15 	stw	r2,-8(fp)

  /* Mark the device as functional */
  sp->broken = 0;
   9240c:	e0bfff17 	ldw	r2,-4(fp)
   92410:	10000805 	stb	zero,32(r2)
   * the BUSY bit in the status register doesn't work until the display
   * has been reset three times.
   */

  /* Wait for 15 ms then reset */
  usleep(15000);
   92414:	010ea604 	movi	r4,15000
   92418:	009322c0 	call	9322c <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
   9241c:	e0bffe17 	ldw	r2,-8(fp)
   92420:	1007883a 	mov	r3,r2
   92424:	00800c04 	movi	r2,48
   92428:	18800035 	stwio	r2,0(r3)

  /* Wait for another 4.1ms and reset again */
  usleep(4100);  
   9242c:	01040104 	movi	r4,4100
   92430:	009322c0 	call	9322c <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
   92434:	e0bffe17 	ldw	r2,-8(fp)
   92438:	1007883a 	mov	r3,r2
   9243c:	00800c04 	movi	r2,48
   92440:	18800035 	stwio	r2,0(r3)

  /* Wait a further 1 ms and reset a third time */
  usleep(1000);
   92444:	0100fa04 	movi	r4,1000
   92448:	009322c0 	call	9322c <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
   9244c:	e0bffe17 	ldw	r2,-8(fp)
   92450:	1007883a 	mov	r3,r2
   92454:	00800c04 	movi	r2,48
   92458:	18800035 	stwio	r2,0(r3)

  /* Setup interface parameters: 8 bit bus, 2 rows, 5x7 font */
  lcd_write_command(sp, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT | LCD_CMD_TWO_LINE);
   9245c:	e13fff17 	ldw	r4,-4(fp)
   92460:	01400e04 	movi	r5,56
   92464:	00915a80 	call	915a8 <lcd_write_command>
  
  /* Turn display off */
  lcd_write_command(sp, LCD_CMD_ONOFF);
   92468:	e13fff17 	ldw	r4,-4(fp)
   9246c:	01400204 	movi	r5,8
   92470:	00915a80 	call	915a8 <lcd_write_command>

  /* Clear display */
  lcd_clear_screen(sp);
   92474:	e13fff17 	ldw	r4,-4(fp)
   92478:	00917340 	call	91734 <lcd_clear_screen>
  
  /* Set mode: increment after writing, don't shift display */
  lcd_write_command(sp, LCD_CMD_MODES | LCD_CMD_MODE_INC);
   9247c:	e13fff17 	ldw	r4,-4(fp)
   92480:	01400184 	movi	r5,6
   92484:	00915a80 	call	915a8 <lcd_write_command>

  /* Turn display on */
  lcd_write_command(sp, LCD_CMD_ONOFF | LCD_CMD_ENABLE_DISP);
   92488:	e13fff17 	ldw	r4,-4(fp)
   9248c:	01400304 	movi	r5,12
   92490:	00915a80 	call	915a8 <lcd_write_command>

  sp->esccount = -1;
   92494:	e0ffff17 	ldw	r3,-4(fp)
   92498:	00bfffc4 	movi	r2,-1
   9249c:	18800905 	stb	r2,36(r3)
  memset(sp->escape, 0, sizeof(sp->escape));
   924a0:	e0bfff17 	ldw	r2,-4(fp)
   924a4:	11000a04 	addi	r4,r2,40
   924a8:	000b883a 	mov	r5,zero
   924ac:	01800204 	movi	r6,8
   924b0:	008203c0 	call	8203c <memset>

  sp->scrollpos = 0;
   924b4:	e0bfff17 	ldw	r2,-4(fp)
   924b8:	10000945 	stb	zero,37(r2)
  sp->scrollmax = 0;
   924bc:	e0bfff17 	ldw	r2,-4(fp)
   924c0:	10000985 	stb	zero,38(r2)
  sp->active = 0;
   924c4:	e0bfff17 	ldw	r2,-4(fp)
   924c8:	100009c5 	stb	zero,39(r2)
   924cc:	00800274 	movhi	r2,9
   924d0:	109d9204 	addi	r2,r2,30280
   924d4:	10800017 	ldw	r2,0(r2)
   924d8:	1009883a 	mov	r4,r2

  sp->period = alt_ticks_per_second() / 10; /* Call every 100ms */
   924dc:	01400284 	movi	r5,10
   924e0:	008f3280 	call	8f328 <__udivsi3>
   924e4:	1007883a 	mov	r3,r2
   924e8:	e0bfff17 	ldw	r2,-4(fp)
   924ec:	10c00715 	stw	r3,28(r2)

  alt_alarm_start(&sp->alarm, sp->period, &alt_lcd_16207_timeout, sp);
   924f0:	e0bfff17 	ldw	r2,-4(fp)
   924f4:	11000104 	addi	r4,r2,4
   924f8:	e0bfff17 	ldw	r2,-4(fp)
   924fc:	10800717 	ldw	r2,28(r2)
   92500:	100b883a 	mov	r5,r2
   92504:	01800274 	movhi	r6,9
   92508:	3188c804 	addi	r6,r6,8992
   9250c:	e1ffff17 	ldw	r7,-4(fp)
   92510:	00926800 	call	92680 <alt_alarm_start>
}
   92514:	e037883a 	mov	sp,fp
   92518:	dfc00117 	ldw	ra,4(sp)
   9251c:	df000017 	ldw	fp,0(sp)
   92520:	dec00204 	addi	sp,sp,8
   92524:	f800283a 	ret

00092528 <altera_avalon_lcd_16207_write_fd>:
extern int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp,
  const char* ptr, int count, int flags);

int 
altera_avalon_lcd_16207_write_fd(alt_fd* fd, const char* buffer, int space)
{
   92528:	defffa04 	addi	sp,sp,-24
   9252c:	dfc00515 	stw	ra,20(sp)
   92530:	df000415 	stw	fp,16(sp)
   92534:	df000404 	addi	fp,sp,16
   92538:	e13ffd15 	stw	r4,-12(fp)
   9253c:	e17ffe15 	stw	r5,-8(fp)
   92540:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_lcd_16207_dev* dev = (altera_avalon_lcd_16207_dev*) fd->dev; 
   92544:	e0bffd17 	ldw	r2,-12(fp)
   92548:	10800017 	ldw	r2,0(r2)
   9254c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_lcd_16207_write(&dev->state, buffer, space,
   92550:	e0bffc17 	ldw	r2,-16(fp)
   92554:	11000a04 	addi	r4,r2,40
   92558:	e0bffd17 	ldw	r2,-12(fp)
   9255c:	11c00217 	ldw	r7,8(r2)
   92560:	e17ffe17 	ldw	r5,-8(fp)
   92564:	e1bfff17 	ldw	r6,-4(fp)
   92568:	0091de40 	call	91de4 <altera_avalon_lcd_16207_write>
      fd->fd_flags);
}
   9256c:	e037883a 	mov	sp,fp
   92570:	dfc00117 	ldw	ra,4(sp)
   92574:	df000017 	ldw	fp,0(sp)
   92578:	dec00204 	addi	sp,sp,8
   9257c:	f800283a 	ret

00092580 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   92580:	defffa04 	addi	sp,sp,-24
   92584:	dfc00515 	stw	ra,20(sp)
   92588:	df000415 	stw	fp,16(sp)
   9258c:	df000404 	addi	fp,sp,16
   92590:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   92594:	e0bfff17 	ldw	r2,-4(fp)
   92598:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   9259c:	e0bfff17 	ldw	r2,-4(fp)
   925a0:	10800104 	addi	r2,r2,4
   925a4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   925a8:	0005303a 	rdctl	r2,status
   925ac:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   925b0:	e0fffd17 	ldw	r3,-12(fp)
   925b4:	00bfff84 	movi	r2,-2
   925b8:	1884703a 	and	r2,r3,r2
   925bc:	1001703a 	wrctl	status,r2
  
  return context;
   925c0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   925c4:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
   925c8:	00931200 	call	93120 <alt_tick>
   925cc:	e0bffe17 	ldw	r2,-8(fp)
   925d0:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   925d4:	e0bffc17 	ldw	r2,-16(fp)
   925d8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   925dc:	e037883a 	mov	sp,fp
   925e0:	dfc00117 	ldw	ra,4(sp)
   925e4:	df000017 	ldw	fp,0(sp)
   925e8:	dec00204 	addi	sp,sp,8
   925ec:	f800283a 	ret

000925f0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   925f0:	defff804 	addi	sp,sp,-32
   925f4:	dfc00715 	stw	ra,28(sp)
   925f8:	df000615 	stw	fp,24(sp)
   925fc:	df000604 	addi	fp,sp,24
   92600:	e13ffc15 	stw	r4,-16(fp)
   92604:	e17ffd15 	stw	r5,-12(fp)
   92608:	e1bffe15 	stw	r6,-8(fp)
   9260c:	e1ffff15 	stw	r7,-4(fp)
   92610:	e0bfff17 	ldw	r2,-4(fp)
   92614:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   92618:	00800274 	movhi	r2,9
   9261c:	109d9204 	addi	r2,r2,30280
   92620:	10800017 	ldw	r2,0(r2)
   92624:	1004c03a 	cmpne	r2,r2,zero
   92628:	1000041e 	bne	r2,zero,9263c <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
   9262c:	00c00274 	movhi	r3,9
   92630:	18dd9204 	addi	r3,r3,30280
   92634:	e0bffb17 	ldw	r2,-20(fp)
   92638:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   9263c:	e0bffc17 	ldw	r2,-16(fp)
   92640:	10800104 	addi	r2,r2,4
   92644:	1007883a 	mov	r3,r2
   92648:	008001c4 	movi	r2,7
   9264c:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   92650:	d8000015 	stw	zero,0(sp)
   92654:	e13ffd17 	ldw	r4,-12(fp)
   92658:	e17ffe17 	ldw	r5,-8(fp)
   9265c:	01800274 	movhi	r6,9
   92660:	31896004 	addi	r6,r6,9600
   92664:	e1fffc17 	ldw	r7,-16(fp)
   92668:	0092c6c0 	call	92c6c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   9266c:	e037883a 	mov	sp,fp
   92670:	dfc00117 	ldw	ra,4(sp)
   92674:	df000017 	ldw	fp,0(sp)
   92678:	dec00204 	addi	sp,sp,8
   9267c:	f800283a 	ret

00092680 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   92680:	defff404 	addi	sp,sp,-48
   92684:	df000b15 	stw	fp,44(sp)
   92688:	df000b04 	addi	fp,sp,44
   9268c:	e13ffb15 	stw	r4,-20(fp)
   92690:	e17ffc15 	stw	r5,-16(fp)
   92694:	e1bffd15 	stw	r6,-12(fp)
   92698:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   9269c:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   926a0:	00800274 	movhi	r2,9
   926a4:	109d9204 	addi	r2,r2,30280
   926a8:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   926ac:	1005003a 	cmpeq	r2,r2,zero
   926b0:	1000411e 	bne	r2,zero,927b8 <alt_alarm_start+0x138>
  {
    if (alarm)
   926b4:	e0bffb17 	ldw	r2,-20(fp)
   926b8:	1005003a 	cmpeq	r2,r2,zero
   926bc:	10003b1e 	bne	r2,zero,927ac <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   926c0:	e0fffb17 	ldw	r3,-20(fp)
   926c4:	e0bffd17 	ldw	r2,-12(fp)
   926c8:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   926cc:	e0fffb17 	ldw	r3,-20(fp)
   926d0:	e0bffe17 	ldw	r2,-8(fp)
   926d4:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   926d8:	0005303a 	rdctl	r2,status
   926dc:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   926e0:	e0fff817 	ldw	r3,-32(fp)
   926e4:	00bfff84 	movi	r2,-2
   926e8:	1884703a 	and	r2,r3,r2
   926ec:	1001703a 	wrctl	status,r2
  
  return context;
   926f0:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   926f4:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   926f8:	00800274 	movhi	r2,9
   926fc:	109d9304 	addi	r2,r2,30284
   92700:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   92704:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   92708:	e0fffc17 	ldw	r3,-16(fp)
   9270c:	e0bff917 	ldw	r2,-28(fp)
   92710:	1885883a 	add	r2,r3,r2
   92714:	10c00044 	addi	r3,r2,1
   92718:	e0bffb17 	ldw	r2,-20(fp)
   9271c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   92720:	e0bffb17 	ldw	r2,-20(fp)
   92724:	10c00217 	ldw	r3,8(r2)
   92728:	e0bff917 	ldw	r2,-28(fp)
   9272c:	1880042e 	bgeu	r3,r2,92740 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   92730:	e0fffb17 	ldw	r3,-20(fp)
   92734:	00800044 	movi	r2,1
   92738:	18800405 	stb	r2,16(r3)
   9273c:	00000206 	br	92748 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   92740:	e0bffb17 	ldw	r2,-20(fp)
   92744:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   92748:	e0fffb17 	ldw	r3,-20(fp)
   9274c:	00800274 	movhi	r2,9
   92750:	10969804 	addi	r2,r2,23136
   92754:	e0bff615 	stw	r2,-40(fp)
   92758:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   9275c:	e0fff717 	ldw	r3,-36(fp)
   92760:	e0bff617 	ldw	r2,-40(fp)
   92764:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   92768:	e0bff617 	ldw	r2,-40(fp)
   9276c:	10c00017 	ldw	r3,0(r2)
   92770:	e0bff717 	ldw	r2,-36(fp)
   92774:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   92778:	e0bff617 	ldw	r2,-40(fp)
   9277c:	10c00017 	ldw	r3,0(r2)
   92780:	e0bff717 	ldw	r2,-36(fp)
   92784:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   92788:	e0fff617 	ldw	r3,-40(fp)
   9278c:	e0bff717 	ldw	r2,-36(fp)
   92790:	18800015 	stw	r2,0(r3)
   92794:	e0bffa17 	ldw	r2,-24(fp)
   92798:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   9279c:	e0bff517 	ldw	r2,-44(fp)
   927a0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   927a4:	e03fff15 	stw	zero,-4(fp)
   927a8:	00000506 	br	927c0 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   927ac:	00bffa84 	movi	r2,-22
   927b0:	e0bfff15 	stw	r2,-4(fp)
   927b4:	00000206 	br	927c0 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   927b8:	00bfde84 	movi	r2,-134
   927bc:	e0bfff15 	stw	r2,-4(fp)
   927c0:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   927c4:	e037883a 	mov	sp,fp
   927c8:	df000017 	ldw	fp,0(sp)
   927cc:	dec00104 	addi	sp,sp,4
   927d0:	f800283a 	ret

000927d4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   927d4:	deffff04 	addi	sp,sp,-4
   927d8:	df000015 	stw	fp,0(sp)
   927dc:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   927e0:	e037883a 	mov	sp,fp
   927e4:	df000017 	ldw	fp,0(sp)
   927e8:	dec00104 	addi	sp,sp,4
   927ec:	f800283a 	ret

000927f0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   927f0:	defff904 	addi	sp,sp,-28
   927f4:	dfc00615 	stw	ra,24(sp)
   927f8:	df000515 	stw	fp,20(sp)
   927fc:	df000504 	addi	fp,sp,20
   92800:	e13ffd15 	stw	r4,-12(fp)
   92804:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   92808:	e0bffd17 	ldw	r2,-12(fp)
   9280c:	1005003a 	cmpeq	r2,r2,zero
   92810:	1000041e 	bne	r2,zero,92824 <alt_dev_llist_insert+0x34>
   92814:	e0bffd17 	ldw	r2,-12(fp)
   92818:	10800217 	ldw	r2,8(r2)
   9281c:	1004c03a 	cmpne	r2,r2,zero
   92820:	1000071e 	bne	r2,zero,92840 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   92824:	00928a40 	call	928a4 <alt_get_errno>
   92828:	1007883a 	mov	r3,r2
   9282c:	00800584 	movi	r2,22
   92830:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   92834:	00bffa84 	movi	r2,-22
   92838:	e0bfff15 	stw	r2,-4(fp)
   9283c:	00001306 	br	9288c <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   92840:	e0fffd17 	ldw	r3,-12(fp)
   92844:	e0bffe17 	ldw	r2,-8(fp)
   92848:	e0bffb15 	stw	r2,-20(fp)
   9284c:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   92850:	e0fffc17 	ldw	r3,-16(fp)
   92854:	e0bffb17 	ldw	r2,-20(fp)
   92858:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   9285c:	e0bffb17 	ldw	r2,-20(fp)
   92860:	10c00017 	ldw	r3,0(r2)
   92864:	e0bffc17 	ldw	r2,-16(fp)
   92868:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   9286c:	e0bffb17 	ldw	r2,-20(fp)
   92870:	10c00017 	ldw	r3,0(r2)
   92874:	e0bffc17 	ldw	r2,-16(fp)
   92878:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   9287c:	e0fffb17 	ldw	r3,-20(fp)
   92880:	e0bffc17 	ldw	r2,-16(fp)
   92884:	18800015 	stw	r2,0(r3)

  return 0;  
   92888:	e03fff15 	stw	zero,-4(fp)
   9288c:	e0bfff17 	ldw	r2,-4(fp)
}
   92890:	e037883a 	mov	sp,fp
   92894:	dfc00117 	ldw	ra,4(sp)
   92898:	df000017 	ldw	fp,0(sp)
   9289c:	dec00204 	addi	sp,sp,8
   928a0:	f800283a 	ret

000928a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   928a4:	defffd04 	addi	sp,sp,-12
   928a8:	dfc00215 	stw	ra,8(sp)
   928ac:	df000115 	stw	fp,4(sp)
   928b0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   928b4:	00800274 	movhi	r2,9
   928b8:	10969404 	addi	r2,r2,23120
   928bc:	10800017 	ldw	r2,0(r2)
   928c0:	1005003a 	cmpeq	r2,r2,zero
   928c4:	1000061e 	bne	r2,zero,928e0 <alt_get_errno+0x3c>
   928c8:	00800274 	movhi	r2,9
   928cc:	10969404 	addi	r2,r2,23120
   928d0:	10800017 	ldw	r2,0(r2)
   928d4:	103ee83a 	callr	r2
   928d8:	e0bfff15 	stw	r2,-4(fp)
   928dc:	00000306 	br	928ec <alt_get_errno+0x48>
   928e0:	00800274 	movhi	r2,9
   928e4:	109d8504 	addi	r2,r2,30228
   928e8:	e0bfff15 	stw	r2,-4(fp)
   928ec:	e0bfff17 	ldw	r2,-4(fp)
}
   928f0:	e037883a 	mov	sp,fp
   928f4:	dfc00117 	ldw	ra,4(sp)
   928f8:	df000017 	ldw	fp,0(sp)
   928fc:	dec00204 	addi	sp,sp,8
   92900:	f800283a 	ret

00092904 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   92904:	defffd04 	addi	sp,sp,-12
   92908:	dfc00215 	stw	ra,8(sp)
   9290c:	df000115 	stw	fp,4(sp)
   92910:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   92914:	00bfff04 	movi	r2,-4
   92918:	00c00274 	movhi	r3,9
   9291c:	18cdf904 	addi	r3,r3,14308
   92920:	1885883a 	add	r2,r3,r2
   92924:	e0bfff15 	stw	r2,-4(fp)
   92928:	00000606 	br	92944 <_do_ctors+0x40>
        (*ctor) (); 
   9292c:	e0bfff17 	ldw	r2,-4(fp)
   92930:	10800017 	ldw	r2,0(r2)
   92934:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   92938:	e0bfff17 	ldw	r2,-4(fp)
   9293c:	10bfff04 	addi	r2,r2,-4
   92940:	e0bfff15 	stw	r2,-4(fp)
   92944:	e0ffff17 	ldw	r3,-4(fp)
   92948:	00800274 	movhi	r2,9
   9294c:	108df804 	addi	r2,r2,14304
   92950:	18bff62e 	bgeu	r3,r2,9292c <_do_ctors+0x28>
        (*ctor) (); 
}
   92954:	e037883a 	mov	sp,fp
   92958:	dfc00117 	ldw	ra,4(sp)
   9295c:	df000017 	ldw	fp,0(sp)
   92960:	dec00204 	addi	sp,sp,8
   92964:	f800283a 	ret

00092968 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   92968:	defffd04 	addi	sp,sp,-12
   9296c:	dfc00215 	stw	ra,8(sp)
   92970:	df000115 	stw	fp,4(sp)
   92974:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   92978:	00bfff04 	movi	r2,-4
   9297c:	00c00274 	movhi	r3,9
   92980:	18cdf904 	addi	r3,r3,14308
   92984:	1885883a 	add	r2,r3,r2
   92988:	e0bfff15 	stw	r2,-4(fp)
   9298c:	00000606 	br	929a8 <_do_dtors+0x40>
        (*dtor) (); 
   92990:	e0bfff17 	ldw	r2,-4(fp)
   92994:	10800017 	ldw	r2,0(r2)
   92998:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   9299c:	e0bfff17 	ldw	r2,-4(fp)
   929a0:	10bfff04 	addi	r2,r2,-4
   929a4:	e0bfff15 	stw	r2,-4(fp)
   929a8:	e0ffff17 	ldw	r3,-4(fp)
   929ac:	00800274 	movhi	r2,9
   929b0:	108df904 	addi	r2,r2,14308
   929b4:	18bff62e 	bgeu	r3,r2,92990 <_do_dtors+0x28>
        (*dtor) (); 
}
   929b8:	e037883a 	mov	sp,fp
   929bc:	dfc00117 	ldw	ra,4(sp)
   929c0:	df000017 	ldw	fp,0(sp)
   929c4:	dec00204 	addi	sp,sp,8
   929c8:	f800283a 	ret

000929cc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   929cc:	defff904 	addi	sp,sp,-28
   929d0:	dfc00615 	stw	ra,24(sp)
   929d4:	df000515 	stw	fp,20(sp)
   929d8:	df000504 	addi	fp,sp,20
   929dc:	e13ffd15 	stw	r4,-12(fp)
   929e0:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   929e4:	e0bffe17 	ldw	r2,-8(fp)
   929e8:	10800017 	ldw	r2,0(r2)
   929ec:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   929f0:	e13ffd17 	ldw	r4,-12(fp)
   929f4:	008274c0 	call	8274c <strlen>
   929f8:	10800044 	addi	r2,r2,1
   929fc:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   92a00:	00000d06 	br	92a38 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   92a04:	e0bffc17 	ldw	r2,-16(fp)
   92a08:	11000217 	ldw	r4,8(r2)
   92a0c:	e1bffb17 	ldw	r6,-20(fp)
   92a10:	e17ffd17 	ldw	r5,-12(fp)
   92a14:	00934240 	call	93424 <memcmp>
   92a18:	1004c03a 	cmpne	r2,r2,zero
   92a1c:	1000031e 	bne	r2,zero,92a2c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   92a20:	e0bffc17 	ldw	r2,-16(fp)
   92a24:	e0bfff15 	stw	r2,-4(fp)
   92a28:	00000706 	br	92a48 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   92a2c:	e0bffc17 	ldw	r2,-16(fp)
   92a30:	10800017 	ldw	r2,0(r2)
   92a34:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   92a38:	e0fffe17 	ldw	r3,-8(fp)
   92a3c:	e0bffc17 	ldw	r2,-16(fp)
   92a40:	10fff01e 	bne	r2,r3,92a04 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   92a44:	e03fff15 	stw	zero,-4(fp)
   92a48:	e0bfff17 	ldw	r2,-4(fp)
}
   92a4c:	e037883a 	mov	sp,fp
   92a50:	dfc00117 	ldw	ra,4(sp)
   92a54:	df000017 	ldw	fp,0(sp)
   92a58:	dec00204 	addi	sp,sp,8
   92a5c:	f800283a 	ret

00092a60 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   92a60:	defffa04 	addi	sp,sp,-24
   92a64:	dfc00515 	stw	ra,20(sp)
   92a68:	df000415 	stw	fp,16(sp)
   92a6c:	df000404 	addi	fp,sp,16
   92a70:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   92a74:	00800274 	movhi	r2,9
   92a78:	10968f04 	addi	r2,r2,23100
   92a7c:	10800017 	ldw	r2,0(r2)
   92a80:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   92a84:	00003306 	br	92b54 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   92a88:	e0bffd17 	ldw	r2,-12(fp)
   92a8c:	11000217 	ldw	r4,8(r2)
   92a90:	008274c0 	call	8274c <strlen>
   92a94:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   92a98:	e0bffd17 	ldw	r2,-12(fp)
   92a9c:	10c00217 	ldw	r3,8(r2)
   92aa0:	e0bffc17 	ldw	r2,-16(fp)
   92aa4:	1885883a 	add	r2,r3,r2
   92aa8:	10bfffc4 	addi	r2,r2,-1
   92aac:	10800003 	ldbu	r2,0(r2)
   92ab0:	10803fcc 	andi	r2,r2,255
   92ab4:	1080201c 	xori	r2,r2,128
   92ab8:	10bfe004 	addi	r2,r2,-128
   92abc:	10800bd8 	cmpnei	r2,r2,47
   92ac0:	1000031e 	bne	r2,zero,92ad0 <alt_find_file+0x70>
    {
      len -= 1;
   92ac4:	e0bffc17 	ldw	r2,-16(fp)
   92ac8:	10bfffc4 	addi	r2,r2,-1
   92acc:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   92ad0:	e0bffc17 	ldw	r2,-16(fp)
   92ad4:	1007883a 	mov	r3,r2
   92ad8:	e0bffe17 	ldw	r2,-8(fp)
   92adc:	1885883a 	add	r2,r3,r2
   92ae0:	10800003 	ldbu	r2,0(r2)
   92ae4:	10803fcc 	andi	r2,r2,255
   92ae8:	1080201c 	xori	r2,r2,128
   92aec:	10bfe004 	addi	r2,r2,-128
   92af0:	10800be0 	cmpeqi	r2,r2,47
   92af4:	10000a1e 	bne	r2,zero,92b20 <alt_find_file+0xc0>
   92af8:	e0bffc17 	ldw	r2,-16(fp)
   92afc:	1007883a 	mov	r3,r2
   92b00:	e0bffe17 	ldw	r2,-8(fp)
   92b04:	1885883a 	add	r2,r3,r2
   92b08:	10800003 	ldbu	r2,0(r2)
   92b0c:	10803fcc 	andi	r2,r2,255
   92b10:	1080201c 	xori	r2,r2,128
   92b14:	10bfe004 	addi	r2,r2,-128
   92b18:	1004c03a 	cmpne	r2,r2,zero
   92b1c:	10000a1e 	bne	r2,zero,92b48 <alt_find_file+0xe8>
   92b20:	e0bffd17 	ldw	r2,-12(fp)
   92b24:	11000217 	ldw	r4,8(r2)
   92b28:	e1bffc17 	ldw	r6,-16(fp)
   92b2c:	e17ffe17 	ldw	r5,-8(fp)
   92b30:	00934240 	call	93424 <memcmp>
   92b34:	1004c03a 	cmpne	r2,r2,zero
   92b38:	1000031e 	bne	r2,zero,92b48 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   92b3c:	e0bffd17 	ldw	r2,-12(fp)
   92b40:	e0bfff15 	stw	r2,-4(fp)
   92b44:	00000806 	br	92b68 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   92b48:	e0bffd17 	ldw	r2,-12(fp)
   92b4c:	10800017 	ldw	r2,0(r2)
   92b50:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   92b54:	00c00274 	movhi	r3,9
   92b58:	18d68f04 	addi	r3,r3,23100
   92b5c:	e0bffd17 	ldw	r2,-12(fp)
   92b60:	10ffc91e 	bne	r2,r3,92a88 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   92b64:	e03fff15 	stw	zero,-4(fp)
   92b68:	e0bfff17 	ldw	r2,-4(fp)
}
   92b6c:	e037883a 	mov	sp,fp
   92b70:	dfc00117 	ldw	ra,4(sp)
   92b74:	df000017 	ldw	fp,0(sp)
   92b78:	dec00204 	addi	sp,sp,8
   92b7c:	f800283a 	ret

00092b80 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   92b80:	defffa04 	addi	sp,sp,-24
   92b84:	dfc00515 	stw	ra,20(sp)
   92b88:	df000415 	stw	fp,16(sp)
   92b8c:	dc000315 	stw	r16,12(sp)
   92b90:	df000304 	addi	fp,sp,12
   92b94:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   92b98:	00bffa04 	movi	r2,-24
   92b9c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   92ba0:	e03ffe15 	stw	zero,-8(fp)
   92ba4:	00002006 	br	92c28 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
   92ba8:	e13ffe17 	ldw	r4,-8(fp)
   92bac:	04000274 	movhi	r16,9
   92bb0:	8411c804 	addi	r16,r16,18208
   92bb4:	01400304 	movi	r5,12
   92bb8:	008f3380 	call	8f338 <__mulsi3>
   92bbc:	1405883a 	add	r2,r2,r16
   92bc0:	10800017 	ldw	r2,0(r2)
   92bc4:	1004c03a 	cmpne	r2,r2,zero
   92bc8:	1000141e 	bne	r2,zero,92c1c <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
   92bcc:	e13ffe17 	ldw	r4,-8(fp)
   92bd0:	04000274 	movhi	r16,9
   92bd4:	8411c804 	addi	r16,r16,18208
   92bd8:	01400304 	movi	r5,12
   92bdc:	008f3380 	call	8f338 <__mulsi3>
   92be0:	1407883a 	add	r3,r2,r16
   92be4:	e0bfff17 	ldw	r2,-4(fp)
   92be8:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   92bec:	00800274 	movhi	r2,9
   92bf0:	10969304 	addi	r2,r2,23116
   92bf4:	10c00017 	ldw	r3,0(r2)
   92bf8:	e0bffe17 	ldw	r2,-8(fp)
   92bfc:	1880040e 	bge	r3,r2,92c10 <alt_get_fd+0x90>
      {
        alt_max_fd = i;
   92c00:	00c00274 	movhi	r3,9
   92c04:	18d69304 	addi	r3,r3,23116
   92c08:	e0bffe17 	ldw	r2,-8(fp)
   92c0c:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   92c10:	e0bffe17 	ldw	r2,-8(fp)
   92c14:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   92c18:	00000606 	br	92c34 <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   92c1c:	e0bffe17 	ldw	r2,-8(fp)
   92c20:	10800044 	addi	r2,r2,1
   92c24:	e0bffe15 	stw	r2,-8(fp)
   92c28:	e0bffe17 	ldw	r2,-8(fp)
   92c2c:	10800810 	cmplti	r2,r2,32
   92c30:	103fdd1e 	bne	r2,zero,92ba8 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   92c34:	e0bffd17 	ldw	r2,-12(fp)
}
   92c38:	e037883a 	mov	sp,fp
   92c3c:	dfc00217 	ldw	ra,8(sp)
   92c40:	df000117 	ldw	fp,4(sp)
   92c44:	dc000017 	ldw	r16,0(sp)
   92c48:	dec00304 	addi	sp,sp,12
   92c4c:	f800283a 	ret

00092c50 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   92c50:	deffff04 	addi	sp,sp,-4
   92c54:	df000015 	stw	fp,0(sp)
   92c58:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   92c5c:	e037883a 	mov	sp,fp
   92c60:	df000017 	ldw	fp,0(sp)
   92c64:	dec00104 	addi	sp,sp,4
   92c68:	f800283a 	ret

00092c6c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   92c6c:	defff904 	addi	sp,sp,-28
   92c70:	dfc00615 	stw	ra,24(sp)
   92c74:	df000515 	stw	fp,20(sp)
   92c78:	df000504 	addi	fp,sp,20
   92c7c:	e13ffc15 	stw	r4,-16(fp)
   92c80:	e17ffd15 	stw	r5,-12(fp)
   92c84:	e1bffe15 	stw	r6,-8(fp)
   92c88:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   92c8c:	e0800217 	ldw	r2,8(fp)
   92c90:	d8800015 	stw	r2,0(sp)
   92c94:	e13ffc17 	ldw	r4,-16(fp)
   92c98:	e17ffd17 	ldw	r5,-12(fp)
   92c9c:	e1bffe17 	ldw	r6,-8(fp)
   92ca0:	e1ffff17 	ldw	r7,-4(fp)
   92ca4:	0092e400 	call	92e40 <alt_iic_isr_register>
}  
   92ca8:	e037883a 	mov	sp,fp
   92cac:	dfc00117 	ldw	ra,4(sp)
   92cb0:	df000017 	ldw	fp,0(sp)
   92cb4:	dec00204 	addi	sp,sp,8
   92cb8:	f800283a 	ret

00092cbc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   92cbc:	defff904 	addi	sp,sp,-28
   92cc0:	df000615 	stw	fp,24(sp)
   92cc4:	df000604 	addi	fp,sp,24
   92cc8:	e13ffe15 	stw	r4,-8(fp)
   92ccc:	e17fff15 	stw	r5,-4(fp)
   92cd0:	e0bfff17 	ldw	r2,-4(fp)
   92cd4:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   92cd8:	0005303a 	rdctl	r2,status
   92cdc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   92ce0:	e0fffb17 	ldw	r3,-20(fp)
   92ce4:	00bfff84 	movi	r2,-2
   92ce8:	1884703a 	and	r2,r3,r2
   92cec:	1001703a 	wrctl	status,r2
  
  return context;
   92cf0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   92cf4:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   92cf8:	e0fffc17 	ldw	r3,-16(fp)
   92cfc:	00800044 	movi	r2,1
   92d00:	10c4983a 	sll	r2,r2,r3
   92d04:	1007883a 	mov	r3,r2
   92d08:	00800274 	movhi	r2,9
   92d0c:	109d9104 	addi	r2,r2,30276
   92d10:	10800017 	ldw	r2,0(r2)
   92d14:	1886b03a 	or	r3,r3,r2
   92d18:	00800274 	movhi	r2,9
   92d1c:	109d9104 	addi	r2,r2,30276
   92d20:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   92d24:	00800274 	movhi	r2,9
   92d28:	109d9104 	addi	r2,r2,30276
   92d2c:	10800017 	ldw	r2,0(r2)
   92d30:	100170fa 	wrctl	ienable,r2
   92d34:	e0bffd17 	ldw	r2,-12(fp)
   92d38:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   92d3c:	e0bffa17 	ldw	r2,-24(fp)
   92d40:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   92d44:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   92d48:	e037883a 	mov	sp,fp
   92d4c:	df000017 	ldw	fp,0(sp)
   92d50:	dec00104 	addi	sp,sp,4
   92d54:	f800283a 	ret

00092d58 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   92d58:	defff904 	addi	sp,sp,-28
   92d5c:	df000615 	stw	fp,24(sp)
   92d60:	df000604 	addi	fp,sp,24
   92d64:	e13ffe15 	stw	r4,-8(fp)
   92d68:	e17fff15 	stw	r5,-4(fp)
   92d6c:	e0bfff17 	ldw	r2,-4(fp)
   92d70:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   92d74:	0005303a 	rdctl	r2,status
   92d78:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   92d7c:	e0fffb17 	ldw	r3,-20(fp)
   92d80:	00bfff84 	movi	r2,-2
   92d84:	1884703a 	and	r2,r3,r2
   92d88:	1001703a 	wrctl	status,r2
  
  return context;
   92d8c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   92d90:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   92d94:	e0fffc17 	ldw	r3,-16(fp)
   92d98:	00800044 	movi	r2,1
   92d9c:	10c4983a 	sll	r2,r2,r3
   92da0:	0084303a 	nor	r2,zero,r2
   92da4:	1007883a 	mov	r3,r2
   92da8:	00800274 	movhi	r2,9
   92dac:	109d9104 	addi	r2,r2,30276
   92db0:	10800017 	ldw	r2,0(r2)
   92db4:	1886703a 	and	r3,r3,r2
   92db8:	00800274 	movhi	r2,9
   92dbc:	109d9104 	addi	r2,r2,30276
   92dc0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   92dc4:	00800274 	movhi	r2,9
   92dc8:	109d9104 	addi	r2,r2,30276
   92dcc:	10800017 	ldw	r2,0(r2)
   92dd0:	100170fa 	wrctl	ienable,r2
   92dd4:	e0bffd17 	ldw	r2,-12(fp)
   92dd8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   92ddc:	e0bffa17 	ldw	r2,-24(fp)
   92de0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   92de4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   92de8:	e037883a 	mov	sp,fp
   92dec:	df000017 	ldw	fp,0(sp)
   92df0:	dec00104 	addi	sp,sp,4
   92df4:	f800283a 	ret

00092df8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   92df8:	defffc04 	addi	sp,sp,-16
   92dfc:	df000315 	stw	fp,12(sp)
   92e00:	df000304 	addi	fp,sp,12
   92e04:	e13ffe15 	stw	r4,-8(fp)
   92e08:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   92e0c:	000530fa 	rdctl	r2,ienable
   92e10:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   92e14:	e0ffff17 	ldw	r3,-4(fp)
   92e18:	00800044 	movi	r2,1
   92e1c:	10c4983a 	sll	r2,r2,r3
   92e20:	1007883a 	mov	r3,r2
   92e24:	e0bffd17 	ldw	r2,-12(fp)
   92e28:	1884703a 	and	r2,r3,r2
   92e2c:	1004c03a 	cmpne	r2,r2,zero
}
   92e30:	e037883a 	mov	sp,fp
   92e34:	df000017 	ldw	fp,0(sp)
   92e38:	dec00104 	addi	sp,sp,4
   92e3c:	f800283a 	ret

00092e40 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   92e40:	defff404 	addi	sp,sp,-48
   92e44:	dfc00b15 	stw	ra,44(sp)
   92e48:	df000a15 	stw	fp,40(sp)
   92e4c:	df000a04 	addi	fp,sp,40
   92e50:	e13ffb15 	stw	r4,-20(fp)
   92e54:	e17ffc15 	stw	r5,-16(fp)
   92e58:	e1bffd15 	stw	r6,-12(fp)
   92e5c:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   92e60:	00bffa84 	movi	r2,-22
   92e64:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   92e68:	e0bffc17 	ldw	r2,-16(fp)
   92e6c:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   92e70:	e0bff917 	ldw	r2,-28(fp)
   92e74:	10800808 	cmpgei	r2,r2,32
   92e78:	1000291e 	bne	r2,zero,92f20 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   92e7c:	0005303a 	rdctl	r2,status
   92e80:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   92e84:	e0fff717 	ldw	r3,-36(fp)
   92e88:	00bfff84 	movi	r2,-2
   92e8c:	1884703a 	and	r2,r3,r2
   92e90:	1001703a 	wrctl	status,r2
  
  return context;
   92e94:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   92e98:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   92e9c:	e0bff917 	ldw	r2,-28(fp)
   92ea0:	00c00274 	movhi	r3,9
   92ea4:	18ddde04 	addi	r3,r3,30584
   92ea8:	100490fa 	slli	r2,r2,3
   92eac:	10c7883a 	add	r3,r2,r3
   92eb0:	e0bffd17 	ldw	r2,-12(fp)
   92eb4:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   92eb8:	e0bff917 	ldw	r2,-28(fp)
   92ebc:	00c00274 	movhi	r3,9
   92ec0:	18ddde04 	addi	r3,r3,30584
   92ec4:	100490fa 	slli	r2,r2,3
   92ec8:	10c5883a 	add	r2,r2,r3
   92ecc:	10c00104 	addi	r3,r2,4
   92ed0:	e0bffe17 	ldw	r2,-8(fp)
   92ed4:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   92ed8:	e0bffd17 	ldw	r2,-12(fp)
   92edc:	1005003a 	cmpeq	r2,r2,zero
   92ee0:	1000051e 	bne	r2,zero,92ef8 <alt_iic_isr_register+0xb8>
   92ee4:	e17ff917 	ldw	r5,-28(fp)
   92ee8:	e13ffb17 	ldw	r4,-20(fp)
   92eec:	0092cbc0 	call	92cbc <alt_ic_irq_enable>
   92ef0:	e0bfff15 	stw	r2,-4(fp)
   92ef4:	00000406 	br	92f08 <alt_iic_isr_register+0xc8>
   92ef8:	e17ff917 	ldw	r5,-28(fp)
   92efc:	e13ffb17 	ldw	r4,-20(fp)
   92f00:	0092d580 	call	92d58 <alt_ic_irq_disable>
   92f04:	e0bfff15 	stw	r2,-4(fp)
   92f08:	e0bfff17 	ldw	r2,-4(fp)
   92f0c:	e0bffa15 	stw	r2,-24(fp)
   92f10:	e0bff817 	ldw	r2,-32(fp)
   92f14:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   92f18:	e0bff617 	ldw	r2,-40(fp)
   92f1c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   92f20:	e0bffa17 	ldw	r2,-24(fp)
}
   92f24:	e037883a 	mov	sp,fp
   92f28:	dfc00117 	ldw	ra,4(sp)
   92f2c:	df000017 	ldw	fp,0(sp)
   92f30:	dec00204 	addi	sp,sp,8
   92f34:	f800283a 	ret

00092f38 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   92f38:	defff804 	addi	sp,sp,-32
   92f3c:	dfc00715 	stw	ra,28(sp)
   92f40:	df000615 	stw	fp,24(sp)
   92f44:	dc000515 	stw	r16,20(sp)
   92f48:	df000504 	addi	fp,sp,20
   92f4c:	e13ffc15 	stw	r4,-16(fp)
   92f50:	e17ffd15 	stw	r5,-12(fp)
   92f54:	e1bffe15 	stw	r6,-8(fp)
   92f58:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   92f5c:	e13ffd17 	ldw	r4,-12(fp)
   92f60:	e17ffe17 	ldw	r5,-8(fp)
   92f64:	e1bfff17 	ldw	r6,-4(fp)
   92f68:	00903cc0 	call	903cc <open>
   92f6c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   92f70:	e0bffb17 	ldw	r2,-20(fp)
   92f74:	1004803a 	cmplt	r2,r2,zero
   92f78:	10001f1e 	bne	r2,zero,92ff8 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
   92f7c:	e13ffb17 	ldw	r4,-20(fp)
   92f80:	04000274 	movhi	r16,9
   92f84:	8411c804 	addi	r16,r16,18208
   92f88:	01400304 	movi	r5,12
   92f8c:	008f3380 	call	8f338 <__mulsi3>
   92f90:	1405883a 	add	r2,r2,r16
   92f94:	10c00017 	ldw	r3,0(r2)
   92f98:	e0bffc17 	ldw	r2,-16(fp)
   92f9c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   92fa0:	e13ffb17 	ldw	r4,-20(fp)
   92fa4:	04000274 	movhi	r16,9
   92fa8:	8411c804 	addi	r16,r16,18208
   92fac:	01400304 	movi	r5,12
   92fb0:	008f3380 	call	8f338 <__mulsi3>
   92fb4:	1405883a 	add	r2,r2,r16
   92fb8:	10800104 	addi	r2,r2,4
   92fbc:	10c00017 	ldw	r3,0(r2)
   92fc0:	e0bffc17 	ldw	r2,-16(fp)
   92fc4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   92fc8:	e13ffb17 	ldw	r4,-20(fp)
   92fcc:	04000274 	movhi	r16,9
   92fd0:	8411c804 	addi	r16,r16,18208
   92fd4:	01400304 	movi	r5,12
   92fd8:	008f3380 	call	8f338 <__mulsi3>
   92fdc:	1405883a 	add	r2,r2,r16
   92fe0:	10800204 	addi	r2,r2,8
   92fe4:	10c00017 	ldw	r3,0(r2)
   92fe8:	e0bffc17 	ldw	r2,-16(fp)
   92fec:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   92ff0:	e13ffb17 	ldw	r4,-20(fp)
   92ff4:	009073c0 	call	9073c <alt_release_fd>
  }
} 
   92ff8:	e037883a 	mov	sp,fp
   92ffc:	dfc00217 	ldw	ra,8(sp)
   93000:	df000117 	ldw	fp,4(sp)
   93004:	dc000017 	ldw	r16,0(sp)
   93008:	dec00304 	addi	sp,sp,12
   9300c:	f800283a 	ret

00093010 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   93010:	defffb04 	addi	sp,sp,-20
   93014:	dfc00415 	stw	ra,16(sp)
   93018:	df000315 	stw	fp,12(sp)
   9301c:	df000304 	addi	fp,sp,12
   93020:	e13ffd15 	stw	r4,-12(fp)
   93024:	e17ffe15 	stw	r5,-8(fp)
   93028:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   9302c:	01000274 	movhi	r4,9
   93030:	2111cb04 	addi	r4,r4,18220
   93034:	e17ffd17 	ldw	r5,-12(fp)
   93038:	01800044 	movi	r6,1
   9303c:	01c07fc4 	movi	r7,511
   93040:	0092f380 	call	92f38 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   93044:	01000274 	movhi	r4,9
   93048:	2111c804 	addi	r4,r4,18208
   9304c:	e17ffe17 	ldw	r5,-8(fp)
   93050:	000d883a 	mov	r6,zero
   93054:	01c07fc4 	movi	r7,511
   93058:	0092f380 	call	92f38 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   9305c:	01000274 	movhi	r4,9
   93060:	2111ce04 	addi	r4,r4,18232
   93064:	e17fff17 	ldw	r5,-4(fp)
   93068:	01800044 	movi	r6,1
   9306c:	01c07fc4 	movi	r7,511
   93070:	0092f380 	call	92f38 <alt_open_fd>
}  
   93074:	e037883a 	mov	sp,fp
   93078:	dfc00117 	ldw	ra,4(sp)
   9307c:	df000017 	ldw	fp,0(sp)
   93080:	dec00204 	addi	sp,sp,8
   93084:	f800283a 	ret

00093088 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   93088:	defffa04 	addi	sp,sp,-24
   9308c:	df000515 	stw	fp,20(sp)
   93090:	df000504 	addi	fp,sp,20
   93094:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   93098:	0005303a 	rdctl	r2,status
   9309c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   930a0:	e0fffd17 	ldw	r3,-12(fp)
   930a4:	00bfff84 	movi	r2,-2
   930a8:	1884703a 	and	r2,r3,r2
   930ac:	1001703a 	wrctl	status,r2
  
  return context;
   930b0:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   930b4:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   930b8:	e0bfff17 	ldw	r2,-4(fp)
   930bc:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   930c0:	e0bffc17 	ldw	r2,-16(fp)
   930c4:	10c00017 	ldw	r3,0(r2)
   930c8:	e0bffc17 	ldw	r2,-16(fp)
   930cc:	10800117 	ldw	r2,4(r2)
   930d0:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   930d4:	e0bffc17 	ldw	r2,-16(fp)
   930d8:	10c00117 	ldw	r3,4(r2)
   930dc:	e0bffc17 	ldw	r2,-16(fp)
   930e0:	10800017 	ldw	r2,0(r2)
   930e4:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   930e8:	e0fffc17 	ldw	r3,-16(fp)
   930ec:	e0bffc17 	ldw	r2,-16(fp)
   930f0:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   930f4:	e0fffc17 	ldw	r3,-16(fp)
   930f8:	e0bffc17 	ldw	r2,-16(fp)
   930fc:	18800015 	stw	r2,0(r3)
   93100:	e0bffe17 	ldw	r2,-8(fp)
   93104:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   93108:	e0bffb17 	ldw	r2,-20(fp)
   9310c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   93110:	e037883a 	mov	sp,fp
   93114:	df000017 	ldw	fp,0(sp)
   93118:	dec00104 	addi	sp,sp,4
   9311c:	f800283a 	ret

00093120 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   93120:	defffb04 	addi	sp,sp,-20
   93124:	dfc00415 	stw	ra,16(sp)
   93128:	df000315 	stw	fp,12(sp)
   9312c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   93130:	d0a01017 	ldw	r2,-32704(gp)
   93134:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   93138:	d0a70b17 	ldw	r2,-25556(gp)
   9313c:	10800044 	addi	r2,r2,1
   93140:	d0a70b15 	stw	r2,-25556(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   93144:	00003106 	br	9320c <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   93148:	e0bffe17 	ldw	r2,-8(fp)
   9314c:	10800017 	ldw	r2,0(r2)
   93150:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   93154:	e0bffe17 	ldw	r2,-8(fp)
   93158:	10800403 	ldbu	r2,16(r2)
   9315c:	10803fcc 	andi	r2,r2,255
   93160:	1005003a 	cmpeq	r2,r2,zero
   93164:	1000051e 	bne	r2,zero,9317c <alt_tick+0x5c>
   93168:	d0a70b17 	ldw	r2,-25556(gp)
   9316c:	1004c03a 	cmpne	r2,r2,zero
   93170:	1000021e 	bne	r2,zero,9317c <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   93174:	e0bffe17 	ldw	r2,-8(fp)
   93178:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   9317c:	e0bffe17 	ldw	r2,-8(fp)
   93180:	10c00217 	ldw	r3,8(r2)
   93184:	d0a70b17 	ldw	r2,-25556(gp)
   93188:	10c01e36 	bltu	r2,r3,93204 <alt_tick+0xe4>
   9318c:	e0bffe17 	ldw	r2,-8(fp)
   93190:	10800403 	ldbu	r2,16(r2)
   93194:	10803fcc 	andi	r2,r2,255
   93198:	1004c03a 	cmpne	r2,r2,zero
   9319c:	1000191e 	bne	r2,zero,93204 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   931a0:	e0bffe17 	ldw	r2,-8(fp)
   931a4:	10c00317 	ldw	r3,12(r2)
   931a8:	e0bffe17 	ldw	r2,-8(fp)
   931ac:	11000517 	ldw	r4,20(r2)
   931b0:	183ee83a 	callr	r3
   931b4:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   931b8:	e0bffd17 	ldw	r2,-12(fp)
   931bc:	1004c03a 	cmpne	r2,r2,zero
   931c0:	1000031e 	bne	r2,zero,931d0 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   931c4:	e13ffe17 	ldw	r4,-8(fp)
   931c8:	00930880 	call	93088 <alt_alarm_stop>
   931cc:	00000d06 	br	93204 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   931d0:	e0bffe17 	ldw	r2,-8(fp)
   931d4:	10c00217 	ldw	r3,8(r2)
   931d8:	e0bffd17 	ldw	r2,-12(fp)
   931dc:	1887883a 	add	r3,r3,r2
   931e0:	e0bffe17 	ldw	r2,-8(fp)
   931e4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   931e8:	e0bffe17 	ldw	r2,-8(fp)
   931ec:	10c00217 	ldw	r3,8(r2)
   931f0:	d0a70b17 	ldw	r2,-25556(gp)
   931f4:	1880032e 	bgeu	r3,r2,93204 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   931f8:	e0fffe17 	ldw	r3,-8(fp)
   931fc:	00800044 	movi	r2,1
   93200:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   93204:	e0bfff17 	ldw	r2,-4(fp)
   93208:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   9320c:	d0e01004 	addi	r3,gp,-32704
   93210:	e0bffe17 	ldw	r2,-8(fp)
   93214:	10ffcc1e 	bne	r2,r3,93148 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   93218:	e037883a 	mov	sp,fp
   9321c:	dfc00117 	ldw	ra,4(sp)
   93220:	df000017 	ldw	fp,0(sp)
   93224:	dec00204 	addi	sp,sp,8
   93228:	f800283a 	ret

0009322c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   9322c:	defffd04 	addi	sp,sp,-12
   93230:	dfc00215 	stw	ra,8(sp)
   93234:	df000115 	stw	fp,4(sp)
   93238:	df000104 	addi	fp,sp,4
   9323c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   93240:	e13fff17 	ldw	r4,-4(fp)
   93244:	009327c0 	call	9327c <alt_busy_sleep>
}
   93248:	e037883a 	mov	sp,fp
   9324c:	dfc00117 	ldw	ra,4(sp)
   93250:	df000017 	ldw	fp,0(sp)
   93254:	dec00204 	addi	sp,sp,8
   93258:	f800283a 	ret

0009325c <altera_nios2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_irq_init(void) 
{
   9325c:	deffff04 	addi	sp,sp,-4
   93260:	df000015 	stw	fp,0(sp)
   93264:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   93268:	000170fa 	wrctl	ienable,zero
}
   9326c:	e037883a 	mov	sp,fp
   93270:	df000017 	ldw	fp,0(sp)
   93274:	dec00104 	addi	sp,sp,4
   93278:	f800283a 	ret

0009327c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   9327c:	defffa04 	addi	sp,sp,-24
   93280:	dfc00515 	stw	ra,20(sp)
   93284:	df000415 	stw	fp,16(sp)
   93288:	df000404 	addi	fp,sp,16
   9328c:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
   93290:	00800244 	movi	r2,9
   93294:	e0bffc15 	stw	r2,-16(fp)
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   93298:	e13ffc17 	ldw	r4,-16(fp)
   9329c:	014003f4 	movhi	r5,15
   932a0:	29509004 	addi	r5,r5,16960
   932a4:	008f3380 	call	8f338 <__mulsi3>
   932a8:	100b883a 	mov	r5,r2
   932ac:	0100bef4 	movhi	r4,763
   932b0:	213c2004 	addi	r4,r4,-3968
   932b4:	008f3280 	call	8f328 <__udivsi3>
   932b8:	100b883a 	mov	r5,r2
   932bc:	01200034 	movhi	r4,32768
   932c0:	213fffc4 	addi	r4,r4,-1
   932c4:	008f3280 	call	8f328 <__udivsi3>
   932c8:	100b883a 	mov	r5,r2
   932cc:	e13fff17 	ldw	r4,-4(fp)
   932d0:	008f3280 	call	8f328 <__udivsi3>
   932d4:	e0bffd15 	stw	r2,-12(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   932d8:	e0bffd17 	ldw	r2,-12(fp)
   932dc:	1005003a 	cmpeq	r2,r2,zero
   932e0:	10002a1e 	bne	r2,zero,9338c <alt_busy_sleep+0x110>
  {
    for(i=0;i<big_loops;i++)
   932e4:	e03ffe15 	stw	zero,-8(fp)
   932e8:	00001706 	br	93348 <alt_busy_sleep+0xcc>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   932ec:	00a00034 	movhi	r2,32768
   932f0:	10bfffc4 	addi	r2,r2,-1
   932f4:	10bfffc4 	addi	r2,r2,-1
   932f8:	103ffe1e 	bne	r2,zero,932f4 <alt_busy_sleep+0x78>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   932fc:	e13ffc17 	ldw	r4,-16(fp)
   93300:	014003f4 	movhi	r5,15
   93304:	29509004 	addi	r5,r5,16960
   93308:	008f3380 	call	8f338 <__mulsi3>
   9330c:	100b883a 	mov	r5,r2
   93310:	0100bef4 	movhi	r4,763
   93314:	213c2004 	addi	r4,r4,-3968
   93318:	008f3280 	call	8f328 <__udivsi3>
   9331c:	100b883a 	mov	r5,r2
   93320:	01200034 	movhi	r4,32768
   93324:	213fffc4 	addi	r4,r4,-1
   93328:	008f3280 	call	8f328 <__udivsi3>
   9332c:	1007883a 	mov	r3,r2
   93330:	e0bfff17 	ldw	r2,-4(fp)
   93334:	10c5c83a 	sub	r2,r2,r3
   93338:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   9333c:	e0bffe17 	ldw	r2,-8(fp)
   93340:	10800044 	addi	r2,r2,1
   93344:	e0bffe15 	stw	r2,-8(fp)
   93348:	e0fffe17 	ldw	r3,-8(fp)
   9334c:	e0bffd17 	ldw	r2,-12(fp)
   93350:	18bfe616 	blt	r3,r2,932ec <alt_busy_sleep+0x70>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   93354:	e13ffc17 	ldw	r4,-16(fp)
   93358:	014003f4 	movhi	r5,15
   9335c:	29509004 	addi	r5,r5,16960
   93360:	008f3380 	call	8f338 <__mulsi3>
   93364:	100b883a 	mov	r5,r2
   93368:	0100bef4 	movhi	r4,763
   9336c:	213c2004 	addi	r4,r4,-3968
   93370:	008f3280 	call	8f328 <__udivsi3>
   93374:	1009883a 	mov	r4,r2
   93378:	e17fff17 	ldw	r5,-4(fp)
   9337c:	008f3380 	call	8f338 <__mulsi3>
   93380:	10bfffc4 	addi	r2,r2,-1
   93384:	103ffe1e 	bne	r2,zero,93380 <alt_busy_sleep+0x104>
   93388:	00000d06 	br	933c0 <alt_busy_sleep+0x144>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   9338c:	e13ffc17 	ldw	r4,-16(fp)
   93390:	014003f4 	movhi	r5,15
   93394:	29509004 	addi	r5,r5,16960
   93398:	008f3380 	call	8f338 <__mulsi3>
   9339c:	100b883a 	mov	r5,r2
   933a0:	0100bef4 	movhi	r4,763
   933a4:	213c2004 	addi	r4,r4,-3968
   933a8:	008f3280 	call	8f328 <__udivsi3>
   933ac:	1009883a 	mov	r4,r2
   933b0:	e17fff17 	ldw	r5,-4(fp)
   933b4:	008f3380 	call	8f338 <__mulsi3>
   933b8:	10bfffc4 	addi	r2,r2,-1
   933bc:	00bffe16 	blt	zero,r2,933b8 <alt_busy_sleep+0x13c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   933c0:	0005883a 	mov	r2,zero
}
   933c4:	e037883a 	mov	sp,fp
   933c8:	dfc00117 	ldw	ra,4(sp)
   933cc:	df000017 	ldw	fp,0(sp)
   933d0:	dec00204 	addi	sp,sp,8
   933d4:	f800283a 	ret

000933d8 <atexit>:
   933d8:	200b883a 	mov	r5,r4
   933dc:	000d883a 	mov	r6,zero
   933e0:	0009883a 	mov	r4,zero
   933e4:	000f883a 	mov	r7,zero
   933e8:	00934981 	jmpi	93498 <__register_exitproc>

000933ec <exit>:
   933ec:	defffe04 	addi	sp,sp,-8
   933f0:	000b883a 	mov	r5,zero
   933f4:	dc000015 	stw	r16,0(sp)
   933f8:	dfc00115 	stw	ra,4(sp)
   933fc:	2021883a 	mov	r16,r4
   93400:	00935d00 	call	935d0 <__call_exitprocs>
   93404:	00800274 	movhi	r2,9
   93408:	10968904 	addi	r2,r2,23076
   9340c:	11000017 	ldw	r4,0(r2)
   93410:	20800f17 	ldw	r2,60(r4)
   93414:	10000126 	beq	r2,zero,9341c <exit+0x30>
   93418:	103ee83a 	callr	r2
   9341c:	8009883a 	mov	r4,r16
   93420:	00937c00 	call	937c0 <_exit>

00093424 <memcmp>:
   93424:	00c000c4 	movi	r3,3
   93428:	1980032e 	bgeu	r3,r6,93438 <memcmp+0x14>
   9342c:	2144b03a 	or	r2,r4,r5
   93430:	10c4703a 	and	r2,r2,r3
   93434:	10000f26 	beq	r2,zero,93474 <memcmp+0x50>
   93438:	31ffffc4 	addi	r7,r6,-1
   9343c:	3000061e 	bne	r6,zero,93458 <memcmp+0x34>
   93440:	00000a06 	br	9346c <memcmp+0x48>
   93444:	39ffffc4 	addi	r7,r7,-1
   93448:	00bfffc4 	movi	r2,-1
   9344c:	21000044 	addi	r4,r4,1
   93450:	29400044 	addi	r5,r5,1
   93454:	38800526 	beq	r7,r2,9346c <memcmp+0x48>
   93458:	20c00003 	ldbu	r3,0(r4)
   9345c:	28800003 	ldbu	r2,0(r5)
   93460:	18bff826 	beq	r3,r2,93444 <memcmp+0x20>
   93464:	1885c83a 	sub	r2,r3,r2
   93468:	f800283a 	ret
   9346c:	0005883a 	mov	r2,zero
   93470:	f800283a 	ret
   93474:	180f883a 	mov	r7,r3
   93478:	20c00017 	ldw	r3,0(r4)
   9347c:	28800017 	ldw	r2,0(r5)
   93480:	18bfed1e 	bne	r3,r2,93438 <memcmp+0x14>
   93484:	31bfff04 	addi	r6,r6,-4
   93488:	21000104 	addi	r4,r4,4
   9348c:	29400104 	addi	r5,r5,4
   93490:	39bff936 	bltu	r7,r6,93478 <memcmp+0x54>
   93494:	003fe806 	br	93438 <memcmp+0x14>

00093498 <__register_exitproc>:
   93498:	defffa04 	addi	sp,sp,-24
   9349c:	00800274 	movhi	r2,9
   934a0:	10968904 	addi	r2,r2,23076
   934a4:	dc000015 	stw	r16,0(sp)
   934a8:	14000017 	ldw	r16,0(r2)
   934ac:	dd000415 	stw	r20,16(sp)
   934b0:	2829883a 	mov	r20,r5
   934b4:	81405217 	ldw	r5,328(r16)
   934b8:	dcc00315 	stw	r19,12(sp)
   934bc:	dc800215 	stw	r18,8(sp)
   934c0:	dc400115 	stw	r17,4(sp)
   934c4:	dfc00515 	stw	ra,20(sp)
   934c8:	2023883a 	mov	r17,r4
   934cc:	3027883a 	mov	r19,r6
   934d0:	3825883a 	mov	r18,r7
   934d4:	28002526 	beq	r5,zero,9356c <__register_exitproc+0xd4>
   934d8:	29000117 	ldw	r4,4(r5)
   934dc:	008007c4 	movi	r2,31
   934e0:	11002716 	blt	r2,r4,93580 <__register_exitproc+0xe8>
   934e4:	8800101e 	bne	r17,zero,93528 <__register_exitproc+0x90>
   934e8:	2105883a 	add	r2,r4,r4
   934ec:	1085883a 	add	r2,r2,r2
   934f0:	20c00044 	addi	r3,r4,1
   934f4:	1145883a 	add	r2,r2,r5
   934f8:	0009883a 	mov	r4,zero
   934fc:	15000215 	stw	r20,8(r2)
   93500:	28c00115 	stw	r3,4(r5)
   93504:	2005883a 	mov	r2,r4
   93508:	dfc00517 	ldw	ra,20(sp)
   9350c:	dd000417 	ldw	r20,16(sp)
   93510:	dcc00317 	ldw	r19,12(sp)
   93514:	dc800217 	ldw	r18,8(sp)
   93518:	dc400117 	ldw	r17,4(sp)
   9351c:	dc000017 	ldw	r16,0(sp)
   93520:	dec00604 	addi	sp,sp,24
   93524:	f800283a 	ret
   93528:	29802204 	addi	r6,r5,136
   9352c:	00800044 	movi	r2,1
   93530:	110e983a 	sll	r7,r2,r4
   93534:	30c04017 	ldw	r3,256(r6)
   93538:	2105883a 	add	r2,r4,r4
   9353c:	1085883a 	add	r2,r2,r2
   93540:	1185883a 	add	r2,r2,r6
   93544:	19c6b03a 	or	r3,r3,r7
   93548:	14802015 	stw	r18,128(r2)
   9354c:	14c00015 	stw	r19,0(r2)
   93550:	00800084 	movi	r2,2
   93554:	30c04015 	stw	r3,256(r6)
   93558:	88bfe31e 	bne	r17,r2,934e8 <__register_exitproc+0x50>
   9355c:	30804117 	ldw	r2,260(r6)
   93560:	11c4b03a 	or	r2,r2,r7
   93564:	30804115 	stw	r2,260(r6)
   93568:	003fdf06 	br	934e8 <__register_exitproc+0x50>
   9356c:	00800274 	movhi	r2,9
   93570:	109e1e04 	addi	r2,r2,30840
   93574:	100b883a 	mov	r5,r2
   93578:	80805215 	stw	r2,328(r16)
   9357c:	003fd606 	br	934d8 <__register_exitproc+0x40>
   93580:	00800034 	movhi	r2,0
   93584:	10800004 	addi	r2,r2,0
   93588:	1000021e 	bne	r2,zero,93594 <__register_exitproc+0xfc>
   9358c:	013fffc4 	movi	r4,-1
   93590:	003fdc06 	br	93504 <__register_exitproc+0x6c>
   93594:	01006404 	movi	r4,400
   93598:	103ee83a 	callr	r2
   9359c:	1007883a 	mov	r3,r2
   935a0:	103ffa26 	beq	r2,zero,9358c <__register_exitproc+0xf4>
   935a4:	80805217 	ldw	r2,328(r16)
   935a8:	180b883a 	mov	r5,r3
   935ac:	18000115 	stw	zero,4(r3)
   935b0:	18800015 	stw	r2,0(r3)
   935b4:	80c05215 	stw	r3,328(r16)
   935b8:	18006215 	stw	zero,392(r3)
   935bc:	18006315 	stw	zero,396(r3)
   935c0:	0009883a 	mov	r4,zero
   935c4:	883fc826 	beq	r17,zero,934e8 <__register_exitproc+0x50>
   935c8:	003fd706 	br	93528 <__register_exitproc+0x90>

000935cc <register_fini>:
   935cc:	f800283a 	ret

000935d0 <__call_exitprocs>:
   935d0:	00800274 	movhi	r2,9
   935d4:	10968904 	addi	r2,r2,23076
   935d8:	10800017 	ldw	r2,0(r2)
   935dc:	defff304 	addi	sp,sp,-52
   935e0:	df000b15 	stw	fp,44(sp)
   935e4:	d8800115 	stw	r2,4(sp)
   935e8:	00800034 	movhi	r2,0
   935ec:	10800004 	addi	r2,r2,0
   935f0:	1005003a 	cmpeq	r2,r2,zero
   935f4:	d8800215 	stw	r2,8(sp)
   935f8:	d8800117 	ldw	r2,4(sp)
   935fc:	dd400815 	stw	r21,32(sp)
   93600:	dd000715 	stw	r20,28(sp)
   93604:	10805204 	addi	r2,r2,328
   93608:	dfc00c15 	stw	ra,48(sp)
   9360c:	ddc00a15 	stw	r23,40(sp)
   93610:	dd800915 	stw	r22,36(sp)
   93614:	dcc00615 	stw	r19,24(sp)
   93618:	dc800515 	stw	r18,20(sp)
   9361c:	dc400415 	stw	r17,16(sp)
   93620:	dc000315 	stw	r16,12(sp)
   93624:	282b883a 	mov	r21,r5
   93628:	2039883a 	mov	fp,r4
   9362c:	d8800015 	stw	r2,0(sp)
   93630:	2829003a 	cmpeq	r20,r5,zero
   93634:	d8800117 	ldw	r2,4(sp)
   93638:	14405217 	ldw	r17,328(r2)
   9363c:	88001026 	beq	r17,zero,93680 <__call_exitprocs+0xb0>
   93640:	ddc00017 	ldw	r23,0(sp)
   93644:	88800117 	ldw	r2,4(r17)
   93648:	8c802204 	addi	r18,r17,136
   9364c:	143fffc4 	addi	r16,r2,-1
   93650:	80000916 	blt	r16,zero,93678 <__call_exitprocs+0xa8>
   93654:	05bfffc4 	movi	r22,-1
   93658:	a000151e 	bne	r20,zero,936b0 <__call_exitprocs+0xe0>
   9365c:	8409883a 	add	r4,r16,r16
   93660:	2105883a 	add	r2,r4,r4
   93664:	1485883a 	add	r2,r2,r18
   93668:	10c02017 	ldw	r3,128(r2)
   9366c:	a8c01126 	beq	r21,r3,936b4 <__call_exitprocs+0xe4>
   93670:	843fffc4 	addi	r16,r16,-1
   93674:	85bff81e 	bne	r16,r22,93658 <__call_exitprocs+0x88>
   93678:	d8800217 	ldw	r2,8(sp)
   9367c:	10003126 	beq	r2,zero,93744 <__call_exitprocs+0x174>
   93680:	dfc00c17 	ldw	ra,48(sp)
   93684:	df000b17 	ldw	fp,44(sp)
   93688:	ddc00a17 	ldw	r23,40(sp)
   9368c:	dd800917 	ldw	r22,36(sp)
   93690:	dd400817 	ldw	r21,32(sp)
   93694:	dd000717 	ldw	r20,28(sp)
   93698:	dcc00617 	ldw	r19,24(sp)
   9369c:	dc800517 	ldw	r18,20(sp)
   936a0:	dc400417 	ldw	r17,16(sp)
   936a4:	dc000317 	ldw	r16,12(sp)
   936a8:	dec00d04 	addi	sp,sp,52
   936ac:	f800283a 	ret
   936b0:	8409883a 	add	r4,r16,r16
   936b4:	88c00117 	ldw	r3,4(r17)
   936b8:	2105883a 	add	r2,r4,r4
   936bc:	1445883a 	add	r2,r2,r17
   936c0:	18ffffc4 	addi	r3,r3,-1
   936c4:	11800217 	ldw	r6,8(r2)
   936c8:	1c001526 	beq	r3,r16,93720 <__call_exitprocs+0x150>
   936cc:	10000215 	stw	zero,8(r2)
   936d0:	303fe726 	beq	r6,zero,93670 <__call_exitprocs+0xa0>
   936d4:	00c00044 	movi	r3,1
   936d8:	1c06983a 	sll	r3,r3,r16
   936dc:	90804017 	ldw	r2,256(r18)
   936e0:	8cc00117 	ldw	r19,4(r17)
   936e4:	1884703a 	and	r2,r3,r2
   936e8:	10001426 	beq	r2,zero,9373c <__call_exitprocs+0x16c>
   936ec:	90804117 	ldw	r2,260(r18)
   936f0:	1884703a 	and	r2,r3,r2
   936f4:	10000c1e 	bne	r2,zero,93728 <__call_exitprocs+0x158>
   936f8:	2105883a 	add	r2,r4,r4
   936fc:	1485883a 	add	r2,r2,r18
   93700:	11400017 	ldw	r5,0(r2)
   93704:	e009883a 	mov	r4,fp
   93708:	303ee83a 	callr	r6
   9370c:	88800117 	ldw	r2,4(r17)
   93710:	98bfc81e 	bne	r19,r2,93634 <__call_exitprocs+0x64>
   93714:	b8800017 	ldw	r2,0(r23)
   93718:	147fd526 	beq	r2,r17,93670 <__call_exitprocs+0xa0>
   9371c:	003fc506 	br	93634 <__call_exitprocs+0x64>
   93720:	8c000115 	stw	r16,4(r17)
   93724:	003fea06 	br	936d0 <__call_exitprocs+0x100>
   93728:	2105883a 	add	r2,r4,r4
   9372c:	1485883a 	add	r2,r2,r18
   93730:	11000017 	ldw	r4,0(r2)
   93734:	303ee83a 	callr	r6
   93738:	003ff406 	br	9370c <__call_exitprocs+0x13c>
   9373c:	303ee83a 	callr	r6
   93740:	003ff206 	br	9370c <__call_exitprocs+0x13c>
   93744:	88800117 	ldw	r2,4(r17)
   93748:	1000081e 	bne	r2,zero,9376c <__call_exitprocs+0x19c>
   9374c:	89000017 	ldw	r4,0(r17)
   93750:	20000726 	beq	r4,zero,93770 <__call_exitprocs+0x1a0>
   93754:	b9000015 	stw	r4,0(r23)
   93758:	8809883a 	mov	r4,r17
   9375c:	00000000 	call	0 <__reset-0x80000>
   93760:	bc400017 	ldw	r17,0(r23)
   93764:	883fb71e 	bne	r17,zero,93644 <__call_exitprocs+0x74>
   93768:	003fc506 	br	93680 <__call_exitprocs+0xb0>
   9376c:	89000017 	ldw	r4,0(r17)
   93770:	882f883a 	mov	r23,r17
   93774:	2023883a 	mov	r17,r4
   93778:	883fb21e 	bne	r17,zero,93644 <__call_exitprocs+0x74>
   9377c:	003fc006 	br	93680 <__call_exitprocs+0xb0>

00093780 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   93780:	defffd04 	addi	sp,sp,-12
   93784:	df000215 	stw	fp,8(sp)
   93788:	df000204 	addi	fp,sp,8
   9378c:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   93790:	e0bfff17 	ldw	r2,-4(fp)
   93794:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   93798:	e0bffe17 	ldw	r2,-8(fp)
   9379c:	1005003a 	cmpeq	r2,r2,zero
   937a0:	1000021e 	bne	r2,zero,937ac <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   937a4:	002af070 	cmpltui	zero,zero,43969
   937a8:	00000106 	br	937b0 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   937ac:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   937b0:	e037883a 	mov	sp,fp
   937b4:	df000017 	ldw	fp,0(sp)
   937b8:	dec00104 	addi	sp,sp,4
   937bc:	f800283a 	ret

000937c0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   937c0:	defffd04 	addi	sp,sp,-12
   937c4:	dfc00215 	stw	ra,8(sp)
   937c8:	df000115 	stw	fp,4(sp)
   937cc:	df000104 	addi	fp,sp,4
   937d0:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   937d4:	e13fff17 	ldw	r4,-4(fp)
   937d8:	00937800 	call	93780 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   937dc:	003fff06 	br	937dc <_exit+0x1c>
   937e0:	000935cc 	andi	zero,zero,9431
