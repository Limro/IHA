Exam

- Up to 10 mins about the project
- How is the course used?
- How was the entire understanding of the project?
- BE EXTREMELY CONCRETE ON OWN PROJECT!
- What was your own role in the project

- 5-7 min on part 2
- Pick a number between 1-9
- Be more general



(1) Explain the tools and methods used in system engineering to transform user needs into system requirements.
	- From needs to SRS
		- Specify operations
		- Transforming it		
		
	Phase: "Concept and project Definition phase"
		- Need analysis: define and validate needs and operational req.
		- Concept Exploration: feasible concepts and defines functional performance
		- Concept definition: Pick a concept based on performance, cost, schedule and risk

	Process from "I need something" -> "This is how it should be done"
		• Operations Analysis — understanding the needs for a new system; (Do "objectives tree" to describe outcome)
		• Functional Analysis — deriving functions required to accomplish operations;
		• Feasibility Definition — visualizing a feasible implementation approach; 
		• Needs Validation — demonstrating cost - effectiveness.

	Why(needed?), what is required?, how to build it?
	Do elicitation (interviews)
	
	Get understanding of the project
		- Hierarchy with subsystems and component
		- System building blocks
			- Signal elements (communication)
			- Data elements (understand/interpret info)
			- Material elements (Structure and process material)
			- Energy elements, provide energy/power
	
	1. Requirements Analysis — identifies why requirements are needed,
	2. Functional Definition — translates requirements into functions,
	3. Physical Definition — synthesizes alternative physical implementations, and
	4. Design Validation — models the system environment.
	

	Clear statements of objectives.
	› State the initial problem and the need that is to be satisfied and what is required to achieve this.
	› Define the characteristics of the set of acceptable solutions.


	Check with multiple different specialist who should work on the job - get their input.

	Check risk

	OBS: Missing requirements have a domino effect - cost removing a defect increases exponentially


	- Components are the parts of a system
	- Attributes are the properties (characteristics, configuration, qualities, powers, constraints and states)
	- Relationships between pairs of linked components are the result of engineering the attributes of both components so that the pairs operates together effectively in contributing to the system’s purpose(s)


(2) Clarify the important characteristics of system requirements and explain how requirements are managed during the life-cycle of a system.
	- Trace the life cycle
	- What to do with the SRS afterwards
		- How to do it?
	- "house of qualities" - traceability matrix


(3) Describe the principles of configuration management in system engineering and explain the concepts of baseline and change management.
	- How do management work (produce new version of documents and baseline)
	- What happen if something changes afterwards?
		- It can change in some ways
	- What parts can be used (and traced)
	- What will changes? Nails ex.

	CM consist of many Configuration Items, CI.
		- All you build (software / hardware)
		- All you write (documentation)
		- All you work on.

	Keep productID (partID and docID), instance (SN) and revision on CIs.
	Do this to trace items.

	Baseline is "guidelines"
		- What level to document on
		- What to produce

	Baseline has a template:
		- Functional: demands to describe overall structure and roles
		- Allocated: Expanse the above with CI codes
		- Product: Describes physical form and function of CI, and functions to test in the accepttest.

	Changes from the user will affect the CIs. Trace this.
	A bad CI can be traced to where it comes from.


(4) Explain and demonstrate how the System Modeling Language (SysML) can be used to analyze and describe complex systems.
	- SysML and graphical notation for writing SRS
	- Easy to communicate
	- Simulated
	- Remember diagrams (not symbols, just conceptual)
	- E.g: take handin and show

	SysML is an extension of UML - created for software/hardware systems
	- Not as many diagrams as UML (4/13)
	- Requirement has some main requirement with text, derived requirements and some blocks with hardware in. Maybe also a testcase.

	SysML use "Allocation" to connect and bind elements

	SysML use "Block Definition Diagram" similar to UML class diagram. Contains Values, Operations, Constraints, Parts and References.	

	SysML use "Activity Diagram", similar to UML's behavioral


	Consist of blocks



(5) Explain the concept of decision management and analysis in system engineering.
	- How to decide (decision management)
		Risk analysis
	- Explore design specs
		- Realize system in multiple ways - what to choose?
	- Should make it or not (could fail horribly)
	- Draft the system and see if profit is possible
		- Don't bid if you can't
	- Consequences, business forms, people to use (diagram) ...

(6) Explain the relationship between user requirements, system architecture, engineering disciplines and organization.
	- Start with requirement - what kind of engineering should be used? How do we get there?
	- Be aware of small parts needed in a system. Buy or build?
		- If neither buy of build then it cannot be done by you
	- Can it be done?
	- Does it fit the organization

(7) Explain the concept of a life-cycle model and relate it to system development.
	- Entire life cycle

	CPP - Concept and Project definition Phase
		Prepare SRs based on input from stakeholders. 
		Must be verifiable
		Documents: SRS with traceability and project plan
		SSR - System requirement review
	SDP - System design phase
		Over all design is decided, subsystems are identified, major interfaces between subsystems are defined.
		Negotiation of contracts are started, requirements and changes to it are handled.
		Documents: PDD and DDD
		PDR - Preliminary design review
		CDR - Critical design review (Shortly afterwards)
	DP - Development phase
		Subsystems and units are designed and documented, prototypes made to verify principles, functionality and performance, integrated into complete system.
		Documents: Design docs and test reports.
		TRR - Test readiness review
	PP - Production phase
		Production of the system, small scale (not production line)
		PRR - Product readiness review
	PDP - Production and deployment phase
		Training of personal, install system
		FAT - Factory acceptance test
	OSP - Operational support phase
		System works as the customer wants
		SAT - Site acceptance test
	Retirement phase
		Make fixes as long as you can.
		Tear it down and dispose properly.

(8) Explain the agreement process of acquisition and supply and its significance for system engineering.
	- Internal negotiation
	- Make request for proposal
	- Make documents
	- SUBCONTRACTING!

(9) Explain the interrelated concepts of validation, verification and integration in system engineering.
	- Like software engineering in the real world
	- Hoover dam
	- Don't test in place
	- Test small parts
	- How to determine if the system can be used / verifiable / how to test it
	- Must be thought of very early